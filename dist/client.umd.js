(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('stream'), require('url'), require('http'), require('https'), require('zlib'), require('crypto'), require('async_hooks')) :
    typeof define === 'function' && define.amd ? define(['exports', 'stream', 'url', 'http', 'https', 'zlib', 'crypto', 'async_hooks'], factory) :
    (factory((global.client = {}),global.Stream,global.Url,global.http,global.https,global.zlib,global.crypto$1,global.async_hooks));
}(this, (function (exports,Stream,Url,http,https,zlib,crypto$1,async_hooks) { 'use strict';

    Stream = Stream && Stream.hasOwnProperty('default') ? Stream['default'] : Stream;
    Url = Url && Url.hasOwnProperty('default') ? Url['default'] : Url;
    http = http && http.hasOwnProperty('default') ? http['default'] : http;
    https = https && https.hasOwnProperty('default') ? https['default'] : https;
    var zlib__default = 'default' in zlib ? zlib['default'] : zlib;
    crypto$1 = crypto$1 && crypto$1.hasOwnProperty('default') ? crypto$1['default'] : crypto$1;

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (_) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    }

    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }

    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    }

    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }

    function isFunction (funktion) {
      return typeof funktion === 'function'
    }

    // Default to complaining loudly when things don't go according to plan.
    var logger = console.error.bind(console);

    // Sets a property on an object, preserving its enumerability.
    // This function assumes that the property is already writable.
    function defineProperty (obj, name, value) {
      var enumerable = !!obj[name] && obj.propertyIsEnumerable(name);
      Object.defineProperty(obj, name, {
        configurable: true,
        enumerable: enumerable,
        writable: true,
        value: value
      });
    }

    // Keep initialization idempotent.
    function shimmer (options) {
      if (options && options.logger) {
        if (!isFunction(options.logger)) logger("new logger isn't a function, not replacing");
        else logger = options.logger;
      }
    }

    function wrap (nodule, name, wrapper) {
      if (!nodule || !nodule[name]) {
        logger('no original function ' + name + ' to wrap');
        return
      }

      if (!wrapper) {
        logger('no wrapper function');
        logger((new Error()).stack);
        return
      }

      if (!isFunction(nodule[name]) || !isFunction(wrapper)) {
        logger('original object and wrapper must be functions');
        return
      }

      var original = nodule[name];
      var wrapped = wrapper(original, name);

      defineProperty(wrapped, '__original', original);
      defineProperty(wrapped, '__unwrap', function () {
        if (nodule[name] === wrapped) defineProperty(nodule, name, original);
      });
      defineProperty(wrapped, '__wrapped', true);

      defineProperty(nodule, name, wrapped);
      return wrapped
    }

    function massWrap (nodules, names, wrapper) {
      if (!nodules) {
        logger('must provide one or more modules to patch');
        logger((new Error()).stack);
        return
      } else if (!Array.isArray(nodules)) {
        nodules = [nodules];
      }

      if (!(names && Array.isArray(names))) {
        logger('must provide one or more functions to wrap on modules');
        return
      }

      nodules.forEach(function (nodule) {
        names.forEach(function (name) {
          wrap(nodule, name, wrapper);
        });
      });
    }

    function unwrap (nodule, name) {
      if (!nodule || !nodule[name]) {
        logger('no function to unwrap.');
        logger((new Error()).stack);
        return
      }

      if (!nodule[name].__unwrap) {
        logger('no original to unwrap to -- has ' + name + ' already been unwrapped?');
      } else {
        return nodule[name].__unwrap()
      }
    }

    function massUnwrap (nodules, names) {
      if (!nodules) {
        logger('must provide one or more modules to patch');
        logger((new Error()).stack);
        return
      } else if (!Array.isArray(nodules)) {
        nodules = [nodules];
      }

      if (!(names && Array.isArray(names))) {
        logger('must provide one or more functions to unwrap on modules');
        return
      }

      nodules.forEach(function (nodule) {
        names.forEach(function (name) {
          unwrap(nodule, name);
        });
      });
    }

    shimmer.wrap = wrap;
    shimmer.massWrap = massWrap;
    shimmer.unwrap = unwrap;
    shimmer.massUnwrap = massUnwrap;

    var shimmer_1 = shimmer;

    class NonError extends Error {
    	constructor(message) {
    		super(NonError._prepareSuperMessage(message));
    		this.name = 'NonError';

    		if (Error.captureStackTrace) {
    			Error.captureStackTrace(this, NonError);
    		}
    	}

    	static _prepareSuperMessage(message) {
    		try {
    			return JSON.stringify(message);
    		} catch (_) {
    			return String(message);
    		}
    	}
    }

    const commonProperties = [
    	'name',
    	'message',
    	'stack',
    	'code'
    ];

    const destroyCircular = (from, seen, to_) => {
    	const to = to_ || (Array.isArray(from) ? [] : {});

    	seen.push(from);

    	for (const [key, value] of Object.entries(from)) {
    		if (typeof value === 'function') {
    			continue;
    		}

    		if (!value || typeof value !== 'object') {
    			to[key] = value;
    			continue;
    		}

    		if (!seen.includes(from[key])) {
    			to[key] = destroyCircular(from[key], seen.slice());
    			continue;
    		}

    		to[key] = '[Circular]';
    	}

    	for (const property of commonProperties) {
    		if (typeof from[property] === 'string') {
    			to[property] = from[property];
    		}
    	}

    	return to;
    };

    const serializeError = value => {
    	if (typeof value === 'object' && value !== null) {
    		return destroyCircular(value, []);
    	}

    	// People sometimes throw things besides Error objects…
    	if (typeof value === 'function') {
    		// `JSON.stringify()` discards functions. We do too, unless a function is thrown directly.
    		return `[Function: ${(value.name || 'anonymous')}]`;
    	}

    	return value;
    };

    const deserializeError = value => {
    	if (value instanceof Error) {
    		return value;
    	}

    	if (typeof value === 'object' && value !== null && !Array.isArray(value)) {
    		const newError = new Error();
    		destroyCircular(value, [], newError);
    		return newError;
    	}

    	return new NonError(value);
    };

    var serializeError_1 = {
    	serializeError,
    	deserializeError
    };
    var serializeError_2 = serializeError_1.serializeError;

    /* eslint-disable camelcase,no-undef,import/no-extraneous-dependencies,global-require */
    var lastError = null;
    var tryRequire = function (id) {
        // hack for webpack
        try {
            if (id === 'pg') {
                // @ts-ignore
                return require('pg');
            }
            if (id === 'pg-pool') {
                // @ts-ignore
                return require('pg-pool');
            }
            if (id === 'mysql/lib/Connection.js') {
                // @ts-ignore
                return require('mysql/lib/Connection.js');
            }
            if (id === '@elastic/elasticsearch') {
                // @ts-ignore
                return require('@elastic/elasticsearch');
            }
            if (id === 'mongodb') {
                // @ts-ignore
                return require('mongodb');
            }
        }
        catch (e) {
            lastError = e;
        }
        // @ts-ignore
        var isWebpack = typeof __webpack_require__ === 'function';
        // @ts-ignore
        var currentRequire = isWebpack ? __non_webpack_require__ : require;
        try {
            return currentRequire(id);
        }
        catch (e) {
            lastError = e;
        }
        return undefined;
    };
    tryRequire.lastError = function () { return lastError; };
    var getModules = function getModules(id) {
        var modules = [];
        if (typeof require.resolve.paths !== 'function') {
            var module_1 = tryRequire(id);
            if (module_1) {
                modules.push(module_1);
            }
            return modules;
        }
        var searchPaths = require.resolve.paths(id);
        searchPaths.forEach(function (path) {
            var module = tryRequire(path + "/" + id);
            if (module) {
                modules.push(module);
            }
        });
        return modules;
    };
    var patchModule = function patchModule(id, methodName, wrapper, memberExtractor) {
        if (memberExtractor === void 0) { memberExtractor = function (mod) { return mod; }; }
        var modules = getModules(id);
        modules.forEach(function (module) {
            var _a;
            if (!((_a = memberExtractor(module)) === null || _a === void 0 ? void 0 : _a.recapDevWrapped)) {
                shimmer_1.wrap(memberExtractor(module), methodName, wrapper);
            }
        });
    };
    var serializeError$1 = function (err) {
        if (!err) {
            return undefined;
        }
        return JSON.stringify(serializeError_2(err));
    };

    /** Detect free variable `global` from Node.js. */
    var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

    /** Detect free variable `self`. */
    var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

    /** Used as a reference to the global object. */
    var root = freeGlobal || freeSelf || Function('return this')();

    /** Built-in value references. */
    var Symbol$1 = root.Symbol;

    /** Used for built-in method references. */
    var objectProto = Object.prototype;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString = objectProto.toString;

    /** Built-in value references. */
    var symToStringTag = Symbol$1 ? Symbol$1.toStringTag : undefined;

    /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

      try {
        value[symToStringTag] = undefined;
      } catch (e) {}

      var result = nativeObjectToString.call(value);
      {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }

    /** Used for built-in method references. */
    var objectProto$1 = Object.prototype;

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString$1 = objectProto$1.toString;

    /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */
    function objectToString(value) {
      return nativeObjectToString$1.call(value);
    }

    /** `Object#toString` result references. */
    var nullTag = '[object Null]',
        undefinedTag = '[object Undefined]';

    /** Built-in value references. */
    var symToStringTag$1 = Symbol$1 ? Symbol$1.toStringTag : undefined;

    /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    function baseGetTag(value) {
      if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
      }
      return (symToStringTag$1 && symToStringTag$1 in Object(value))
        ? getRawTag(value)
        : objectToString(value);
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return value != null && typeof value == 'object';
    }

    /** `Object#toString` result references. */
    var symbolTag = '[object Symbol]';

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return typeof value == 'symbol' ||
        (isObjectLike(value) && baseGetTag(value) == symbolTag);
    }

    /** Used as references for various `Number` constants. */
    var NAN = 0 / 0;

    /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */
    function baseToNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      return +value;
    }

    /**
     * A specialized version of `_.map` for arrays without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} [array] The array to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function arrayMap(array, iteratee) {
      var index = -1,
          length = array == null ? 0 : array.length,
          result = Array(length);

      while (++index < length) {
        result[index] = iteratee(array[index], index, array);
      }
      return result;
    }

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */
    var isArray = Array.isArray;

    /** Used as references for various `Number` constants. */
    var INFINITY = 1 / 0;

    /** Used to convert symbols to primitives and strings. */
    var symbolProto = Symbol$1 ? Symbol$1.prototype : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */
    function baseToString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value;
      }
      if (isArray(value)) {
        // Recursively convert values (susceptible to call stack limits).
        return arrayMap(value, baseToString) + '';
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */
    function createMathOperation(operator, defaultValue) {
      return function(value, other) {
        var result;
        if (value === undefined && other === undefined) {
          return defaultValue;
        }
        if (value !== undefined) {
          result = value;
        }
        if (other !== undefined) {
          if (result === undefined) {
            return other;
          }
          if (typeof value == 'string' || typeof other == 'string') {
            value = baseToString(value);
            other = baseToString(other);
          } else {
            value = baseToNumber(value);
            other = baseToNumber(other);
          }
          result = operator(value, other);
        }
        return result;
      };
    }

    /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */
    var add = createMathOperation(function(augend, addend) {
      return augend + addend;
    }, 0);

    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == 'object' || type == 'function');
    }

    /** Used as references for various `Number` constants. */
    var NAN$1 = 0 / 0;

    /** Used to match leading and trailing whitespace. */
    var reTrim = /^\s+|\s+$/g;

    /** Used to detect bad signed hexadecimal string values. */
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

    /** Used to detect binary string values. */
    var reIsBinary = /^0b[01]+$/i;

    /** Used to detect octal string values. */
    var reIsOctal = /^0o[0-7]+$/i;

    /** Built-in method references without a dependency on `root`. */
    var freeParseInt = parseInt;

    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */
    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN$1;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? (other + '') : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, '');
      var isBinary = reIsBinary.test(value);
      return (isBinary || reIsOctal.test(value))
        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
        : (reIsBadHex.test(value) ? NAN$1 : +value);
    }

    /** Used as references for various `Number` constants. */
    var INFINITY$1 = 1 / 0,
        MAX_INTEGER = 1.7976931348623157e+308;

    /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY$1 || value === -INFINITY$1) {
        var sign = (value < 0 ? -1 : 1);
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }

    /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */
    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;

      return result === result ? (remainder ? result - remainder : result) : 0;
    }

    /** Error message constants. */
    var FUNC_ERROR_TEXT = 'Expected a function';

    /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */
    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */
    function identity(value) {
      return value;
    }

    /** `Object#toString` result references. */
    var asyncTag = '[object AsyncFunction]',
        funcTag = '[object Function]',
        genTag = '[object GeneratorFunction]',
        proxyTag = '[object Proxy]';

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction$1(value) {
      if (!isObject(value)) {
        return false;
      }
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 9 which returns 'object' for typed arrays and other constructors.
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }

    /** Used to detect overreaching core-js shims. */
    var coreJsData = root['__core-js_shared__'];

    /** Used to detect methods masquerading as native. */
    var maskSrcKey = (function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? ('Symbol(src)_1.' + uid) : '';
    }());

    /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */
    function isMasked(func) {
      return !!maskSrcKey && (maskSrcKey in func);
    }

    /** Used for built-in method references. */
    var funcProto = Function.prototype;

    /** Used to resolve the decompiled source of functions. */
    var funcToString = funcProto.toString;

    /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}
        try {
          return (func + '');
        } catch (e) {}
      }
      return '';
    }

    /**
     * Used to match `RegExp`
     * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
     */
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

    /** Used to detect host constructors (Safari). */
    var reIsHostCtor = /^\[object .+?Constructor\]$/;

    /** Used for built-in method references. */
    var funcProto$1 = Function.prototype,
        objectProto$2 = Object.prototype;

    /** Used to resolve the decompiled source of functions. */
    var funcToString$1 = funcProto$1.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty$1 = objectProto$2.hasOwnProperty;

    /** Used to detect if a method is native. */
    var reIsNative = RegExp('^' +
      funcToString$1.call(hasOwnProperty$1).replace(reRegExpChar, '\\$&')
      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
    );

    /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction$1(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }

    /**
     * Gets the value at `key` of `object`.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {string} key The key of the property to get.
     * @returns {*} Returns the property value.
     */
    function getValue(object, key) {
      return object == null ? undefined : object[key];
    }

    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }

    /* Built-in method references that are verified to be native. */
    var WeakMap$1 = getNative(root, 'WeakMap');

    /** Used to store function metadata. */
    var metaMap = WeakMap$1 && new WeakMap$1;

    /**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };

    /** Built-in value references. */
    var objectCreate = Object.create;

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    var baseCreate = (function() {
      function object() {}
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object;
        object.prototype = undefined;
        return result;
      };
    }());

    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCtor(Ctor) {
      return function() {
        // Use a `switch` statement to work with class constructors. See
        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;
        switch (args.length) {
          case 0: return new Ctor;
          case 1: return new Ctor(args[0]);
          case 2: return new Ctor(args[0], args[1]);
          case 3: return new Ctor(args[0], args[1], args[2]);
          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.
        return isObject(result) ? result : thisBinding;
      };
    }

    /** Used to compose bitmasks for function metadata. */
    var WRAP_BIND_FLAG = 1;

    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    /**
     * A faster alternative to `Function#apply`, this function invokes `func`
     * with the `this` binding of `thisArg` and the arguments of `args`.
     *
     * @private
     * @param {Function} func The function to invoke.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} args The arguments to invoke `func` with.
     * @returns {*} Returns the result of `func`.
     */
    function apply(func, thisArg, args) {
      switch (args.length) {
        case 0: return func.call(thisArg);
        case 1: return func.call(thisArg, args[0]);
        case 2: return func.call(thisArg, args[0], args[1]);
        case 3: return func.call(thisArg, args[0], args[1], args[2]);
      }
      return func.apply(thisArg, args);
    }

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeMax = Math.max;

    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeMax$1 = Math.max;

    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax$1(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    /**
     * Gets the number of `placeholder` occurrences in `array`.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} placeholder The placeholder to search for.
     * @returns {number} Returns the placeholder count.
     */
    function countHolders(array, placeholder) {
      var length = array.length,
          result = 0;

      while (length--) {
        if (array[length] === placeholder) {
          ++result;
        }
      }
      return result;
    }

    /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */
    function baseLodash() {
      // No operation performed.
    }

    /** Used as references for the maximum length and index of an array. */
    var MAX_ARRAY_LENGTH = 4294967295;

    /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }

    // Ensure `LazyWrapper` is an instance of `baseLodash`.
    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    /**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */
    function noop() {
      // No operation performed.
    }

    /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };

    /** Used to lookup unminified function names. */
    var realNames = {};

    /** Used for built-in method references. */
    var objectProto$3 = Object.prototype;

    /** Used to check objects for own properties. */
    var hasOwnProperty$2 = objectProto$3.hasOwnProperty;

    /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */
    function getFuncName(func) {
      var result = (func.name + ''),
          array = realNames[result],
          length = hasOwnProperty$2.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */
    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */
    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */
    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__  = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }

    /** Used for built-in method references. */
    var objectProto$4 = Object.prototype;

    /** Used to check objects for own properties. */
    var hasOwnProperty$3 = objectProto$4.hasOwnProperty;

    /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty$3.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    // Ensure wrappers are instances of `baseLodash`.
    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;

    /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */
    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    /** Used to detect hot functions by number of calls within a span of milliseconds. */
    var HOT_COUNT = 800,
        HOT_SPAN = 16;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeNow = Date.now;

    /**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */
    function shortOut(func) {
      var count = 0,
          lastCalled = 0;

      return function() {
        var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(undefined, arguments);
      };
    }

    /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var setData = shortOut(baseSetData);

    /** Used to match wrap detail comments. */
    var reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
        reSplitDetails = /,? & /;

    /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */
    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }

    /** Used to match wrap detail comments. */
    var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/;

    /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */
    function insertWrapDetails(source, details) {
      var length = details.length;
      if (!length) {
        return source;
      }
      var lastIndex = length - 1;
      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
      details = details.join(length > 2 ? ', ' : ' ');
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
    }

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    var defineProperty$1 = (function() {
      try {
        var func = getNative(Object, 'defineProperty');
        func({}, '', {});
        return func;
      } catch (e) {}
    }());

    /**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var baseSetToString = !defineProperty$1 ? identity : function(func, string) {
      return defineProperty$1(func, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(string),
        'writable': true
      });
    };

    /**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var setToString = shortOut(baseSetToString);

    /**
     * A specialized version of `_.forEach` for arrays without support for
     * iteratee shorthands.
     *
     * @private
     * @param {Array} [array] The array to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns `array`.
     */
    function arrayEach(array, iteratee) {
      var index = -1,
          length = array == null ? 0 : array.length;

      while (++index < length) {
        if (iteratee(array[index], index, array) === false) {
          break;
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.findIndex` and `_.findLastIndex` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} predicate The function invoked per iteration.
     * @param {number} fromIndex The index to search from.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function baseFindIndex(array, predicate, fromIndex, fromRight) {
      var length = array.length,
          index = fromIndex + (fromRight ? 1 : -1);

      while ((fromRight ? index-- : ++index < length)) {
        if (predicate(array[index], index, array)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * The base implementation of `_.isNaN` without support for number objects.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     */
    function baseIsNaN(value) {
      return value !== value;
    }

    /**
     * A specialized version of `_.indexOf` which performs strict equality
     * comparisons of values, i.e. `===`.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} fromIndex The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function strictIndexOf(array, value, fromIndex) {
      var index = fromIndex - 1,
          length = array.length;

      while (++index < length) {
        if (array[index] === value) {
          return index;
        }
      }
      return -1;
    }

    /**
     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} fromIndex The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function baseIndexOf(array, value, fromIndex) {
      return value === value
        ? strictIndexOf(array, value, fromIndex)
        : baseFindIndex(array, baseIsNaN, fromIndex);
    }

    /**
     * A specialized version of `_.includes` for arrays without support for
     * specifying an index to search from.
     *
     * @private
     * @param {Array} [array] The array to inspect.
     * @param {*} target The value to search for.
     * @returns {boolean} Returns `true` if `target` is found, else `false`.
     */
    function arrayIncludes(array, value) {
      var length = array == null ? 0 : array.length;
      return !!length && baseIndexOf(array, value, 0) > -1;
    }

    /** Used to compose bitmasks for function metadata. */
    var WRAP_BIND_FLAG$1 = 1,
        WRAP_BIND_KEY_FLAG = 2,
        WRAP_CURRY_FLAG = 8,
        WRAP_CURRY_RIGHT_FLAG = 16,
        WRAP_PARTIAL_FLAG = 32,
        WRAP_PARTIAL_RIGHT_FLAG = 64,
        WRAP_ARY_FLAG = 128,
        WRAP_REARG_FLAG = 256,
        WRAP_FLIP_FLAG = 512;

    /** Used to associate wrap methods with their bit flags. */
    var wrapFlags = [
      ['ary', WRAP_ARY_FLAG],
      ['bind', WRAP_BIND_FLAG$1],
      ['bindKey', WRAP_BIND_KEY_FLAG],
      ['curry', WRAP_CURRY_FLAG],
      ['curryRight', WRAP_CURRY_RIGHT_FLAG],
      ['flip', WRAP_FLIP_FLAG],
      ['partial', WRAP_PARTIAL_FLAG],
      ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
      ['rearg', WRAP_REARG_FLAG]
    ];

    /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */
    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function(pair) {
        var value = '_.' + pair[0];
        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }

    /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */
    function setWrapToString(wrapper, reference, bitmask) {
      var source = (reference + '');
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }

    /** Used to compose bitmasks for function metadata. */
    var WRAP_BIND_FLAG$2 = 1,
        WRAP_BIND_KEY_FLAG$1 = 2,
        WRAP_CURRY_BOUND_FLAG = 4,
        WRAP_CURRY_FLAG$1 = 8,
        WRAP_PARTIAL_FLAG$1 = 32,
        WRAP_PARTIAL_RIGHT_FLAG$1 = 64;

    /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG$1,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG$1 : WRAP_PARTIAL_RIGHT_FLAG$1);
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG$1 : WRAP_PARTIAL_FLAG$1);

      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG$2 | WRAP_BIND_KEY_FLAG$1);
      }
      var newData = [
        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
        newHoldersRight, argPos, ary, arity
      ];

      var result = wrapFunc.apply(undefined, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }

    /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */
    function getHolder(func) {
      var object = func;
      return object.placeholder;
    }

    /** Used as references for various `Number` constants. */
    var MAX_SAFE_INTEGER = 9007199254740991;

    /** Used to detect unsigned integer values. */
    var reIsUint = /^(?:0|[1-9]\d*)$/;

    /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */
    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;

      return !!length &&
        (type == 'number' ||
          (type != 'symbol' && reIsUint.test(value))) &&
            (value > -1 && value % 1 == 0 && value < length);
    }

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeMin = Math.min;

    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    /** Used as the internal argument placeholder. */
    var PLACEHOLDER = '__lodash_placeholder__';

    /**
     * Replaces all `placeholder` elements in `array` with an internal placeholder
     * and returns an array of their indexes.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {*} placeholder The placeholder to replace.
     * @returns {Array} Returns the new array of placeholder indexes.
     */
    function replaceHolders(array, placeholder) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value === placeholder || value === PLACEHOLDER) {
          array[index] = PLACEHOLDER;
          result[resIndex++] = index;
        }
      }
      return result;
    }

    /** Used to compose bitmasks for function metadata. */
    var WRAP_BIND_FLAG$3 = 1,
        WRAP_BIND_KEY_FLAG$2 = 2,
        WRAP_CURRY_FLAG$2 = 8,
        WRAP_CURRY_RIGHT_FLAG$1 = 16,
        WRAP_ARY_FLAG$1 = 128,
        WRAP_FLIP_FLAG$1 = 512;

    /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG$1,
          isBind = bitmask & WRAP_BIND_FLAG$3,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG$2,
          isCurried = bitmask & (WRAP_CURRY_FLAG$2 | WRAP_CURRY_RIGHT_FLAG$1),
          isFlip = bitmask & WRAP_FLIP_FLAG$1,
          Ctor = isBindKey ? undefined : createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
            args, newHolders, argPos, ary, arity - length
          );
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
          ? []
          : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, undefined,
            args, holders, undefined, undefined, arity - length);
        }
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    /** Used to compose bitmasks for function metadata. */
    var WRAP_BIND_FLAG$4 = 1;

    /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */
    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG$4,
          Ctor = createCtor(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    /** Used as the internal argument placeholder. */
    var PLACEHOLDER$1 = '__lodash_placeholder__';

    /** Used to compose bitmasks for function metadata. */
    var WRAP_BIND_FLAG$5 = 1,
        WRAP_BIND_KEY_FLAG$3 = 2,
        WRAP_CURRY_BOUND_FLAG$1 = 4,
        WRAP_CURRY_FLAG$3 = 8,
        WRAP_ARY_FLAG$2 = 128,
        WRAP_REARG_FLAG$1 = 256;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeMin$1 = Math.min;

    /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */
    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG$5 | WRAP_BIND_KEY_FLAG$3 | WRAP_ARY_FLAG$2);

      var isCombo =
        ((srcBitmask == WRAP_ARY_FLAG$2) && (bitmask == WRAP_CURRY_FLAG$3)) ||
        ((srcBitmask == WRAP_ARY_FLAG$2) && (bitmask == WRAP_REARG_FLAG$1) && (data[7].length <= source[8])) ||
        ((srcBitmask == (WRAP_ARY_FLAG$2 | WRAP_REARG_FLAG$1)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG$3));

      // Exit early if metadata can't be merged.
      if (!(isCommon || isCombo)) {
        return data;
      }
      // Use source `thisArg` if available.
      if (srcBitmask & WRAP_BIND_FLAG$5) {
        data[2] = source[2];
        // Set when currying a bound function.
        newBitmask |= bitmask & WRAP_BIND_FLAG$5 ? 0 : WRAP_CURRY_BOUND_FLAG$1;
      }
      // Compose partial arguments.
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER$1) : source[4];
      }
      // Compose partial right arguments.
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER$1) : source[6];
      }
      // Use source `argPos` if available.
      value = source[7];
      if (value) {
        data[7] = value;
      }
      // Use source `ary` if it's smaller.
      if (srcBitmask & WRAP_ARY_FLAG$2) {
        data[8] = data[8] == null ? source[8] : nativeMin$1(data[8], source[8]);
      }
      // Use source `arity` if one is not provided.
      if (data[9] == null) {
        data[9] = source[9];
      }
      // Use source `func` and merge bitmasks.
      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    /** Error message constants. */
    var FUNC_ERROR_TEXT$1 = 'Expected a function';

    /** Used to compose bitmasks for function metadata. */
    var WRAP_BIND_FLAG$6 = 1,
        WRAP_BIND_KEY_FLAG$4 = 2,
        WRAP_CURRY_FLAG$4 = 8,
        WRAP_CURRY_RIGHT_FLAG$2 = 16,
        WRAP_PARTIAL_FLAG$2 = 32,
        WRAP_PARTIAL_RIGHT_FLAG$2 = 64;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeMax$2 = Math.max;

    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG$4;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT$1);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(WRAP_PARTIAL_FLAG$2 | WRAP_PARTIAL_RIGHT_FLAG$2);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax$2(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG$2) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func);

      var newData = [
        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
        argPos, ary, arity
      ];

      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === undefined
        ? (isBindKey ? 0 : func.length)
        : nativeMax$2(newData[9] - length, 0);

      if (!arity && bitmask & (WRAP_CURRY_FLAG$4 | WRAP_CURRY_RIGHT_FLAG$2)) {
        bitmask &= ~(WRAP_CURRY_FLAG$4 | WRAP_CURRY_RIGHT_FLAG$2);
      }
      if (!bitmask || bitmask == WRAP_BIND_FLAG$6) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG$4 || bitmask == WRAP_CURRY_RIGHT_FLAG$2) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG$2 || bitmask == (WRAP_BIND_FLAG$6 | WRAP_PARTIAL_FLAG$2)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }

    /** Used to compose bitmasks for function metadata. */
    var WRAP_ARY_FLAG$3 = 128;

    /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */
    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = (func && n == null) ? func.length : n;
      return createWrap(func, WRAP_ARY_FLAG$3, undefined, undefined, undefined, undefined, n);
    }

    /**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function baseAssignValue(object, key, value) {
      if (key == '__proto__' && defineProperty$1) {
        defineProperty$1(object, key, {
          'configurable': true,
          'enumerable': true,
          'value': value,
          'writable': true
        });
      } else {
        object[key] = value;
      }
    }

    /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */
    function eq(value, other) {
      return value === other || (value !== value && other !== other);
    }

    /** Used for built-in method references. */
    var objectProto$5 = Object.prototype;

    /** Used to check objects for own properties. */
    var hasOwnProperty$4 = objectProto$5.hasOwnProperty;

    /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty$4.call(object, key) && eq(objValue, value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];

        var newValue = customizer
          ? customizer(object[key], source[key], key, object, source)
          : undefined;

        if (newValue === undefined) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeMax$3 = Math.max;

    /**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */
    function overRest(func, start, transform) {
      start = nativeMax$3(start === undefined ? (func.length - 1) : start, 0);
      return function() {
        var args = arguments,
            index = -1,
            length = nativeMax$3(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }

    /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + '');
    }

    /** Used as references for various `Number` constants. */
    var MAX_SAFE_INTEGER$1 = 9007199254740991;

    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */
    function isLength(value) {
      return typeof value == 'number' &&
        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER$1;
    }

    /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction$1(value);
    }

    /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number'
            ? (isArrayLike(object) && isIndex(index, object.length))
            : (type == 'string' && index in object)
          ) {
        return eq(object[index], value);
      }
      return false;
    }

    /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */
    function createAssigner(assigner) {
      return baseRest(function(object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

        customizer = (assigner.length > 3 && typeof customizer == 'function')
          ? (length--, customizer)
          : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }

    /** Used for built-in method references. */
    var objectProto$6 = Object.prototype;

    /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */
    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto$6;

      return value === proto;
    }

    /**
     * The base implementation of `_.times` without support for iteratee shorthands
     * or max array length checks.
     *
     * @private
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     */
    function baseTimes(n, iteratee) {
      var index = -1,
          result = Array(n);

      while (++index < n) {
        result[index] = iteratee(index);
      }
      return result;
    }

    /** `Object#toString` result references. */
    var argsTag = '[object Arguments]';

    /**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }

    /** Used for built-in method references. */
    var objectProto$7 = Object.prototype;

    /** Used to check objects for own properties. */
    var hasOwnProperty$5 = objectProto$7.hasOwnProperty;

    /** Built-in value references. */
    var propertyIsEnumerable = objectProto$7.propertyIsEnumerable;

    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty$5.call(value, 'callee') &&
        !propertyIsEnumerable.call(value, 'callee');
    };

    /**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */
    function stubFalse() {
      return false;
    }

    /** Detect free variable `exports`. */
    var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

    /** Detect free variable `module`. */
    var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

    /** Detect the popular CommonJS extension `module.exports`. */
    var moduleExports = freeModule && freeModule.exports === freeExports;

    /** Built-in value references. */
    var Buffer$1 = moduleExports ? root.Buffer : undefined;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeIsBuffer = Buffer$1 ? Buffer$1.isBuffer : undefined;

    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */
    var isBuffer = nativeIsBuffer || stubFalse;

    /** `Object#toString` result references. */
    var argsTag$1 = '[object Arguments]',
        arrayTag = '[object Array]',
        boolTag = '[object Boolean]',
        dateTag = '[object Date]',
        errorTag = '[object Error]',
        funcTag$1 = '[object Function]',
        mapTag = '[object Map]',
        numberTag = '[object Number]',
        objectTag = '[object Object]',
        regexpTag = '[object RegExp]',
        setTag = '[object Set]',
        stringTag = '[object String]',
        weakMapTag = '[object WeakMap]';

    var arrayBufferTag = '[object ArrayBuffer]',
        dataViewTag = '[object DataView]',
        float32Tag = '[object Float32Array]',
        float64Tag = '[object Float64Array]',
        int8Tag = '[object Int8Array]',
        int16Tag = '[object Int16Array]',
        int32Tag = '[object Int32Array]',
        uint8Tag = '[object Uint8Array]',
        uint8ClampedTag = '[object Uint8ClampedArray]',
        uint16Tag = '[object Uint16Array]',
        uint32Tag = '[object Uint32Array]';

    /** Used to identify `toStringTag` values of typed arrays. */
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
    typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
    typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
    typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
    typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag$1] = typedArrayTags[arrayTag] =
    typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
    typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
    typedArrayTags[errorTag] = typedArrayTags[funcTag$1] =
    typedArrayTags[mapTag] = typedArrayTags[numberTag] =
    typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
    typedArrayTags[setTag] = typedArrayTags[stringTag] =
    typedArrayTags[weakMapTag] = false;

    /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */
    function baseIsTypedArray(value) {
      return isObjectLike(value) &&
        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }

    /**
     * The base implementation of `_.unary` without support for storing metadata.
     *
     * @private
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     */
    function baseUnary(func) {
      return function(value) {
        return func(value);
      };
    }

    /** Detect free variable `exports`. */
    var freeExports$1 = typeof exports == 'object' && exports && !exports.nodeType && exports;

    /** Detect free variable `module`. */
    var freeModule$1 = freeExports$1 && typeof module == 'object' && module && !module.nodeType && module;

    /** Detect the popular CommonJS extension `module.exports`. */
    var moduleExports$1 = freeModule$1 && freeModule$1.exports === freeExports$1;

    /** Detect free variable `process` from Node.js. */
    var freeProcess = moduleExports$1 && freeGlobal.process;

    /** Used to access faster Node.js helpers. */
    var nodeUtil = (function() {
      try {
        // Use `util.types` for Node.js 10+.
        var types = freeModule$1 && freeModule$1.require && freeModule$1.require('util').types;

        if (types) {
          return types;
        }

        // Legacy `process.binding('util')` for Node.js < 10.
        return freeProcess && freeProcess.binding && freeProcess.binding('util');
      } catch (e) {}
    }());

    /* Node.js helper references. */
    var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

    /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

    /** Used for built-in method references. */
    var objectProto$8 = Object.prototype;

    /** Used to check objects for own properties. */
    var hasOwnProperty$6 = objectProto$8.hasOwnProperty;

    /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;

      for (var key in value) {
        if ((inherited || hasOwnProperty$6.call(value, key)) &&
            !(skipIndexes && (
               // Safari 9 has enumerable `arguments.length` in strict mode.
               key == 'length' ||
               // Node.js 0.10 has enumerable non-index properties on buffers.
               (isBuff && (key == 'offset' || key == 'parent')) ||
               // PhantomJS 2 has enumerable non-index properties on typed arrays.
               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
               // Skip index properties.
               isIndex(key, length)
            ))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Creates a unary function that invokes `func` with its argument transformed.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {Function} transform The argument transform.
     * @returns {Function} Returns the new function.
     */
    function overArg(func, transform) {
      return function(arg) {
        return func(transform(arg));
      };
    }

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeKeys = overArg(Object.keys, Object);

    /** Used for built-in method references. */
    var objectProto$9 = Object.prototype;

    /** Used to check objects for own properties. */
    var hasOwnProperty$7 = objectProto$9.hasOwnProperty;

    /**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty$7.call(object, key) && key != 'constructor') {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }

    /** Used for built-in method references. */
    var objectProto$a = Object.prototype;

    /** Used to check objects for own properties. */
    var hasOwnProperty$8 = objectProto$a.hasOwnProperty;

    /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */
    var assign = createAssigner(function(object, source) {
      if (isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }
      for (var key in source) {
        if (hasOwnProperty$8.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });

    /**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }

    /** Used for built-in method references. */
    var objectProto$b = Object.prototype;

    /** Used to check objects for own properties. */
    var hasOwnProperty$9 = objectProto$b.hasOwnProperty;

    /**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object),
          result = [];

      for (var key in object) {
        if (!(key == 'constructor' && (isProto || !hasOwnProperty$9.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */
    function keysIn$1(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }

    /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */
    var assignIn = createAssigner(function(object, source) {
      copyObject(source, keysIn$1(source), object);
    });

    /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keysIn$1(source), object, customizer);
    });

    /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keys(source), object, customizer);
    });

    /** Used to match property names within property paths. */
    var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
        reIsPlainProp = /^\w*$/;

    /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
          value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
        (object != null && value in Object(object));
    }

    /* Built-in method references that are verified to be native. */
    var nativeCreate = getNative(Object, 'create');

    /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }

    /** Used to stand-in for `undefined` hash values. */
    var HASH_UNDEFINED = '__lodash_hash_undefined__';

    /** Used for built-in method references. */
    var objectProto$c = Object.prototype;

    /** Used to check objects for own properties. */
    var hasOwnProperty$a = objectProto$c.hasOwnProperty;

    /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }
      return hasOwnProperty$a.call(data, key) ? data[key] : undefined;
    }

    /** Used for built-in method references. */
    var objectProto$d = Object.prototype;

    /** Used to check objects for own properties. */
    var hasOwnProperty$b = objectProto$d.hasOwnProperty;

    /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty$b.call(data, key);
    }

    /** Used to stand-in for `undefined` hash values. */
    var HASH_UNDEFINED$1 = '__lodash_hash_undefined__';

    /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED$1 : value;
      return this;
    }

    /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Hash(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    // Add methods to `Hash`.
    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;

    /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }

    /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }

    /** Used for built-in method references. */
    var arrayProto = Array.prototype;

    /** Built-in value references. */
    var splice = arrayProto.splice;

    /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function listCacheDelete(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }

    /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function listCacheGet(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      return index < 0 ? undefined : data[index][1];
    }

    /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }

    /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */
    function listCacheSet(key, value) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }

    /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function ListCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    // Add methods to `ListCache`.
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;

    /* Built-in method references that are verified to be native. */
    var Map$1 = getNative(root, 'Map');

    /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        'hash': new Hash,
        'map': new (Map$1 || ListCache),
        'string': new Hash
      };
    }

    /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */
    function isKeyable(value) {
      var type = typeof value;
      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
        ? (value !== '__proto__')
        : (value === null);
    }

    /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key)
        ? data[typeof key == 'string' ? 'string' : 'hash']
        : data.map;
    }

    /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function mapCacheDelete(key) {
      var result = getMapData(this, key)['delete'](key);
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }

    /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }

    /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */
    function mapCacheSet(key, value) {
      var data = getMapData(this, key),
          size = data.size;

      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }

    /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function MapCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    // Add methods to `MapCache`.
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;

    /** Error message constants. */
    var FUNC_ERROR_TEXT$2 = 'Expected a function';

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */
    function memoize(func, resolver) {
      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
        throw new TypeError(FUNC_ERROR_TEXT$2);
      }
      var memoized = function() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache);
      return memoized;
    }

    // Expose `MapCache`.
    memoize.Cache = MapCache;

    /** Used as the maximum memoize cache size. */
    var MAX_MEMOIZE_SIZE = 500;

    /**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });

      var cache = result.cache;
      return result;
    }

    /** Used to match property names within property paths. */
    var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

    /** Used to match backslashes in property paths. */
    var reEscapeChar = /\\(\\)?/g;

    /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (string.charCodeAt(0) === 46 /* . */) {
        result.push('');
      }
      string.replace(rePropName, function(match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
      });
      return result;
    });

    /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */
    function toString(value) {
      return value == null ? '' : baseToString(value);
    }

    /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }

    /** Used as references for various `Number` constants. */
    var INFINITY$2 = 1 / 0;

    /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */
    function toKey(value) {
      if (typeof value == 'string' || isSymbol(value)) {
        return value;
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY$2) ? '-0' : result;
    }

    /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */
    function baseGet(object, path) {
      path = castPath(path, object);

      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return (index && index == length) ? object : undefined;
    }

    /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */
    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }

    /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */
    function baseAt(object, paths) {
      var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;

      while (++index < length) {
        result[index] = skip ? undefined : get(object, paths[index]);
      }
      return result;
    }

    /**
     * Appends the elements of `values` to `array`.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to append.
     * @returns {Array} Returns `array`.
     */
    function arrayPush(array, values) {
      var index = -1,
          length = values.length,
          offset = array.length;

      while (++index < length) {
        array[offset + index] = values[index];
      }
      return array;
    }

    /** Built-in value references. */
    var spreadableSymbol = Symbol$1 ? Symbol$1.isConcatSpreadable : undefined;

    /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) ||
        !!(spreadableSymbol && value && value[spreadableSymbol]);
    }

    /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;

      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */
    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }

    /**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    function flatRest(func) {
      return setToString(overRest(func, undefined, flatten), func + '');
    }

    /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */
    var at = flatRest(baseAt);

    /** Built-in value references. */
    var getPrototype = overArg(Object.getPrototypeOf, Object);

    /** `Object#toString` result references. */
    var objectTag$1 = '[object Object]';

    /** Used for built-in method references. */
    var funcProto$2 = Function.prototype,
        objectProto$e = Object.prototype;

    /** Used to resolve the decompiled source of functions. */
    var funcToString$2 = funcProto$2.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty$c = objectProto$e.hasOwnProperty;

    /** Used to infer the `Object` constructor. */
    var objectCtorString = funcToString$2.call(Object);

    /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag$1) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty$c.call(proto, 'constructor') && proto.constructor;
      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
        funcToString$2.call(Ctor) == objectCtorString;
    }

    /** `Object#toString` result references. */
    var domExcTag = '[object DOMException]',
        errorTag$1 = '[object Error]';

    /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */
    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == errorTag$1 || tag == domExcTag ||
        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
    }

    /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */
    var attempt = baseRest(function(func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });

    /** Error message constants. */
    var FUNC_ERROR_TEXT$3 = 'Expected a function';

    /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */
    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT$3);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    /** Used to compose bitmasks for function metadata. */
    var WRAP_BIND_FLAG$7 = 1,
        WRAP_PARTIAL_FLAG$3 = 32;

    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */
    var bind = baseRest(function(func, thisArg, partials) {
      var bitmask = WRAP_BIND_FLAG$7;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bind));
        bitmask |= WRAP_PARTIAL_FLAG$3;
      }
      return createWrap(func, bitmask, thisArg, partials, holders);
    });

    // Assign default placeholders.
    bind.placeholder = {};

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */
    var bindAll = flatRest(function(object, methodNames) {
      arrayEach(methodNames, function(key) {
        key = toKey(key);
        baseAssignValue(object, key, bind(object[key], object));
      });
      return object;
    });

    /** Used to compose bitmasks for function metadata. */
    var WRAP_BIND_FLAG$8 = 1,
        WRAP_BIND_KEY_FLAG$5 = 2,
        WRAP_PARTIAL_FLAG$4 = 32;

    /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */
    var bindKey = baseRest(function(object, key, partials) {
      var bitmask = WRAP_BIND_FLAG$8 | WRAP_BIND_KEY_FLAG$5;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bindKey));
        bitmask |= WRAP_PARTIAL_FLAG$4;
      }
      return createWrap(key, bitmask, object, partials, holders);
    });

    // Assign default placeholders.
    bindKey.placeholder = {};

    /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : ((end - start) >>> 0);
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === undefined ? length : end;
      return (!start && end >= length) ? array : baseSlice(array, start, end);
    }

    /** Used to compose unicode character classes. */
    var rsAstralRange = '\\ud800-\\udfff',
        rsComboMarksRange = '\\u0300-\\u036f',
        reComboHalfMarksRange = '\\ufe20-\\ufe2f',
        rsComboSymbolsRange = '\\u20d0-\\u20ff',
        rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
        rsVarRange = '\\ufe0e\\ufe0f';

    /** Used to compose unicode capture groups. */
    var rsZWJ = '\\u200d';

    /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
    var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

    /**
     * Checks if `string` contains Unicode symbols.
     *
     * @private
     * @param {string} string The string to inspect.
     * @returns {boolean} Returns `true` if a symbol is found, else `false`.
     */
    function hasUnicode(string) {
      return reHasUnicode.test(string);
    }

    /**
     * Converts an ASCII `string` to an array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the converted array.
     */
    function asciiToArray(string) {
      return string.split('');
    }

    /** Used to compose unicode character classes. */
    var rsAstralRange$1 = '\\ud800-\\udfff',
        rsComboMarksRange$1 = '\\u0300-\\u036f',
        reComboHalfMarksRange$1 = '\\ufe20-\\ufe2f',
        rsComboSymbolsRange$1 = '\\u20d0-\\u20ff',
        rsComboRange$1 = rsComboMarksRange$1 + reComboHalfMarksRange$1 + rsComboSymbolsRange$1,
        rsVarRange$1 = '\\ufe0e\\ufe0f';

    /** Used to compose unicode capture groups. */
    var rsAstral = '[' + rsAstralRange$1 + ']',
        rsCombo = '[' + rsComboRange$1 + ']',
        rsFitz = '\\ud83c[\\udffb-\\udfff]',
        rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
        rsNonAstral = '[^' + rsAstralRange$1 + ']',
        rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
        rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
        rsZWJ$1 = '\\u200d';

    /** Used to compose unicode regexes. */
    var reOptMod = rsModifier + '?',
        rsOptVar = '[' + rsVarRange$1 + ']?',
        rsOptJoin = '(?:' + rsZWJ$1 + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
        rsSeq = rsOptVar + reOptMod + rsOptJoin,
        rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

    /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
    var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

    /**
     * Converts a Unicode `string` to an array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the converted array.
     */
    function unicodeToArray(string) {
      return string.match(reUnicode) || [];
    }

    /**
     * Converts `string` to an array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the converted array.
     */
    function stringToArray(string) {
      return hasUnicode(string)
        ? unicodeToArray(string)
        : asciiToArray(string);
    }

    /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);

        var strSymbols = hasUnicode(string)
          ? stringToArray(string)
          : undefined;

        var chr = strSymbols
          ? strSymbols[0]
          : string.charAt(0);

        var trailing = strSymbols
          ? castSlice(strSymbols, 1).join('')
          : string.slice(1);

        return chr[methodName]() + trailing;
      };
    }

    /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */
    var upperFirst = createCaseFirst('toUpperCase');

    /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */
    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }

    /**
     * A specialized version of `_.reduce` for arrays without support for
     * iteratee shorthands.
     *
     * @private
     * @param {Array} [array] The array to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @param {boolean} [initAccum] Specify using the first element of `array` as
     *  the initial value.
     * @returns {*} Returns the accumulated value.
     */
    function arrayReduce(array, iteratee, accumulator, initAccum) {
      var index = -1,
          length = array == null ? 0 : array.length;

      if (initAccum && length) {
        accumulator = array[++index];
      }
      while (++index < length) {
        accumulator = iteratee(accumulator, array[index], index, array);
      }
      return accumulator;
    }

    /**
     * The base implementation of `_.propertyOf` without support for deep paths.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     */
    function basePropertyOf(object) {
      return function(key) {
        return object == null ? undefined : object[key];
      };
    }

    /** Used to map Latin Unicode letters to basic Latin letters. */
    var deburredLetters = {
      // Latin-1 Supplement block.
      '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
      '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
      '\xc7': 'C',  '\xe7': 'c',
      '\xd0': 'D',  '\xf0': 'd',
      '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
      '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
      '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
      '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
      '\xd1': 'N',  '\xf1': 'n',
      '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
      '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
      '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
      '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
      '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
      '\xc6': 'Ae', '\xe6': 'ae',
      '\xde': 'Th', '\xfe': 'th',
      '\xdf': 'ss',
      // Latin Extended-A block.
      '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
      '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
      '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
      '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
      '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
      '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
      '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
      '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
      '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
      '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
      '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
      '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
      '\u0134': 'J',  '\u0135': 'j',
      '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
      '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
      '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
      '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
      '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
      '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
      '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
      '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
      '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
      '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
      '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
      '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
      '\u0163': 't',  '\u0165': 't', '\u0167': 't',
      '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
      '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
      '\u0174': 'W',  '\u0175': 'w',
      '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
      '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
      '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
      '\u0132': 'IJ', '\u0133': 'ij',
      '\u0152': 'Oe', '\u0153': 'oe',
      '\u0149': "'n", '\u017f': 's'
    };

    /**
     * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
     * letters to basic Latin letters.
     *
     * @private
     * @param {string} letter The matched letter to deburr.
     * @returns {string} Returns the deburred letter.
     */
    var deburrLetter = basePropertyOf(deburredLetters);

    /** Used to match Latin Unicode letters (excluding mathematical operators). */
    var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

    /** Used to compose unicode character classes. */
    var rsComboMarksRange$2 = '\\u0300-\\u036f',
        reComboHalfMarksRange$2 = '\\ufe20-\\ufe2f',
        rsComboSymbolsRange$2 = '\\u20d0-\\u20ff',
        rsComboRange$2 = rsComboMarksRange$2 + reComboHalfMarksRange$2 + rsComboSymbolsRange$2;

    /** Used to compose unicode capture groups. */
    var rsCombo$1 = '[' + rsComboRange$2 + ']';

    /**
     * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
     * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
     */
    var reComboMark = RegExp(rsCombo$1, 'g');

    /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    }

    /** Used to match words composed of alphanumeric characters. */
    var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

    /**
     * Splits an ASCII `string` into an array of its words.
     *
     * @private
     * @param {string} The string to inspect.
     * @returns {Array} Returns the words of `string`.
     */
    function asciiWords(string) {
      return string.match(reAsciiWord) || [];
    }

    /** Used to detect strings that need a more robust regexp to match words. */
    var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

    /**
     * Checks if `string` contains a word composed of Unicode symbols.
     *
     * @private
     * @param {string} string The string to inspect.
     * @returns {boolean} Returns `true` if a word is found, else `false`.
     */
    function hasUnicodeWord(string) {
      return reHasUnicodeWord.test(string);
    }

    /** Used to compose unicode character classes. */
    var rsAstralRange$2 = '\\ud800-\\udfff',
        rsComboMarksRange$3 = '\\u0300-\\u036f',
        reComboHalfMarksRange$3 = '\\ufe20-\\ufe2f',
        rsComboSymbolsRange$3 = '\\u20d0-\\u20ff',
        rsComboRange$3 = rsComboMarksRange$3 + reComboHalfMarksRange$3 + rsComboSymbolsRange$3,
        rsDingbatRange = '\\u2700-\\u27bf',
        rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
        rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
        rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
        rsPunctuationRange = '\\u2000-\\u206f',
        rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
        rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
        rsVarRange$2 = '\\ufe0e\\ufe0f',
        rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

    /** Used to compose unicode capture groups. */
    var rsApos = "['\u2019]",
        rsBreak = '[' + rsBreakRange + ']',
        rsCombo$2 = '[' + rsComboRange$3 + ']',
        rsDigits = '\\d+',
        rsDingbat = '[' + rsDingbatRange + ']',
        rsLower = '[' + rsLowerRange + ']',
        rsMisc = '[^' + rsAstralRange$2 + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
        rsFitz$1 = '\\ud83c[\\udffb-\\udfff]',
        rsModifier$1 = '(?:' + rsCombo$2 + '|' + rsFitz$1 + ')',
        rsNonAstral$1 = '[^' + rsAstralRange$2 + ']',
        rsRegional$1 = '(?:\\ud83c[\\udde6-\\uddff]){2}',
        rsSurrPair$1 = '[\\ud800-\\udbff][\\udc00-\\udfff]',
        rsUpper = '[' + rsUpperRange + ']',
        rsZWJ$2 = '\\u200d';

    /** Used to compose unicode regexes. */
    var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
        rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
        rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
        rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
        reOptMod$1 = rsModifier$1 + '?',
        rsOptVar$1 = '[' + rsVarRange$2 + ']?',
        rsOptJoin$1 = '(?:' + rsZWJ$2 + '(?:' + [rsNonAstral$1, rsRegional$1, rsSurrPair$1].join('|') + ')' + rsOptVar$1 + reOptMod$1 + ')*',
        rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
        rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
        rsSeq$1 = rsOptVar$1 + reOptMod$1 + rsOptJoin$1,
        rsEmoji = '(?:' + [rsDingbat, rsRegional$1, rsSurrPair$1].join('|') + ')' + rsSeq$1;

    /** Used to match complex or compound words. */
    var reUnicodeWord = RegExp([
      rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
      rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
      rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
      rsUpper + '+' + rsOptContrUpper,
      rsOrdUpper,
      rsOrdLower,
      rsDigits,
      rsEmoji
    ].join('|'), 'g');

    /**
     * Splits a Unicode `string` into an array of its words.
     *
     * @private
     * @param {string} The string to inspect.
     * @returns {Array} Returns the words of `string`.
     */
    function unicodeWords(string) {
      return string.match(reUnicodeWord) || [];
    }

    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }

    /** Used to compose unicode capture groups. */
    var rsApos$1 = "['\u2019]";

    /** Used to match apostrophes. */
    var reApos = RegExp(rsApos$1, 'g');

    /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
      };
    }

    /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */
    var camelCase = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });

    /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */
    function castArray() {
      if (!arguments.length) {
        return [];
      }
      var value = arguments[0];
      return isArray(value) ? value : [value];
    }

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeIsFinite = root.isFinite,
        nativeMin$2 = Math.min;

    /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */
    function createRound(methodName) {
      var func = Math[methodName];
      return function(number, precision) {
        number = toNumber(number);
        precision = precision == null ? 0 : nativeMin$2(toInteger(precision), 292);
        if (precision && nativeIsFinite(number)) {
          // Shift with exponential notation to avoid floating-point issues.
          // See [MDN](https://mdn.io/round#Examples) for more details.
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));

          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }
        return func(number);
      };
    }

    /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */
    var ceil = createRound('ceil');

    /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil = Math.ceil,
        nativeMax$4 = Math.max;

    /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */
    function chunk(array, size, guard) {
      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
        size = 1;
      } else {
        size = nativeMax$4(toInteger(size), 0);
      }
      var length = array == null ? 0 : array.length;
      if (!length || size < 1) {
        return [];
      }
      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, (index += size));
      }
      return result;
    }

    /**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */
    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }
        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }
      return number;
    }

    /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */
    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }
      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }
      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }
      return baseClamp(toNumber(number), lower, upper);
    }

    /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */
    function stackClear() {
      this.__data__ = new ListCache;
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function stackDelete(key) {
      var data = this.__data__,
          result = data['delete'](key);

      this.size = data.size;
      return result;
    }

    /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function stackGet(key) {
      return this.__data__.get(key);
    }

    /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function stackHas(key) {
      return this.__data__.has(key);
    }

    /** Used as the size to enable large array optimizations. */
    var LARGE_ARRAY_SIZE = 200;

    /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map$1 || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }

    /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }

    // Add methods to `Stack`.
    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;

    /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }

    /**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn$1(source), object);
    }

    /** Detect free variable `exports`. */
    var freeExports$2 = typeof exports == 'object' && exports && !exports.nodeType && exports;

    /** Detect free variable `module`. */
    var freeModule$2 = freeExports$2 && typeof module == 'object' && module && !module.nodeType && module;

    /** Detect the popular CommonJS extension `module.exports`. */
    var moduleExports$2 = freeModule$2 && freeModule$2.exports === freeExports$2;

    /** Built-in value references. */
    var Buffer$2 = moduleExports$2 ? root.Buffer : undefined,
        allocUnsafe = Buffer$2 ? Buffer$2.allocUnsafe : undefined;

    /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

      buffer.copy(result);
      return result;
    }

    /**
     * A specialized version of `_.filter` for arrays without support for
     * iteratee shorthands.
     *
     * @private
     * @param {Array} [array] The array to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function arrayFilter(array, predicate) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    /**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */
    function stubArray() {
      return [];
    }

    /** Used for built-in method references. */
    var objectProto$f = Object.prototype;

    /** Built-in value references. */
    var propertyIsEnumerable$1 = objectProto$f.propertyIsEnumerable;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeGetSymbols = Object.getOwnPropertySymbols;

    /**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable$1.call(object, symbol);
      });
    };

    /**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeGetSymbols$1 = Object.getOwnPropertySymbols;

    /**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbolsIn = !nativeGetSymbols$1 ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };

    /**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }

    /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }

    /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }

    /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn$1, getSymbolsIn);
    }

    /* Built-in method references that are verified to be native. */
    var DataView = getNative(root, 'DataView');

    /* Built-in method references that are verified to be native. */
    var Promise$1 = getNative(root, 'Promise');

    /* Built-in method references that are verified to be native. */
    var Set$1 = getNative(root, 'Set');

    /** `Object#toString` result references. */
    var mapTag$1 = '[object Map]',
        objectTag$2 = '[object Object]',
        promiseTag = '[object Promise]',
        setTag$1 = '[object Set]',
        weakMapTag$1 = '[object WeakMap]';

    var dataViewTag$1 = '[object DataView]';

    /** Used to detect maps, sets, and weakmaps. */
    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map$1),
        promiseCtorString = toSource(Promise$1),
        setCtorString = toSource(Set$1),
        weakMapCtorString = toSource(WeakMap$1);

    /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    var getTag = baseGetTag;

    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag$1) ||
        (Map$1 && getTag(new Map$1) != mapTag$1) ||
        (Promise$1 && getTag(Promise$1.resolve()) != promiseTag) ||
        (Set$1 && getTag(new Set$1) != setTag$1) ||
        (WeakMap$1 && getTag(new WeakMap$1) != weakMapTag$1)) {
      getTag = function(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag$2 ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString: return dataViewTag$1;
            case mapCtorString: return mapTag$1;
            case promiseCtorString: return promiseTag;
            case setCtorString: return setTag$1;
            case weakMapCtorString: return weakMapTag$1;
          }
        }
        return result;
      };
    }

    var getTag$1 = getTag;

    /** Used for built-in method references. */
    var objectProto$g = Object.prototype;

    /** Used to check objects for own properties. */
    var hasOwnProperty$d = objectProto$g.hasOwnProperty;

    /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */
    function initCloneArray(array) {
      var length = array.length,
          result = new array.constructor(length);

      // Add properties assigned by `RegExp#exec`.
      if (length && typeof array[0] == 'string' && hasOwnProperty$d.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    /** Built-in value references. */
    var Uint8Array$1 = root.Uint8Array;

    /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array$1(result).set(new Uint8Array$1(arrayBuffer));
      return result;
    }

    /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }

    /** Used to match `RegExp` flags from their coerced string values. */
    var reFlags = /\w*$/;

    /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }

    /** Used to convert symbols to primitives and strings. */
    var symbolProto$1 = Symbol$1 ? Symbol$1.prototype : undefined,
        symbolValueOf = symbolProto$1 ? symbolProto$1.valueOf : undefined;

    /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }

    /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }

    /** `Object#toString` result references. */
    var boolTag$1 = '[object Boolean]',
        dateTag$1 = '[object Date]',
        mapTag$2 = '[object Map]',
        numberTag$1 = '[object Number]',
        regexpTag$1 = '[object RegExp]',
        setTag$2 = '[object Set]',
        stringTag$1 = '[object String]',
        symbolTag$1 = '[object Symbol]';

    var arrayBufferTag$1 = '[object ArrayBuffer]',
        dataViewTag$2 = '[object DataView]',
        float32Tag$1 = '[object Float32Array]',
        float64Tag$1 = '[object Float64Array]',
        int8Tag$1 = '[object Int8Array]',
        int16Tag$1 = '[object Int16Array]',
        int32Tag$1 = '[object Int32Array]',
        uint8Tag$1 = '[object Uint8Array]',
        uint8ClampedTag$1 = '[object Uint8ClampedArray]',
        uint16Tag$1 = '[object Uint16Array]',
        uint32Tag$1 = '[object Uint32Array]';

    /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag$1:
          return cloneArrayBuffer(object);

        case boolTag$1:
        case dateTag$1:
          return new Ctor(+object);

        case dataViewTag$2:
          return cloneDataView(object, isDeep);

        case float32Tag$1: case float64Tag$1:
        case int8Tag$1: case int16Tag$1: case int32Tag$1:
        case uint8Tag$1: case uint8ClampedTag$1: case uint16Tag$1: case uint32Tag$1:
          return cloneTypedArray(object, isDeep);

        case mapTag$2:
          return new Ctor;

        case numberTag$1:
        case stringTag$1:
          return new Ctor(object);

        case regexpTag$1:
          return cloneRegExp(object);

        case setTag$2:
          return new Ctor;

        case symbolTag$1:
          return cloneSymbol(object);
      }
    }

    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneObject(object) {
      return (typeof object.constructor == 'function' && !isPrototype(object))
        ? baseCreate(getPrototype(object))
        : {};
    }

    /** `Object#toString` result references. */
    var mapTag$3 = '[object Map]';

    /**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */
    function baseIsMap(value) {
      return isObjectLike(value) && getTag$1(value) == mapTag$3;
    }

    /* Node.js helper references. */
    var nodeIsMap = nodeUtil && nodeUtil.isMap;

    /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

    /** `Object#toString` result references. */
    var setTag$3 = '[object Set]';

    /**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */
    function baseIsSet(value) {
      return isObjectLike(value) && getTag$1(value) == setTag$3;
    }

    /* Node.js helper references. */
    var nodeIsSet = nodeUtil && nodeUtil.isSet;

    /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

    /** Used to compose bitmasks for cloning. */
    var CLONE_DEEP_FLAG = 1,
        CLONE_FLAT_FLAG = 2,
        CLONE_SYMBOLS_FLAG = 4;

    /** `Object#toString` result references. */
    var argsTag$2 = '[object Arguments]',
        arrayTag$1 = '[object Array]',
        boolTag$2 = '[object Boolean]',
        dateTag$2 = '[object Date]',
        errorTag$2 = '[object Error]',
        funcTag$2 = '[object Function]',
        genTag$1 = '[object GeneratorFunction]',
        mapTag$4 = '[object Map]',
        numberTag$2 = '[object Number]',
        objectTag$3 = '[object Object]',
        regexpTag$2 = '[object RegExp]',
        setTag$4 = '[object Set]',
        stringTag$2 = '[object String]',
        symbolTag$2 = '[object Symbol]',
        weakMapTag$2 = '[object WeakMap]';

    var arrayBufferTag$2 = '[object ArrayBuffer]',
        dataViewTag$3 = '[object DataView]',
        float32Tag$2 = '[object Float32Array]',
        float64Tag$2 = '[object Float64Array]',
        int8Tag$2 = '[object Int8Array]',
        int16Tag$2 = '[object Int16Array]',
        int32Tag$2 = '[object Int32Array]',
        uint8Tag$2 = '[object Uint8Array]',
        uint8ClampedTag$2 = '[object Uint8ClampedArray]',
        uint16Tag$2 = '[object Uint16Array]',
        uint32Tag$2 = '[object Uint32Array]';

    /** Used to identify `toStringTag` values supported by `_.clone`. */
    var cloneableTags = {};
    cloneableTags[argsTag$2] = cloneableTags[arrayTag$1] =
    cloneableTags[arrayBufferTag$2] = cloneableTags[dataViewTag$3] =
    cloneableTags[boolTag$2] = cloneableTags[dateTag$2] =
    cloneableTags[float32Tag$2] = cloneableTags[float64Tag$2] =
    cloneableTags[int8Tag$2] = cloneableTags[int16Tag$2] =
    cloneableTags[int32Tag$2] = cloneableTags[mapTag$4] =
    cloneableTags[numberTag$2] = cloneableTags[objectTag$3] =
    cloneableTags[regexpTag$2] = cloneableTags[setTag$4] =
    cloneableTags[stringTag$2] = cloneableTags[symbolTag$2] =
    cloneableTags[uint8Tag$2] = cloneableTags[uint8ClampedTag$2] =
    cloneableTags[uint16Tag$2] = cloneableTags[uint32Tag$2] = true;
    cloneableTags[errorTag$2] = cloneableTags[funcTag$2] =
    cloneableTags[weakMapTag$2] = false;

    /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;

      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag$1(value),
            isFunc = tag == funcTag$2 || tag == genTag$1;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag$3 || tag == argsTag$2 || (isFunc && !object)) {
          result = (isFlat || isFunc) ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat
              ? copySymbolsIn(value, baseAssignIn(result, value))
              : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      // Check for circular references and return its corresponding clone.
      stack || (stack = new Stack);
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);

      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });
      } else if (isMap(value)) {
        value.forEach(function(subValue, key) {
          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
        });
      }

      var keysFunc = isFull
        ? (isFlat ? getAllKeysIn : getAllKeys)
        : (isFlat ? keysIn : keys);

      var props = isArr ? undefined : keysFunc(value);
      arrayEach(props || value, function(subValue, key) {
        if (props) {
          key = subValue;
          subValue = value[key];
        }
        // Recursively populate clone (susceptible to call stack limits).
        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
      });
      return result;
    }

    /** Used to compose bitmasks for cloning. */
    var CLONE_SYMBOLS_FLAG$1 = 4;

    /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */
    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG$1);
    }

    /** Used to compose bitmasks for cloning. */
    var CLONE_DEEP_FLAG$1 = 1,
        CLONE_SYMBOLS_FLAG$2 = 4;

    /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */
    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG$1 | CLONE_SYMBOLS_FLAG$2);
    }

    /** Used to compose bitmasks for cloning. */
    var CLONE_DEEP_FLAG$2 = 1,
        CLONE_SYMBOLS_FLAG$3 = 4;

    /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */
    function cloneDeepWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_DEEP_FLAG$2 | CLONE_SYMBOLS_FLAG$3, customizer);
    }

    /** Used to compose bitmasks for cloning. */
    var CLONE_SYMBOLS_FLAG$4 = 4;

    /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */
    function cloneWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_SYMBOLS_FLAG$4, customizer);
    }

    /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */
    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */
    function concat() {
      var length = arguments.length;
      if (!length) {
        return [];
      }
      var args = Array(length - 1),
          array = arguments[0],
          index = length;

      while (index--) {
        args[index - 1] = arguments[index];
      }
      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
    }

    /** Used to stand-in for `undefined` hash values. */
    var HASH_UNDEFINED$2 = '__lodash_hash_undefined__';

    /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED$2);
      return this;
    }

    /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */
    function setCacheHas(value) {
      return this.__data__.has(value);
    }

    /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function SetCache(values) {
      var index = -1,
          length = values == null ? 0 : values.length;

      this.__data__ = new MapCache;
      while (++index < length) {
        this.add(values[index]);
      }
    }

    // Add methods to `SetCache`.
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;

    /**
     * A specialized version of `_.some` for arrays without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} [array] The array to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */
    function arraySome(array, predicate) {
      var index = -1,
          length = array == null ? 0 : array.length;

      while (++index < length) {
        if (predicate(array[index], index, array)) {
          return true;
        }
      }
      return false;
    }

    /**
     * Checks if a `cache` value for `key` exists.
     *
     * @private
     * @param {Object} cache The cache to query.
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function cacheHas(cache, key) {
      return cache.has(key);
    }

    /** Used to compose bitmasks for value comparisons. */
    var COMPARE_PARTIAL_FLAG = 1,
        COMPARE_UNORDERED_FLAG = 2;

    /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(array);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var index = -1,
          result = true,
          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

      stack.set(array, other);
      stack.set(other, array);

      // Ignore non-index properties.
      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, arrValue, index, other, array, stack)
            : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
          if (!arraySome(other, function(othValue, othIndex) {
                if (!cacheHas(seen, othIndex) &&
                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
            result = false;
            break;
          }
        } else if (!(
              arrValue === othValue ||
                equalFunc(arrValue, othValue, bitmask, customizer, stack)
            )) {
          result = false;
          break;
        }
      }
      stack['delete'](array);
      stack['delete'](other);
      return result;
    }

    /**
     * Converts `map` to its key-value pairs.
     *
     * @private
     * @param {Object} map The map to convert.
     * @returns {Array} Returns the key-value pairs.
     */
    function mapToArray(map) {
      var index = -1,
          result = Array(map.size);

      map.forEach(function(value, key) {
        result[++index] = [key, value];
      });
      return result;
    }

    /**
     * Converts `set` to an array of its values.
     *
     * @private
     * @param {Object} set The set to convert.
     * @returns {Array} Returns the values.
     */
    function setToArray(set) {
      var index = -1,
          result = Array(set.size);

      set.forEach(function(value) {
        result[++index] = value;
      });
      return result;
    }

    /** Used to compose bitmasks for value comparisons. */
    var COMPARE_PARTIAL_FLAG$1 = 1,
        COMPARE_UNORDERED_FLAG$1 = 2;

    /** `Object#toString` result references. */
    var boolTag$3 = '[object Boolean]',
        dateTag$3 = '[object Date]',
        errorTag$3 = '[object Error]',
        mapTag$5 = '[object Map]',
        numberTag$3 = '[object Number]',
        regexpTag$3 = '[object RegExp]',
        setTag$5 = '[object Set]',
        stringTag$3 = '[object String]',
        symbolTag$3 = '[object Symbol]';

    var arrayBufferTag$3 = '[object ArrayBuffer]',
        dataViewTag$4 = '[object DataView]';

    /** Used to convert symbols to primitives and strings. */
    var symbolProto$2 = Symbol$1 ? Symbol$1.prototype : undefined,
        symbolValueOf$1 = symbolProto$2 ? symbolProto$2.valueOf : undefined;

    /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag$4:
          if ((object.byteLength != other.byteLength) ||
              (object.byteOffset != other.byteOffset)) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;

        case arrayBufferTag$3:
          if ((object.byteLength != other.byteLength) ||
              !equalFunc(new Uint8Array$1(object), new Uint8Array$1(other))) {
            return false;
          }
          return true;

        case boolTag$3:
        case dateTag$3:
        case numberTag$3:
          // Coerce booleans to `1` or `0` and dates to milliseconds.
          // Invalid dates are coerced to `NaN`.
          return eq(+object, +other);

        case errorTag$3:
          return object.name == other.name && object.message == other.message;

        case regexpTag$3:
        case stringTag$3:
          // Coerce regexes to strings and treat strings, primitives and objects,
          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
          // for more details.
          return object == (other + '');

        case mapTag$5:
          var convert = mapToArray;

        case setTag$5:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG$1;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          }
          // Assume cyclic values are equal.
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG$1;

          // Recursively compare objects (susceptible to call stack limits).
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack['delete'](object);
          return result;

        case symbolTag$3:
          if (symbolValueOf$1) {
            return symbolValueOf$1.call(object) == symbolValueOf$1.call(other);
          }
      }
      return false;
    }

    /** Used to compose bitmasks for value comparisons. */
    var COMPARE_PARTIAL_FLAG$2 = 1;

    /** Used for built-in method references. */
    var objectProto$h = Object.prototype;

    /** Used to check objects for own properties. */
    var hasOwnProperty$e = objectProto$h.hasOwnProperty;

    /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG$2,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty$e.call(other, key))) {
          return false;
        }
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);

      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, objValue, key, other, object, stack)
            : customizer(objValue, othValue, key, object, other, stack);
        }
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined
              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
              : compared
            )) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor &&
            ('constructor' in object && 'constructor' in other) &&
            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack['delete'](object);
      stack['delete'](other);
      return result;
    }

    /** Used to compose bitmasks for value comparisons. */
    var COMPARE_PARTIAL_FLAG$3 = 1;

    /** `Object#toString` result references. */
    var argsTag$3 = '[object Arguments]',
        arrayTag$2 = '[object Array]',
        objectTag$4 = '[object Object]';

    /** Used for built-in method references. */
    var objectProto$i = Object.prototype;

    /** Used to check objects for own properties. */
    var hasOwnProperty$f = objectProto$i.hasOwnProperty;

    /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag$2 : getTag$1(object),
          othTag = othIsArr ? arrayTag$2 : getTag$1(other);

      objTag = objTag == argsTag$3 ? objectTag$4 : objTag;
      othTag = othTag == argsTag$3 ? objectTag$4 : othTag;

      var objIsObj = objTag == objectTag$4,
          othIsObj = othTag == objectTag$4,
          isSameTag = objTag == othTag;

      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return (objIsArr || isTypedArray(object))
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG$3)) {
        var objIsWrapped = objIsObj && hasOwnProperty$f.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty$f.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;

          stack || (stack = new Stack);
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack);
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }

    /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }

    /** Used to compose bitmasks for value comparisons. */
    var COMPARE_PARTIAL_FLAG$4 = 1,
        COMPARE_UNORDERED_FLAG$2 = 2;

    /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if ((noCustomizer && data[2])
              ? data[1] !== object[data[0]]
              : !(data[0] in object)
            ) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack;
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === undefined
                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG$4 | COMPARE_UNORDERED_FLAG$2, customizer, stack)
                : result
              )) {
            return false;
          }
        }
      }
      return true;
    }

    /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */
    function getMatchData(object) {
      var result = keys(object),
          length = result.length;

      while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }

    /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue &&
          (srcValue !== undefined || (key in Object(object)));
      };
    }

    /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }

    /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }

    /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          result = false;

      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) &&
        (isArray(object) || isArguments(object));
    }

    /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }

    /** Used to compose bitmasks for value comparisons. */
    var COMPARE_PARTIAL_FLAG$5 = 1,
        COMPARE_UNORDERED_FLAG$3 = 2;

    /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return (objValue === undefined && objValue === srcValue)
          ? hasIn(object, path)
          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG$5 | COMPARE_UNORDERED_FLAG$3);
      };
    }

    /**
     * The base implementation of `_.property` without support for deep paths.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @returns {Function} Returns the new accessor function.
     */
    function baseProperty(key) {
      return function(object) {
        return object == null ? undefined : object[key];
      };
    }

    /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }

    /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }

    /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */
    function baseIteratee(value) {
      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
      if (typeof value == 'function') {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == 'object') {
        return isArray(value)
          ? baseMatchesProperty(value[0], value[1])
          : baseMatches(value);
      }
      return property(value);
    }

    /** Error message constants. */
    var FUNC_ERROR_TEXT$4 = 'Expected a function';

    /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */
    function cond(pairs) {
      var length = pairs == null ? 0 : pairs.length,
          toIteratee = baseIteratee;

      pairs = !length ? [] : arrayMap(pairs, function(pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT$4);
        }
        return [toIteratee(pair[0]), pair[1]];
      });

      return baseRest(function(args) {
        var index = -1;
        while (++index < length) {
          var pair = pairs[index];
          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }

    /**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */
    function baseConformsTo(object, source, props) {
      var length = props.length;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (length--) {
        var key = props[length],
            predicate = source[key],
            value = object[key];

        if ((value === undefined && !(key in object)) || !predicate(value)) {
          return false;
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */
    function baseConforms(source) {
      var props = keys(source);
      return function(object) {
        return baseConformsTo(object, source, props);
      };
    }

    /** Used to compose bitmasks for cloning. */
    var CLONE_DEEP_FLAG$3 = 1;

    /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */
    function conforms(source) {
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG$3));
    }

    /**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */
    function conformsTo(object, source) {
      return source == null || baseConformsTo(object, source, keys(source));
    }

    /**
     * A specialized version of `baseAggregator` for arrays.
     *
     * @private
     * @param {Array} [array] The array to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */
    function arrayAggregator(array, setter, iteratee, accumulator) {
      var index = -1,
          length = array == null ? 0 : array.length;

      while (++index < length) {
        var value = array[index];
        setter(accumulator, value, iteratee(value), array);
      }
      return accumulator;
    }

    /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseFor = createBaseFor();

    /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }

    /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while ((fromRight ? index-- : ++index < length)) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEach = createBaseEach(baseForOwn);

    /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function(value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }

    /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter, initializer) {
      return function(collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};

        return func(collection, setter, baseIteratee(iteratee, 2), accumulator);
      };
    }

    /** Used for built-in method references. */
    var objectProto$j = Object.prototype;

    /** Used to check objects for own properties. */
    var hasOwnProperty$g = objectProto$j.hasOwnProperty;

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty$g.call(result, key)) {
        ++result[key];
      } else {
        baseAssignValue(result, key, 1);
      }
    });

    /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties == null ? result : baseAssign(result, properties);
    }

    /** Used to compose bitmasks for function metadata. */
    var WRAP_CURRY_FLAG$5 = 8;

    /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */
    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG$5, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    // Assign default placeholders.
    curry.placeholder = {};

    /** Used to compose bitmasks for function metadata. */
    var WRAP_CURRY_RIGHT_FLAG$3 = 16;

    /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */
    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG$3, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }

    // Assign default placeholders.
    curryRight.placeholder = {};

    /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */
    var now = function() {
      return root.Date.now();
    };

    /** Error message constants. */
    var FUNC_ERROR_TEXT$5 = 'Expected a function';

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeMax$5 = Math.max,
        nativeMin$3 = Math.min;

    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */
    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT$5);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax$5(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;

        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            timeWaiting = wait - timeSinceLastCall;

        return maxing
          ? nativeMin$3(timeWaiting, maxWait - timeSinceLastInvoke)
          : timeWaiting;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
      }

      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined;

        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        if (timerId !== undefined) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);

        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            // Handle invocations in a tight loop.
            clearTimeout(timerId);
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    /**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */
    function defaultTo(value, defaultValue) {
      return (value == null || value !== value) ? defaultValue : value;
    }

    /** Used for built-in method references. */
    var objectProto$k = Object.prototype;

    /** Used to check objects for own properties. */
    var hasOwnProperty$h = objectProto$k.hasOwnProperty;

    /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var defaults = baseRest(function(object, sources) {
      object = Object(object);

      var index = -1;
      var length = sources.length;
      var guard = length > 2 ? sources[2] : undefined;

      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
        length = 1;
      }

      while (++index < length) {
        var source = sources[index];
        var props = keysIn$1(source);
        var propsIndex = -1;
        var propsLength = props.length;

        while (++propsIndex < propsLength) {
          var key = props[propsIndex];
          var value = object[key];

          if (value === undefined ||
              (eq(value, objectProto$k[key]) && !hasOwnProperty$h.call(object, key))) {
            object[key] = source[key];
          }
        }
      }

      return object;
    });

    /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignMergeValue(object, key, value) {
      if ((value !== undefined && !eq(object[key], value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    /**
     * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the property to get.
     * @returns {*} Returns the property value.
     */
    function safeGet(object, key) {
      if (key === 'constructor' && typeof object[key] === 'function') {
        return;
      }

      if (key == '__proto__') {
        return;
      }

      return object[key];
    }

    /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */
    function toPlainObject(value) {
      return copyObject(value, keysIn$1(value));
    }

    /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = safeGet(object, key),
          srcValue = safeGet(source, key),
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer
        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
        : undefined;

      var isCommon = newValue === undefined;

      if (isCommon) {
        var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          }
          else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          }
          else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          }
          else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          }
          else {
            newValue = [];
          }
        }
        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          }
          else if (!isObject(objValue) || isFunction$1(objValue)) {
            newValue = initCloneObject(srcValue);
          }
        }
        else {
          isCommon = false;
        }
      }
      if (isCommon) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack['delete'](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }

    /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        stack || (stack = new Stack);
        if (isObject(srcValue)) {
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        }
        else {
          var newValue = customizer
            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
            : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn$1);
    }

    /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, objValue);
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
        stack['delete'](srcValue);
      }
      return objValue;
    }

    /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });

    /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */
    var defaultsDeep = baseRest(function(args) {
      args.push(undefined, customDefaultsMerge);
      return apply(mergeWith, undefined, args);
    });

    /** Error message constants. */
    var FUNC_ERROR_TEXT$6 = 'Expected a function';

    /**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT$6);
      }
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */
    var defer = baseRest(function(func, args) {
      return baseDelay(func, 1, args);
    });

    /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */
    var delay = baseRest(function(func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });

    /**
     * This function is like `arrayIncludes` except that it accepts a comparator.
     *
     * @private
     * @param {Array} [array] The array to inspect.
     * @param {*} target The value to search for.
     * @param {Function} comparator The comparator invoked per element.
     * @returns {boolean} Returns `true` if `target` is found, else `false`.
     */
    function arrayIncludesWith(array, value, comparator) {
      var index = -1,
          length = array == null ? 0 : array.length;

      while (++index < length) {
        if (comparator(value, array[index])) {
          return true;
        }
      }
      return false;
    }

    /** Used as the size to enable large array optimizations. */
    var LARGE_ARRAY_SIZE$1 = 200;

    /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      }
      else if (values.length >= LARGE_ARRAY_SIZE$1) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee == null ? value : iteratee(value);

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }
          result.push(value);
        }
        else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */
    var difference = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
        : [];
    });

    /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */
    function last(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : undefined;
    }

    /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var differenceBy = baseRest(function(array, values) {
      var iteratee = last(values);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), baseIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */
    var differenceWith = baseRest(function(array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
        : [];
    });

    /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */
    var divide = createMathOperation(function(dividend, divisor) {
      return dividend / divisor;
    }, 1);

    /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function drop(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function dropRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) &&
        predicate(array[index], index, array)) {}

      return isDrop
        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, baseIteratee(predicate, 3), true, true)
        : [];
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, baseIteratee(predicate, 3), true)
        : [];
    }

    /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */
    function castFunction(value) {
      return typeof value == 'function' ? value : identity;
    }

    /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, castFunction(iteratee));
    }

    /**
     * A specialized version of `_.forEachRight` for arrays without support for
     * iteratee shorthands.
     *
     * @private
     * @param {Array} [array] The array to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns `array`.
     */
    function arrayEachRight(array, iteratee) {
      var length = array == null ? 0 : array.length;

      while (length--) {
        if (iteratee(array[length], length, array) === false) {
          break;
        }
      }
      return array;
    }

    /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseForRight = createBaseFor(true);

    /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEachRight = createBaseEach(baseForOwnRight, true);

    /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */
    function forEachRight(collection, iteratee) {
      var func = isArray(collection) ? arrayEachRight : baseEachRight;
      return func(collection, castFunction(iteratee));
    }

    /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */
    function endsWith(string, target, position) {
      string = toString(string);
      target = baseToString(target);

      var length = string.length;
      position = position === undefined
        ? length
        : baseClamp(toInteger(position), 0, length);

      var end = position;
      position -= target.length;
      return position >= 0 && string.slice(position, end) == target;
    }

    /**
     * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
     * of key-value pairs for `object` corresponding to the property names of `props`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} props The property names to get values for.
     * @returns {Object} Returns the key-value pairs.
     */
    function baseToPairs(object, props) {
      return arrayMap(props, function(key) {
        return [key, object[key]];
      });
    }

    /**
     * Converts `set` to its value-value pairs.
     *
     * @private
     * @param {Object} set The set to convert.
     * @returns {Array} Returns the value-value pairs.
     */
    function setToPairs(set) {
      var index = -1,
          result = Array(set.size);

      set.forEach(function(value) {
        result[++index] = [value, value];
      });
      return result;
    }

    /** `Object#toString` result references. */
    var mapTag$6 = '[object Map]',
        setTag$6 = '[object Set]';

    /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */
    function createToPairs(keysFunc) {
      return function(object) {
        var tag = getTag$1(object);
        if (tag == mapTag$6) {
          return mapToArray(object);
        }
        if (tag == setTag$6) {
          return setToPairs(object);
        }
        return baseToPairs(object, keysFunc(object));
      };
    }

    /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */
    var toPairs = createToPairs(keys);

    /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */
    var toPairsIn = createToPairs(keysIn$1);

    /** Used to map characters to HTML entities. */
    var htmlEscapes = {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#39;'
    };

    /**
     * Used by `_.escape` to convert characters to HTML entities.
     *
     * @private
     * @param {string} chr The matched character to escape.
     * @returns {string} Returns the escaped character.
     */
    var escapeHtmlChar = basePropertyOf(htmlEscapes);

    /** Used to match HTML entities and HTML characters. */
    var reUnescapedHtml = /[&<>"']/g,
        reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

    /**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */
    function escape$1(string) {
      string = toString(string);
      return (string && reHasUnescapedHtml.test(string))
        ? string.replace(reUnescapedHtml, escapeHtmlChar)
        : string;
    }

    /**
     * Used to match `RegExp`
     * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
     */
    var reRegExpChar$1 = /[\\^$.*+?()[\]{}|]/g,
        reHasRegExpChar = RegExp(reRegExpChar$1.source);

    /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */
    function escapeRegExp(string) {
      string = toString(string);
      return (string && reHasRegExpChar.test(string))
        ? string.replace(reRegExpChar$1, '\\$&')
        : string;
    }

    /**
     * A specialized version of `_.every` for arrays without support for
     * iteratee shorthands.
     *
     * @private
     * @param {Array} [array] The array to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     */
    function arrayEvery(array, predicate) {
      var index = -1,
          length = array == null ? 0 : array.length;

      while (++index < length) {
        if (!predicate(array[index], index, array)) {
          return false;
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */
    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, baseIteratee(predicate, 3));
    }

    /** Used as references for the maximum length and index of an array. */
    var MAX_ARRAY_LENGTH$1 = 4294967295;

    /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */
    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH$1) : 0;
    }

    /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */
    function baseFill(array, value, start, end) {
      var length = array.length;

      start = toInteger(start);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : toInteger(end);
      if (end < 0) {
        end += length;
      }
      end = start > end ? 0 : toLength(end);
      while (start < end) {
        array[start++] = value;
      }
      return array;
    }

    /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */
    function fill(array, value, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     */
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, baseIteratee(predicate, 3));
    }

    /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */
    function createFind(findIndexFunc) {
      return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = baseIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
      };
    }

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeMax$6 = Math.max;

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */
    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax$6(length + index, 0);
      }
      return baseFindIndex(array, baseIteratee(predicate, 3), index);
    }

    /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */
    var find = createFind(findIndex);

    /**
     * The base implementation of methods like `_.findKey` and `_.findLastKey`,
     * without support for iteratee shorthands, which iterates over `collection`
     * using `eachFunc`.
     *
     * @private
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} predicate The function invoked per iteration.
     * @param {Function} eachFunc The function to iterate over `collection`.
     * @returns {*} Returns the found element or its key, else `undefined`.
     */
    function baseFindKey(collection, predicate, eachFunc) {
      var result;
      eachFunc(collection, function(value, key, collection) {
        if (predicate(value, key, collection)) {
          result = key;
          return false;
        }
      });
      return result;
    }

    /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */
    function findKey(object, predicate) {
      return baseFindKey(object, baseIteratee(predicate, 3), baseForOwn);
    }

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeMax$7 = Math.max,
        nativeMin$4 = Math.min;

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */
    function findLastIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length - 1;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = fromIndex < 0
          ? nativeMax$7(length + index, 0)
          : nativeMin$4(index, length - 1);
      }
      return baseFindIndex(array, baseIteratee(predicate, 3), index, true);
    }

    /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */
    var findLast = createFind(findLastIndex);

    /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */
    function findLastKey(object, predicate) {
      return baseFindKey(object, baseIteratee(predicate, 3), baseForOwnRight);
    }

    /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */
    function head(array) {
      return (array && array.length) ? array[0] : undefined;
    }

    /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, baseIteratee(iteratee, 3));
    }

    /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    /** Used as references for various `Number` constants. */
    var INFINITY$3 = 1 / 0;

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMapDeep(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), INFINITY$3);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */
    function flatMapDepth(collection, iteratee, depth) {
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(map(collection, iteratee), depth);
    }

    /** Used as references for various `Number` constants. */
    var INFINITY$4 = 1 / 0;

    /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */
    function flattenDeep(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, INFINITY$4) : [];
    }

    /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */
    function flattenDepth(array, depth) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }

    /** Used to compose bitmasks for function metadata. */
    var WRAP_FLIP_FLAG$2 = 512;

    /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */
    function flip(func) {
      return createWrap(func, WRAP_FLIP_FLAG$2);
    }

    /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */
    var floor = createRound('floor');

    /** Error message constants. */
    var FUNC_ERROR_TEXT$7 = 'Expected a function';

    /** Used to compose bitmasks for function metadata. */
    var WRAP_CURRY_FLAG$6 = 8,
        WRAP_PARTIAL_FLAG$5 = 32,
        WRAP_ARY_FLAG$4 = 128,
        WRAP_REARG_FLAG$2 = 256;

    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */
    function createFlow(fromRight) {
      return flatRest(function(funcs) {
        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          var func = funcs[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT$7);
          }
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? index : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) &&
                data[1] == (WRAP_ARY_FLAG$4 | WRAP_CURRY_FLAG$6 | WRAP_PARTIAL_FLAG$5 | WRAP_REARG_FLAG$2) &&
                !data[4].length && data[9] == 1
              ) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = (func.length == 1 && isLaziable(func))
              ? wrapper[funcName]()
              : wrapper.thru(func);
          }
        }
        return function() {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 && isArray(value)) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */
    var flow = createFlow();

    /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */
    var flowRight = createFlow(true);

    /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */
    function forIn(object, iteratee) {
      return object == null
        ? object
        : baseFor(object, castFunction(iteratee), keysIn$1);
    }

    /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */
    function forInRight(object, iteratee) {
      return object == null
        ? object
        : baseForRight(object, castFunction(iteratee), keysIn$1);
    }

    /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, castFunction(iteratee));
    }

    /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */
    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, castFunction(iteratee));
    }

    /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */
    function fromPairs(pairs) {
      var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }
      return result;
    }

    /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */
    function baseFunctions(object, props) {
      return arrayFilter(props, function(key) {
        return isFunction$1(object[key]);
      });
    }

    /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */
    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }

    /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */
    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn$1(object));
    }

    /** Used for built-in method references. */
    var objectProto$l = Object.prototype;

    /** Used to check objects for own properties. */
    var hasOwnProperty$i = objectProto$l.hasOwnProperty;

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty$i.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });

    /**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */
    function baseGt(value, other) {
      return value > other;
    }

    /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */
    function createRelationalOperation(operator) {
      return function(value, other) {
        if (!(typeof value == 'string' && typeof other == 'string')) {
          value = toNumber(value);
          other = toNumber(other);
        }
        return operator(value, other);
      };
    }

    /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */
    var gt = createRelationalOperation(baseGt);

    /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */
    var gte = createRelationalOperation(function(value, other) {
      return value >= other;
    });

    /** Used for built-in method references. */
    var objectProto$m = Object.prototype;

    /** Used to check objects for own properties. */
    var hasOwnProperty$j = objectProto$m.hasOwnProperty;

    /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHas(object, key) {
      return object != null && hasOwnProperty$j.call(object, key);
    }

    /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */
    function has(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeMax$8 = Math.max,
        nativeMin$5 = Math.min;

    /**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */
    function baseInRange(number, start, end) {
      return number >= nativeMin$5(start, end) && number < nativeMax$8(start, end);
    }

    /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */
    function inRange(number, start, end) {
      start = toFinite(start);
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toFinite(end);
      }
      number = toNumber(number);
      return baseInRange(number, start, end);
    }

    /** `Object#toString` result references. */
    var stringTag$4 = '[object String]';

    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */
    function isString(value) {
      return typeof value == 'string' ||
        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag$4);
    }

    /**
     * The base implementation of `_.values` and `_.valuesIn` which creates an
     * array of `object` property values corresponding to the property names
     * of `props`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} props The property names to get values for.
     * @returns {Object} Returns the array of property values.
     */
    function baseValues(object, props) {
      return arrayMap(props, function(key) {
        return object[key];
      });
    }

    /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */
    function values(object) {
      return object == null ? [] : baseValues(object, keys(object));
    }

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeMax$9 = Math.max;

    /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax$9(length + fromIndex, 0);
      }
      return isString(collection)
        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
    }

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeMax$a = Math.max;

    /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */
    function indexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax$a(length + index, 0);
      }
      return baseIndexOf(array, value, index);
    }

    /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */
    function initial(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 0, -1) : [];
    }

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeMin$6 = Math.min;

    /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */
    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];
        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }
        maxLength = nativeMin$6(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
          ? new SetCache(othIndex && array)
          : undefined;
      }
      array = arrays[0];

      var index = -1,
          seen = caches[0];

      outer:
      while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (!(seen
              ? cacheHas(seen, computed)
              : includes(result, computed, comparator)
            )) {
          othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if (!(cache
                  ? cacheHas(cache, computed)
                  : includes(arrays[othIndex], computed, comparator))
                ) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */
    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }

    /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */
    var intersection = baseRest(function(arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped)
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */
    var intersectionBy = baseRest(function(arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, baseIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */
    var intersectionWith = baseRest(function(arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      comparator = typeof comparator == 'function' ? comparator : undefined;
      if (comparator) {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, undefined, comparator)
        : [];
    });

    /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function(value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }

    /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */
    function createInverter(setter, toIteratee) {
      return function(object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }

    /** Used for built-in method references. */
    var objectProto$n = Object.prototype;

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString$2 = objectProto$n.toString;

    /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */
    var invert = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString$2.call(value);
      }

      result[value] = key;
    }, constant(identity));

    /** Used for built-in method references. */
    var objectProto$o = Object.prototype;

    /** Used to check objects for own properties. */
    var hasOwnProperty$k = objectProto$o.hasOwnProperty;

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString$3 = objectProto$o.toString;

    /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */
    var invertBy = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString$3.call(value);
      }

      if (hasOwnProperty$k.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, baseIteratee);

    /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */
    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }

    /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */
    function baseInvoke(object, path, args) {
      path = castPath(path, object);
      object = parent(object, path);
      var func = object == null ? object : object[toKey(last(path))];
      return func == null ? undefined : apply(func, object, args);
    }

    /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */
    var invoke = baseRest(baseInvoke);

    /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    var invokeMap = baseRest(function(collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value) {
        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });

    var arrayBufferTag$4 = '[object ArrayBuffer]';

    /**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */
    function baseIsArrayBuffer(value) {
      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag$4;
    }

    /* Node.js helper references. */
    var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer;

    /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */
    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

    /** `Object#toString` result references. */
    var boolTag$4 = '[object Boolean]';

    /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        (isObjectLike(value) && baseGetTag(value) == boolTag$4);
    }

    /** `Object#toString` result references. */
    var dateTag$4 = '[object Date]';

    /**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */
    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag$4;
    }

    /* Node.js helper references. */
    var nodeIsDate = nodeUtil && nodeUtil.isDate;

    /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

    /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */
    function isElement(value) {
      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
    }

    /** `Object#toString` result references. */
    var mapTag$7 = '[object Map]',
        setTag$7 = '[object Set]';

    /** Used for built-in method references. */
    var objectProto$p = Object.prototype;

    /** Used to check objects for own properties. */
    var hasOwnProperty$l = objectProto$p.hasOwnProperty;

    /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */
    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) &&
          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag$1(value);
      if (tag == mapTag$7 || tag == setTag$7) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty$l.call(value, key)) {
          return false;
        }
      }
      return true;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }

    /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */
    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
    }

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeIsFinite$1 = root.isFinite;

    /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */
    function isFinite$1(value) {
      return typeof value == 'number' && nativeIsFinite$1(value);
    }

    /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */
    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }

    /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */
    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }

    /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */
    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }

    /** `Object#toString` result references. */
    var numberTag$4 = '[object Number]';

    /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        (isObjectLike(value) && baseGetTag(value) == numberTag$4);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // An `NaN` primitive is the only value that is not equal to itself.
      // Perform the `toStringTag` check first to avoid errors with some
      // ActiveX objects in IE.
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */
    var isMaskable = coreJsData ? isFunction$1 : stubFalse;

    /** Error message constants. */
    var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.';

    /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */
    function isNative(value) {
      if (isMaskable(value)) {
        throw new Error(CORE_ERROR_TEXT);
      }
      return baseIsNative(value);
    }

    /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */
    function isNil(value) {
      return value == null;
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /** `Object#toString` result references. */
    var regexpTag$4 = '[object RegExp]';

    /**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */
    function baseIsRegExp(value) {
      return isObjectLike(value) && baseGetTag(value) == regexpTag$4;
    }

    /* Node.js helper references. */
    var nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;

    /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */
    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

    /** Used as references for various `Number` constants. */
    var MAX_SAFE_INTEGER$2 = 9007199254740991;

    /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */
    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER$2 && value <= MAX_SAFE_INTEGER$2;
    }

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */
    function isUndefined(value) {
      return value === undefined;
    }

    /** `Object#toString` result references. */
    var weakMapTag$3 = '[object WeakMap]';

    /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */
    function isWeakMap(value) {
      return isObjectLike(value) && getTag$1(value) == weakMapTag$3;
    }

    /** `Object#toString` result references. */
    var weakSetTag = '[object WeakSet]';

    /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */
    function isWeakSet(value) {
      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
    }

    /** Used to compose bitmasks for cloning. */
    var CLONE_DEEP_FLAG$4 = 1;

    /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */
    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG$4));
    }

    /** Used for built-in method references. */
    var arrayProto$1 = Array.prototype;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeJoin = arrayProto$1.join;

    /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */
    function join(array, separator) {
      return array == null ? '' : nativeJoin.call(array, separator);
    }

    /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */
    var kebabCase = createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */
    var keyBy = createAggregator(function(result, value, key) {
      baseAssignValue(result, key, value);
    });

    /**
     * A specialized version of `_.lastIndexOf` which performs strict equality
     * comparisons of values, i.e. `===`.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} fromIndex The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function strictLastIndexOf(array, value, fromIndex) {
      var index = fromIndex + 1;
      while (index--) {
        if (array[index] === value) {
          return index;
        }
      }
      return index;
    }

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeMax$b = Math.max,
        nativeMin$7 = Math.min;

    /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = index < 0 ? nativeMax$b(length + index, 0) : nativeMin$7(index, length - 1);
      }
      return value === value
        ? strictLastIndexOf(array, value, index)
        : baseFindIndex(array, baseIsNaN, index, true);
    }

    /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */
    var lowerCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });

    /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */
    var lowerFirst = createCaseFirst('toLowerCase');

    /**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */
    function baseLt(value, other) {
      return value < other;
    }

    /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */
    var lt = createRelationalOperation(baseLt);

    /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */
    var lte = createRelationalOperation(function(value, other) {
      return value <= other;
    });

    /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */
    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = baseIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, iteratee(value, key, object), value);
      });
      return result;
    }

    /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */
    function mapValues(object, iteratee) {
      var result = {};
      iteratee = baseIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, key, iteratee(value, key, object));
      });
      return result;
    }

    /** Used to compose bitmasks for cloning. */
    var CLONE_DEEP_FLAG$5 = 1;

    /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matches(source) {
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG$5));
    }

    /** Used to compose bitmasks for cloning. */
    var CLONE_DEEP_FLAG$6 = 1;

    /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     */
    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG$6));
    }

    /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */
    function baseExtremum(array, iteratee, comparator) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index],
            current = iteratee(value);

        if (current != null && (computed === undefined
              ? (current === current && !isSymbol(current))
              : comparator(current, computed)
            )) {
          var computed = current,
              result = value;
        }
      }
      return result;
    }

    /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */
    function max(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseGt)
        : undefined;
    }

    /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */
    function maxBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, baseIteratee(iteratee, 2), baseGt)
        : undefined;
    }

    /**
     * The base implementation of `_.sum` and `_.sumBy` without support for
     * iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {number} Returns the sum.
     */
    function baseSum(array, iteratee) {
      var result,
          index = -1,
          length = array.length;

      while (++index < length) {
        var current = iteratee(array[index]);
        if (current !== undefined) {
          result = result === undefined ? current : (result + current);
        }
      }
      return result;
    }

    /** Used as references for various `Number` constants. */
    var NAN$2 = 0 / 0;

    /**
     * The base implementation of `_.mean` and `_.meanBy` without support for
     * iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {number} Returns the mean.
     */
    function baseMean(array, iteratee) {
      var length = array == null ? 0 : array.length;
      return length ? (baseSum(array, iteratee) / length) : NAN$2;
    }

    /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */
    function mean(array) {
      return baseMean(array, identity);
    }

    /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */
    function meanBy(array, iteratee) {
      return baseMean(array, baseIteratee(iteratee, 2));
    }

    /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */
    var merge = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });

    /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */
    var method = baseRest(function(path, args) {
      return function(object) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */
    var methodOf = baseRest(function(object, args) {
      return function(path) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */
    function min(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseLt)
        : undefined;
    }

    /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */
    function minBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, baseIteratee(iteratee, 2), baseLt)
        : undefined;
    }

    /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */
    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction$1(object);

      arrayEach(methodNames, function(methodName) {
        var func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = function() {
            var chainAll = this.__chain__;
            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);

              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
              result.__chain__ = chainAll;
              return result;
            }
            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });

      return object;
    }

    /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */
    var multiply = createMathOperation(function(multiplier, multiplicand) {
      return multiplier * multiplicand;
    }, 1);

    /** Error message constants. */
    var FUNC_ERROR_TEXT$8 = 'Expected a function';

    /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */
    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT$8);
      }
      return function() {
        var args = arguments;
        switch (args.length) {
          case 0: return !predicate.call(this);
          case 1: return !predicate.call(this, args[0]);
          case 2: return !predicate.call(this, args[0], args[1]);
          case 3: return !predicate.call(this, args[0], args[1], args[2]);
        }
        return !predicate.apply(this, args);
      };
    }

    /**
     * Converts `iterator` to an array.
     *
     * @private
     * @param {Object} iterator The iterator to convert.
     * @returns {Array} Returns the converted array.
     */
    function iteratorToArray(iterator) {
      var data,
          result = [];

      while (!(data = iterator.next()).done) {
        result.push(data.value);
      }
      return result;
    }

    /** `Object#toString` result references. */
    var mapTag$8 = '[object Map]',
        setTag$8 = '[object Set]';

    /** Built-in value references. */
    var symIterator = Symbol$1 ? Symbol$1.iterator : undefined;

    /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */
    function toArray(value) {
      if (!value) {
        return [];
      }
      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }
      if (symIterator && value[symIterator]) {
        return iteratorToArray(value[symIterator]());
      }
      var tag = getTag$1(value),
          func = tag == mapTag$8 ? mapToArray : (tag == setTag$8 ? setToArray : values);

      return func(value);
    }

    /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */
    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }
      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];

      return { 'done': done, 'value': value };
    }

    /**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */
    function baseNth(array, n) {
      var length = array.length;
      if (!length) {
        return;
      }
      n += n < 0 ? length : 0;
      return isIndex(n, length) ? array[n] : undefined;
    }

    /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */
    function nth(array, n) {
      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
    }

    /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */
    function nthArg(n) {
      n = toInteger(n);
      return baseRest(function(args) {
        return baseNth(args, n);
      });
    }

    /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */
    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }

    /**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */
    function customOmitClone(value) {
      return isPlainObject(value) ? undefined : value;
    }

    /** Used to compose bitmasks for cloning. */
    var CLONE_DEEP_FLAG$7 = 1,
        CLONE_FLAT_FLAG$1 = 2,
        CLONE_SYMBOLS_FLAG$5 = 4;

    /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */
    var omit = flatRest(function(object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG$7 | CLONE_FLAT_FLAG$1 | CLONE_SYMBOLS_FLAG$5, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });

    /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseSet(object, path, value, customizer) {
      if (!isObject(object)) {
        return object;
      }
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = toKey(path[index]),
            newValue = value;

        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : undefined;
          if (newValue === undefined) {
            newValue = isObject(objValue)
              ? objValue
              : (isIndex(path[index + 1]) ? [] : {});
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object;
    }

    /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */
    function basePickBy(object, paths, predicate) {
      var index = -1,
          length = paths.length,
          result = {};

      while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
          baseSet(result, castPath(path, object), value);
        }
      }
      return result;
    }

    /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */
    function pickBy(object, predicate) {
      if (object == null) {
        return {};
      }
      var props = arrayMap(getAllKeysIn(object), function(prop) {
        return [prop];
      });
      predicate = baseIteratee(predicate);
      return basePickBy(object, props, function(value, path) {
        return predicate(value, path[0]);
      });
    }

    /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */
    function omitBy(object, predicate) {
      return pickBy(object, negate(baseIteratee(predicate)));
    }

    /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */
    function once(func) {
      return before(2, func);
    }

    /**
     * The base implementation of `_.sortBy` which uses `comparer` to define the
     * sort order of `array` and replaces criteria objects with their corresponding
     * values.
     *
     * @private
     * @param {Array} array The array to sort.
     * @param {Function} comparer The function to define sort order.
     * @returns {Array} Returns `array`.
     */
    function baseSortBy(array, comparer) {
      var length = array.length;

      array.sort(comparer);
      while (length--) {
        array[length] = array[length].value;
      }
      return array;
    }

    /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== undefined,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);

        var othIsDefined = other !== undefined,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);

        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
            (valIsNull && othIsDefined && othIsReflexive) ||
            (!valIsDefined && othIsReflexive) ||
            !valIsReflexive) {
          return 1;
        }
        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
            (othIsNull && valIsDefined && valIsReflexive) ||
            (!othIsDefined && valIsReflexive) ||
            !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }

    /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */
    function compareMultiple(object, other, orders) {
      var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;

      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == 'desc' ? -1 : 1);
        }
      }
      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
      // that causes it, under certain circumstances, to provide the same value for
      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
      // for more details.
      //
      // This also ensures a stable sort in V8 and other engines.
      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
      return object.index - other.index;
    }

    /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */
    function baseOrderBy(collection, iteratees, orders) {
      var index = -1;
      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));

      var result = baseMap(collection, function(value, key, collection) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */
    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      orders = guard ? undefined : orders;
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseOrderBy(collection, iteratees, orders);
    }

    /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */
    function createOver(arrayFunc) {
      return flatRest(function(iteratees) {
        iteratees = arrayMap(iteratees, baseUnary(baseIteratee));
        return baseRest(function(args) {
          var thisArg = this;
          return arrayFunc(iteratees, function(iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }

    /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */
    var over = createOver(arrayMap);

    /**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    var castRest = baseRest;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeMin$8 = Math.min;

    /**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */
    var overArgs = castRest(function(func, transforms) {
      transforms = (transforms.length == 1 && isArray(transforms[0]))
        ? arrayMap(transforms[0], baseUnary(baseIteratee))
        : arrayMap(baseFlatten(transforms, 1), baseUnary(baseIteratee));

      var funcsLength = transforms.length;
      return baseRest(function(args) {
        var index = -1,
            length = nativeMin$8(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }
        return apply(func, this, args);
      });
    });

    /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */
    var overEvery = createOver(arrayEvery);

    /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     */
    var overSome = createOver(arraySome);

    /** Used as references for various `Number` constants. */
    var MAX_SAFE_INTEGER$3 = 9007199254740991;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeFloor = Math.floor;

    /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */
    function baseRepeat(string, n) {
      var result = '';
      if (!string || n < 1 || n > MAX_SAFE_INTEGER$3) {
        return result;
      }
      // Leverage the exponentiation by squaring algorithm for a faster repeat.
      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        if (n) {
          string += string;
        }
      } while (n);

      return result;
    }

    /**
     * Gets the size of an ASCII `string`.
     *
     * @private
     * @param {string} string The string inspect.
     * @returns {number} Returns the string size.
     */
    var asciiSize = baseProperty('length');

    /** Used to compose unicode character classes. */
    var rsAstralRange$3 = '\\ud800-\\udfff',
        rsComboMarksRange$4 = '\\u0300-\\u036f',
        reComboHalfMarksRange$4 = '\\ufe20-\\ufe2f',
        rsComboSymbolsRange$4 = '\\u20d0-\\u20ff',
        rsComboRange$4 = rsComboMarksRange$4 + reComboHalfMarksRange$4 + rsComboSymbolsRange$4,
        rsVarRange$3 = '\\ufe0e\\ufe0f';

    /** Used to compose unicode capture groups. */
    var rsAstral$1 = '[' + rsAstralRange$3 + ']',
        rsCombo$3 = '[' + rsComboRange$4 + ']',
        rsFitz$2 = '\\ud83c[\\udffb-\\udfff]',
        rsModifier$2 = '(?:' + rsCombo$3 + '|' + rsFitz$2 + ')',
        rsNonAstral$2 = '[^' + rsAstralRange$3 + ']',
        rsRegional$2 = '(?:\\ud83c[\\udde6-\\uddff]){2}',
        rsSurrPair$2 = '[\\ud800-\\udbff][\\udc00-\\udfff]',
        rsZWJ$3 = '\\u200d';

    /** Used to compose unicode regexes. */
    var reOptMod$2 = rsModifier$2 + '?',
        rsOptVar$2 = '[' + rsVarRange$3 + ']?',
        rsOptJoin$2 = '(?:' + rsZWJ$3 + '(?:' + [rsNonAstral$2, rsRegional$2, rsSurrPair$2].join('|') + ')' + rsOptVar$2 + reOptMod$2 + ')*',
        rsSeq$2 = rsOptVar$2 + reOptMod$2 + rsOptJoin$2,
        rsSymbol$1 = '(?:' + [rsNonAstral$2 + rsCombo$3 + '?', rsCombo$3, rsRegional$2, rsSurrPair$2, rsAstral$1].join('|') + ')';

    /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
    var reUnicode$1 = RegExp(rsFitz$2 + '(?=' + rsFitz$2 + ')|' + rsSymbol$1 + rsSeq$2, 'g');

    /**
     * Gets the size of a Unicode `string`.
     *
     * @private
     * @param {string} string The string inspect.
     * @returns {number} Returns the string size.
     */
    function unicodeSize(string) {
      var result = reUnicode$1.lastIndex = 0;
      while (reUnicode$1.test(string)) {
        ++result;
      }
      return result;
    }

    /**
     * Gets the number of symbols in `string`.
     *
     * @private
     * @param {string} string The string to inspect.
     * @returns {number} Returns the string size.
     */
    function stringSize(string) {
      return hasUnicode(string)
        ? unicodeSize(string)
        : asciiSize(string);
    }

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil$1 = Math.ceil;

    /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */
    function createPadding(length, chars) {
      chars = chars === undefined ? ' ' : baseToString(chars);

      var charsLength = chars.length;
      if (charsLength < 2) {
        return charsLength ? baseRepeat(chars, length) : chars;
      }
      var result = baseRepeat(chars, nativeCeil$1(length / stringSize(chars)));
      return hasUnicode(chars)
        ? castSlice(stringToArray(result), 0, length).join('')
        : result.slice(0, length);
    }

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil$2 = Math.ceil,
        nativeFloor$1 = Math.floor;

    /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */
    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      if (!length || strLength >= length) {
        return string;
      }
      var mid = (length - strLength) / 2;
      return (
        createPadding(nativeFloor$1(mid), chars) +
        string +
        createPadding(nativeCeil$2(mid), chars)
      );
    }

    /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */
    function padEnd(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (string + createPadding(length - strLength, chars))
        : string;
    }

    /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */
    function padStart(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (createPadding(length - strLength, chars) + string)
        : string;
    }

    /** Used to match leading and trailing whitespace. */
    var reTrimStart = /^\s+/;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeParseInt = root.parseInt;

    /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */
    function parseInt$1(string, radix, guard) {
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
    }

    /** Used to compose bitmasks for function metadata. */
    var WRAP_PARTIAL_FLAG$6 = 32;

    /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */
    var partial = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partial));
      return createWrap(func, WRAP_PARTIAL_FLAG$6, undefined, partials, holders);
    });

    // Assign default placeholders.
    partial.placeholder = {};

    /** Used to compose bitmasks for function metadata. */
    var WRAP_PARTIAL_RIGHT_FLAG$3 = 64;

    /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */
    var partialRight = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partialRight));
      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG$3, undefined, partials, holders);
    });

    // Assign default placeholders.
    partialRight.placeholder = {};

    /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */
    var partition = createAggregator(function(result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function() { return [[], []]; });

    /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */
    function basePick(object, paths) {
      return basePickBy(object, paths, function(value, path) {
        return hasIn(object, path);
      });
    }

    /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */
    var pick = flatRest(function(object, paths) {
      return object == null ? {} : basePick(object, paths);
    });

    /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */
    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */
    function propertyOf(object) {
      return function(path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }

    /**
     * This function is like `baseIndexOf` except that it accepts a comparator.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} fromIndex The index to search from.
     * @param {Function} comparator The comparator invoked per element.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function baseIndexOfWith(array, value, fromIndex, comparator) {
      var index = fromIndex - 1,
          length = array.length;

      while (++index < length) {
        if (comparator(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /** Used for built-in method references. */
    var arrayProto$2 = Array.prototype;

    /** Built-in value references. */
    var splice$1 = arrayProto$2.splice;

    /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */
    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (array === values) {
        values = copyArray(values);
      }
      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }
      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice$1.call(seen, fromIndex, 1);
          }
          splice$1.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */
    function pullAll(array, values) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values)
        : array;
    }

    /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */
    var pull = baseRest(pullAll);

    /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */
    function pullAllBy(array, values, iteratee) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, baseIteratee(iteratee, 2))
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */
    function pullAllWith(array, values, comparator) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, undefined, comparator)
        : array;
    }

    /** Used for built-in method references. */
    var arrayProto$3 = Array.prototype;

    /** Built-in value references. */
    var splice$2 = arrayProto$3.splice;

    /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */
    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];
        if (length == lastIndex || index !== previous) {
          var previous = index;
          if (isIndex(index)) {
            splice$2.call(array, index, 1);
          } else {
            baseUnset(array, index);
          }
        }
      }
      return array;
    }

    /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */
    var pullAt = flatRest(function(array, indexes) {
      var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);

      basePullAt(array, arrayMap(indexes, function(index) {
        return isIndex(index, length) ? +index : index;
      }).sort(compareAscending));

      return result;
    });

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeFloor$2 = Math.floor,
        nativeRandom = Math.random;

    /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */
    function baseRandom(lower, upper) {
      return lower + nativeFloor$2(nativeRandom() * (upper - lower + 1));
    }

    /** Built-in method references without a dependency on `root`. */
    var freeParseFloat = parseFloat;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeMin$9 = Math.min,
        nativeRandom$1 = Math.random;

    /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }
      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        }
        else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }
      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      }
      else {
        lower = toFinite(lower);
        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toFinite(upper);
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom$1();
        return nativeMin$9(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
      }
      return baseRandom(lower, upper);
    }

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil$3 = Math.ceil,
        nativeMax$c = Math.max;

    /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */
    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax$c(nativeCeil$3((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }

    /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */
    function createRange(fromRight) {
      return function(start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        }
        // Ensure the sign of `-0` is preserved.
        start = toFinite(start);
        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
        return baseRange(start, end, step, fromRight);
      };
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    var range = createRange();

    /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */
    var rangeRight = createRange(true);

    /** Used to compose bitmasks for function metadata. */
    var WRAP_REARG_FLAG$3 = 256;

    /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */
    var rearg = flatRest(function(func, indexes) {
      return createWrap(func, WRAP_REARG_FLAG$3, undefined, undefined, undefined, indexes);
    });

    /**
     * The base implementation of `_.reduce` and `_.reduceRight`, without support
     * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {*} accumulator The initial value.
     * @param {boolean} initAccum Specify using the first or last element of
     *  `collection` as the initial value.
     * @param {Function} eachFunc The function to iterate over `collection`.
     * @returns {*} Returns the accumulated value.
     */
    function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
      eachFunc(collection, function(value, index, collection) {
        accumulator = initAccum
          ? (initAccum = false, value)
          : iteratee(accumulator, value, index, collection);
      });
      return accumulator;
    }

    /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */
    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }

    /**
     * A specialized version of `_.reduceRight` for arrays without support for
     * iteratee shorthands.
     *
     * @private
     * @param {Array} [array] The array to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @param {boolean} [initAccum] Specify using the last element of `array` as
     *  the initial value.
     * @returns {*} Returns the accumulated value.
     */
    function arrayReduceRight(array, iteratee, accumulator, initAccum) {
      var length = array == null ? 0 : array.length;
      if (initAccum && length) {
        accumulator = array[--length];
      }
      while (length--) {
        accumulator = iteratee(accumulator, array[length], length, array);
      }
      return accumulator;
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }

    /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */
    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, negate(baseIteratee(predicate, 3)));
    }

    /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */
    function remove(array, predicate) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = baseIteratee(predicate, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */
    function repeat(string, n, guard) {
      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      return baseRepeat(toString(string), n);
    }

    /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */
    function replace() {
      var args = arguments,
          string = toString(args[0]);

      return args.length < 3 ? string : string.replace(args[1], args[2]);
    }

    /** Error message constants. */
    var FUNC_ERROR_TEXT$9 = 'Expected a function';

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */
    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT$9);
      }
      start = start === undefined ? start : toInteger(start);
      return baseRest(func, start);
    }

    /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */
    function result(object, path, defaultValue) {
      path = castPath(path, object);

      var index = -1,
          length = path.length;

      // Ensure the loop is entered when path is empty.
      if (!length) {
        length = 1;
        object = undefined;
      }
      while (++index < length) {
        var value = object == null ? undefined : object[toKey(path[index])];
        if (value === undefined) {
          index = length;
          value = defaultValue;
        }
        object = isFunction$1(value) ? value.call(object) : value;
      }
      return object;
    }

    /** Used for built-in method references. */
    var arrayProto$4 = Array.prototype;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeReverse = arrayProto$4.reverse;

    /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function reverse(array) {
      return array == null ? array : nativeReverse.call(array);
    }

    /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */
    var round = createRound('round');

    /**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */
    function arraySample(array) {
      var length = array.length;
      return length ? array[baseRandom(0, length - 1)] : undefined;
    }

    /**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */
    function baseSample(collection) {
      return arraySample(values(collection));
    }

    /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */
    function sample(collection) {
      var func = isArray(collection) ? arraySample : baseSample;
      return func(collection);
    }

    /**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */
    function shuffleSelf(array, size) {
      var index = -1,
          length = array.length,
          lastIndex = length - 1;

      size = size === undefined ? length : size;
      while (++index < size) {
        var rand = baseRandom(index, lastIndex),
            value = array[rand];

        array[rand] = array[index];
        array[index] = value;
      }
      array.length = size;
      return array;
    }

    /**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function arraySampleSize(array, n) {
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
    }

    /**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function baseSampleSize(collection, n) {
      var array = values(collection);
      return shuffleSelf(array, baseClamp(n, 0, array.length));
    }

    /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */
    function sampleSize(collection, n, guard) {
      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
      return func(collection, n);
    }

    /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */
    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }

    /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */
    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }

    /**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function arrayShuffle(array) {
      return shuffleSelf(copyArray(array));
    }

    /**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function baseShuffle(collection) {
      return shuffleSelf(values(collection));
    }

    /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */
    function shuffle(collection) {
      var func = isArray(collection) ? arrayShuffle : baseShuffle;
      return func(collection);
    }

    /** `Object#toString` result references. */
    var mapTag$9 = '[object Map]',
        setTag$9 = '[object Set]';

    /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      if (collection == null) {
        return 0;
      }
      if (isArrayLike(collection)) {
        return isString(collection) ? stringSize(collection) : collection.length;
      }
      var tag = getTag$1(collection);
      if (tag == mapTag$9 || tag == setTag$9) {
        return collection.size;
      }
      return baseKeys(collection).length;
    }

    /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function slice(array, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      }
      else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }
      return baseSlice(array, start, end);
    }

    /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */
    var snakeCase = createCompounder(function(result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */
    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */
    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, baseIteratee(predicate, 3));
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
     */
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });

    /** Used as references for the maximum length and index of an array. */
    var MAX_ARRAY_LENGTH$2 = 4294967295,
        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH$2 - 1;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeFloor$3 = Math.floor,
        nativeMin$a = Math.min;

    /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      value = iteratee(value);

      var low = 0,
          high = array == null ? 0 : array.length,
          valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined;

      while (low < high) {
        var mid = nativeFloor$3((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);

        if (valIsNaN) {
          var setLow = retHighest || othIsReflexive;
        } else if (valIsUndefined) {
          setLow = othIsReflexive && (retHighest || othIsDefined);
        } else if (valIsNull) {
          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
        } else if (valIsSymbol) {
          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
        } else if (othIsNull || othIsSymbol) {
          setLow = false;
        } else {
          setLow = retHighest ? (computed <= value) : (computed < value);
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin$a(high, MAX_ARRAY_INDEX);
    }

    /** Used as references for the maximum length and index of an array. */
    var MAX_ARRAY_LENGTH$3 = 4294967295,
        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH$3 >>> 1;

    /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array == null ? low : array.length;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = (low + high) >>> 1,
              computed = array[mid];

          if (computed !== null && !isSymbol(computed) &&
              (retHighest ? (computed <= value) : (computed < value))) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return baseSortedIndexBy(array, value, identity, retHighest);
    }

    /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */
    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }

    /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */
    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, baseIteratee(iteratee, 2));
    }

    /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */
    function sortedIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value);
        if (index < length && eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */
    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }

    /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */
    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, baseIteratee(iteratee, 2), true);
    }

    /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */
    function sortedLastIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;
        if (eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseSortedUniq(array, iteratee) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!index || !eq(computed, seen)) {
          var seen = computed;
          result[resIndex++] = value === 0 ? 0 : value;
        }
      }
      return result;
    }

    /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */
    function sortedUniq(array) {
      return (array && array.length)
        ? baseSortedUniq(array)
        : [];
    }

    /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */
    function sortedUniqBy(array, iteratee) {
      return (array && array.length)
        ? baseSortedUniq(array, baseIteratee(iteratee, 2))
        : [];
    }

    /** Used as references for the maximum length and index of an array. */
    var MAX_ARRAY_LENGTH$4 = 4294967295;

    /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */
    function split(string, separator, limit) {
      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
        separator = limit = undefined;
      }
      limit = limit === undefined ? MAX_ARRAY_LENGTH$4 : limit >>> 0;
      if (!limit) {
        return [];
      }
      string = toString(string);
      if (string && (
            typeof separator == 'string' ||
            (separator != null && !isRegExp(separator))
          )) {
        separator = baseToString(separator);
        if (!separator && hasUnicode(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }
      return string.split(separator, limit);
    }

    /** Error message constants. */
    var FUNC_ERROR_TEXT$a = 'Expected a function';

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeMax$d = Math.max;

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */
    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT$a);
      }
      start = start == null ? 0 : nativeMax$d(toInteger(start), 0);
      return baseRest(function(args) {
        var array = args[start],
            otherArgs = castSlice(args, 0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }
        return apply(func, this, otherArgs);
      });
    }

    /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + upperFirst(word);
    });

    /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */
    function startsWith(string, target, position) {
      string = toString(string);
      position = position == null
        ? 0
        : baseClamp(toInteger(position), 0, string.length);

      target = baseToString(target);
      return string.slice(position, position + target.length) == target;
    }

    /**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */
    function stubObject() {
      return {};
    }

    /**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */
    function stubString() {
      return '';
    }

    /**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */
    function stubTrue() {
      return true;
    }

    /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */
    var subtract = createMathOperation(function(minuend, subtrahend) {
      return minuend - subtrahend;
    }, 0);

    /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */
    function sum(array) {
      return (array && array.length)
        ? baseSum(array, identity)
        : 0;
    }

    /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */
    function sumBy(array, iteratee) {
      return (array && array.length)
        ? baseSum(array, baseIteratee(iteratee, 2))
        : 0;
    }

    /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */
    function tail(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 1, length) : [];
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */
    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */
    function takeRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */
    function takeRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, baseIteratee(predicate, 3), false, true)
        : [];
    }

    /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */
    function takeWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, baseIteratee(predicate, 3))
        : [];
    }

    /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /** Used for built-in method references. */
    var objectProto$q = Object.prototype;

    /** Used to check objects for own properties. */
    var hasOwnProperty$m = objectProto$q.hasOwnProperty;

    /**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsAssignIn(objValue, srcValue, key, object) {
      if (objValue === undefined ||
          (eq(objValue, objectProto$q[key]) && !hasOwnProperty$m.call(object, key))) {
        return srcValue;
      }
      return objValue;
    }

    /** Used to escape characters for inclusion in compiled string literals. */
    var stringEscapes = {
      '\\': '\\',
      "'": "'",
      '\n': 'n',
      '\r': 'r',
      '\u2028': 'u2028',
      '\u2029': 'u2029'
    };

    /**
     * Used by `_.template` to escape characters for inclusion in compiled string literals.
     *
     * @private
     * @param {string} chr The matched character to escape.
     * @returns {string} Returns the escaped character.
     */
    function escapeStringChar(chr) {
      return '\\' + stringEscapes[chr];
    }

    /** Used to match template delimiters. */
    var reInterpolate = /<%=([\s\S]+?)%>/g;

    /** Used to match template delimiters. */
    var reEscape = /<%-([\s\S]+?)%>/g;

    /** Used to match template delimiters. */
    var reEvaluate = /<%([\s\S]+?)%>/g;

    /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */
    var templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'escape': reEscape,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'evaluate': reEvaluate,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */
        '_': { 'escape': escape$1 }
      }
    };

    /** Used to match empty string literals in compiled template source. */
    var reEmptyStringLeading = /\b__p \+= '';/g,
        reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
        reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

    /**
     * Used to match
     * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
     */
    var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

    /** Used to ensure capturing order of template delimiters. */
    var reNoMatch = /($^)/;

    /** Used to match unescaped characters in compiled string literals. */
    var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

    /** Used for built-in method references. */
    var objectProto$r = Object.prototype;

    /** Used to check objects for own properties. */
    var hasOwnProperty$n = objectProto$r.hasOwnProperty;

    /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(string, options, guard) {
      // Based on John Resig's `tmpl` implementation
      // (http://ejohn.org/blog/javascript-micro-templating/)
      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
      var settings = templateSettings.imports._.templateSettings || templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      string = toString(string);
      options = assignInWith({}, options, settings, customDefaultsAssignIn);

      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // Compile the regexp to match each delimiter.
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      // Use a sourceURL for easier debugging.
      // The sourceURL gets injected into the source that's eval-ed, so be careful
      // with lookup (in case of e.g. prototype pollution), and strip newlines if any.
      // A newline wouldn't be a valid sourceURL anyway, and it'd enable code injection.
      var sourceURL = hasOwnProperty$n.call(options, 'sourceURL')
        ? ('//# sourceURL=' +
           (options.sourceURL + '').replace(/[\r\n]/g, ' ') +
           '\n')
        : '';

      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // Escape characters that can't be included in string literals.
        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // Replace delimiters with snippets.
        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // The JS engine embedded in Adobe products needs `match` returned in
        // order to produce the correct `offset` value.
        return match;
      });

      source += "';\n";

      // If `variable` is not specified wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain.
      // Like with sourceURL, we take care to not check the option's prototype,
      // as this configuration is a code injection vector.
      var variable = hasOwnProperty$n.call(options, 'variable') && options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }
      // Cleanup code by stripping empty strings.
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // Frame code as the function body.
      source = 'function(' + (variable || 'obj') + ') {\n' +
        (variable
          ? ''
          : 'obj || (obj = {});\n'
        ) +
        "var __t, __p = ''" +
        (isEscaping
           ? ', __e = _.escape'
           : ''
        ) +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      var result = attempt(function() {
        return Function(importsKeys, sourceURL + 'return ' + source)
          .apply(undefined, importsValues);
      });

      // Provide the compiled function's source by its `toString` method or
      // the `source` property as a convenience for inlining compiled templates.
      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    /** Error message constants. */
    var FUNC_ERROR_TEXT$b = 'Expected a function';

    /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT$b);
      }
      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }

    /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */
    function thru(value, interceptor) {
      return interceptor(value);
    }

    /** Used as references for various `Number` constants. */
    var MAX_SAFE_INTEGER$4 = 9007199254740991;

    /** Used as references for the maximum length and index of an array. */
    var MAX_ARRAY_LENGTH$5 = 4294967295;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeMin$b = Math.min;

    /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */
    function times(n, iteratee) {
      n = toInteger(n);
      if (n < 1 || n > MAX_SAFE_INTEGER$4) {
        return [];
      }
      var index = MAX_ARRAY_LENGTH$5,
          length = nativeMin$b(n, MAX_ARRAY_LENGTH$5);

      iteratee = castFunction(iteratee);
      n -= MAX_ARRAY_LENGTH$5;

      var result = baseTimes(length, iteratee);
      while (++index < n) {
        iteratee(index);
      }
      return result;
    }

    /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */
    function wrapperToIterator() {
      return this;
    }

    /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */
    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      return arrayReduce(actions, function(result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }

    /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */
    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */
    function toLower(value) {
      return toString(value).toLowerCase();
    }

    /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */
    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }

    /** Used as references for various `Number` constants. */
    var MAX_SAFE_INTEGER$5 = 9007199254740991;

    /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */
    function toSafeInteger(value) {
      return value
        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER$5, MAX_SAFE_INTEGER$5)
        : (value === 0 ? value : 0);
    }

    /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */
    function toUpper(value) {
      return toString(value).toUpperCase();
    }

    /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */
    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

      iteratee = baseIteratee(iteratee, 4);
      if (accumulator == null) {
        var Ctor = object && object.constructor;
        if (isArrLike) {
          accumulator = isArr ? new Ctor : [];
        }
        else if (isObject(object)) {
          accumulator = isFunction$1(Ctor) ? baseCreate(getPrototype(object)) : {};
        }
        else {
          accumulator = {};
        }
      }
      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    /**
     * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
     * that is not found in the character symbols.
     *
     * @private
     * @param {Array} strSymbols The string symbols to inspect.
     * @param {Array} chrSymbols The character symbols to find.
     * @returns {number} Returns the index of the last unmatched string symbol.
     */
    function charsEndIndex(strSymbols, chrSymbols) {
      var index = strSymbols.length;

      while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
      return index;
    }

    /**
     * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
     * that is not found in the character symbols.
     *
     * @private
     * @param {Array} strSymbols The string symbols to inspect.
     * @param {Array} chrSymbols The character symbols to find.
     * @returns {number} Returns the index of the first unmatched string symbol.
     */
    function charsStartIndex(strSymbols, chrSymbols) {
      var index = -1,
          length = strSymbols.length;

      while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
      return index;
    }

    /** Used to match leading and trailing whitespace. */
    var reTrim$1 = /^\s+|\s+$/g;

    /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */
    function trim(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrim$1, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;

      return castSlice(strSymbols, start, end).join('');
    }

    /** Used to match leading and trailing whitespace. */
    var reTrimEnd = /\s+$/;

    /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */
    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimEnd, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

      return castSlice(strSymbols, 0, end).join('');
    }

    /** Used to match leading and trailing whitespace. */
    var reTrimStart$1 = /^\s+/;

    /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */
    function trimStart(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimStart$1, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));

      return castSlice(strSymbols, start).join('');
    }

    /** Used as default options for `_.truncate`. */
    var DEFAULT_TRUNC_LENGTH = 30,
        DEFAULT_TRUNC_OMISSION = '...';

    /** Used to match `RegExp` flags from their coerced string values. */
    var reFlags$1 = /\w*$/;

    /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */
    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? baseToString(options.omission) : omission;
      }
      string = toString(string);

      var strLength = string.length;
      if (hasUnicode(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols
        ? castSlice(strSymbols, 0, end).join('')
        : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }
      if (strSymbols) {
        end += (result.length - end);
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags$1.exec(separator)) + 'g');
          }
          separator.lastIndex = 0;
          while ((match = separator.exec(substring))) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */
    function unary(func) {
      return ary(func, 1);
    }

    /** Used to map HTML entities to characters. */
    var htmlUnescapes = {
      '&amp;': '&',
      '&lt;': '<',
      '&gt;': '>',
      '&quot;': '"',
      '&#39;': "'"
    };

    /**
     * Used by `_.unescape` to convert HTML entities to characters.
     *
     * @private
     * @param {string} chr The matched character to unescape.
     * @returns {string} Returns the unescaped character.
     */
    var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

    /** Used to match HTML entities and HTML characters. */
    var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
        reHasEscapedHtml = RegExp(reEscapedHtml.source);

    /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */
    function unescape$1(string) {
      string = toString(string);
      return (string && reHasEscapedHtml.test(string))
        ? string.replace(reEscapedHtml, unescapeHtmlChar)
        : string;
    }

    /** Used as references for various `Number` constants. */
    var INFINITY$5 = 1 / 0;

    /**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */
    var createSet = !(Set$1 && (1 / setToArray(new Set$1([,-0]))[1]) == INFINITY$5) ? noop : function(values) {
      return new Set$1(values);
    };

    /** Used as the size to enable large array optimizations. */
    var LARGE_ARRAY_SIZE$2 = 200;

    /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      }
      else if (length >= LARGE_ARRAY_SIZE$2) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache;
      }
      else {
        seen = iteratee ? [] : result;
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        }
        else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */
    var union = baseRest(function(arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });

    /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    var unionBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), baseIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var unionWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
    });

    /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */
    function uniq(array) {
      return (array && array.length) ? baseUniq(array) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniqBy(array, iteratee) {
      return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */
    function uniqWith(array, comparator) {
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
    }

    /** Used to generate unique IDs. */
    var idCounter = 0;

    /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }

    /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */
    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeMax$e = Math.max;

    /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */
    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var length = 0;
      array = arrayFilter(array, function(group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax$e(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function(index) {
        return arrayMap(array, baseProperty(index));
      });
    }

    /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */
    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      return arrayMap(result, function(group) {
        return apply(iteratee, undefined, group);
      });
    }

    /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }

    /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */
    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, castFunction(updater));
    }

    /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */
    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
    }

    /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */
    var upperCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });

    /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */
    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn$1(object));
    }

    /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */
    var without = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, values)
        : [];
    });

    /**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */
    function wrap$1(value, wrapper) {
      return partial(castFunction(wrapper), value);
    }

    /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */
    var wrapperAt = flatRest(function(paths) {
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function(object) { return baseAt(object, paths); };

      if (length > 1 || this.__actions__.length ||
          !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }
      value = value.slice(start, +start + (length ? 1 : 0));
      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });
      return new LodashWrapper(value, this.__chain__).thru(function(array) {
        if (length && !array.length) {
          array.push(undefined);
        }
        return array;
      });
    });

    /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */
    function wrapperChain() {
      return chain(this);
    }

    /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function wrapperReverse() {
      var value = this.__wrapped__;
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(reverse);
    }

    /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */
    function baseXor(arrays, iteratee, comparator) {
      var length = arrays.length;
      if (length < 2) {
        return length ? baseUniq(arrays[0]) : [];
      }
      var index = -1,
          result = Array(length);

      while (++index < length) {
        var array = arrays[index],
            othIndex = -1;

        while (++othIndex < length) {
          if (othIndex != index) {
            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
          }
        }
      }
      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
    }

    /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */
    var xor = baseRest(function(arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });

    /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var xorBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), baseIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var xorWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });

    /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */
    var zip = baseRest(unzip);

    /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */
    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        var value = index < valsLength ? values[index] : undefined;
        assignFunc(result, props[index], value);
      }
      return result;
    }

    /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */
    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }

    /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */
    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }

    /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */
    var zipWith = baseRest(function(arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;

      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });

    var array = {
      chunk, compact, concat, difference, differenceBy,
      differenceWith, drop, dropRight, dropRightWhile, dropWhile,
      fill, findIndex, findLastIndex, first: head, flatten,
      flattenDeep, flattenDepth, fromPairs, head, indexOf,
      initial, intersection, intersectionBy, intersectionWith, join,
      last, lastIndexOf, nth, pull, pullAll,
      pullAllBy, pullAllWith, pullAt, remove, reverse,
      slice, sortedIndex, sortedIndexBy, sortedIndexOf, sortedLastIndex,
      sortedLastIndexBy, sortedLastIndexOf, sortedUniq, sortedUniqBy, tail,
      take, takeRight, takeRightWhile, takeWhile, union,
      unionBy, unionWith, uniq, uniqBy, uniqWith,
      unzip, unzipWith, without, xor, xorBy,
      xorWith, zip, zipObject, zipObjectDeep, zipWith
    };

    var collection = {
      countBy, each: forEach, eachRight: forEachRight, every, filter,
      find, findLast, flatMap, flatMapDeep, flatMapDepth,
      forEach, forEachRight, groupBy, includes, invokeMap,
      keyBy, map, orderBy, partition, reduce,
      reduceRight, reject, sample, sampleSize, shuffle,
      size, some, sortBy
    };

    var date = {
      now
    };

    var func = {
      after, ary, before, bind, bindKey,
      curry, curryRight, debounce, defer, delay,
      flip, memoize, negate, once, overArgs,
      partial, partialRight, rearg, rest, spread,
      throttle, unary, wrap: wrap$1
    };

    var lang = {
      castArray, clone, cloneDeep, cloneDeepWith, cloneWith,
      conformsTo, eq, gt, gte, isArguments,
      isArray, isArrayBuffer, isArrayLike, isArrayLikeObject, isBoolean,
      isBuffer, isDate, isElement, isEmpty, isEqual,
      isEqualWith, isError, isFinite: isFinite$1, isFunction: isFunction$1, isInteger,
      isLength, isMap, isMatch, isMatchWith, isNaN,
      isNative, isNil, isNull, isNumber, isObject,
      isObjectLike, isPlainObject, isRegExp, isSafeInteger, isSet,
      isString, isSymbol, isTypedArray, isUndefined, isWeakMap,
      isWeakSet, lt, lte, toArray, toFinite,
      toInteger, toLength, toNumber, toPlainObject, toSafeInteger,
      toString
    };

    var math = {
      add, ceil, divide, floor, max,
      maxBy, mean, meanBy, min, minBy,
      multiply, round, subtract, sum, sumBy
    };

    var number = {
      clamp, inRange, random
    };

    var object = {
      assign, assignIn, assignInWith, assignWith, at,
      create, defaults, defaultsDeep, entries: toPairs, entriesIn: toPairsIn,
      extend: assignIn, extendWith: assignInWith, findKey, findLastKey, forIn,
      forInRight, forOwn, forOwnRight, functions, functionsIn,
      get, has, hasIn, invert, invertBy,
      invoke, keys, keysIn: keysIn$1, mapKeys, mapValues,
      merge, mergeWith, omit, omitBy, pick,
      pickBy, result, set, setWith, toPairs,
      toPairsIn, transform, unset, update, updateWith,
      values, valuesIn
    };

    var seq = {
      at: wrapperAt, chain, commit: wrapperCommit, lodash, next: wrapperNext,
      plant: wrapperPlant, reverse: wrapperReverse, tap, thru, toIterator: wrapperToIterator,
      toJSON: wrapperValue, value: wrapperValue, valueOf: wrapperValue, wrapperChain
    };

    var string = {
      camelCase, capitalize, deburr, endsWith, escape: escape$1,
      escapeRegExp, kebabCase, lowerCase, lowerFirst, pad,
      padEnd, padStart, parseInt: parseInt$1, repeat, replace,
      snakeCase, split, startCase, startsWith, template,
      templateSettings, toLower, toUpper, trim, trimEnd,
      trimStart, truncate, unescape: unescape$1, upperCase, upperFirst,
      words
    };

    var util = {
      attempt, bindAll, cond, conforms, constant,
      defaultTo, flow, flowRight, identity, iteratee,
      matches, matchesProperty, method, methodOf, mixin,
      noop, nthArg, over, overEvery, overSome,
      property, propertyOf, range, rangeRight, stubArray,
      stubFalse, stubObject, stubString, stubTrue, times,
      toPath, uniqueId
    };

    /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */
    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }

    /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */
    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeMax$f = Math.max,
        nativeMin$c = Math.min;

    /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */
    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':      start += size; break;
          case 'dropRight': end -= size; break;
          case 'take':      end = nativeMin$c(end, start + size); break;
          case 'takeRight': start = nativeMax$f(start, end - size); break;
        }
      }
      return { 'start': start, 'end': end };
    }

    /** Used to indicate the type of lazy iteratees. */
    var LAZY_FILTER_FLAG = 1,
        LAZY_MAP_FLAG = 2;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeMin$d = Math.min;

    /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */
    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : (start - 1),
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin$d(length, this.__takeCount__);

      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];

      outer:
      while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    /**
     * @license
     * Lodash (Custom Build) <https://lodash.com/>
     * Build: `lodash modularize exports="es" -o ./`
     * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
     * Released under MIT license <https://lodash.com/license>
     * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
     * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
     */

    /** Used as the semantic version number. */
    var VERSION = '4.17.15';

    /** Used to compose bitmasks for function metadata. */
    var WRAP_BIND_KEY_FLAG$6 = 2;

    /** Used to indicate the type of lazy iteratees. */
    var LAZY_FILTER_FLAG$1 = 1,
        LAZY_WHILE_FLAG = 3;

    /** Used as references for the maximum length and index of an array. */
    var MAX_ARRAY_LENGTH$6 = 4294967295;

    /** Used for built-in method references. */
    var arrayProto$5 = Array.prototype,
        objectProto$s = Object.prototype;

    /** Used to check objects for own properties. */
    var hasOwnProperty$o = objectProto$s.hasOwnProperty;

    /** Built-in value references. */
    var symIterator$1 = Symbol$1 ? Symbol$1.iterator : undefined;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeMax$g = Math.max,
        nativeMin$e = Math.min;

    // wrap `_.mixin` so it works when provided only one argument
    var mixin$1 = (function(func$$1) {
      return function(object$$1, source, options) {
        if (options == null) {
          var isObj = isObject(source),
              props = isObj && keys(source),
              methodNames = props && props.length && baseFunctions(source, props);

          if (!(methodNames ? methodNames.length : isObj)) {
            options = source;
            source = object$$1;
            object$$1 = this;
          }
        }
        return func$$1(object$$1, source, options);
      };
    }(mixin));

    // Add methods that return wrapped values in chain sequences.
    lodash.after = func.after;
    lodash.ary = func.ary;
    lodash.assign = object.assign;
    lodash.assignIn = object.assignIn;
    lodash.assignInWith = object.assignInWith;
    lodash.assignWith = object.assignWith;
    lodash.at = object.at;
    lodash.before = func.before;
    lodash.bind = func.bind;
    lodash.bindAll = util.bindAll;
    lodash.bindKey = func.bindKey;
    lodash.castArray = lang.castArray;
    lodash.chain = seq.chain;
    lodash.chunk = array.chunk;
    lodash.compact = array.compact;
    lodash.concat = array.concat;
    lodash.cond = util.cond;
    lodash.conforms = util.conforms;
    lodash.constant = util.constant;
    lodash.countBy = collection.countBy;
    lodash.create = object.create;
    lodash.curry = func.curry;
    lodash.curryRight = func.curryRight;
    lodash.debounce = func.debounce;
    lodash.defaults = object.defaults;
    lodash.defaultsDeep = object.defaultsDeep;
    lodash.defer = func.defer;
    lodash.delay = func.delay;
    lodash.difference = array.difference;
    lodash.differenceBy = array.differenceBy;
    lodash.differenceWith = array.differenceWith;
    lodash.drop = array.drop;
    lodash.dropRight = array.dropRight;
    lodash.dropRightWhile = array.dropRightWhile;
    lodash.dropWhile = array.dropWhile;
    lodash.fill = array.fill;
    lodash.filter = collection.filter;
    lodash.flatMap = collection.flatMap;
    lodash.flatMapDeep = collection.flatMapDeep;
    lodash.flatMapDepth = collection.flatMapDepth;
    lodash.flatten = array.flatten;
    lodash.flattenDeep = array.flattenDeep;
    lodash.flattenDepth = array.flattenDepth;
    lodash.flip = func.flip;
    lodash.flow = util.flow;
    lodash.flowRight = util.flowRight;
    lodash.fromPairs = array.fromPairs;
    lodash.functions = object.functions;
    lodash.functionsIn = object.functionsIn;
    lodash.groupBy = collection.groupBy;
    lodash.initial = array.initial;
    lodash.intersection = array.intersection;
    lodash.intersectionBy = array.intersectionBy;
    lodash.intersectionWith = array.intersectionWith;
    lodash.invert = object.invert;
    lodash.invertBy = object.invertBy;
    lodash.invokeMap = collection.invokeMap;
    lodash.iteratee = util.iteratee;
    lodash.keyBy = collection.keyBy;
    lodash.keys = keys;
    lodash.keysIn = object.keysIn;
    lodash.map = collection.map;
    lodash.mapKeys = object.mapKeys;
    lodash.mapValues = object.mapValues;
    lodash.matches = util.matches;
    lodash.matchesProperty = util.matchesProperty;
    lodash.memoize = func.memoize;
    lodash.merge = object.merge;
    lodash.mergeWith = object.mergeWith;
    lodash.method = util.method;
    lodash.methodOf = util.methodOf;
    lodash.mixin = mixin$1;
    lodash.negate = negate;
    lodash.nthArg = util.nthArg;
    lodash.omit = object.omit;
    lodash.omitBy = object.omitBy;
    lodash.once = func.once;
    lodash.orderBy = collection.orderBy;
    lodash.over = util.over;
    lodash.overArgs = func.overArgs;
    lodash.overEvery = util.overEvery;
    lodash.overSome = util.overSome;
    lodash.partial = func.partial;
    lodash.partialRight = func.partialRight;
    lodash.partition = collection.partition;
    lodash.pick = object.pick;
    lodash.pickBy = object.pickBy;
    lodash.property = util.property;
    lodash.propertyOf = util.propertyOf;
    lodash.pull = array.pull;
    lodash.pullAll = array.pullAll;
    lodash.pullAllBy = array.pullAllBy;
    lodash.pullAllWith = array.pullAllWith;
    lodash.pullAt = array.pullAt;
    lodash.range = util.range;
    lodash.rangeRight = util.rangeRight;
    lodash.rearg = func.rearg;
    lodash.reject = collection.reject;
    lodash.remove = array.remove;
    lodash.rest = func.rest;
    lodash.reverse = array.reverse;
    lodash.sampleSize = collection.sampleSize;
    lodash.set = object.set;
    lodash.setWith = object.setWith;
    lodash.shuffle = collection.shuffle;
    lodash.slice = array.slice;
    lodash.sortBy = collection.sortBy;
    lodash.sortedUniq = array.sortedUniq;
    lodash.sortedUniqBy = array.sortedUniqBy;
    lodash.split = string.split;
    lodash.spread = func.spread;
    lodash.tail = array.tail;
    lodash.take = array.take;
    lodash.takeRight = array.takeRight;
    lodash.takeRightWhile = array.takeRightWhile;
    lodash.takeWhile = array.takeWhile;
    lodash.tap = seq.tap;
    lodash.throttle = func.throttle;
    lodash.thru = thru;
    lodash.toArray = lang.toArray;
    lodash.toPairs = object.toPairs;
    lodash.toPairsIn = object.toPairsIn;
    lodash.toPath = util.toPath;
    lodash.toPlainObject = lang.toPlainObject;
    lodash.transform = object.transform;
    lodash.unary = func.unary;
    lodash.union = array.union;
    lodash.unionBy = array.unionBy;
    lodash.unionWith = array.unionWith;
    lodash.uniq = array.uniq;
    lodash.uniqBy = array.uniqBy;
    lodash.uniqWith = array.uniqWith;
    lodash.unset = object.unset;
    lodash.unzip = array.unzip;
    lodash.unzipWith = array.unzipWith;
    lodash.update = object.update;
    lodash.updateWith = object.updateWith;
    lodash.values = object.values;
    lodash.valuesIn = object.valuesIn;
    lodash.without = array.without;
    lodash.words = string.words;
    lodash.wrap = func.wrap;
    lodash.xor = array.xor;
    lodash.xorBy = array.xorBy;
    lodash.xorWith = array.xorWith;
    lodash.zip = array.zip;
    lodash.zipObject = array.zipObject;
    lodash.zipObjectDeep = array.zipObjectDeep;
    lodash.zipWith = array.zipWith;

    // Add aliases.
    lodash.entries = object.toPairs;
    lodash.entriesIn = object.toPairsIn;
    lodash.extend = object.assignIn;
    lodash.extendWith = object.assignInWith;

    // Add methods to `lodash.prototype`.
    mixin$1(lodash, lodash);

    // Add methods that return unwrapped values in chain sequences.
    lodash.add = math.add;
    lodash.attempt = util.attempt;
    lodash.camelCase = string.camelCase;
    lodash.capitalize = string.capitalize;
    lodash.ceil = math.ceil;
    lodash.clamp = number.clamp;
    lodash.clone = lang.clone;
    lodash.cloneDeep = lang.cloneDeep;
    lodash.cloneDeepWith = lang.cloneDeepWith;
    lodash.cloneWith = lang.cloneWith;
    lodash.conformsTo = lang.conformsTo;
    lodash.deburr = string.deburr;
    lodash.defaultTo = util.defaultTo;
    lodash.divide = math.divide;
    lodash.endsWith = string.endsWith;
    lodash.eq = lang.eq;
    lodash.escape = string.escape;
    lodash.escapeRegExp = string.escapeRegExp;
    lodash.every = collection.every;
    lodash.find = collection.find;
    lodash.findIndex = array.findIndex;
    lodash.findKey = object.findKey;
    lodash.findLast = collection.findLast;
    lodash.findLastIndex = array.findLastIndex;
    lodash.findLastKey = object.findLastKey;
    lodash.floor = math.floor;
    lodash.forEach = collection.forEach;
    lodash.forEachRight = collection.forEachRight;
    lodash.forIn = object.forIn;
    lodash.forInRight = object.forInRight;
    lodash.forOwn = object.forOwn;
    lodash.forOwnRight = object.forOwnRight;
    lodash.get = object.get;
    lodash.gt = lang.gt;
    lodash.gte = lang.gte;
    lodash.has = object.has;
    lodash.hasIn = object.hasIn;
    lodash.head = array.head;
    lodash.identity = identity;
    lodash.includes = collection.includes;
    lodash.indexOf = array.indexOf;
    lodash.inRange = number.inRange;
    lodash.invoke = object.invoke;
    lodash.isArguments = lang.isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = lang.isArrayBuffer;
    lodash.isArrayLike = lang.isArrayLike;
    lodash.isArrayLikeObject = lang.isArrayLikeObject;
    lodash.isBoolean = lang.isBoolean;
    lodash.isBuffer = lang.isBuffer;
    lodash.isDate = lang.isDate;
    lodash.isElement = lang.isElement;
    lodash.isEmpty = lang.isEmpty;
    lodash.isEqual = lang.isEqual;
    lodash.isEqualWith = lang.isEqualWith;
    lodash.isError = lang.isError;
    lodash.isFinite = lang.isFinite;
    lodash.isFunction = lang.isFunction;
    lodash.isInteger = lang.isInteger;
    lodash.isLength = lang.isLength;
    lodash.isMap = lang.isMap;
    lodash.isMatch = lang.isMatch;
    lodash.isMatchWith = lang.isMatchWith;
    lodash.isNaN = lang.isNaN;
    lodash.isNative = lang.isNative;
    lodash.isNil = lang.isNil;
    lodash.isNull = lang.isNull;
    lodash.isNumber = lang.isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = lang.isObjectLike;
    lodash.isPlainObject = lang.isPlainObject;
    lodash.isRegExp = lang.isRegExp;
    lodash.isSafeInteger = lang.isSafeInteger;
    lodash.isSet = lang.isSet;
    lodash.isString = lang.isString;
    lodash.isSymbol = lang.isSymbol;
    lodash.isTypedArray = lang.isTypedArray;
    lodash.isUndefined = lang.isUndefined;
    lodash.isWeakMap = lang.isWeakMap;
    lodash.isWeakSet = lang.isWeakSet;
    lodash.join = array.join;
    lodash.kebabCase = string.kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = array.lastIndexOf;
    lodash.lowerCase = string.lowerCase;
    lodash.lowerFirst = string.lowerFirst;
    lodash.lt = lang.lt;
    lodash.lte = lang.lte;
    lodash.max = math.max;
    lodash.maxBy = math.maxBy;
    lodash.mean = math.mean;
    lodash.meanBy = math.meanBy;
    lodash.min = math.min;
    lodash.minBy = math.minBy;
    lodash.stubArray = util.stubArray;
    lodash.stubFalse = util.stubFalse;
    lodash.stubObject = util.stubObject;
    lodash.stubString = util.stubString;
    lodash.stubTrue = util.stubTrue;
    lodash.multiply = math.multiply;
    lodash.nth = array.nth;
    lodash.noop = util.noop;
    lodash.now = date.now;
    lodash.pad = string.pad;
    lodash.padEnd = string.padEnd;
    lodash.padStart = string.padStart;
    lodash.parseInt = string.parseInt;
    lodash.random = number.random;
    lodash.reduce = collection.reduce;
    lodash.reduceRight = collection.reduceRight;
    lodash.repeat = string.repeat;
    lodash.replace = string.replace;
    lodash.result = object.result;
    lodash.round = math.round;
    lodash.sample = collection.sample;
    lodash.size = collection.size;
    lodash.snakeCase = string.snakeCase;
    lodash.some = collection.some;
    lodash.sortedIndex = array.sortedIndex;
    lodash.sortedIndexBy = array.sortedIndexBy;
    lodash.sortedIndexOf = array.sortedIndexOf;
    lodash.sortedLastIndex = array.sortedLastIndex;
    lodash.sortedLastIndexBy = array.sortedLastIndexBy;
    lodash.sortedLastIndexOf = array.sortedLastIndexOf;
    lodash.startCase = string.startCase;
    lodash.startsWith = string.startsWith;
    lodash.subtract = math.subtract;
    lodash.sum = math.sum;
    lodash.sumBy = math.sumBy;
    lodash.template = string.template;
    lodash.times = util.times;
    lodash.toFinite = lang.toFinite;
    lodash.toInteger = toInteger;
    lodash.toLength = lang.toLength;
    lodash.toLower = string.toLower;
    lodash.toNumber = lang.toNumber;
    lodash.toSafeInteger = lang.toSafeInteger;
    lodash.toString = lang.toString;
    lodash.toUpper = string.toUpper;
    lodash.trim = string.trim;
    lodash.trimEnd = string.trimEnd;
    lodash.trimStart = string.trimStart;
    lodash.truncate = string.truncate;
    lodash.unescape = string.unescape;
    lodash.uniqueId = util.uniqueId;
    lodash.upperCase = string.upperCase;
    lodash.upperFirst = string.upperFirst;

    // Add aliases.
    lodash.each = collection.forEach;
    lodash.eachRight = collection.forEachRight;
    lodash.first = array.head;

    mixin$1(lodash, (function() {
      var source = {};
      baseForOwn(lodash, function(func$$1, methodName) {
        if (!hasOwnProperty$o.call(lodash.prototype, methodName)) {
          source[methodName] = func$$1;
        }
      });
      return source;
    }()), { 'chain': false });

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */
    lodash.VERSION = VERSION;
    (lodash.templateSettings = string.templateSettings).imports._ = lodash;

    // Assign default placeholders.
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
      lodash[methodName].placeholder = lodash;
    });

    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
    arrayEach(['drop', 'take'], function(methodName, index) {
      LazyWrapper.prototype[methodName] = function(n) {
        n = n === undefined ? 1 : nativeMax$g(toInteger(n), 0);

        var result$$1 = (this.__filtered__ && !index)
          ? new LazyWrapper(this)
          : this.clone();

        if (result$$1.__filtered__) {
          result$$1.__takeCount__ = nativeMin$e(n, result$$1.__takeCount__);
        } else {
          result$$1.__views__.push({
            'size': nativeMin$e(n, MAX_ARRAY_LENGTH$6),
            'type': methodName + (result$$1.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result$$1;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    // Add `LazyWrapper` methods that accept an `iteratee` value.
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG$1 || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function(iteratee$$1) {
        var result$$1 = this.clone();
        result$$1.__iteratees__.push({
          'iteratee': baseIteratee(iteratee$$1, 3),
          'type': type
        });
        result$$1.__filtered__ = result$$1.__filtered__ || isFilter;
        return result$$1;
      };
    });

    // Add `LazyWrapper` methods for `_.head` and `_.last`.
    arrayEach(['head', 'last'], function(methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function() {
        return this[takeName](1).value()[0];
      };
    });

    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
    arrayEach(['initial', 'tail'], function(methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function() {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function() {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function(predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function(predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }
      return this.map(function(value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function(predicate) {
      return this.filter(negate(baseIteratee(predicate)));
    };

    LazyWrapper.prototype.slice = function(start, end) {
      start = toInteger(start);

      var result$$1 = this;
      if (result$$1.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result$$1);
      }
      if (start < 0) {
        result$$1 = result$$1.takeRight(-start);
      } else if (start) {
        result$$1 = result$$1.drop(start);
      }
      if (end !== undefined) {
        end = toInteger(end);
        result$$1 = end < 0 ? result$$1.dropRight(-end) : result$$1.take(end - start);
      }
      return result$$1;
    };

    LazyWrapper.prototype.takeRightWhile = function(predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function() {
      return this.take(MAX_ARRAY_LENGTH$6);
    };

    // Add `LazyWrapper` methods to `lodash.prototype`.
    baseForOwn(LazyWrapper.prototype, function(func$$1, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function() {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee$$1 = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function(value) {
          var result$$1 = lodashFunc.apply(lodash, arrayPush([value], args));
          return (isTaker && chainAll) ? result$$1[0] : result$$1;
        };

        if (useLazy && checkIteratee && typeof iteratee$$1 == 'function' && iteratee$$1.length != 1) {
          // Avoid lazy use if the iteratee has a "length" value other than `1`.
          isLazy = useLazy = false;
        }
        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result$$1 = func$$1.apply(value, args);
          result$$1.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
          return new LodashWrapper(result$$1, chainAll);
        }
        if (isUnwrapped && onlyLazy) {
          return func$$1.apply(this, args);
        }
        result$$1 = this.thru(interceptor);
        return isUnwrapped ? (isTaker ? result$$1.value()[0] : result$$1.value()) : result$$1;
      };
    });

    // Add `Array` methods to `lodash.prototype`.
    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
      var func$$1 = arrayProto$5[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function() {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          var value = this.value();
          return func$$1.apply(isArray(value) ? value : [], args);
        }
        return this[chainName](function(value) {
          return func$$1.apply(isArray(value) ? value : [], args);
        });
      };
    });

    // Map minified method names to their real names.
    baseForOwn(LazyWrapper.prototype, function(func$$1, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = lodashFunc.name + '';
        if (!hasOwnProperty$o.call(realNames, key)) {
          realNames[key] = [];
        }
        realNames[key].push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG$6).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];

    // Add methods to `LazyWrapper`.
    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    // Add chain sequence methods to the `lodash` wrapper.
    lodash.prototype.at = seq.at;
    lodash.prototype.chain = seq.wrapperChain;
    lodash.prototype.commit = seq.commit;
    lodash.prototype.next = seq.next;
    lodash.prototype.plant = seq.plant;
    lodash.prototype.reverse = seq.reverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = seq.value;

    // Add lazy aliases.
    lodash.prototype.first = lodash.prototype.head;

    if (symIterator$1) {
      lodash.prototype[symIterator$1] = seq.toIterator;
    }

    /**
     * @license
     * Lodash (Custom Build) <https://lodash.com/>
     * Build: `lodash modularize exports="es" -o ./`
     * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
     * Released under MIT license <https://lodash.com/license>
     * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
     * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
     */

    var snsEventProperties = [
        'Type',
        'MessageId',
        'TopicArn',
        'Message',
        'Timestamp',
        'SignatureVersion',
        'Signature',
    ];
    var getSNSTrigger = function (messages) {
        var snsEvent = null;
        messages.some(function (message) {
            try {
                var body = null;
                if (message.Body) {
                    body = JSON.parse(message.Body);
                }
                else if (message.body) {
                    body = JSON.parse(message.body);
                }
                else {
                    return true;
                }
                if (intersection(Object.keys(body), snsEventProperties).length >= snsEventProperties.length) {
                    snsEvent = body;
                    return true;
                }
            }
            catch (ex) {
                // Continue to the next message
            }
            return true;
        });
        return snsEvent;
    };

    var Config = /** @class */ (function () {
        function Config() {
        }
        Object.defineProperty(Config.prototype, "disablePayloadCapture", {
            get: function () {
                return (process.env.RECAP_DEV_DISABLE_PAYLOAD_CAPTURE && Boolean(process.env.RECAP_DEV_DISABLE_PAYLOAD_CAPTURE)) || false;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Config.prototype, "syncTimeout", {
            get: function () {
                return process.env.RECAP_DEV_SYNC_TIMEOUT ? Number(process.env.RECAP_DEV_SYNC_TIMEOUT) : 1000;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Config.prototype, "maxPayloadLength", {
            get: function () {
                return process.env.RECAP_DEV_MAX_PAYLOAD ? Number(process.env.RECAP_DEV_MAX_PAYLOAD) : 10000;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Config.prototype, "syncEndpoint", {
            get: function () {
                return process.env.RECAP_DEV_SYNC_ENDPOINT;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Config.prototype, "serverlessTimeoutWindow", {
            get: function () {
                return process.env.RECAP_DEV_TIMEOUT_WINDOW ? Number(process.env.RECAP_DEV_TIMEOUT_WINDOW) : 200;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Config.prototype, "pgDriverModulePath", {
            get: function () {
                return process.env.RECAP_DEV_POSTGRES_MODULE ? "" + process.cwd() + process.env.RECAP_DEV_POSTGRES_MODULE : 'pg';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Config.prototype, "isDebugLogEnabled", {
            get: function () {
                return !!process.env.RECAP_DEV_DEBUG_LOG;
            },
            enumerable: true,
            configurable: true
        });
        return Config;
    }());
    var config = new Config();

    var debugLog = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (config.isDebugLogEnabled) {
            console.log.apply(console, __spread(args));
        }
    };

    // Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js

    // fix for "Readable" isn't a named export issue
    const Readable = Stream.Readable;

    const BUFFER = Symbol('buffer');
    const TYPE = Symbol('type');

    class Blob {
    	constructor() {
    		this[TYPE] = '';

    		const blobParts = arguments[0];
    		const options = arguments[1];

    		const buffers = [];
    		let size = 0;

    		if (blobParts) {
    			const a = blobParts;
    			const length = Number(a.length);
    			for (let i = 0; i < length; i++) {
    				const element = a[i];
    				let buffer;
    				if (element instanceof Buffer) {
    					buffer = element;
    				} else if (ArrayBuffer.isView(element)) {
    					buffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);
    				} else if (element instanceof ArrayBuffer) {
    					buffer = Buffer.from(element);
    				} else if (element instanceof Blob) {
    					buffer = element[BUFFER];
    				} else {
    					buffer = Buffer.from(typeof element === 'string' ? element : String(element));
    				}
    				size += buffer.length;
    				buffers.push(buffer);
    			}
    		}

    		this[BUFFER] = Buffer.concat(buffers);

    		let type = options && options.type !== undefined && String(options.type).toLowerCase();
    		if (type && !/[^\u0020-\u007E]/.test(type)) {
    			this[TYPE] = type;
    		}
    	}
    	get size() {
    		return this[BUFFER].length;
    	}
    	get type() {
    		return this[TYPE];
    	}
    	text() {
    		return Promise.resolve(this[BUFFER].toString());
    	}
    	arrayBuffer() {
    		const buf = this[BUFFER];
    		const ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
    		return Promise.resolve(ab);
    	}
    	stream() {
    		const readable = new Readable();
    		readable._read = function () {};
    		readable.push(this[BUFFER]);
    		readable.push(null);
    		return readable;
    	}
    	toString() {
    		return '[object Blob]';
    	}
    	slice() {
    		const size = this.size;

    		const start = arguments[0];
    		const end = arguments[1];
    		let relativeStart, relativeEnd;
    		if (start === undefined) {
    			relativeStart = 0;
    		} else if (start < 0) {
    			relativeStart = Math.max(size + start, 0);
    		} else {
    			relativeStart = Math.min(start, size);
    		}
    		if (end === undefined) {
    			relativeEnd = size;
    		} else if (end < 0) {
    			relativeEnd = Math.max(size + end, 0);
    		} else {
    			relativeEnd = Math.min(end, size);
    		}
    		const span = Math.max(relativeEnd - relativeStart, 0);

    		const buffer = this[BUFFER];
    		const slicedBuffer = buffer.slice(relativeStart, relativeStart + span);
    		const blob = new Blob([], { type: arguments[2] });
    		blob[BUFFER] = slicedBuffer;
    		return blob;
    	}
    }

    Object.defineProperties(Blob.prototype, {
    	size: { enumerable: true },
    	type: { enumerable: true },
    	slice: { enumerable: true }
    });

    Object.defineProperty(Blob.prototype, Symbol.toStringTag, {
    	value: 'Blob',
    	writable: false,
    	enumerable: false,
    	configurable: true
    });

    /**
     * fetch-error.js
     *
     * FetchError interface for operational errors
     */

    /**
     * Create FetchError instance
     *
     * @param   String      message      Error message for human
     * @param   String      type         Error type for machine
     * @param   String      systemError  For Node.js system error
     * @return  FetchError
     */
    function FetchError(message, type, systemError) {
      Error.call(this, message);

      this.message = message;
      this.type = type;

      // when err.type is `system`, err.code contains system error code
      if (systemError) {
        this.code = this.errno = systemError.code;
      }

      // hide custom error implementation details from end-users
      Error.captureStackTrace(this, this.constructor);
    }

    FetchError.prototype = Object.create(Error.prototype);
    FetchError.prototype.constructor = FetchError;
    FetchError.prototype.name = 'FetchError';

    let convert;
    try {
    	convert = require('encoding').convert;
    } catch (e) {}

    const INTERNALS = Symbol('Body internals');

    // fix an issue where "PassThrough" isn't a named export for node <10
    const PassThrough = Stream.PassThrough;

    /**
     * Body mixin
     *
     * Ref: https://fetch.spec.whatwg.org/#body
     *
     * @param   Stream  body  Readable stream
     * @param   Object  opts  Response options
     * @return  Void
     */
    function Body(body) {
    	var _this = this;

    	var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
    	    _ref$size = _ref.size;

    	let size = _ref$size === undefined ? 0 : _ref$size;
    	var _ref$timeout = _ref.timeout;
    	let timeout = _ref$timeout === undefined ? 0 : _ref$timeout;

    	if (body == null) {
    		// body is undefined or null
    		body = null;
    	} else if (isURLSearchParams(body)) {
    		// body is a URLSearchParams
    		body = Buffer.from(body.toString());
    	} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {
    		// body is ArrayBuffer
    		body = Buffer.from(body);
    	} else if (ArrayBuffer.isView(body)) {
    		// body is ArrayBufferView
    		body = Buffer.from(body.buffer, body.byteOffset, body.byteLength);
    	} else if (body instanceof Stream) ; else {
    		// none of the above
    		// coerce to string then buffer
    		body = Buffer.from(String(body));
    	}
    	this[INTERNALS] = {
    		body,
    		disturbed: false,
    		error: null
    	};
    	this.size = size;
    	this.timeout = timeout;

    	if (body instanceof Stream) {
    		body.on('error', function (err) {
    			const error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);
    			_this[INTERNALS].error = error;
    		});
    	}
    }

    Body.prototype = {
    	get body() {
    		return this[INTERNALS].body;
    	},

    	get bodyUsed() {
    		return this[INTERNALS].disturbed;
    	},

    	/**
      * Decode response as ArrayBuffer
      *
      * @return  Promise
      */
    	arrayBuffer() {
    		return consumeBody.call(this).then(function (buf) {
    			return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
    		});
    	},

    	/**
      * Return raw response as Blob
      *
      * @return Promise
      */
    	blob() {
    		let ct = this.headers && this.headers.get('content-type') || '';
    		return consumeBody.call(this).then(function (buf) {
    			return Object.assign(
    			// Prevent copying
    			new Blob([], {
    				type: ct.toLowerCase()
    			}), {
    				[BUFFER]: buf
    			});
    		});
    	},

    	/**
      * Decode response as json
      *
      * @return  Promise
      */
    	json() {
    		var _this2 = this;

    		return consumeBody.call(this).then(function (buffer) {
    			try {
    				return JSON.parse(buffer.toString());
    			} catch (err) {
    				return Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));
    			}
    		});
    	},

    	/**
      * Decode response as text
      *
      * @return  Promise
      */
    	text() {
    		return consumeBody.call(this).then(function (buffer) {
    			return buffer.toString();
    		});
    	},

    	/**
      * Decode response as buffer (non-spec api)
      *
      * @return  Promise
      */
    	buffer() {
    		return consumeBody.call(this);
    	},

    	/**
      * Decode response as text, while automatically detecting the encoding and
      * trying to decode to UTF-8 (non-spec api)
      *
      * @return  Promise
      */
    	textConverted() {
    		var _this3 = this;

    		return consumeBody.call(this).then(function (buffer) {
    			return convertBody(buffer, _this3.headers);
    		});
    	}
    };

    // In browsers, all properties are enumerable.
    Object.defineProperties(Body.prototype, {
    	body: { enumerable: true },
    	bodyUsed: { enumerable: true },
    	arrayBuffer: { enumerable: true },
    	blob: { enumerable: true },
    	json: { enumerable: true },
    	text: { enumerable: true }
    });

    Body.mixIn = function (proto) {
    	for (const name of Object.getOwnPropertyNames(Body.prototype)) {
    		// istanbul ignore else: future proof
    		if (!(name in proto)) {
    			const desc = Object.getOwnPropertyDescriptor(Body.prototype, name);
    			Object.defineProperty(proto, name, desc);
    		}
    	}
    };

    /**
     * Consume and convert an entire Body to a Buffer.
     *
     * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body
     *
     * @return  Promise
     */
    function consumeBody() {
    	var _this4 = this;

    	if (this[INTERNALS].disturbed) {
    		return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));
    	}

    	this[INTERNALS].disturbed = true;

    	if (this[INTERNALS].error) {
    		return Body.Promise.reject(this[INTERNALS].error);
    	}

    	let body = this.body;

    	// body is null
    	if (body === null) {
    		return Body.Promise.resolve(Buffer.alloc(0));
    	}

    	// body is blob
    	if (isBlob(body)) {
    		body = body.stream();
    	}

    	// body is buffer
    	if (Buffer.isBuffer(body)) {
    		return Body.Promise.resolve(body);
    	}

    	// istanbul ignore if: should never happen
    	if (!(body instanceof Stream)) {
    		return Body.Promise.resolve(Buffer.alloc(0));
    	}

    	// body is stream
    	// get ready to actually consume the body
    	let accum = [];
    	let accumBytes = 0;
    	let abort = false;

    	return new Body.Promise(function (resolve, reject) {
    		let resTimeout;

    		// allow timeout on slow response body
    		if (_this4.timeout) {
    			resTimeout = setTimeout(function () {
    				abort = true;
    				reject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));
    			}, _this4.timeout);
    		}

    		// handle stream errors
    		body.on('error', function (err) {
    			if (err.name === 'AbortError') {
    				// if the request was aborted, reject with this Error
    				abort = true;
    				reject(err);
    			} else {
    				// other errors, such as incorrect content-encoding
    				reject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));
    			}
    		});

    		body.on('data', function (chunk) {
    			if (abort || chunk === null) {
    				return;
    			}

    			if (_this4.size && accumBytes + chunk.length > _this4.size) {
    				abort = true;
    				reject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));
    				return;
    			}

    			accumBytes += chunk.length;
    			accum.push(chunk);
    		});

    		body.on('end', function () {
    			if (abort) {
    				return;
    			}

    			clearTimeout(resTimeout);

    			try {
    				resolve(Buffer.concat(accum, accumBytes));
    			} catch (err) {
    				// handle streams that have accumulated too much data (issue #414)
    				reject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));
    			}
    		});
    	});
    }

    /**
     * Detect buffer encoding and convert to target encoding
     * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding
     *
     * @param   Buffer  buffer    Incoming buffer
     * @param   String  encoding  Target encoding
     * @return  String
     */
    function convertBody(buffer, headers) {
    	if (typeof convert !== 'function') {
    		throw new Error('The package `encoding` must be installed to use the textConverted() function');
    	}

    	const ct = headers.get('content-type');
    	let charset = 'utf-8';
    	let res, str;

    	// header
    	if (ct) {
    		res = /charset=([^;]*)/i.exec(ct);
    	}

    	// no charset in content type, peek at response body for at most 1024 bytes
    	str = buffer.slice(0, 1024).toString();

    	// html5
    	if (!res && str) {
    		res = /<meta.+?charset=(['"])(.+?)\1/i.exec(str);
    	}

    	// html4
    	if (!res && str) {
    		res = /<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(str);
    		if (!res) {
    			res = /<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(str);
    			if (res) {
    				res.pop(); // drop last quote
    			}
    		}

    		if (res) {
    			res = /charset=(.*)/i.exec(res.pop());
    		}
    	}

    	// xml
    	if (!res && str) {
    		res = /<\?xml.+?encoding=(['"])(.+?)\1/i.exec(str);
    	}

    	// found charset
    	if (res) {
    		charset = res.pop();

    		// prevent decode issues when sites use incorrect encoding
    		// ref: https://hsivonen.fi/encoding-menu/
    		if (charset === 'gb2312' || charset === 'gbk') {
    			charset = 'gb18030';
    		}
    	}

    	// turn raw buffers into a single utf-8 buffer
    	return convert(buffer, 'UTF-8', charset).toString();
    }

    /**
     * Detect a URLSearchParams object
     * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143
     *
     * @param   Object  obj     Object to detect by type or brand
     * @return  String
     */
    function isURLSearchParams(obj) {
    	// Duck-typing as a necessary condition.
    	if (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {
    		return false;
    	}

    	// Brand-checking and more duck-typing as optional condition.
    	return obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';
    }

    /**
     * Check if `obj` is a W3C `Blob` object (which `File` inherits from)
     * @param  {*} obj
     * @return {boolean}
     */
    function isBlob(obj) {
    	return typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);
    }

    /**
     * Clone body given Res/Req instance
     *
     * @param   Mixed  instance  Response or Request instance
     * @return  Mixed
     */
    function clone$1(instance) {
    	let p1, p2;
    	let body = instance.body;

    	// don't allow cloning a used body
    	if (instance.bodyUsed) {
    		throw new Error('cannot clone body after it is used');
    	}

    	// check that body is a stream and not form-data object
    	// note: we can't clone the form-data object without having it as a dependency
    	if (body instanceof Stream && typeof body.getBoundary !== 'function') {
    		// tee instance body
    		p1 = new PassThrough();
    		p2 = new PassThrough();
    		body.pipe(p1);
    		body.pipe(p2);
    		// set instance body to teed body and return the other teed body
    		instance[INTERNALS].body = p1;
    		body = p2;
    	}

    	return body;
    }

    /**
     * Performs the operation "extract a `Content-Type` value from |object|" as
     * specified in the specification:
     * https://fetch.spec.whatwg.org/#concept-bodyinit-extract
     *
     * This function assumes that instance.body is present.
     *
     * @param   Mixed  instance  Any options.body input
     */
    function extractContentType(body) {
    	if (body === null) {
    		// body is null
    		return null;
    	} else if (typeof body === 'string') {
    		// body is string
    		return 'text/plain;charset=UTF-8';
    	} else if (isURLSearchParams(body)) {
    		// body is a URLSearchParams
    		return 'application/x-www-form-urlencoded;charset=UTF-8';
    	} else if (isBlob(body)) {
    		// body is blob
    		return body.type || null;
    	} else if (Buffer.isBuffer(body)) {
    		// body is buffer
    		return null;
    	} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {
    		// body is ArrayBuffer
    		return null;
    	} else if (ArrayBuffer.isView(body)) {
    		// body is ArrayBufferView
    		return null;
    	} else if (typeof body.getBoundary === 'function') {
    		// detect form data input from form-data module
    		return `multipart/form-data;boundary=${body.getBoundary()}`;
    	} else if (body instanceof Stream) {
    		// body is stream
    		// can't really do much about this
    		return null;
    	} else {
    		// Body constructor defaults other things to string
    		return 'text/plain;charset=UTF-8';
    	}
    }

    /**
     * The Fetch Standard treats this as if "total bytes" is a property on the body.
     * For us, we have to explicitly get it with a function.
     *
     * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes
     *
     * @param   Body    instance   Instance of Body
     * @return  Number?            Number of bytes, or null if not possible
     */
    function getTotalBytes(instance) {
    	const body = instance.body;


    	if (body === null) {
    		// body is null
    		return 0;
    	} else if (isBlob(body)) {
    		return body.size;
    	} else if (Buffer.isBuffer(body)) {
    		// body is buffer
    		return body.length;
    	} else if (body && typeof body.getLengthSync === 'function') {
    		// detect form data input from form-data module
    		if (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x
    		body.hasKnownLength && body.hasKnownLength()) {
    			// 2.x
    			return body.getLengthSync();
    		}
    		return null;
    	} else {
    		// body is stream
    		return null;
    	}
    }

    /**
     * Write a Body to a Node.js WritableStream (e.g. http.Request) object.
     *
     * @param   Body    instance   Instance of Body
     * @return  Void
     */
    function writeToStream(dest, instance) {
    	const body = instance.body;


    	if (body === null) {
    		// body is null
    		dest.end();
    	} else if (isBlob(body)) {
    		body.stream().pipe(dest);
    	} else if (Buffer.isBuffer(body)) {
    		// body is buffer
    		dest.write(body);
    		dest.end();
    	} else {
    		// body is stream
    		body.pipe(dest);
    	}
    }

    // expose Promise
    Body.Promise = global.Promise;

    /**
     * headers.js
     *
     * Headers class offers convenient helpers
     */

    const invalidTokenRegex = /[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/;
    const invalidHeaderCharRegex = /[^\t\x20-\x7e\x80-\xff]/;

    function validateName(name) {
    	name = `${name}`;
    	if (invalidTokenRegex.test(name) || name === '') {
    		throw new TypeError(`${name} is not a legal HTTP header name`);
    	}
    }

    function validateValue(value) {
    	value = `${value}`;
    	if (invalidHeaderCharRegex.test(value)) {
    		throw new TypeError(`${value} is not a legal HTTP header value`);
    	}
    }

    /**
     * Find the key in the map object given a header name.
     *
     * Returns undefined if not found.
     *
     * @param   String  name  Header name
     * @return  String|Undefined
     */
    function find$1(map, name) {
    	name = name.toLowerCase();
    	for (const key in map) {
    		if (key.toLowerCase() === name) {
    			return key;
    		}
    	}
    	return undefined;
    }

    const MAP = Symbol('map');
    class Headers {
    	/**
      * Headers class
      *
      * @param   Object  headers  Response headers
      * @return  Void
      */
    	constructor() {
    		let init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;

    		this[MAP] = Object.create(null);

    		if (init instanceof Headers) {
    			const rawHeaders = init.raw();
    			const headerNames = Object.keys(rawHeaders);

    			for (const headerName of headerNames) {
    				for (const value of rawHeaders[headerName]) {
    					this.append(headerName, value);
    				}
    			}

    			return;
    		}

    		// We don't worry about converting prop to ByteString here as append()
    		// will handle it.
    		if (init == null) ; else if (typeof init === 'object') {
    			const method = init[Symbol.iterator];
    			if (method != null) {
    				if (typeof method !== 'function') {
    					throw new TypeError('Header pairs must be iterable');
    				}

    				// sequence<sequence<ByteString>>
    				// Note: per spec we have to first exhaust the lists then process them
    				const pairs = [];
    				for (const pair of init) {
    					if (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {
    						throw new TypeError('Each header pair must be iterable');
    					}
    					pairs.push(Array.from(pair));
    				}

    				for (const pair of pairs) {
    					if (pair.length !== 2) {
    						throw new TypeError('Each header pair must be a name/value tuple');
    					}
    					this.append(pair[0], pair[1]);
    				}
    			} else {
    				// record<ByteString, ByteString>
    				for (const key of Object.keys(init)) {
    					const value = init[key];
    					this.append(key, value);
    				}
    			}
    		} else {
    			throw new TypeError('Provided initializer must be an object');
    		}
    	}

    	/**
      * Return combined header value given name
      *
      * @param   String  name  Header name
      * @return  Mixed
      */
    	get(name) {
    		name = `${name}`;
    		validateName(name);
    		const key = find$1(this[MAP], name);
    		if (key === undefined) {
    			return null;
    		}

    		return this[MAP][key].join(', ');
    	}

    	/**
      * Iterate over all headers
      *
      * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)
      * @param   Boolean   thisArg   `this` context for callback function
      * @return  Void
      */
    	forEach(callback) {
    		let thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

    		let pairs = getHeaders(this);
    		let i = 0;
    		while (i < pairs.length) {
    			var _pairs$i = pairs[i];
    			const name = _pairs$i[0],
    			      value = _pairs$i[1];

    			callback.call(thisArg, value, name, this);
    			pairs = getHeaders(this);
    			i++;
    		}
    	}

    	/**
      * Overwrite header values given name
      *
      * @param   String  name   Header name
      * @param   String  value  Header value
      * @return  Void
      */
    	set(name, value) {
    		name = `${name}`;
    		value = `${value}`;
    		validateName(name);
    		validateValue(value);
    		const key = find$1(this[MAP], name);
    		this[MAP][key !== undefined ? key : name] = [value];
    	}

    	/**
      * Append a value onto existing header
      *
      * @param   String  name   Header name
      * @param   String  value  Header value
      * @return  Void
      */
    	append(name, value) {
    		name = `${name}`;
    		value = `${value}`;
    		validateName(name);
    		validateValue(value);
    		const key = find$1(this[MAP], name);
    		if (key !== undefined) {
    			this[MAP][key].push(value);
    		} else {
    			this[MAP][name] = [value];
    		}
    	}

    	/**
      * Check for header name existence
      *
      * @param   String   name  Header name
      * @return  Boolean
      */
    	has(name) {
    		name = `${name}`;
    		validateName(name);
    		return find$1(this[MAP], name) !== undefined;
    	}

    	/**
      * Delete all header values given name
      *
      * @param   String  name  Header name
      * @return  Void
      */
    	delete(name) {
    		name = `${name}`;
    		validateName(name);
    		const key = find$1(this[MAP], name);
    		if (key !== undefined) {
    			delete this[MAP][key];
    		}
    	}

    	/**
      * Return raw headers (non-spec api)
      *
      * @return  Object
      */
    	raw() {
    		return this[MAP];
    	}

    	/**
      * Get an iterator on keys.
      *
      * @return  Iterator
      */
    	keys() {
    		return createHeadersIterator(this, 'key');
    	}

    	/**
      * Get an iterator on values.
      *
      * @return  Iterator
      */
    	values() {
    		return createHeadersIterator(this, 'value');
    	}

    	/**
      * Get an iterator on entries.
      *
      * This is the default iterator of the Headers object.
      *
      * @return  Iterator
      */
    	[Symbol.iterator]() {
    		return createHeadersIterator(this, 'key+value');
    	}
    }
    Headers.prototype.entries = Headers.prototype[Symbol.iterator];

    Object.defineProperty(Headers.prototype, Symbol.toStringTag, {
    	value: 'Headers',
    	writable: false,
    	enumerable: false,
    	configurable: true
    });

    Object.defineProperties(Headers.prototype, {
    	get: { enumerable: true },
    	forEach: { enumerable: true },
    	set: { enumerable: true },
    	append: { enumerable: true },
    	has: { enumerable: true },
    	delete: { enumerable: true },
    	keys: { enumerable: true },
    	values: { enumerable: true },
    	entries: { enumerable: true }
    });

    function getHeaders(headers) {
    	let kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';

    	const keys = Object.keys(headers[MAP]).sort();
    	return keys.map(kind === 'key' ? function (k) {
    		return k.toLowerCase();
    	} : kind === 'value' ? function (k) {
    		return headers[MAP][k].join(', ');
    	} : function (k) {
    		return [k.toLowerCase(), headers[MAP][k].join(', ')];
    	});
    }

    const INTERNAL = Symbol('internal');

    function createHeadersIterator(target, kind) {
    	const iterator = Object.create(HeadersIteratorPrototype);
    	iterator[INTERNAL] = {
    		target,
    		kind,
    		index: 0
    	};
    	return iterator;
    }

    const HeadersIteratorPrototype = Object.setPrototypeOf({
    	next() {
    		// istanbul ignore if
    		if (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {
    			throw new TypeError('Value of `this` is not a HeadersIterator');
    		}

    		var _INTERNAL = this[INTERNAL];
    		const target = _INTERNAL.target,
    		      kind = _INTERNAL.kind,
    		      index = _INTERNAL.index;

    		const values = getHeaders(target, kind);
    		const len = values.length;
    		if (index >= len) {
    			return {
    				value: undefined,
    				done: true
    			};
    		}

    		this[INTERNAL].index = index + 1;

    		return {
    			value: values[index],
    			done: false
    		};
    	}
    }, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));

    Object.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {
    	value: 'HeadersIterator',
    	writable: false,
    	enumerable: false,
    	configurable: true
    });

    /**
     * Export the Headers object in a form that Node.js can consume.
     *
     * @param   Headers  headers
     * @return  Object
     */
    function exportNodeCompatibleHeaders(headers) {
    	const obj = Object.assign({ __proto__: null }, headers[MAP]);

    	// http.request() only supports string as Host header. This hack makes
    	// specifying custom Host header possible.
    	const hostHeaderKey = find$1(headers[MAP], 'Host');
    	if (hostHeaderKey !== undefined) {
    		obj[hostHeaderKey] = obj[hostHeaderKey][0];
    	}

    	return obj;
    }

    /**
     * Create a Headers object from an object of headers, ignoring those that do
     * not conform to HTTP grammar productions.
     *
     * @param   Object  obj  Object of headers
     * @return  Headers
     */
    function createHeadersLenient(obj) {
    	const headers = new Headers();
    	for (const name of Object.keys(obj)) {
    		if (invalidTokenRegex.test(name)) {
    			continue;
    		}
    		if (Array.isArray(obj[name])) {
    			for (const val of obj[name]) {
    				if (invalidHeaderCharRegex.test(val)) {
    					continue;
    				}
    				if (headers[MAP][name] === undefined) {
    					headers[MAP][name] = [val];
    				} else {
    					headers[MAP][name].push(val);
    				}
    			}
    		} else if (!invalidHeaderCharRegex.test(obj[name])) {
    			headers[MAP][name] = [obj[name]];
    		}
    	}
    	return headers;
    }

    const INTERNALS$1 = Symbol('Response internals');

    // fix an issue where "STATUS_CODES" aren't a named export for node <10
    const STATUS_CODES = http.STATUS_CODES;

    /**
     * Response class
     *
     * @param   Stream  body  Readable stream
     * @param   Object  opts  Response options
     * @return  Void
     */
    class Response {
    	constructor() {
    		let body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
    		let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    		Body.call(this, body, opts);

    		const status = opts.status || 200;
    		const headers = new Headers(opts.headers);

    		if (body != null && !headers.has('Content-Type')) {
    			const contentType = extractContentType(body);
    			if (contentType) {
    				headers.append('Content-Type', contentType);
    			}
    		}

    		this[INTERNALS$1] = {
    			url: opts.url,
    			status,
    			statusText: opts.statusText || STATUS_CODES[status],
    			headers,
    			counter: opts.counter
    		};
    	}

    	get url() {
    		return this[INTERNALS$1].url || '';
    	}

    	get status() {
    		return this[INTERNALS$1].status;
    	}

    	/**
      * Convenience property representing if the request ended normally
      */
    	get ok() {
    		return this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;
    	}

    	get redirected() {
    		return this[INTERNALS$1].counter > 0;
    	}

    	get statusText() {
    		return this[INTERNALS$1].statusText;
    	}

    	get headers() {
    		return this[INTERNALS$1].headers;
    	}

    	/**
      * Clone this response
      *
      * @return  Response
      */
    	clone() {
    		return new Response(clone$1(this), {
    			url: this.url,
    			status: this.status,
    			statusText: this.statusText,
    			headers: this.headers,
    			ok: this.ok,
    			redirected: this.redirected
    		});
    	}
    }

    Body.mixIn(Response.prototype);

    Object.defineProperties(Response.prototype, {
    	url: { enumerable: true },
    	status: { enumerable: true },
    	ok: { enumerable: true },
    	redirected: { enumerable: true },
    	statusText: { enumerable: true },
    	headers: { enumerable: true },
    	clone: { enumerable: true }
    });

    Object.defineProperty(Response.prototype, Symbol.toStringTag, {
    	value: 'Response',
    	writable: false,
    	enumerable: false,
    	configurable: true
    });

    const INTERNALS$2 = Symbol('Request internals');

    // fix an issue where "format", "parse" aren't a named export for node <10
    const parse_url = Url.parse;
    const format_url = Url.format;

    const streamDestructionSupported = 'destroy' in Stream.Readable.prototype;

    /**
     * Check if a value is an instance of Request.
     *
     * @param   Mixed   input
     * @return  Boolean
     */
    function isRequest(input) {
    	return typeof input === 'object' && typeof input[INTERNALS$2] === 'object';
    }

    function isAbortSignal(signal) {
    	const proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);
    	return !!(proto && proto.constructor.name === 'AbortSignal');
    }

    /**
     * Request class
     *
     * @param   Mixed   input  Url or Request instance
     * @param   Object  init   Custom options
     * @return  Void
     */
    class Request {
    	constructor(input) {
    		let init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    		let parsedURL;

    		// normalize input
    		if (!isRequest(input)) {
    			if (input && input.href) {
    				// in order to support Node.js' Url objects; though WHATWG's URL objects
    				// will fall into this branch also (since their `toString()` will return
    				// `href` property anyway)
    				parsedURL = parse_url(input.href);
    			} else {
    				// coerce input to a string before attempting to parse
    				parsedURL = parse_url(`${input}`);
    			}
    			input = {};
    		} else {
    			parsedURL = parse_url(input.url);
    		}

    		let method = init.method || input.method || 'GET';
    		method = method.toUpperCase();

    		if ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {
    			throw new TypeError('Request with GET/HEAD method cannot have body');
    		}

    		let inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone$1(input) : null;

    		Body.call(this, inputBody, {
    			timeout: init.timeout || input.timeout || 0,
    			size: init.size || input.size || 0
    		});

    		const headers = new Headers(init.headers || input.headers || {});

    		if (inputBody != null && !headers.has('Content-Type')) {
    			const contentType = extractContentType(inputBody);
    			if (contentType) {
    				headers.append('Content-Type', contentType);
    			}
    		}

    		let signal = isRequest(input) ? input.signal : null;
    		if ('signal' in init) signal = init.signal;

    		if (signal != null && !isAbortSignal(signal)) {
    			throw new TypeError('Expected signal to be an instanceof AbortSignal');
    		}

    		this[INTERNALS$2] = {
    			method,
    			redirect: init.redirect || input.redirect || 'follow',
    			headers,
    			parsedURL,
    			signal
    		};

    		// node-fetch-only options
    		this.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;
    		this.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;
    		this.counter = init.counter || input.counter || 0;
    		this.agent = init.agent || input.agent;
    	}

    	get method() {
    		return this[INTERNALS$2].method;
    	}

    	get url() {
    		return format_url(this[INTERNALS$2].parsedURL);
    	}

    	get headers() {
    		return this[INTERNALS$2].headers;
    	}

    	get redirect() {
    		return this[INTERNALS$2].redirect;
    	}

    	get signal() {
    		return this[INTERNALS$2].signal;
    	}

    	/**
      * Clone this request
      *
      * @return  Request
      */
    	clone() {
    		return new Request(this);
    	}
    }

    Body.mixIn(Request.prototype);

    Object.defineProperty(Request.prototype, Symbol.toStringTag, {
    	value: 'Request',
    	writable: false,
    	enumerable: false,
    	configurable: true
    });

    Object.defineProperties(Request.prototype, {
    	method: { enumerable: true },
    	url: { enumerable: true },
    	headers: { enumerable: true },
    	redirect: { enumerable: true },
    	clone: { enumerable: true },
    	signal: { enumerable: true }
    });

    /**
     * Convert a Request to Node.js http request options.
     *
     * @param   Request  A Request instance
     * @return  Object   The options object to be passed to http.request
     */
    function getNodeRequestOptions(request) {
    	const parsedURL = request[INTERNALS$2].parsedURL;
    	const headers = new Headers(request[INTERNALS$2].headers);

    	// fetch step 1.3
    	if (!headers.has('Accept')) {
    		headers.set('Accept', '*/*');
    	}

    	// Basic fetch
    	if (!parsedURL.protocol || !parsedURL.hostname) {
    		throw new TypeError('Only absolute URLs are supported');
    	}

    	if (!/^https?:$/.test(parsedURL.protocol)) {
    		throw new TypeError('Only HTTP(S) protocols are supported');
    	}

    	if (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {
    		throw new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');
    	}

    	// HTTP-network-or-cache fetch steps 2.4-2.7
    	let contentLengthValue = null;
    	if (request.body == null && /^(POST|PUT)$/i.test(request.method)) {
    		contentLengthValue = '0';
    	}
    	if (request.body != null) {
    		const totalBytes = getTotalBytes(request);
    		if (typeof totalBytes === 'number') {
    			contentLengthValue = String(totalBytes);
    		}
    	}
    	if (contentLengthValue) {
    		headers.set('Content-Length', contentLengthValue);
    	}

    	// HTTP-network-or-cache fetch step 2.11
    	if (!headers.has('User-Agent')) {
    		headers.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');
    	}

    	// HTTP-network-or-cache fetch step 2.15
    	if (request.compress && !headers.has('Accept-Encoding')) {
    		headers.set('Accept-Encoding', 'gzip,deflate');
    	}

    	let agent = request.agent;
    	if (typeof agent === 'function') {
    		agent = agent(parsedURL);
    	}

    	if (!headers.has('Connection') && !agent) {
    		headers.set('Connection', 'close');
    	}

    	// HTTP-network fetch step 4.2
    	// chunked encoding is handled by Node.js

    	return Object.assign({}, parsedURL, {
    		method: request.method,
    		headers: exportNodeCompatibleHeaders(headers),
    		agent
    	});
    }

    /**
     * abort-error.js
     *
     * AbortError interface for cancelled requests
     */

    /**
     * Create AbortError instance
     *
     * @param   String      message      Error message for human
     * @return  AbortError
     */
    function AbortError(message) {
      Error.call(this, message);

      this.type = 'aborted';
      this.message = message;

      // hide custom error implementation details from end-users
      Error.captureStackTrace(this, this.constructor);
    }

    AbortError.prototype = Object.create(Error.prototype);
    AbortError.prototype.constructor = AbortError;
    AbortError.prototype.name = 'AbortError';

    // fix an issue where "PassThrough", "resolve" aren't a named export for node <10
    const PassThrough$1 = Stream.PassThrough;
    const resolve_url = Url.resolve;

    /**
     * Fetch function
     *
     * @param   Mixed    url   Absolute url or Request instance
     * @param   Object   opts  Fetch options
     * @return  Promise
     */
    function fetch(url, opts) {

    	// allow custom promise
    	if (!fetch.Promise) {
    		throw new Error('native promise missing, set fetch.Promise to your favorite alternative');
    	}

    	Body.Promise = fetch.Promise;

    	// wrap http.request into fetch
    	return new fetch.Promise(function (resolve, reject) {
    		// build request object
    		const request = new Request(url, opts);
    		const options = getNodeRequestOptions(request);

    		const send = (options.protocol === 'https:' ? https : http).request;
    		const signal = request.signal;

    		let response = null;

    		const abort = function abort() {
    			let error = new AbortError('The user aborted a request.');
    			reject(error);
    			if (request.body && request.body instanceof Stream.Readable) {
    				request.body.destroy(error);
    			}
    			if (!response || !response.body) return;
    			response.body.emit('error', error);
    		};

    		if (signal && signal.aborted) {
    			abort();
    			return;
    		}

    		const abortAndFinalize = function abortAndFinalize() {
    			abort();
    			finalize();
    		};

    		// send request
    		const req = send(options);
    		let reqTimeout;

    		if (signal) {
    			signal.addEventListener('abort', abortAndFinalize);
    		}

    		function finalize() {
    			req.abort();
    			if (signal) signal.removeEventListener('abort', abortAndFinalize);
    			clearTimeout(reqTimeout);
    		}

    		if (request.timeout) {
    			req.once('socket', function (socket) {
    				reqTimeout = setTimeout(function () {
    					reject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));
    					finalize();
    				}, request.timeout);
    			});
    		}

    		req.on('error', function (err) {
    			reject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));
    			finalize();
    		});

    		req.on('response', function (res) {
    			clearTimeout(reqTimeout);

    			const headers = createHeadersLenient(res.headers);

    			// HTTP fetch step 5
    			if (fetch.isRedirect(res.statusCode)) {
    				// HTTP fetch step 5.2
    				const location = headers.get('Location');

    				// HTTP fetch step 5.3
    				const locationURL = location === null ? null : resolve_url(request.url, location);

    				// HTTP fetch step 5.5
    				switch (request.redirect) {
    					case 'error':
    						reject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));
    						finalize();
    						return;
    					case 'manual':
    						// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.
    						if (locationURL !== null) {
    							// handle corrupted header
    							try {
    								headers.set('Location', locationURL);
    							} catch (err) {
    								// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request
    								reject(err);
    							}
    						}
    						break;
    					case 'follow':
    						// HTTP-redirect fetch step 2
    						if (locationURL === null) {
    							break;
    						}

    						// HTTP-redirect fetch step 5
    						if (request.counter >= request.follow) {
    							reject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));
    							finalize();
    							return;
    						}

    						// HTTP-redirect fetch step 6 (counter increment)
    						// Create a new Request object.
    						const requestOpts = {
    							headers: new Headers(request.headers),
    							follow: request.follow,
    							counter: request.counter + 1,
    							agent: request.agent,
    							compress: request.compress,
    							method: request.method,
    							body: request.body,
    							signal: request.signal,
    							timeout: request.timeout,
    							size: request.size
    						};

    						// HTTP-redirect fetch step 9
    						if (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {
    							reject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));
    							finalize();
    							return;
    						}

    						// HTTP-redirect fetch step 11
    						if (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {
    							requestOpts.method = 'GET';
    							requestOpts.body = undefined;
    							requestOpts.headers.delete('content-length');
    						}

    						// HTTP-redirect fetch step 15
    						resolve(fetch(new Request(locationURL, requestOpts)));
    						finalize();
    						return;
    				}
    			}

    			// prepare response
    			res.once('end', function () {
    				if (signal) signal.removeEventListener('abort', abortAndFinalize);
    			});
    			let body = res.pipe(new PassThrough$1());

    			const response_options = {
    				url: request.url,
    				status: res.statusCode,
    				statusText: res.statusMessage,
    				headers: headers,
    				size: request.size,
    				timeout: request.timeout,
    				counter: request.counter
    			};

    			// HTTP-network fetch step 12.1.1.3
    			const codings = headers.get('Content-Encoding');

    			// HTTP-network fetch step 12.1.1.4: handle content codings

    			// in following scenarios we ignore compression support
    			// 1. compression support is disabled
    			// 2. HEAD request
    			// 3. no Content-Encoding header
    			// 4. no content response (204)
    			// 5. content not modified response (304)
    			if (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {
    				response = new Response(body, response_options);
    				resolve(response);
    				return;
    			}

    			// For Node v6+
    			// Be less strict when decoding compressed responses, since sometimes
    			// servers send slightly invalid responses that are still accepted
    			// by common browsers.
    			// Always using Z_SYNC_FLUSH is what cURL does.
    			const zlibOptions = {
    				flush: zlib__default.Z_SYNC_FLUSH,
    				finishFlush: zlib__default.Z_SYNC_FLUSH
    			};

    			// for gzip
    			if (codings == 'gzip' || codings == 'x-gzip') {
    				body = body.pipe(zlib__default.createGunzip(zlibOptions));
    				response = new Response(body, response_options);
    				resolve(response);
    				return;
    			}

    			// for deflate
    			if (codings == 'deflate' || codings == 'x-deflate') {
    				// handle the infamous raw deflate response from old servers
    				// a hack for old IIS and Apache servers
    				const raw = res.pipe(new PassThrough$1());
    				raw.once('data', function (chunk) {
    					// see http://stackoverflow.com/questions/37519828
    					if ((chunk[0] & 0x0F) === 0x08) {
    						body = body.pipe(zlib__default.createInflate());
    					} else {
    						body = body.pipe(zlib__default.createInflateRaw());
    					}
    					response = new Response(body, response_options);
    					resolve(response);
    				});
    				return;
    			}

    			// for br
    			if (codings == 'br' && typeof zlib__default.createBrotliDecompress === 'function') {
    				body = body.pipe(zlib__default.createBrotliDecompress());
    				response = new Response(body, response_options);
    				resolve(response);
    				return;
    			}

    			// otherwise, use response as-is
    			response = new Response(body, response_options);
    			resolve(response);
    		});

    		writeToStream(req, request);
    	});
    }
    /**
     * Redirect code matching
     *
     * @param   Number   code  Status code
     * @return  Boolean
     */
    fetch.isRedirect = function (code) {
    	return code === 301 || code === 302 || code === 303 || code === 307 || code === 308;
    };

    // expose Promise
    fetch.Promise = global.Promise;

    var SimpleTraceStore = /** @class */ (function () {
        function SimpleTraceStore() {
        }
        SimpleTraceStore.prototype.startNewTrace = function (trace) {
            this.currentTrace = trace;
            return this.currentTrace;
        };
        SimpleTraceStore.prototype.getCurrentTrace = function () {
            return this.currentTrace;
        };
        SimpleTraceStore.prototype.associateAsyncId = function (_) {
            throw new Error('Current trace store doesn\t support async hooks. Try setting a supported trace store, for example tracer.setTraceStore(new AsyncHooksTraceStore())');
        };
        return SimpleTraceStore;
    }());

    /**
     * @class
     * @classdesc A recap.dev tracer. Stores traces and provides methods to create, sync and add additional information to them.
     */
    var Tracer = /** @class */ (function () {
        function Tracer() {
            this.traceStore = new SimpleTraceStore();
        }
        /**
         * Get a current trace
         * @return {Trace | undefined} A current trace or undefined if there's no trace.
         */
        Tracer.prototype.getCurrentTrace = function () {
            return this.traceStore.getCurrentTrace();
        };
        /**
         * Start a new trace
         * @return {Trace} The new trace
         */
        Tracer.prototype.startNewTrace = function (trace) {
            return this.traceStore.startNewTrace(trace);
        };
        /**
         * Set a trace store.
         * @see {@link TraceStore} for further information.
         */
        Tracer.prototype.setTraceStore = function (traceStore) {
            this.traceStore = traceStore;
        };
        /**
         * Start a new function call event and add to to the current trace.
         * @param {string} fileName - Name of the file where function is declared.
         * @param {string} functionName - Name of the function.
         * @return {FunctionCallEvent} The new event
         */
        Tracer.prototype.functionStart = function (fileName, functionName) {
            var timestamp = Date.now();
            var event = {
                start: timestamp,
                fileName: fileName,
                functionName: functionName,
            };
            var trace = this.traceStore.getCurrentTrace();
            if (trace) {
                trace.functionCallEvents.push(event);
            }
            return event;
        };
        /**
         * End the function call event, meaning the function has finished execution.
         * @param {FunctionCallEvent} event - event to end.
         */
        Tracer.prototype.functionEnd = function (event) {
            event.end = Date.now();
        };
        /**
         * Start a new resource access event and add to to the current trace.
         * @param {string} serviceName - Name of the service. E.g. MySQL, ElasticSearch, SQS.
         * @param {object} resourceIdentifier - Identifier of an individual resource. E.g. an object with a tableName property for databases or a host for HTTP calls.
         * @param {object} additionalData - Additional data to add to the event.
         * @return {ResourceAccessEvent} The new event
         */
        Tracer.prototype.resourceAccessStart = function (serviceName, resourceIdentifier, additionalData) {
            var timestamp = Date.now();
            var event = __assign({ start: timestamp, serviceName: serviceName,
                resourceIdentifier: resourceIdentifier, request: {}, response: {} }, additionalData);
            var trace = this.traceStore.getCurrentTrace();
            if (trace) {
                trace.resourceAccessEvents.push(event);
            }
            return event;
        };
        /**
         * End the resource access event.
         * @param {ResourceAccessEvent} event - event to end.
         */
        Tracer.prototype.resourceAccessEnd = function (event) {
            event.end = Date.now();
        };
        /**
         * Add log message to the current trace
         * @param {string} log - log message
         */
        Tracer.prototype.addLogEntry = function (log) {
            var trace = this.traceStore.getCurrentTrace();
            if (trace) {
                trace.logs.push({
                    message: log,
                    timestamp: Date.now(),
                });
            }
        };
        /**
         * Set an error to the current trace.
         * @param {Error} error - error to set
         */
        Tracer.prototype.setTraceError = function (error) {
            var trace = this.traceStore.getCurrentTrace();
            if (trace) {
                trace.error = serializeError$1(error);
                trace.status = 'ERROR';
            }
        };
        /**
         * Associates a trace from the parameter asyncId to the current asyncId
         * @param {number} asyncId - asyncId to use the trace from
         */
        Tracer.prototype.associateAsyncId = function (asyncId) {
            this.traceStore.associateAsyncId(asyncId);
        };
        /**
         * Set a unit name to the current trace
         * @param {string} unitName - name of the unit
         */
        Tracer.prototype.setUnitName = function (unitName) {
            var currentTrace = this.getCurrentTrace();
            if (currentTrace) {
                currentTrace.unitName = unitName;
            }
        };
        /**
         * Send the current trace to the recap.dev server.
         */
        Tracer.prototype.sync = function () {
            return __awaiter(this, void 0, void 0, function () {
                var timestamp, traceToSync, dataBuffer, e_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            timestamp = Date.now();
                            traceToSync = this.traceStore.getCurrentTrace();
                            if (!traceToSync) {
                                return [2 /*return*/];
                            }
                            dataBuffer = zlib.gzipSync(Buffer.from(JSON.stringify(traceToSync), 'utf-8'));
                            if (!config.syncEndpoint) {
                                debugLog('RECAP_DEV_SYNC_ENDPOINT env variable is empty, skipping sync');
                                return [2 /*return*/];
                            }
                            return [4 /*yield*/, fetch(config.syncEndpoint, {
                                    method: 'POST',
                                    body: dataBuffer,
                                    headers: {
                                        'Content-Type': 'application/json',
                                        'Content-Encoding': 'gzip',
                                    },
                                    timeout: config.syncTimeout,
                                })];
                        case 1:
                            _a.sent();
                            debugLog('recap.dev sync took: ', Date.now() - timestamp, ' ms');
                            return [3 /*break*/, 3];
                        case 2:
                            e_1 = _a.sent();
                            debugLog('Warning: error when syncing trace data');
                            debugLog(e_1);
                            return [3 /*break*/, 3];
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        return Tracer;
    }());
    var tracer = new Tracer();

    var s3EventCreator = {
        requestHandler: function (request, event) {
            var parameters = request.params || {};
            var operation = request.operation;
            event.resourceIdentifier = {
                bucketName: parameters.Bucket,
            };
            switch (operation) {
                case 'headObject':
                // fall through
                case 'getObject':
                // fall through
                case 'putObject':
                    event.request = {
                        key: parameters.Key,
                        bucketName: parameters.Bucket,
                    };
                    event.resourceIdentifier = {
                        bucketName: parameters.Bucket,
                        key: parameters.Key,
                    };
                    break;
                default:
                    break;
            }
        },
        responseHandler: function (response, event) {
            switch (response.request.operation) {
                case 'listObjects':
                    event.response.files = response.data.Contents.map(function (entry) { return ({
                        key: "" + entry.Key,
                        size: entry.Size,
                        etag: entry.Etag,
                    }); });
                    break;
                case 'putObject':
                    event.response.etag = response.data.ETag.replace(/"/g, '');
                    break;
                case 'headObject':
                // fall through
                case 'getObject':
                    event.response.fileSize = response.data.ContentLength;
                    event.response.etag = response.data.ETag.replace(/"/g, '');
                    event.response = response.data.LastModified;
                    break;
                default:
                    break;
            }
        },
    };
    var kinesisEventCreator = {
        /**
         * Updates an event with the appropriate fields from a Kinesis request
         * @param {object} request The AWS.Request object
         * @param {proto.event_pb.Event} event The event to update the data on
         */
        requestHandler: function (request, event) {
            var parameters = request.params || {};
            event.resourceIdentifier = {
                streamName: parameters.StreamName,
                paritionKey: parameters.PartitionKey,
            };
            event.request.data = parameters.Data;
        },
        /**
         * Updates an event with the appropriate fields from a Kinesis response
         * @param {object} response The AWS.Response object
         * @param {proto.event_pb.Event} event The event to update the data on
         */
        responseHandler: function (response, event) {
            switch (response.request.operation) {
                case 'putRecord':
                    event.response.shardId = response.data.ShardId;
                    event.response.sequenceNumber = response.data.SequenceNumber;
                    break;
                default:
                    break;
            }
        },
    };
    var SNSEventCreator = {
        requestHandler: function (request, event) {
            var parameters = request.params || {};
            var resourceArn = parameters.TopicArn || parameters.TargetArn;
            event.resourceIdentifier = {
                resourceArn: resourceArn,
            };
            event.request.message = parameters.Message;
        },
        responseHandler: function (response, event) {
            switch (response.request.operation) {
                case 'publish':
                    event.response.messageId = response.data.MessageId;
                    break;
                default:
                    break;
            }
        },
    };
    var SQSEventCreator = {
        requestHandler: function (request, event) {
            var parameters = request.params || {};
            var queueName;
            if ('QueueUrl' in parameters) {
                queueName = parameters.QueueUrl.split('/').pop();
            }
            if ('QueueName' in parameters) {
                queueName = parameters.QueueName;
            }
            event.resourceIdentifier = {
                queueName: queueName,
            };
            var entry = 'Entries' in parameters ? parameters.Entries : parameters;
            if ('MessageBody' in entry) {
                event.request.messageBody = entry.MessageBody;
            }
            if ('MessageAttributes' in entry) {
                event.request.messageAttributes = entry.MessageAttributes;
            }
        },
        responseHandler: function (response, event) {
            switch (response.request.operation) {
                case 'sendMessage':
                    event.response.messageId = response.data.MessageId;
                    event.response.bodyMd5 = response.data.MD5OfMessageBody;
                    break;
                case 'receiveMessage': {
                    var messagesNumber = 0;
                    if ('Messages' in response.data && response.data.Messages.length > 0) {
                        messagesNumber = response.data.Messages.length;
                        event.response.messageIds = response.data.Messages.map(function (x) { return x.MessageId; });
                        event.response.snsTrigger = getSNSTrigger(response.data.Messages);
                        event.response.messagesNumber = messagesNumber;
                    }
                    break;
                }
                default:
                    break;
            }
        },
    };
    var SESEventCreator = {
        requestHandler: function (request, event) {
            var parameters = request.params || {};
            switch (request.operation) {
                case 'sendEmail':
                    event.request.source = parameters.Source;
                    event.request.destination = parameters.Destination.ToAddresses;
                    event.request.subject = parameters.Message.Subject.Data;
                    event.request.messageText = parameters.Message.Body.Text.Data;
                    event.request.messageHtml = parameters.Message.Body.Html.Data;
                    break;
                default:
                    break;
            }
        },
        responseHandler: function (response, event) {
            switch (response.request.operation) {
                case 'sendEmail':
                    event.response.messageId = response.data.MessageId;
                    break;
                default:
                    break;
            }
        },
    };
    var lambdaEventCreator = {
        requestHandler: function (request, event) {
            var parameters = request.params || {};
            event.resourceIdentifier = {
                functionName: parameters.FunctionName,
            };
            event.request.payload = parameters.Payload;
        },
        responseHandler: function () { },
    };
    var dynamoDBEventCreator = {
        requestHandler: function (request, event) {
            var e_1, _a;
            var parameters = request.params || {};
            var operation = request.operation;
            event.resourceIdentifier = {
                tableName: parameters.TableName,
            };
            switch (operation) {
                case 'deleteItem':
                case 'getItem':
                    event.request.key = parameters.Key;
                    break;
                case 'putItem':
                    event.request.key = parameters.Key;
                    event.request.item = parameters.Item;
                    break;
                case 'updateItem':
                    event.request.key = parameters.Key;
                    event.request.updateExpression = parameters.UpdateExpression;
                    event.request.expressionAttributeName = parameters.ExpressionAttributeNames;
                    event.request.expressionAttributeValues = parameters.ExpressionAttributeValues;
                    break;
                case 'query': {
                    event.request.keyConditions = parameters.KeyConditions;
                    event.request.queryFilter = parameters.QueryFilter;
                    event.request.exclusiveStartKey = parameters.ExclusiveStartKey;
                    event.request.projectionExpression = parameters.ProjectionExpression;
                    event.request.filterExpression = parameters.FilterExpression;
                    event.request.keyConditionExpression = parameters.KeyConditionExpression;
                    event.request.expressionAttributeValues = parameters.ExpressionAttributeValues;
                    break;
                }
                case 'scan': {
                    event.request.keyConditions = parameters.ScanFilter;
                    event.request.exclusiveStartKey = parameters.ExclusiveStartKey;
                    event.request.projectionExpression = parameters.ProjectionExpression;
                    event.request.filterExpression = parameters.FilterExpression;
                    event.request.expressionAttributeValues = parameters.ExpressionAttributeValues;
                    break;
                }
                case 'batchWriteItem': {
                    var tableNames = Object.keys(parameters.RequestItems);
                    event.resourceIdentifier = {
                        tableNames: tableNames,
                    };
                    var addedItems_1 = [];
                    var deletedKeys_1 = [];
                    try {
                        for (var tableNames_1 = __values(tableNames), tableNames_1_1 = tableNames_1.next(); !tableNames_1_1.done; tableNames_1_1 = tableNames_1.next()) {
                            var tableName = tableNames_1_1.value;
                            parameters.RequestItems[tableName].forEach(function (item) {
                                if (item.PutRequest) {
                                    addedItems_1.push(item.PutRequest.Item);
                                }
                                if (item.DeleteRequest) {
                                    deletedKeys_1.push(item.DeleteRequest.Key);
                                }
                            });
                        }
                    }
                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                    finally {
                        try {
                            if (tableNames_1_1 && !tableNames_1_1.done && (_a = tableNames_1.return)) _a.call(tableNames_1);
                        }
                        finally { if (e_1) throw e_1.error; }
                    }
                    if (addedItems_1.length !== 0) {
                        event.request.addedItems = addedItems_1;
                    }
                    if (deletedKeys_1.length !== 0) {
                        event.request.deletedKeys = deletedKeys_1;
                    }
                    break;
                }
                default:
                    break;
            }
        },
        responseHandler: function (response, event) {
            switch (response.request.operation) {
                case 'getItem':
                    event.response.item = response.data.Item;
                    break;
                case 'listTables':
                    event.response.tableNames = response.data.TableNames;
                    break;
                case 'scan':
                case 'query': {
                    event.response.items = response.data.Items;
                    event.response.lastEvaluatedKey = response.data.LastEvaluatedKey;
                    break;
                }
                default:
                    break;
            }
        },
    };
    var athenaEventCreator = {
        requestHandler: function (request, event) {
            var parameters = request.params || {};
            switch (request.operation) {
                case 'startQueryExecution':
                    if ('QueryExecutionContext' in parameters
                        && 'Database' in parameters.QueryExecutionContext) {
                        event.resourceIdentifier = {
                            database: parameters.QueryExecutionContext.Database,
                        };
                    }
                    event.request.query = parameters.QueryString;
                    break;
                case 'getQueryExecution':
                case 'getQueryResults':
                case 'stopQueryExecution':
                    event.request.queryExecutionId = parameters.QueryExecutionId;
                    break;
                default:
                    break;
            }
        },
        responseHandler: function (response, event) {
            switch (response.request.operation) {
                case 'getQueryExecution':
                    if ('Status' in response.data.QueryExecution
                        && 'State' in response.data.QueryExecution.Status) {
                        event.response.state = response.data.QueryExecution.Status.State;
                    }
                    if ('ResultConfiguration' in response.data.QueryExecution
                        && 'OutputLocation' in response.data.QueryExecution.Status) {
                        event.response.resultLocation = response.data.QueryExecution.ResultConfiguration.OutputLocation;
                    }
                    event.response.queryId = response.data.QueryExecutionId;
                    event.response.query = response.data.Query;
                    break;
                case 'getQueryResults':
                    event.response.rowCount = response.data.ResultSet.Rows.length;
                    break;
                case 'startQueryExecution':
                    event.response.queryId = response.data.QueryExecutionId;
                    break;
                default:
                    break;
            }
        },
    };
    var batchEventCreator = {
        requestHandler: function (request, event) {
            var parameters = request.params || {};
            var operation = request.operation;
            switch (operation) {
                case 'submitJob': {
                    event.resourceIdentifier = {
                        jobName: parameters.jobName,
                    };
                    event.request.jobDefinition = parameters.jobDefinition;
                    event.request.jobQueue = parameters.jobQueue;
                    break;
                }
                default:
                    break;
            }
        },
        responseHandler: function (response, event) {
            switch (response.request.operation) {
                case 'submitJob':
                    event.response.jobId = response.data.jobId;
                    break;
                default:
                    break;
            }
        },
    };
    var specificEventCreators = {
        s3: s3EventCreator,
        kinesis: kinesisEventCreator,
        sns: SNSEventCreator,
        sqs: SQSEventCreator,
        ses: SESEventCreator,
        lambda: lambdaEventCreator,
        dynamodb: dynamoDBEventCreator,
        athena: athenaEventCreator,
        batch: batchEventCreator,
    };
    /**
     * Wraps the aws-sdk Request object send/promise function with tracing
     * @param {Function} wrappedFunction The function to wrap
     * @returns {Function} The wrapped function
     */
    function AWSSDKWrapper(wrappedFunction) {
        return function internalAWSSDKWrapper(callback) {
            try {
                var request_1 = this;
                var serviceIdentifier_1 = request_1.service.constructor.prototype.serviceIdentifier;
                if (!(serviceIdentifier_1 in specificEventCreators)) {
                    // resource is not supported yet
                    return wrappedFunction.apply(this, [callback]);
                }
                var event_1 = tracer.resourceAccessStart(serviceIdentifier_1, undefined, {
                    request: {
                        operation: request_1.operation,
                    },
                });
                if ('patchInput' in specificEventCreators[serviceIdentifier_1]) {
                    specificEventCreators[serviceIdentifier_1].patchInput(this, event_1);
                }
                request_1
                    .on('send', function () {
                    try {
                        specificEventCreators[serviceIdentifier_1].requestHandler(request_1, event_1);
                    }
                    catch (e) {
                        debugLog(e);
                    }
                })
                    .on('error', function (error) {
                    try {
                        event_1.end = Date.now();
                        event_1.error = serializeError$1(error);
                        event_1.status = 'ERROR';
                    }
                    catch (e) {
                        debugLog(e);
                    }
                })
                    .on('complete', function (response) {
                    try {
                        event_1.end = Date.now();
                        event_1.status = 'OK';
                        event_1.request.requestId = response.requestId;
                        if (response.data) {
                            event_1.response.statusCode = response.httpResponse.statusCode;
                            event_1.status = 'OK';
                            specificEventCreators[serviceIdentifier_1].responseHandler(response, event_1);
                        }
                        if (response.error !== null) {
                            event_1.error = JSON.stringify(response.error);
                            event_1.status = 'ERROR';
                        }
                    }
                    catch (e) {
                        debugLog(e);
                    }
                });
            }
            catch (error) {
                debugLog(error);
            }
            return wrappedFunction.apply(this, [callback]);
        };
    }
    function wrapPromiseOnAdd(wrappedFunction) {
        return function internalWrapPromiseOnAdd(promiseDependency) {
            var result = wrappedFunction.apply(this, [promiseDependency]);
            try {
                // it is OK to just re-wrap, as the original function overrides
                // `promise` anyway
                patchModule('aws-sdk', 'promise', AWSSDKWrapper, function (AWSmod) { return AWSmod.Request.prototype; });
            }
            catch (err) {
                debugLog(err);
            }
            return result;
        };
    }
    var awsSdkTracker = {
        init: function () {
            patchModule('aws-sdk', 'send', AWSSDKWrapper, function (AWSmod) { return AWSmod.Request.prototype; });
            patchModule('aws-sdk', 'promise', AWSSDKWrapper, function (AWSmod) { return AWSmod.Request.prototype; });
            patchModule('aws-sdk', 'addPromisesToClass', wrapPromiseOnAdd, function (AWSmod) { return AWSmod.Request; });
        },
    };

    var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

    function unwrapExports (x) {
    	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
    }

    function createCommonjsModule(fn, module) {
    	return module = { exports: {} }, fn(module, module.exports), module.exports;
    }

    var BigInteger = createCommonjsModule(function (module) {
    var bigInt = (function (undefined) {

        var BASE = 1e7,
            LOG_BASE = 7,
            MAX_INT = 9007199254740992,
            MAX_INT_ARR = smallToArray(MAX_INT),
            DEFAULT_ALPHABET = "0123456789abcdefghijklmnopqrstuvwxyz";

        var supportsNativeBigInt = typeof BigInt === "function";

        function Integer(v, radix, alphabet, caseSensitive) {
            if (typeof v === "undefined") return Integer[0];
            if (typeof radix !== "undefined") return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);
            return parseValue(v);
        }

        function BigInteger(value, sign) {
            this.value = value;
            this.sign = sign;
            this.isSmall = false;
        }
        BigInteger.prototype = Object.create(Integer.prototype);

        function SmallInteger(value) {
            this.value = value;
            this.sign = value < 0;
            this.isSmall = true;
        }
        SmallInteger.prototype = Object.create(Integer.prototype);

        function NativeBigInt(value) {
            this.value = value;
        }
        NativeBigInt.prototype = Object.create(Integer.prototype);

        function isPrecise(n) {
            return -MAX_INT < n && n < MAX_INT;
        }

        function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes
            if (n < 1e7)
                return [n];
            if (n < 1e14)
                return [n % 1e7, Math.floor(n / 1e7)];
            return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];
        }

        function arrayToSmall(arr) { // If BASE changes this function may need to change
            trim(arr);
            var length = arr.length;
            if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {
                switch (length) {
                    case 0: return 0;
                    case 1: return arr[0];
                    case 2: return arr[0] + arr[1] * BASE;
                    default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;
                }
            }
            return arr;
        }

        function trim(v) {
            var i = v.length;
            while (v[--i] === 0);
            v.length = i + 1;
        }

        function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger
            var x = new Array(length);
            var i = -1;
            while (++i < length) {
                x[i] = 0;
            }
            return x;
        }

        function truncate(n) {
            if (n > 0) return Math.floor(n);
            return Math.ceil(n);
        }

        function add(a, b) { // assumes a and b are arrays with a.length >= b.length
            var l_a = a.length,
                l_b = b.length,
                r = new Array(l_a),
                carry = 0,
                base = BASE,
                sum, i;
            for (i = 0; i < l_b; i++) {
                sum = a[i] + b[i] + carry;
                carry = sum >= base ? 1 : 0;
                r[i] = sum - carry * base;
            }
            while (i < l_a) {
                sum = a[i] + carry;
                carry = sum === base ? 1 : 0;
                r[i++] = sum - carry * base;
            }
            if (carry > 0) r.push(carry);
            return r;
        }

        function addAny(a, b) {
            if (a.length >= b.length) return add(a, b);
            return add(b, a);
        }

        function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT
            var l = a.length,
                r = new Array(l),
                base = BASE,
                sum, i;
            for (i = 0; i < l; i++) {
                sum = a[i] - base + carry;
                carry = Math.floor(sum / base);
                r[i] = sum - carry * base;
                carry += 1;
            }
            while (carry > 0) {
                r[i++] = carry % base;
                carry = Math.floor(carry / base);
            }
            return r;
        }

        BigInteger.prototype.add = function (v) {
            var n = parseValue(v);
            if (this.sign !== n.sign) {
                return this.subtract(n.negate());
            }
            var a = this.value, b = n.value;
            if (n.isSmall) {
                return new BigInteger(addSmall(a, Math.abs(b)), this.sign);
            }
            return new BigInteger(addAny(a, b), this.sign);
        };
        BigInteger.prototype.plus = BigInteger.prototype.add;

        SmallInteger.prototype.add = function (v) {
            var n = parseValue(v);
            var a = this.value;
            if (a < 0 !== n.sign) {
                return this.subtract(n.negate());
            }
            var b = n.value;
            if (n.isSmall) {
                if (isPrecise(a + b)) return new SmallInteger(a + b);
                b = smallToArray(Math.abs(b));
            }
            return new BigInteger(addSmall(b, Math.abs(a)), a < 0);
        };
        SmallInteger.prototype.plus = SmallInteger.prototype.add;

        NativeBigInt.prototype.add = function (v) {
            return new NativeBigInt(this.value + parseValue(v).value);
        };
        NativeBigInt.prototype.plus = NativeBigInt.prototype.add;

        function subtract(a, b) { // assumes a and b are arrays with a >= b
            var a_l = a.length,
                b_l = b.length,
                r = new Array(a_l),
                borrow = 0,
                base = BASE,
                i, difference;
            for (i = 0; i < b_l; i++) {
                difference = a[i] - borrow - b[i];
                if (difference < 0) {
                    difference += base;
                    borrow = 1;
                } else borrow = 0;
                r[i] = difference;
            }
            for (i = b_l; i < a_l; i++) {
                difference = a[i] - borrow;
                if (difference < 0) difference += base;
                else {
                    r[i++] = difference;
                    break;
                }
                r[i] = difference;
            }
            for (; i < a_l; i++) {
                r[i] = a[i];
            }
            trim(r);
            return r;
        }

        function subtractAny(a, b, sign) {
            var value;
            if (compareAbs(a, b) >= 0) {
                value = subtract(a, b);
            } else {
                value = subtract(b, a);
                sign = !sign;
            }
            value = arrayToSmall(value);
            if (typeof value === "number") {
                if (sign) value = -value;
                return new SmallInteger(value);
            }
            return new BigInteger(value, sign);
        }

        function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT
            var l = a.length,
                r = new Array(l),
                carry = -b,
                base = BASE,
                i, difference;
            for (i = 0; i < l; i++) {
                difference = a[i] + carry;
                carry = Math.floor(difference / base);
                difference %= base;
                r[i] = difference < 0 ? difference + base : difference;
            }
            r = arrayToSmall(r);
            if (typeof r === "number") {
                if (sign) r = -r;
                return new SmallInteger(r);
            } return new BigInteger(r, sign);
        }

        BigInteger.prototype.subtract = function (v) {
            var n = parseValue(v);
            if (this.sign !== n.sign) {
                return this.add(n.negate());
            }
            var a = this.value, b = n.value;
            if (n.isSmall)
                return subtractSmall(a, Math.abs(b), this.sign);
            return subtractAny(a, b, this.sign);
        };
        BigInteger.prototype.minus = BigInteger.prototype.subtract;

        SmallInteger.prototype.subtract = function (v) {
            var n = parseValue(v);
            var a = this.value;
            if (a < 0 !== n.sign) {
                return this.add(n.negate());
            }
            var b = n.value;
            if (n.isSmall) {
                return new SmallInteger(a - b);
            }
            return subtractSmall(b, Math.abs(a), a >= 0);
        };
        SmallInteger.prototype.minus = SmallInteger.prototype.subtract;

        NativeBigInt.prototype.subtract = function (v) {
            return new NativeBigInt(this.value - parseValue(v).value);
        };
        NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;

        BigInteger.prototype.negate = function () {
            return new BigInteger(this.value, !this.sign);
        };
        SmallInteger.prototype.negate = function () {
            var sign = this.sign;
            var small = new SmallInteger(-this.value);
            small.sign = !sign;
            return small;
        };
        NativeBigInt.prototype.negate = function () {
            return new NativeBigInt(-this.value);
        };

        BigInteger.prototype.abs = function () {
            return new BigInteger(this.value, false);
        };
        SmallInteger.prototype.abs = function () {
            return new SmallInteger(Math.abs(this.value));
        };
        NativeBigInt.prototype.abs = function () {
            return new NativeBigInt(this.value >= 0 ? this.value : -this.value);
        };


        function multiplyLong(a, b) {
            var a_l = a.length,
                b_l = b.length,
                l = a_l + b_l,
                r = createArray(l),
                base = BASE,
                product, carry, i, a_i, b_j;
            for (i = 0; i < a_l; ++i) {
                a_i = a[i];
                for (var j = 0; j < b_l; ++j) {
                    b_j = b[j];
                    product = a_i * b_j + r[i + j];
                    carry = Math.floor(product / base);
                    r[i + j] = product - carry * base;
                    r[i + j + 1] += carry;
                }
            }
            trim(r);
            return r;
        }

        function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE
            var l = a.length,
                r = new Array(l),
                base = BASE,
                carry = 0,
                product, i;
            for (i = 0; i < l; i++) {
                product = a[i] * b + carry;
                carry = Math.floor(product / base);
                r[i] = product - carry * base;
            }
            while (carry > 0) {
                r[i++] = carry % base;
                carry = Math.floor(carry / base);
            }
            return r;
        }

        function shiftLeft(x, n) {
            var r = [];
            while (n-- > 0) r.push(0);
            return r.concat(x);
        }

        function multiplyKaratsuba(x, y) {
            var n = Math.max(x.length, y.length);

            if (n <= 30) return multiplyLong(x, y);
            n = Math.ceil(n / 2);

            var b = x.slice(n),
                a = x.slice(0, n),
                d = y.slice(n),
                c = y.slice(0, n);

            var ac = multiplyKaratsuba(a, c),
                bd = multiplyKaratsuba(b, d),
                abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));

            var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));
            trim(product);
            return product;
        }

        // The following function is derived from a surface fit of a graph plotting the performance difference
        // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.
        function useKaratsuba(l1, l2) {
            return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;
        }

        BigInteger.prototype.multiply = function (v) {
            var n = parseValue(v),
                a = this.value, b = n.value,
                sign = this.sign !== n.sign,
                abs;
            if (n.isSmall) {
                if (b === 0) return Integer[0];
                if (b === 1) return this;
                if (b === -1) return this.negate();
                abs = Math.abs(b);
                if (abs < BASE) {
                    return new BigInteger(multiplySmall(a, abs), sign);
                }
                b = smallToArray(abs);
            }
            if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes
                return new BigInteger(multiplyKaratsuba(a, b), sign);
            return new BigInteger(multiplyLong(a, b), sign);
        };

        BigInteger.prototype.times = BigInteger.prototype.multiply;

        function multiplySmallAndArray(a, b, sign) { // a >= 0
            if (a < BASE) {
                return new BigInteger(multiplySmall(b, a), sign);
            }
            return new BigInteger(multiplyLong(b, smallToArray(a)), sign);
        }
        SmallInteger.prototype._multiplyBySmall = function (a) {
            if (isPrecise(a.value * this.value)) {
                return new SmallInteger(a.value * this.value);
            }
            return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);
        };
        BigInteger.prototype._multiplyBySmall = function (a) {
            if (a.value === 0) return Integer[0];
            if (a.value === 1) return this;
            if (a.value === -1) return this.negate();
            return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);
        };
        SmallInteger.prototype.multiply = function (v) {
            return parseValue(v)._multiplyBySmall(this);
        };
        SmallInteger.prototype.times = SmallInteger.prototype.multiply;

        NativeBigInt.prototype.multiply = function (v) {
            return new NativeBigInt(this.value * parseValue(v).value);
        };
        NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;

        function square(a) {
            //console.assert(2 * BASE * BASE < MAX_INT);
            var l = a.length,
                r = createArray(l + l),
                base = BASE,
                product, carry, i, a_i, a_j;
            for (i = 0; i < l; i++) {
                a_i = a[i];
                carry = 0 - a_i * a_i;
                for (var j = i; j < l; j++) {
                    a_j = a[j];
                    product = 2 * (a_i * a_j) + r[i + j] + carry;
                    carry = Math.floor(product / base);
                    r[i + j] = product - carry * base;
                }
                r[i + l] = carry;
            }
            trim(r);
            return r;
        }

        BigInteger.prototype.square = function () {
            return new BigInteger(square(this.value), false);
        };

        SmallInteger.prototype.square = function () {
            var value = this.value * this.value;
            if (isPrecise(value)) return new SmallInteger(value);
            return new BigInteger(square(smallToArray(Math.abs(this.value))), false);
        };

        NativeBigInt.prototype.square = function (v) {
            return new NativeBigInt(this.value * this.value);
        };

        function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.
            var a_l = a.length,
                b_l = b.length,
                base = BASE,
                result = createArray(b.length),
                divisorMostSignificantDigit = b[b_l - 1],
                // normalization
                lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),
                remainder = multiplySmall(a, lambda),
                divisor = multiplySmall(b, lambda),
                quotientDigit, shift, carry, borrow, i, l, q;
            if (remainder.length <= a_l) remainder.push(0);
            divisor.push(0);
            divisorMostSignificantDigit = divisor[b_l - 1];
            for (shift = a_l - b_l; shift >= 0; shift--) {
                quotientDigit = base - 1;
                if (remainder[shift + b_l] !== divisorMostSignificantDigit) {
                    quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);
                }
                // quotientDigit <= base - 1
                carry = 0;
                borrow = 0;
                l = divisor.length;
                for (i = 0; i < l; i++) {
                    carry += quotientDigit * divisor[i];
                    q = Math.floor(carry / base);
                    borrow += remainder[shift + i] - (carry - q * base);
                    carry = q;
                    if (borrow < 0) {
                        remainder[shift + i] = borrow + base;
                        borrow = -1;
                    } else {
                        remainder[shift + i] = borrow;
                        borrow = 0;
                    }
                }
                while (borrow !== 0) {
                    quotientDigit -= 1;
                    carry = 0;
                    for (i = 0; i < l; i++) {
                        carry += remainder[shift + i] - base + divisor[i];
                        if (carry < 0) {
                            remainder[shift + i] = carry + base;
                            carry = 0;
                        } else {
                            remainder[shift + i] = carry;
                            carry = 1;
                        }
                    }
                    borrow += carry;
                }
                result[shift] = quotientDigit;
            }
            // denormalization
            remainder = divModSmall(remainder, lambda)[0];
            return [arrayToSmall(result), arrayToSmall(remainder)];
        }

        function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/
            // Performs faster than divMod1 on larger input sizes.
            var a_l = a.length,
                b_l = b.length,
                result = [],
                part = [],
                base = BASE,
                guess, xlen, highx, highy, check;
            while (a_l) {
                part.unshift(a[--a_l]);
                trim(part);
                if (compareAbs(part, b) < 0) {
                    result.push(0);
                    continue;
                }
                xlen = part.length;
                highx = part[xlen - 1] * base + part[xlen - 2];
                highy = b[b_l - 1] * base + b[b_l - 2];
                if (xlen > b_l) {
                    highx = (highx + 1) * base;
                }
                guess = Math.ceil(highx / highy);
                do {
                    check = multiplySmall(b, guess);
                    if (compareAbs(check, part) <= 0) break;
                    guess--;
                } while (guess);
                result.push(guess);
                part = subtract(part, check);
            }
            result.reverse();
            return [arrayToSmall(result), arrayToSmall(part)];
        }

        function divModSmall(value, lambda) {
            var length = value.length,
                quotient = createArray(length),
                base = BASE,
                i, q, remainder, divisor;
            remainder = 0;
            for (i = length - 1; i >= 0; --i) {
                divisor = remainder * base + value[i];
                q = truncate(divisor / lambda);
                remainder = divisor - q * lambda;
                quotient[i] = q | 0;
            }
            return [quotient, remainder | 0];
        }

        function divModAny(self, v) {
            var value, n = parseValue(v);
            if (supportsNativeBigInt) {
                return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)];
            }
            var a = self.value, b = n.value;
            var quotient;
            if (b === 0) throw new Error("Cannot divide by zero");
            if (self.isSmall) {
                if (n.isSmall) {
                    return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];
                }
                return [Integer[0], self];
            }
            if (n.isSmall) {
                if (b === 1) return [self, Integer[0]];
                if (b == -1) return [self.negate(), Integer[0]];
                var abs = Math.abs(b);
                if (abs < BASE) {
                    value = divModSmall(a, abs);
                    quotient = arrayToSmall(value[0]);
                    var remainder = value[1];
                    if (self.sign) remainder = -remainder;
                    if (typeof quotient === "number") {
                        if (self.sign !== n.sign) quotient = -quotient;
                        return [new SmallInteger(quotient), new SmallInteger(remainder)];
                    }
                    return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];
                }
                b = smallToArray(abs);
            }
            var comparison = compareAbs(a, b);
            if (comparison === -1) return [Integer[0], self];
            if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];

            // divMod1 is faster on smaller input sizes
            if (a.length + b.length <= 200)
                value = divMod1(a, b);
            else value = divMod2(a, b);

            quotient = value[0];
            var qSign = self.sign !== n.sign,
                mod = value[1],
                mSign = self.sign;
            if (typeof quotient === "number") {
                if (qSign) quotient = -quotient;
                quotient = new SmallInteger(quotient);
            } else quotient = new BigInteger(quotient, qSign);
            if (typeof mod === "number") {
                if (mSign) mod = -mod;
                mod = new SmallInteger(mod);
            } else mod = new BigInteger(mod, mSign);
            return [quotient, mod];
        }

        BigInteger.prototype.divmod = function (v) {
            var result = divModAny(this, v);
            return {
                quotient: result[0],
                remainder: result[1]
            };
        };
        NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;


        BigInteger.prototype.divide = function (v) {
            return divModAny(this, v)[0];
        };
        NativeBigInt.prototype.over = NativeBigInt.prototype.divide = function (v) {
            return new NativeBigInt(this.value / parseValue(v).value);
        };
        SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;

        BigInteger.prototype.mod = function (v) {
            return divModAny(this, v)[1];
        };
        NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = function (v) {
            return new NativeBigInt(this.value % parseValue(v).value);
        };
        SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;

        BigInteger.prototype.pow = function (v) {
            var n = parseValue(v),
                a = this.value,
                b = n.value,
                value, x, y;
            if (b === 0) return Integer[1];
            if (a === 0) return Integer[0];
            if (a === 1) return Integer[1];
            if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];
            if (n.sign) {
                return Integer[0];
            }
            if (!n.isSmall) throw new Error("The exponent " + n.toString() + " is too large.");
            if (this.isSmall) {
                if (isPrecise(value = Math.pow(a, b)))
                    return new SmallInteger(truncate(value));
            }
            x = this;
            y = Integer[1];
            while (true) {
                if (b & 1 === 1) {
                    y = y.times(x);
                    --b;
                }
                if (b === 0) break;
                b /= 2;
                x = x.square();
            }
            return y;
        };
        SmallInteger.prototype.pow = BigInteger.prototype.pow;

        NativeBigInt.prototype.pow = function (v) {
            var n = parseValue(v);
            var a = this.value, b = n.value;
            var _0 = BigInt(0), _1 = BigInt(1), _2 = BigInt(2);
            if (b === _0) return Integer[1];
            if (a === _0) return Integer[0];
            if (a === _1) return Integer[1];
            if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];
            if (n.isNegative()) return new NativeBigInt(_0);
            var x = this;
            var y = Integer[1];
            while (true) {
                if ((b & _1) === _1) {
                    y = y.times(x);
                    --b;
                }
                if (b === _0) break;
                b /= _2;
                x = x.square();
            }
            return y;
        };

        BigInteger.prototype.modPow = function (exp, mod) {
            exp = parseValue(exp);
            mod = parseValue(mod);
            if (mod.isZero()) throw new Error("Cannot take modPow with modulus 0");
            var r = Integer[1],
                base = this.mod(mod);
            if (exp.isNegative()) {
                exp = exp.multiply(Integer[-1]);
                base = base.modInv(mod);
            }
            while (exp.isPositive()) {
                if (base.isZero()) return Integer[0];
                if (exp.isOdd()) r = r.multiply(base).mod(mod);
                exp = exp.divide(2);
                base = base.square().mod(mod);
            }
            return r;
        };
        NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;

        function compareAbs(a, b) {
            if (a.length !== b.length) {
                return a.length > b.length ? 1 : -1;
            }
            for (var i = a.length - 1; i >= 0; i--) {
                if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;
            }
            return 0;
        }

        BigInteger.prototype.compareAbs = function (v) {
            var n = parseValue(v),
                a = this.value,
                b = n.value;
            if (n.isSmall) return 1;
            return compareAbs(a, b);
        };
        SmallInteger.prototype.compareAbs = function (v) {
            var n = parseValue(v),
                a = Math.abs(this.value),
                b = n.value;
            if (n.isSmall) {
                b = Math.abs(b);
                return a === b ? 0 : a > b ? 1 : -1;
            }
            return -1;
        };
        NativeBigInt.prototype.compareAbs = function (v) {
            var a = this.value;
            var b = parseValue(v).value;
            a = a >= 0 ? a : -a;
            b = b >= 0 ? b : -b;
            return a === b ? 0 : a > b ? 1 : -1;
        };

        BigInteger.prototype.compare = function (v) {
            // See discussion about comparison with Infinity:
            // https://github.com/peterolson/BigInteger.js/issues/61
            if (v === Infinity) {
                return -1;
            }
            if (v === -Infinity) {
                return 1;
            }

            var n = parseValue(v),
                a = this.value,
                b = n.value;
            if (this.sign !== n.sign) {
                return n.sign ? 1 : -1;
            }
            if (n.isSmall) {
                return this.sign ? -1 : 1;
            }
            return compareAbs(a, b) * (this.sign ? -1 : 1);
        };
        BigInteger.prototype.compareTo = BigInteger.prototype.compare;

        SmallInteger.prototype.compare = function (v) {
            if (v === Infinity) {
                return -1;
            }
            if (v === -Infinity) {
                return 1;
            }

            var n = parseValue(v),
                a = this.value,
                b = n.value;
            if (n.isSmall) {
                return a == b ? 0 : a > b ? 1 : -1;
            }
            if (a < 0 !== n.sign) {
                return a < 0 ? -1 : 1;
            }
            return a < 0 ? 1 : -1;
        };
        SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;

        NativeBigInt.prototype.compare = function (v) {
            if (v === Infinity) {
                return -1;
            }
            if (v === -Infinity) {
                return 1;
            }
            var a = this.value;
            var b = parseValue(v).value;
            return a === b ? 0 : a > b ? 1 : -1;
        };
        NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;

        BigInteger.prototype.equals = function (v) {
            return this.compare(v) === 0;
        };
        NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;

        BigInteger.prototype.notEquals = function (v) {
            return this.compare(v) !== 0;
        };
        NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;

        BigInteger.prototype.greater = function (v) {
            return this.compare(v) > 0;
        };
        NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;

        BigInteger.prototype.lesser = function (v) {
            return this.compare(v) < 0;
        };
        NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;

        BigInteger.prototype.greaterOrEquals = function (v) {
            return this.compare(v) >= 0;
        };
        NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;

        BigInteger.prototype.lesserOrEquals = function (v) {
            return this.compare(v) <= 0;
        };
        NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;

        BigInteger.prototype.isEven = function () {
            return (this.value[0] & 1) === 0;
        };
        SmallInteger.prototype.isEven = function () {
            return (this.value & 1) === 0;
        };
        NativeBigInt.prototype.isEven = function () {
            return (this.value & BigInt(1)) === BigInt(0);
        };

        BigInteger.prototype.isOdd = function () {
            return (this.value[0] & 1) === 1;
        };
        SmallInteger.prototype.isOdd = function () {
            return (this.value & 1) === 1;
        };
        NativeBigInt.prototype.isOdd = function () {
            return (this.value & BigInt(1)) === BigInt(1);
        };

        BigInteger.prototype.isPositive = function () {
            return !this.sign;
        };
        SmallInteger.prototype.isPositive = function () {
            return this.value > 0;
        };
        NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;

        BigInteger.prototype.isNegative = function () {
            return this.sign;
        };
        SmallInteger.prototype.isNegative = function () {
            return this.value < 0;
        };
        NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;

        BigInteger.prototype.isUnit = function () {
            return false;
        };
        SmallInteger.prototype.isUnit = function () {
            return Math.abs(this.value) === 1;
        };
        NativeBigInt.prototype.isUnit = function () {
            return this.abs().value === BigInt(1);
        };

        BigInteger.prototype.isZero = function () {
            return false;
        };
        SmallInteger.prototype.isZero = function () {
            return this.value === 0;
        };
        NativeBigInt.prototype.isZero = function () {
            return this.value === BigInt(0);
        };

        BigInteger.prototype.isDivisibleBy = function (v) {
            var n = parseValue(v);
            if (n.isZero()) return false;
            if (n.isUnit()) return true;
            if (n.compareAbs(2) === 0) return this.isEven();
            return this.mod(n).isZero();
        };
        NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;

        function isBasicPrime(v) {
            var n = v.abs();
            if (n.isUnit()) return false;
            if (n.equals(2) || n.equals(3) || n.equals(5)) return true;
            if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;
            if (n.lesser(49)) return true;
            // we don't know if it's prime: let the other functions figure it out
        }

        function millerRabinTest(n, a) {
            var nPrev = n.prev(),
                b = nPrev,
                r = 0,
                d, i, x;
            while (b.isEven()) b = b.divide(2), r++;
            next: for (i = 0; i < a.length; i++) {
                if (n.lesser(a[i])) continue;
                x = bigInt(a[i]).modPow(b, n);
                if (x.isUnit() || x.equals(nPrev)) continue;
                for (d = r - 1; d != 0; d--) {
                    x = x.square().mod(n);
                    if (x.isUnit()) return false;
                    if (x.equals(nPrev)) continue next;
                }
                return false;
            }
            return true;
        }

        // Set "strict" to true to force GRH-supported lower bound of 2*log(N)^2
        BigInteger.prototype.isPrime = function (strict) {
            var isPrime = isBasicPrime(this);
            if (isPrime !== undefined) return isPrime;
            var n = this.abs();
            var bits = n.bitLength();
            if (bits <= 64)
                return millerRabinTest(n, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);
            var logN = Math.log(2) * bits.toJSNumber();
            var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);
            for (var a = [], i = 0; i < t; i++) {
                a.push(bigInt(i + 2));
            }
            return millerRabinTest(n, a);
        };
        NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;

        BigInteger.prototype.isProbablePrime = function (iterations, rng) {
            var isPrime = isBasicPrime(this);
            if (isPrime !== undefined) return isPrime;
            var n = this.abs();
            var t = iterations === undefined ? 5 : iterations;
            for (var a = [], i = 0; i < t; i++) {
                a.push(bigInt.randBetween(2, n.minus(2), rng));
            }
            return millerRabinTest(n, a);
        };
        NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;

        BigInteger.prototype.modInv = function (n) {
            var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;
            while (!newR.isZero()) {
                q = r.divide(newR);
                lastT = t;
                lastR = r;
                t = newT;
                r = newR;
                newT = lastT.subtract(q.multiply(newT));
                newR = lastR.subtract(q.multiply(newR));
            }
            if (!r.isUnit()) throw new Error(this.toString() + " and " + n.toString() + " are not co-prime");
            if (t.compare(0) === -1) {
                t = t.add(n);
            }
            if (this.isNegative()) {
                return t.negate();
            }
            return t;
        };

        NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;

        BigInteger.prototype.next = function () {
            var value = this.value;
            if (this.sign) {
                return subtractSmall(value, 1, this.sign);
            }
            return new BigInteger(addSmall(value, 1), this.sign);
        };
        SmallInteger.prototype.next = function () {
            var value = this.value;
            if (value + 1 < MAX_INT) return new SmallInteger(value + 1);
            return new BigInteger(MAX_INT_ARR, false);
        };
        NativeBigInt.prototype.next = function () {
            return new NativeBigInt(this.value + BigInt(1));
        };

        BigInteger.prototype.prev = function () {
            var value = this.value;
            if (this.sign) {
                return new BigInteger(addSmall(value, 1), true);
            }
            return subtractSmall(value, 1, this.sign);
        };
        SmallInteger.prototype.prev = function () {
            var value = this.value;
            if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);
            return new BigInteger(MAX_INT_ARR, true);
        };
        NativeBigInt.prototype.prev = function () {
            return new NativeBigInt(this.value - BigInt(1));
        };

        var powersOfTwo = [1];
        while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);
        var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];

        function shift_isSmall(n) {
            return Math.abs(n) <= BASE;
        }

        BigInteger.prototype.shiftLeft = function (v) {
            var n = parseValue(v).toJSNumber();
            if (!shift_isSmall(n)) {
                throw new Error(String(n) + " is too large for shifting.");
            }
            if (n < 0) return this.shiftRight(-n);
            var result = this;
            if (result.isZero()) return result;
            while (n >= powers2Length) {
                result = result.multiply(highestPower2);
                n -= powers2Length - 1;
            }
            return result.multiply(powersOfTwo[n]);
        };
        NativeBigInt.prototype.shiftLeft = SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;

        BigInteger.prototype.shiftRight = function (v) {
            var remQuo;
            var n = parseValue(v).toJSNumber();
            if (!shift_isSmall(n)) {
                throw new Error(String(n) + " is too large for shifting.");
            }
            if (n < 0) return this.shiftLeft(-n);
            var result = this;
            while (n >= powers2Length) {
                if (result.isZero() || (result.isNegative() && result.isUnit())) return result;
                remQuo = divModAny(result, highestPower2);
                result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];
                n -= powers2Length - 1;
            }
            remQuo = divModAny(result, powersOfTwo[n]);
            return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];
        };
        NativeBigInt.prototype.shiftRight = SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;

        function bitwise(x, y, fn) {
            y = parseValue(y);
            var xSign = x.isNegative(), ySign = y.isNegative();
            var xRem = xSign ? x.not() : x,
                yRem = ySign ? y.not() : y;
            var xDigit = 0, yDigit = 0;
            var xDivMod = null, yDivMod = null;
            var result = [];
            while (!xRem.isZero() || !yRem.isZero()) {
                xDivMod = divModAny(xRem, highestPower2);
                xDigit = xDivMod[1].toJSNumber();
                if (xSign) {
                    xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers
                }

                yDivMod = divModAny(yRem, highestPower2);
                yDigit = yDivMod[1].toJSNumber();
                if (ySign) {
                    yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers
                }

                xRem = xDivMod[0];
                yRem = yDivMod[0];
                result.push(fn(xDigit, yDigit));
            }
            var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);
            for (var i = result.length - 1; i >= 0; i -= 1) {
                sum = sum.multiply(highestPower2).add(bigInt(result[i]));
            }
            return sum;
        }

        BigInteger.prototype.not = function () {
            return this.negate().prev();
        };
        NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;

        BigInteger.prototype.and = function (n) {
            return bitwise(this, n, function (a, b) { return a & b; });
        };
        NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;

        BigInteger.prototype.or = function (n) {
            return bitwise(this, n, function (a, b) { return a | b; });
        };
        NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;

        BigInteger.prototype.xor = function (n) {
            return bitwise(this, n, function (a, b) { return a ^ b; });
        };
        NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;

        var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;
        function roughLOB(n) { // get lowestOneBit (rough)
            // SmallInteger: return Min(lowestOneBit(n), 1 << 30)
            // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]
            var v = n.value,
                x = typeof v === "number" ? v | LOBMASK_I :
                    typeof v === "bigint" ? v | BigInt(LOBMASK_I) :
                        v[0] + v[1] * BASE | LOBMASK_BI;
            return x & -x;
        }

        function integerLogarithm(value, base) {
            if (base.compareTo(value) <= 0) {
                var tmp = integerLogarithm(value, base.square(base));
                var p = tmp.p;
                var e = tmp.e;
                var t = p.multiply(base);
                return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };
            }
            return { p: bigInt(1), e: 0 };
        }

        BigInteger.prototype.bitLength = function () {
            var n = this;
            if (n.compareTo(bigInt(0)) < 0) {
                n = n.negate().subtract(bigInt(1));
            }
            if (n.compareTo(bigInt(0)) === 0) {
                return bigInt(0);
            }
            return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));
        };
        NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;

        function max(a, b) {
            a = parseValue(a);
            b = parseValue(b);
            return a.greater(b) ? a : b;
        }
        function min(a, b) {
            a = parseValue(a);
            b = parseValue(b);
            return a.lesser(b) ? a : b;
        }
        function gcd(a, b) {
            a = parseValue(a).abs();
            b = parseValue(b).abs();
            if (a.equals(b)) return a;
            if (a.isZero()) return b;
            if (b.isZero()) return a;
            var c = Integer[1], d, t;
            while (a.isEven() && b.isEven()) {
                d = min(roughLOB(a), roughLOB(b));
                a = a.divide(d);
                b = b.divide(d);
                c = c.multiply(d);
            }
            while (a.isEven()) {
                a = a.divide(roughLOB(a));
            }
            do {
                while (b.isEven()) {
                    b = b.divide(roughLOB(b));
                }
                if (a.greater(b)) {
                    t = b; b = a; a = t;
                }
                b = b.subtract(a);
            } while (!b.isZero());
            return c.isUnit() ? a : a.multiply(c);
        }
        function lcm(a, b) {
            a = parseValue(a).abs();
            b = parseValue(b).abs();
            return a.divide(gcd(a, b)).multiply(b);
        }
        function randBetween(a, b, rng) {
            a = parseValue(a);
            b = parseValue(b);
            var usedRNG = rng || Math.random;
            var low = min(a, b), high = max(a, b);
            var range = high.subtract(low).add(1);
            if (range.isSmall) return low.add(Math.floor(usedRNG() * range));
            var digits = toBase(range, BASE).value;
            var result = [], restricted = true;
            for (var i = 0; i < digits.length; i++) {
                var top = restricted ? digits[i] : BASE;
                var digit = truncate(usedRNG() * top);
                result.push(digit);
                if (digit < top) restricted = false;
            }
            return low.add(Integer.fromArray(result, BASE, false));
        }

        var parseBase = function (text, base, alphabet, caseSensitive) {
            alphabet = alphabet || DEFAULT_ALPHABET;
            text = String(text);
            if (!caseSensitive) {
                text = text.toLowerCase();
                alphabet = alphabet.toLowerCase();
            }
            var length = text.length;
            var i;
            var absBase = Math.abs(base);
            var alphabetValues = {};
            for (i = 0; i < alphabet.length; i++) {
                alphabetValues[alphabet[i]] = i;
            }
            for (i = 0; i < length; i++) {
                var c = text[i];
                if (c === "-") continue;
                if (c in alphabetValues) {
                    if (alphabetValues[c] >= absBase) {
                        if (c === "1" && absBase === 1) continue;
                        throw new Error(c + " is not a valid digit in base " + base + ".");
                    }
                }
            }
            base = parseValue(base);
            var digits = [];
            var isNegative = text[0] === "-";
            for (i = isNegative ? 1 : 0; i < text.length; i++) {
                var c = text[i];
                if (c in alphabetValues) digits.push(parseValue(alphabetValues[c]));
                else if (c === "<") {
                    var start = i;
                    do { i++; } while (text[i] !== ">" && i < text.length);
                    digits.push(parseValue(text.slice(start + 1, i)));
                }
                else throw new Error(c + " is not a valid character");
            }
            return parseBaseFromArray(digits, base, isNegative);
        };

        function parseBaseFromArray(digits, base, isNegative) {
            var val = Integer[0], pow = Integer[1], i;
            for (i = digits.length - 1; i >= 0; i--) {
                val = val.add(digits[i].times(pow));
                pow = pow.times(base);
            }
            return isNegative ? val.negate() : val;
        }

        function stringify(digit, alphabet) {
            alphabet = alphabet || DEFAULT_ALPHABET;
            if (digit < alphabet.length) {
                return alphabet[digit];
            }
            return "<" + digit + ">";
        }

        function toBase(n, base) {
            base = bigInt(base);
            if (base.isZero()) {
                if (n.isZero()) return { value: [0], isNegative: false };
                throw new Error("Cannot convert nonzero numbers to base 0.");
            }
            if (base.equals(-1)) {
                if (n.isZero()) return { value: [0], isNegative: false };
                if (n.isNegative())
                    return {
                        value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber()))
                            .map(Array.prototype.valueOf, [1, 0])
                        ),
                        isNegative: false
                    };

                var arr = Array.apply(null, Array(n.toJSNumber() - 1))
                    .map(Array.prototype.valueOf, [0, 1]);
                arr.unshift([1]);
                return {
                    value: [].concat.apply([], arr),
                    isNegative: false
                };
            }

            var neg = false;
            if (n.isNegative() && base.isPositive()) {
                neg = true;
                n = n.abs();
            }
            if (base.isUnit()) {
                if (n.isZero()) return { value: [0], isNegative: false };

                return {
                    value: Array.apply(null, Array(n.toJSNumber()))
                        .map(Number.prototype.valueOf, 1),
                    isNegative: neg
                };
            }
            var out = [];
            var left = n, divmod;
            while (left.isNegative() || left.compareAbs(base) >= 0) {
                divmod = left.divmod(base);
                left = divmod.quotient;
                var digit = divmod.remainder;
                if (digit.isNegative()) {
                    digit = base.minus(digit).abs();
                    left = left.next();
                }
                out.push(digit.toJSNumber());
            }
            out.push(left.toJSNumber());
            return { value: out.reverse(), isNegative: neg };
        }

        function toBaseString(n, base, alphabet) {
            var arr = toBase(n, base);
            return (arr.isNegative ? "-" : "") + arr.value.map(function (x) {
                return stringify(x, alphabet);
            }).join('');
        }

        BigInteger.prototype.toArray = function (radix) {
            return toBase(this, radix);
        };

        SmallInteger.prototype.toArray = function (radix) {
            return toBase(this, radix);
        };

        NativeBigInt.prototype.toArray = function (radix) {
            return toBase(this, radix);
        };

        BigInteger.prototype.toString = function (radix, alphabet) {
            if (radix === undefined) radix = 10;
            if (radix !== 10) return toBaseString(this, radix, alphabet);
            var v = this.value, l = v.length, str = String(v[--l]), zeros = "0000000", digit;
            while (--l >= 0) {
                digit = String(v[l]);
                str += zeros.slice(digit.length) + digit;
            }
            var sign = this.sign ? "-" : "";
            return sign + str;
        };

        SmallInteger.prototype.toString = function (radix, alphabet) {
            if (radix === undefined) radix = 10;
            if (radix != 10) return toBaseString(this, radix, alphabet);
            return String(this.value);
        };

        NativeBigInt.prototype.toString = SmallInteger.prototype.toString;

        NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); };

        BigInteger.prototype.valueOf = function () {
            return parseInt(this.toString(), 10);
        };
        BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;

        SmallInteger.prototype.valueOf = function () {
            return this.value;
        };
        SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;
        NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {
            return parseInt(this.toString(), 10);
        };

        function parseStringValue(v) {
            if (isPrecise(+v)) {
                var x = +v;
                if (x === truncate(x))
                    return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);
                throw new Error("Invalid integer: " + v);
            }
            var sign = v[0] === "-";
            if (sign) v = v.slice(1);
            var split = v.split(/e/i);
            if (split.length > 2) throw new Error("Invalid integer: " + split.join("e"));
            if (split.length === 2) {
                var exp = split[1];
                if (exp[0] === "+") exp = exp.slice(1);
                exp = +exp;
                if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error("Invalid integer: " + exp + " is not a valid exponent.");
                var text = split[0];
                var decimalPlace = text.indexOf(".");
                if (decimalPlace >= 0) {
                    exp -= text.length - decimalPlace - 1;
                    text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);
                }
                if (exp < 0) throw new Error("Cannot include negative exponent part for integers");
                text += (new Array(exp + 1)).join("0");
                v = text;
            }
            var isValid = /^([0-9][0-9]*)$/.test(v);
            if (!isValid) throw new Error("Invalid integer: " + v);
            if (supportsNativeBigInt) {
                return new NativeBigInt(BigInt(sign ? "-" + v : v));
            }
            var r = [], max = v.length, l = LOG_BASE, min = max - l;
            while (max > 0) {
                r.push(+v.slice(min, max));
                min -= l;
                if (min < 0) min = 0;
                max -= l;
            }
            trim(r);
            return new BigInteger(r, sign);
        }

        function parseNumberValue(v) {
            if (supportsNativeBigInt) {
                return new NativeBigInt(BigInt(v));
            }
            if (isPrecise(v)) {
                if (v !== truncate(v)) throw new Error(v + " is not an integer.");
                return new SmallInteger(v);
            }
            return parseStringValue(v.toString());
        }

        function parseValue(v) {
            if (typeof v === "number") {
                return parseNumberValue(v);
            }
            if (typeof v === "string") {
                return parseStringValue(v);
            }
            if (typeof v === "bigint") {
                return new NativeBigInt(v);
            }
            return v;
        }
        // Pre-define numbers in range [-999,999]
        for (var i = 0; i < 1000; i++) {
            Integer[i] = parseValue(i);
            if (i > 0) Integer[-i] = parseValue(-i);
        }
        // Backwards compatibility
        Integer.one = Integer[1];
        Integer.zero = Integer[0];
        Integer.minusOne = Integer[-1];
        Integer.max = max;
        Integer.min = min;
        Integer.gcd = gcd;
        Integer.lcm = lcm;
        Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt; };
        Integer.randBetween = randBetween;

        Integer.fromArray = function (digits, base, isNegative) {
            return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);
        };

        return Integer;
    })();

    // Node.js check
    if (module.hasOwnProperty("exports")) {
        module.exports = bigInt;
    }
    });

    var nodeSqlParser = createCommonjsModule(function (module, exports) {
    !function(r,t){for(var e in t)r[e]=t[e];}(exports,function(r){var t={};function e(n){if(t[n])return t[n].exports;var u=t[n]={i:n,l:!1,exports:{}};return r[n].call(u.exports,u,u.exports,e),u.l=!0,u.exports}return e.m=r,e.c=t,e.d=function(r,t,n){e.o(r,t)||Object.defineProperty(r,t,{enumerable:!0,get:n});},e.r=function(r){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(r,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(r,"__esModule",{value:!0});},e.t=function(r,t){if(1&t&&(r=e(r)),8&t)return r;if(4&t&&"object"==typeof r&&r&&r.__esModule)return r;var n=Object.create(null);if(e.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:r}),2&t&&"string"!=typeof r)for(var u in r)e.d(n,u,function(t){return r[t]}.bind(null,u));return n},e.n=function(r){var t=r&&r.__esModule?function(){return r.default}:function(){return r};return e.d(t,"a",t),t},e.o=function(r,t){return Object.prototype.hasOwnProperty.call(r,t)},e.p="",e(e.s=9)}([function(r,t){r.exports=BigInteger;},function(r,t,e){var n=e(0);function u(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,u);}!function(r,t){function e(){this.constructor=r;}e.prototype=t.prototype,r.prototype=new e;}(u,Error),u.buildMessage=function(r,t){var e={literal:function(r){return '"'+u(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?o(r.parts[t][0])+"-"+o(r.parts[t][1]):o(r.parts[t]);return "["+(r.inverted?"^":"")+e+"]"},any:function(r){return "any character"},end:function(r){return "end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function u(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}function o(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}return "Expected "+function(r){var t,n,u,o=new Array(r.length);for(t=0;t<r.length;t++)o[t]=(u=r[t],e[u.type](u));if(o.sort(),o.length>0){for(t=1,n=1;t<o.length;t++)o[t-1]!==o[t]&&(o[n]=o[t],n++);o.length=n;}switch(o.length){case 1:return o[0];case 2:return o[0]+" or "+o[1];default:return o.slice(0,-1).join(", ")+", or "+o[o.length-1]}}(r)+" but "+function(r){return r?'"'+u(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:u,parse:function(r,t){t=void 0!==t?t:{};var e,o={},s={start:Ee},a=Ee,i=be("(",!1),c=be(")",!1),l=be("INTERSECT",!0),f=be("EXCEPT",!0),v=function(r,t){return hu(r,t)},b=be("FOR",!0),d=be("SYSTEM_TIME",!0),L=be("AS",!0),C=be("OF",!0),p=be("REPLACE",!0),w=be("UNNEST",!0),E=be("RANGE",!0),h=be("UNBOUNDED",!0),A=be("PRECEDING",!0),y=be("CURRENT",!0),T=be("ROW",!1),m=be("ROWS",!0),S=be("FOLLOWING",!0),I=function(r,t){return Au(r,t)},N=be("!",!1),R=be("=",!1),_=function(r){return r[0]+" "+r[2]},g=be(">=",!1),O=be(">",!1),U=be("<=",!1),x=be("<>",!1),M=be("<",!1),D=be("!=",!1),k=be("+",!1),$=be("-",!1),F=be("*",!1),P=be("/",!1),H=be("%",!1),G=function(r){return !0===Lu[r.toUpperCase()]},j=be('"',!1),Y=/^[^"]/,B=de(['"'],!0,!1),X=function(r){return r.join("")},W=be("'",!1),V=/^[^']/,K=de(["'"],!0,!1),q=be("`",!1),Z=/^[^`]/,z=de(["`"],!0,!1),J=function(r,t){return r+t.join("")},Q=/^[A-Za-z_]/,rr=de([["A","Z"],["a","z"],"_"],!1,!1),tr=/^[A-Za-z0-9_]/,er=de([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),nr=/^[A-Za-z0-9_:]/,ur=de([["A","Z"],["a","z"],["0","9"],"_",":"],!1,!1),or=be(":",!1),sr=function(r){return {type:"string",value:r[1].join("")}},ar=be("ON UPDATE CURRENT_TIMESTAMP",!0),ir=/^[^"\\\0-\x1F\x7F]/,cr=de(['"',"\\",["\0",""],""],!0,!1),lr=/^[^'\\]/,fr=de(["'","\\"],!0,!1),vr=be("\\'",!1),br=be('\\"',!1),dr=be("\\\\",!1),Lr=be("\\/",!1),Cr=be("\\b",!1),pr=be("\\f",!1),wr=be("\\n",!1),Er=be("\\r",!1),hr=be("\\t",!1),Ar=be("\\u",!1),yr=be("\\",!1),Tr=/^[\n\r]/,mr=de(["\n","\r"],!1,!1),Sr=be(".",!1),Ir=/^[0-9]/,Nr=de([["0","9"]],!1,!1),Rr=/^[0-9a-fA-F]/,_r=de([["0","9"],["a","f"],["A","F"]],!1,!1),gr=/^[eE]/,Or=de(["e","E"],!1,!1),Ur=/^[+\-]/,xr=de(["+","-"],!1,!1),Mr=be("NULL",!0),Dr=(be("TRUE",!0)),kr=(be("FALSE",!0)),$r=(be("SELECT",!0)),Fr=(be("PARTITION",!0)),Pr=(be("FROM",!0)),Hr=(be("ON",!0)),Gr=be("LEFT",!0),jr=be("RIGHT",!0),Yr=be("FULL",!0),Br=be("INNER",!0),Xr=be("CROSS",!0),Wr=be("JOIN",!0),Vr=be("OUTER",!0),Kr=be("OVER",!0),qr=be("UNION",!0),Zr=be("VALUE",!0),zr=(be("USING",!0)),Jr=be("WHERE",!0),Qr=be("WITH",!0),rt=be("GROUP",!0),tt=be("BY",!0),et=be("ORDER",!0),nt=be("HAVING",!0),ut=be("WINDOW",!0),ot=be("LIMIT",!0),st=be("OFFSET",!0),at=be("ASC",!0),it=be("DESC",!0),ct=be("ALL",!0),lt=be("DISTINCT",!0),ft=be("BETWEEN",!0),vt=be("IN",!0),bt=be("IS",!0),dt=be("LIKE",!0),Lt=be("EXISTS",!0),Ct=be("NOT",!0),pt=be("AND",!0),wt=be("OR",!0),Et=be("COUNT",!0),ht=be("MAX",!0),At=be("MIN",!0),yt=be("SUM",!0),Tt=be("AVG",!0),mt=(be("ARRAY",!0)),St=be("BYTES",!0),It=be("BOOL",!0),Nt=(be("GEOGRAPHY",!0)),Rt=(be("NUMERIC",!0)),_t=(be("INT64",!0)),gt=(be("STRING",!0)),Ot=be("STRUCT",!0),Ut=(be("FLOAT64",!0)),xt=(be("DATE",!0)),Mt=be("DATETIME",!0),Dt=be("TIME",!0),kt=be("TIMESTAMP",!0),$t=(be("CURRENT_DATE",!0)),Ft=(be("INTERVAL",!0)),Pt=be("YEAR",!0),Ht=be("MONTH",!0),Gt=be("DAY",!0),jt=be("HOUR",!0),Yt=be("MINUTE",!0),Bt=be("SECOND",!0),Xt=be("CURRENT_TIME",!0),Wt=be("CURRENT_TIMESTAMP",!0),Vt=(be(",",!1)),Kt=be("[",!1),qt=be("]",!1),Zt=be(";",!1),zt=be("||",!1),Jt=be("&&",!1),Qt=be("/*",!1),re=be("*/",!1),te=be("--",!1),ee=be("#",!1),ne={type:"any"},ue=/^[ \t\n\r]/,oe=de([" ","\t","\n","\r"],!1,!1),se=function(r){return {dataType:r}},ae=function(r,t){return {dataType:r,definition:t,anglebracket:!0}},ie=0,ce=[{line:1,column:1}],le=0,fe=[],ve=0;if("startRule"in t){if(!(t.startRule in s))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=s[t.startRule];}function be(r,t){return {type:"literal",text:r,ignoreCase:t}}function de(r,t,e){return {type:"class",parts:r,inverted:t,ignoreCase:e}}function Le(t){var e,n=ce[t];if(n)return n;for(e=t-1;!ce[e];)e--;for(n={line:(n=ce[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return ce[t]=n,n}function Ce(r,t){var e=Le(r),n=Le(t);return {start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function pe(r){ie<le||(ie>le&&(le=ie,fe=[]),fe.push(r));}function we(r,t,e){return new u(u.buildMessage(r,t),r,t,e)}function Ee(){var r,t;return r=ie,ou()!==o?((t=function(){var r,t,e,n,u,s,a,i;if(r=ie,(t=he())!==o){if(e=[],n=ie,(u=ou())!==o&&(s=nu())!==o&&(a=ou())!==o&&(i=he())!==o?n=u=[u,s,a,i]:(ie=n,n=o),n!==o)for(;n!==o;)e.push(n),n=ie,(u=ou())!==o&&(s=nu())!==o&&(a=ou())!==o&&(i=he())!==o?n=u=[u,s,a,i]:(ie=n,n=o);else e=o;e!==o?(t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return {tableList:Array.from(mu),columnList:Tu(Su),ast:e}}(t,e),r=t):(ie=r,r=o);}else ie=r,r=o;return r}())===o&&(t=he()),t!==o?(r=t):(ie=r,r=o)):(ie=r,r=o),r}function he(){var t,e,n,u,s,a,l;return (t=function(){var t,e,n,u,s,a;t=ie,(e=function(){var r,t,e,n,u,s,a,i,c;if(r=ie,(t=_n())!==o)if(ou()!==o)if((e=Se())!==o){for(n=[],u=ie,(s=ou())!==o&&(a=qn())!==o&&(i=ou())!==o&&(c=Se())!==o?u=s=[s,a,i,c]:(ie=u,u=o);u!==o;)n.push(u),u=ie,(s=ou())!==o&&(a=qn())!==o&&(i=ou())!==o&&(c=Se())!==o?u=s=[s,a,i,c]:(ie=u,u=o);n!==o?(t=v(e,n),r=t):(ie=r,r=o);}else ie=r,r=o;else ie=r,r=o;else ie=r,r=o;return r}())===o&&(e=null);e!==o&&ou()!==o&&(n=ye())!==o&&ou()!==o?((u=Fe())===o&&(u=null),u!==o&&ou()!==o?((s=function(){var t,e,n,u,s,a,i;t=ie,(e=function(){var t,e,n,u;t=ie,"limit"===r.substr(ie,5).toLowerCase()?(e=r.substr(ie,5),ie+=5):(e=o,0===ve&&pe(ot));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?t=e=[e,n]:(ie=t,t=o)):(ie=t,t=o);return t}())!==o&&ou()!==o&&(n=He())!==o&&ou()!==o?(u=ie,(s=qn())===o&&(s=On()),s!==o&&(a=ou())!==o&&(i=He())!==o?u=s=[s,a,i]:(ie=u,u=o),u===o&&(u=null),u!==o?(e=function(r,t){const e=[r];return t&&e.push(t[2]),{seperator:t&&t[0]&&t[0].toLowerCase()||"",value:e}}(n,u),t=e):(ie=t,t=o)):(ie=t,t=o);return t}())===o&&(s=null),s!==o&&ou()!==o?((a=nu())===o&&(a=null),a!==o?(i=e,c=n,l=u,f=s,e={tableList:Array.from(mu),columnList:Tu(Su),ast:{type:"bigquery",with:i,select:c&&c.ast,orderby:l,limit:f,parentheses:c&&c.parentheses}},t=e):(ie=t,t=o)):(ie=t,t=o)):(ie=t,t=o)):(ie=t,t=o);var i,c,l,f;return t}())===o&&(t=ie,e=ie,40===r.charCodeAt(ie)?(n="(",ie++):(n=o,0===ve&&pe(i)),n!==o&&(u=ou())!==o&&(s=me())!==o&&(a=ou())!==o?(41===r.charCodeAt(ie)?(l=")",ie++):(l=o,0===ve&&pe(c)),l!==o?e=n=[n,u,s,a,l]:(ie=e,e=o)):(ie=e,e=o),e!==o&&(e={...e[2],parentheses:!0}),t=e),t}function Ae(){var t,e,n,u;return t=ie,(e=function(){var t,e,n,u;t=ie,"union"===r.substr(ie,5).toLowerCase()?(e=r.substr(ie,5),ie+=5):(e=o,0===ve&&pe(qr));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?t=e=[e,n]:(ie=t,t=o)):(ie=t,t=o);return t}())!==o&&ou()!==o?((n=Un())===o&&(n=xn()),n===o&&(n=null),n!==o?(t=e=(u=n)?"union "+u.toLowerCase():"union"):(ie=t,t=o)):(ie=t,t=o),t===o&&(t=ie,"intersect"===r.substr(ie,9).toLowerCase()?(e=r.substr(ie,9),ie+=9):(e=o,0===ve&&pe(l)),e===o&&("except"===r.substr(ie,6).toLowerCase()?(e=r.substr(ie,6),ie+=6):(e=o,0===ve&&pe(f))),e!==o&&ou()!==o&&(n=xn())!==o?(t=e=function(r,t){return `${r.toLowerCase()} ${t.toLowerCase()}`}(e,n)):(ie=t,t=o)),t}function ye(){var t,e,n,u,s,a,l;return (t=Te())===o&&(t=ie,e=ie,40===r.charCodeAt(ie)?(n="(",ie++):(n=o,0===ve&&pe(i)),n!==o&&(u=ou())!==o&&(s=Te())!==o&&(a=ou())!==o?(41===r.charCodeAt(ie)?(l=")",ie++):(l=o,0===ve&&pe(c)),l!==o?e=n=[n,u,s,a,l]:(ie=e,e=o)):(ie=e,e=o),e!==o&&(e={...e[2],parentheses:!0}),t=e),t}function Te(){var r,t,e,n,u,s,a,i;if(r=ie,(t=me())!==o){for(e=[],n=ie,(u=ou())!==o?((s=Ae())===o&&(s=null),s!==o&&(a=ou())!==o&&(i=me())!==o?n=u=[u,s,a,i]:(ie=n,n=o)):(ie=n,n=o);n!==o;)e.push(n),n=ie,(u=ou())!==o?((s=Ae())===o&&(s=null),s!==o&&(a=ou())!==o&&(i=me())!==o?n=u=[u,s,a,i]:(ie=n,n=o)):(ie=n,n=o);e!==o?(r=t=function(r,t){let e=r;for(let r=0;r<t.length;r++)e._next=t[r][3],e.union=t[r][1],e=e._next;return {tableList:Array.from(mu),columnList:Tu(Su),ast:r}}(t,e)):(ie=r,r=o);}else ie=r,r=o;return r}function me(){var t,e,n,u,s,a,l;return (t=function(){var t,e,n,u,s,a,i,c,l,f,p;t=ie,(e=function(){var t,e,n,u;t=ie,"select"===r.substr(ie,6).toLowerCase()?(e=r.substr(ie,6),ie+=6):(e=o,0===ve&&pe($r));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?t=e=[e,n]:(ie=t,t=o)):(ie=t,t=o);return t}())!==o&&ou()!==o?((n=function(){var t,e,n;t=ie,(e=Sn())!==o&&ou()!==o?((n=Yn())===o&&(n=function(){var t,e,n,u;t=ie,"value"===r.substr(ie,5).toLowerCase()?(e=r.substr(ie,5),ie+=5):(e=o,0===ve&&pe(Zr));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="VALUE"):(ie=t,t=o)):(ie=t,t=o);return t}()),n!==o?(u=n,e=`${e[0].toLowerCase()} ${u.toLowerCase()}`,t=e):(ie=t,t=o)):(ie=t,t=o);var u;return t}())===o&&(n=null),n!==o&&ou()!==o?((u=Un())===o&&(u=xn()),u===o&&(u=null),u!==o&&ou()!==o&&(s=Ie())!==o&&ou()!==o?((a=function(){var t,e,n,u,s;t=ie,mn()!==o&&ou()!==o?("unnest"===r.substr(ie,6).toLowerCase()?(e=r.substr(ie,6),ie+=6):(e=o,0===ve&&pe(w)),e!==o&&ou()!==o&&zn()!==o&&ou()!==o?((n=je())===o&&(n=null),n!==o&&ou()!==o&&Jn()!==o&&ou()!==o?((u=_e())===o&&(u=null),u!==o&&ou()!==o?((s=function(){var r,t;r=ie,_n()!==o&&ou()!==o&&On()!==o&&ou()!==o?((t=_e())===o&&(t=null),t!==o?(r={keyword:"with offset as",as:t}):(ie=r,r=o)):(ie=r,r=o);return r}())===o&&(s=null),s!==o?(t={type:"unnest",expr:n,parentheses:!0,as:u,with_offset:s}):(ie=t,t=o)):(ie=t,t=o)):(ie=t,t=o)):(ie=t,t=o)):(ie=t,t=o);t===o&&(t=ie,mn()!==o&&ou()!==o&&(e=function(){var r,t,e,n;if(r=ie,(t=Oe())!==o){for(e=[],n=ge();n!==o;)e.push(n),n=ge();e!==o?(u=t,(s=e).unshift(u),s.forEach(r=>{const{table:t,as:e}=r;Iu[t]=t,e&&(Iu[e]=t);}),r=t=s):(ie=r,r=o);}else ie=r,r=o;var u,s;return r}())!==o?(t=e):(ie=t,t=o));return t}())===o&&(a=null),a!==o&&ou()!==o?((i=function(){var t,e,n,u,s,a;t=ie,"for"===r.substr(ie,3).toLowerCase()?(e=r.substr(ie,3),ie+=3):(e=o,0===ve&&pe(b));e!==o&&ou()!==o?("system_time"===r.substr(ie,11).toLowerCase()?(n=r.substr(ie,11),ie+=11):(n=o,0===ve&&pe(d)),n!==o&&ou()!==o?("as"===r.substr(ie,2).toLowerCase()?(u=r.substr(ie,2),ie+=2):(u=o,0===ve&&pe(L)),u!==o&&ou()!==o?("of"===r.substr(ie,2).toLowerCase()?(s=r.substr(ie,2),ie+=2):(s=o,0===ve&&pe(C)),s!==o&&ou()!==o&&(a=je())!==o?(t=e={keyword:"for system_time as of",expr:a}):(ie=t,t=o)):(ie=t,t=o)):(ie=t,t=o)):(ie=t,t=o);return t}())===o&&(i=null),i!==o&&ou()!==o?((c=function(){var t,e;t=ie,function(){var t,e,n,u;t=ie,"where"===r.substr(ie,5).toLowerCase()?(e=r.substr(ie,5),ie+=5):(e=o,0===ve&&pe(Jr));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?t=e=[e,n]:(ie=t,t=o)):(ie=t,t=o);return t}()!==o&&ou()!==o&&(e=je())!==o?(t=e):(ie=t,t=o);return t}())===o&&(c=null),c!==o&&ou()!==o?((l=function(){var t,e,n;t=ie,(e=function(){var t,e,n,u;t=ie,"group"===r.substr(ie,5).toLowerCase()?(e=r.substr(ie,5),ie+=5):(e=o,0===ve&&pe(rt));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?t=e=[e,n]:(ie=t,t=o)):(ie=t,t=o);return t}())!==o&&ou()!==o&&gn()!==o&&ou()!==o&&(n=Ge())!==o?(e=n.value,t=e):(ie=t,t=o);return t}())===o&&(l=null),l!==o&&ou()!==o?((f=function(){var t,e;t=ie,function(){var t,e,n,u;t=ie,"having"===r.substr(ie,6).toLowerCase()?(e=r.substr(ie,6),ie+=6):(e=o,0===ve&&pe(nt));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?t=e=[e,n]:(ie=t,t=o)):(ie=t,t=o);return t}()!==o&&ou()!==o&&(e=je())!==o?(t=e):(ie=t,t=o);return t}())===o&&(f=null),f!==o&&ou()!==o?((p=function(){var t,e;t=ie,function(){var t,e,n,u;t=ie,"window"===r.substr(ie,6).toLowerCase()?(e=r.substr(ie,6),ie+=6):(e=o,0===ve&&pe(ut));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?t=e=[e,n]:(ie=t,t=o)):(ie=t,t=o);return t}()!==o&&ou()!==o&&(e=function(){var r,t,e,n,u,s,a,i;if(r=ie,(t=De())!==o){for(e=[],n=ie,(u=ou())!==o&&(s=qn())!==o&&(a=ou())!==o&&(i=De())!==o?n=u=[u,s,a,i]:(ie=n,n=o);n!==o;)e.push(n),n=ie,(u=ou())!==o&&(s=qn())!==o&&(a=ou())!==o&&(i=De())!==o?n=u=[u,s,a,i]:(ie=n,n=o);e!==o?(t=v(t,e),r=t):(ie=r,r=o);}else ie=r,r=o;return r}())!==o?(t={keyword:"window",type:"window",expr:e}):(ie=t,t=o);return t}())===o&&(p=null),p!==o?(e=function(r,t,e,n,u,o,s,a,i){return Array.isArray(n)&&n.forEach(r=>r.table&&mu.add(`select::${r.db}::${r.table}`)),{type:"select",as_struct_val:r,distinct:t,columns:e,from:n,for_sys_time_as_of:u,where:o,groupby:s,having:a,window:i}}(n,u,s,a,i,c,l,f,p),t=e):(ie=t,t=o)):(ie=t,t=o)):(ie=t,t=o)):(ie=t,t=o)):(ie=t,t=o)):(ie=t,t=o)):(ie=t,t=o)):(ie=t,t=o)):(ie=t,t=o);return t}())===o&&(t=ie,e=ie,40===r.charCodeAt(ie)?(n="(",ie++):(n=o,0===ve&&pe(i)),n!==o&&(u=ou())!==o&&(s=me())!==o&&(a=ou())!==o?(41===r.charCodeAt(ie)?(l=")",ie++):(l=o,0===ve&&pe(c)),l!==o?e=n=[n,u,s,a,l]:(ie=e,e=o)):(ie=e,e=o),e!==o&&(e={...e[2],parentheses_symbol:!0}),t=e),t}function Se(){var r,t,e;return r=ie,(t=on())!==o&&ou()!==o&&Sn()!==o&&ou()!==o&&zn()!==o&&ou()!==o&&(e=ye())!==o&&ou()!==o&&Jn()!==o?(r=t={name:t,stmt:e}):(ie=r,r=o),r}function Ie(){var t,e,n,u,s,a,i,c,l,v,b,d;if(t=ie,(e=Zn())!==o&&(n=ou())!==o?("except"===r.substr(ie,6).toLowerCase()?(u=r.substr(ie,6),ie+=6):(u=o,0===ve&&pe(f)),u===o&&("replace"===r.substr(ie,7).toLowerCase()?(u=r.substr(ie,7),ie+=7):(u=o,0===ve&&pe(p))),u!==o&&(s=ou())!==o&&(a=zn())!==o&&(i=ou())!==o&&(c=Ne())!==o&&ou()!==o&&Jn()!==o?(l=u,v=c,Su.add("select::null::(.*)"),t=e={expr_list:v,parentheses:!0,star:"*",type:l.toLowerCase()}):(ie=t,t=o)):(ie=t,t=o),t===o){if(t=ie,(e=Un())===o&&(e=ie,(n=Zn())!==o?(u=ie,ve++,s=sn(),ve--,s===o?u=void 0:(ie=u,u=o),u!==o?e=n=[n,u]:(ie=e,e=o)):(ie=e,e=o),e===o&&(e=Zn())),e!==o){for(n=[],u=ie,(s=ou())!==o&&(a=qn())!==o&&(i=ou())!==o&&(c=Re())!==o?u=s=[s,a,i,c]:(ie=u,u=o);u!==o;)n.push(u),u=ie,(s=ou())!==o&&(a=qn())!==o&&(i=ou())!==o&&(c=Re())!==o?u=s=[s,a,i,c]:(ie=u,u=o);n!==o&&(u=ou())!==o?((s=qn())===o&&(s=null),s!==o?(b=e,d=n,Su.add("select::null::(.*)"),t=e=d&&d.length>0?(b[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},hu(b[0],d)):b[0]):(ie=t,t=o)):(ie=t,t=o);}else ie=t,t=o;t===o&&(t=ie,(e=Ne())!==o&&(n=ou())!==o?((u=qn())===o&&(u=null),u!==o?(t=e=e):(ie=t,t=o)):(ie=t,t=o));}return t}function Ne(){var r,t,e,n,u,s,a,i;if(r=ie,(t=Re())!==o){for(e=[],n=ie,(u=ou())!==o&&(s=qn())!==o&&(a=ou())!==o&&(i=Re())!==o?n=u=[u,s,a,i]:(ie=n,n=o);n!==o;)e.push(n),n=ie,(u=ou())!==o&&(s=qn())!==o&&(a=ou())!==o&&(i=Re())!==o?n=u=[u,s,a,i]:(ie=n,n=o);e!==o?(r=t=v(t,e)):(ie=r,r=o);}else ie=r,r=o;return r}function Re(){var r,t,e,n,u,s,a,i;return r=ie,(t=tn())!==o&&ou()!==o&&Kn()!==o?(e=ie,(n=function(){var r,t,e;return r=ie,(t=tn())!==o&&ou()!==o&&tu()!==o&&ou()!==o&&On()!==o&&ou()!==o&&zn()!==o&&ou()!==o&&(e=pn())!==o&&ou()!==o&&Jn()!==o&&ou()!==o&&eu()!==o?(r=t=`${t}[offset(${e.value})]`):(ie=r,r=o),r===o&&(r=tn()),r}())!==o&&(u=ou())!==o&&(s=Kn())!==o?e=n=[n,u,s]:(ie=e,e=o),e===o&&(e=null),e!==o&&(n=ou())!==o&&(u=Zn())!==o?(a=t,i=e,Su.add(`select::${a}::(.*)`),i&&(a=`${a}.${i[0]}`),r=t={expr:{type:"column_ref",table:a,column:"*"},as:null}):(ie=r,r=o)):(ie=r,r=o),r===o&&(r=function(){var r,t,e;return r=ie,(t=je())!==o&&ou()!==o?((e=_e())===o&&(e=null),e!==o?(r=t={expr:t,as:e}):(ie=r,r=o)):(ie=r,r=o),r}()),r}function _e(){var r,t,e;return r=ie,(t=Sn())!==o&&ou()!==o&&(e=function(){var r,t;r=ie,(t=on())!==o?((function(r){if(!0===Lu[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return !1}(t)?o:void 0)!==o?(r=t=t):(ie=r,r=o)):(ie=r,r=o);r===o&&(r=ie,(t=en())!==o&&(t=t),r=t);return r}())!==o?(r=t=e):(ie=r,r=o),r===o&&(r=ie,(t=Sn())===o&&(t=null),t!==o&&ou()!==o&&(e=tn())!==o?(r=t=e):(ie=r,r=o)),r}function ge(){var t,e,n;return t=ie,ou()!==o&&(e=qn())!==o&&ou()!==o&&(n=Oe())!==o?(t=n):(ie=t,t=o),t===o&&(t=ie,ou()!==o&&(e=function(){var t,e,n,u,s,a,i,c,l,f,v;if(t=ie,(e=Ue())!==o)if(ou()!==o)if((n=Oe())!==o)if(ou()!==o)if((u=function(){var t,e,n,u;t=ie,"using"===r.substr(ie,5).toLowerCase()?(e=r.substr(ie,5),ie+=5):(e=o,0===ve&&pe(zr));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?t=e=[e,n]:(ie=t,t=o)):(ie=t,t=o);return t}())!==o)if(ou()!==o)if(zn()!==o)if(ou()!==o)if((s=on())!==o){for(a=[],i=ie,(c=ou())!==o&&(l=qn())!==o&&(f=ou())!==o&&(v=on())!==o?i=c=[c,l,f,v]:(ie=i,i=o);i!==o;)a.push(i),i=ie,(c=ou())!==o&&(l=qn())!==o&&(f=ou())!==o&&(v=on())!==o?i=c=[c,l,f,v]:(ie=i,i=o);a!==o&&(i=ou())!==o&&(c=Jn())!==o?(b=e,L=s,C=a,(d=n).join=b,d.using=hu(L,C),t=e=d):(ie=t,t=o);}else ie=t,t=o;else ie=t,t=o;else ie=t,t=o;else ie=t,t=o;else ie=t,t=o;else ie=t,t=o;else ie=t,t=o;else ie=t,t=o;else ie=t,t=o;var b,d,L,C;t===o&&(t=ie,(e=Ue())!==o&&ou()!==o&&(n=Oe())!==o&&ou()!==o?((u=Me())===o&&(u=null),u!==o?(e=function(r,t,e){return t.join=r,t.on=e,t}(e,n,u),t=e):(ie=t,t=o)):(ie=t,t=o),t===o&&(t=ie,(e=Ue())!==o&&ou()!==o&&(n=zn())!==o&&ou()!==o&&(u=ye())!==o&&ou()!==o&&Jn()!==o&&ou()!==o?((s=_e())===o&&(s=null),s!==o&&(a=ou())!==o?((i=Me())===o&&(i=null),i!==o?(e=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(e,u,s,i),t=e):(ie=t,t=o)):(ie=t,t=o)):(ie=t,t=o)));return t}())!==o?(t=e):(ie=t,t=o)),t}function Oe(){var r,t,e,n,u,s;return r=ie,(t=xe())!==o&&ou()!==o?((e=_e())===o&&(e=null),e!==o?(s=e,r=t="var"===(u=t).type?(u.as=s,u):{db:u.db,table:u.table,as:s}):(ie=r,r=o)):(ie=r,r=o),r===o&&(r=ie,(t=zn())!==o&&ou()!==o&&(e=ye())!==o&&ou()!==o&&Jn()!==o&&ou()!==o?((n=_e())===o&&(n=null),n!==o?(r=t=function(r,t){return r.parentheses=!0,{expr:r,as:t}}(e,n)):(ie=r,r=o)):(ie=r,r=o)),r}function Ue(){var t,e,n;return t=ie,(e=function(){var t,e,n,u;t=ie,"left"===r.substr(ie,4).toLowerCase()?(e=r.substr(ie,4),ie+=4):(e=o,0===ve&&pe(Gr));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?t=e=[e,n]:(ie=t,t=o)):(ie=t,t=o);return t}())!==o&&ou()!==o?((n=Nn())===o&&(n=null),n!==o&&ou()!==o&&In()!==o?(t=e="LEFT JOIN"):(ie=t,t=o)):(ie=t,t=o),t===o&&(t=ie,(e=function(){var t,e,n,u;t=ie,"right"===r.substr(ie,5).toLowerCase()?(e=r.substr(ie,5),ie+=5):(e=o,0===ve&&pe(jr));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?t=e=[e,n]:(ie=t,t=o)):(ie=t,t=o);return t}())!==o&&ou()!==o?((n=Nn())===o&&(n=null),n!==o&&ou()!==o&&In()!==o?(t=e="RIGHT JOIN"):(ie=t,t=o)):(ie=t,t=o),t===o&&(t=ie,(e=function(){var t,e,n,u;t=ie,"full"===r.substr(ie,4).toLowerCase()?(e=r.substr(ie,4),ie+=4):(e=o,0===ve&&pe(Yr));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?t=e=[e,n]:(ie=t,t=o)):(ie=t,t=o);return t}())!==o&&ou()!==o?((n=Nn())===o&&(n=null),n!==o&&ou()!==o&&In()!==o?(t=e="FULL JOIN"):(ie=t,t=o)):(ie=t,t=o),t===o&&(t=ie,(e=function(){var t,e,n,u;t=ie,"inner"===r.substr(ie,5).toLowerCase()?(e=r.substr(ie,5),ie+=5):(e=o,0===ve&&pe(Br));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?t=e=[e,n]:(ie=t,t=o)):(ie=t,t=o);return t}())===o&&(e=function(){var t,e,n,u;t=ie,"cross"===r.substr(ie,5).toLowerCase()?(e=r.substr(ie,5),ie+=5):(e=o,0===ve&&pe(Xr));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?t=e=[e,n]:(ie=t,t=o)):(ie=t,t=o);return t}()),e!==o&&ou()!==o&&(n=In())!==o?(t=e=e[0].toUpperCase()+" JOIN"):(ie=t,t=o)))),t}function xe(){var r,t,e,n,u,s,a,i;return r=ie,(t=tn())!==o?(e=ie,(n=ou())!==o&&(u=Kn())!==o&&(s=ou())!==o&&(a=tn())!==o?e=n=[n,u,s,a]:(ie=e,e=o),e!==o?(n=ie,(u=ou())!==o&&(s=Kn())!==o&&(a=ou())!==o&&(i=tn())!==o?n=u=[u,s,a,i]:(ie=n,n=o),n!==o?(r=t=function(r,t,e){const n={db:null,table:r};return null!==e&&(n.db=`${r}.${t[3]}`,n.table=e[3]),n}(t,e,n)):(ie=r,r=o)):(ie=r,r=o)):(ie=r,r=o),r===o&&(r=ie,(t=tn())!==o?(e=ie,(n=ou())!==o&&(u=Kn())!==o&&(s=ou())!==o&&(a=tn())!==o?e=n=[n,u,s,a]:(ie=e,e=o),e===o&&(e=null),e!==o?(r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(ie=r,r=o)):(ie=r,r=o)),r}function Me(){var t,e;return t=ie,function(){var t,e,n,u;t=ie,"on"===r.substr(ie,2).toLowerCase()?(e=r.substr(ie,2),ie+=2):(e=o,0===ve&&pe(Hr));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?t=e=[e,n]:(ie=t,t=o)):(ie=t,t=o);return t}()!==o&&ou()!==o&&(e=je())!==o?(t=e):(ie=t,t=o),t}function De(){var r,t,e;return r=ie,(t=on())!==o&&ou()!==o&&Sn()!==o&&ou()!==o&&(e=ke())!==o?(r=t={name:t,as_window_specification:e}):(ie=r,r=o),r}function ke(){var t,e,n;return t=ie,(e=on())!==o&&(e=e),(t=e)===o&&(t=ie,(e=zn())!==o&&ou()!==o?((n=function(){var t,e,n,u,s;t=ie,(e=tn())===o&&(e=null);e!==o&&ou()!==o?((n=$e())===o&&(n=null),n!==o&&ou()!==o?((u=Fe())===o&&(u=null),u!==o&&ou()!==o?((s=function(){var t,e,n,u,s,a,i,c,l,f;t=ie,"range"===r.substr(ie,5).toLowerCase()?(e=r.substr(ie,5),ie+=5):(e=o,0===ve&&pe(E));e!==o&&ou()!==o&&Mn()!==o?("unbounded"===r.substr(ie,9).toLowerCase()?(n=r.substr(ie,9),ie+=9):(n=o,0===ve&&pe(h)),n!==o&&(u=ou())!==o?("preceding"===r.substr(ie,9).toLowerCase()?(s=r.substr(ie,9),ie+=9):(s=o,0===ve&&pe(A)),s!==o&&(a=ou())!==o&&Hn()!==o&&ou()!==o?("current"===r.substr(ie,7).toLowerCase()?(i=r.substr(ie,7),ie+=7):(i=o,0===ve&&pe(y)),i!==o&&(c=ou())!==o?("ROW"===r.substr(ie,3)?(l="ROW",ie+=3):(l=o,0===ve&&pe(T)),l!==o?(t=e="range between unbounded preceding and current row"):(ie=t,t=o)):(ie=t,t=o)):(ie=t,t=o)):(ie=t,t=o)):(ie=t,t=o);t===o&&(t=ie,"rows"===r.substr(ie,4).toLowerCase()?(e=r.substr(ie,4),ie+=4):(e=o,0===ve&&pe(m)),e!==o&&ou()!==o&&Mn()!==o&&(n=ou())!==o&&(u=pn())!==o&&(s=ou())!==o?("preceding"===r.substr(ie,9).toLowerCase()?(a=r.substr(ie,9),ie+=9):(a=o,0===ve&&pe(A)),a!==o&&ou()!==o&&Hn()!==o&&(i=ou())!==o&&(c=pn())!==o&&(l=ou())!==o?("following"===r.substr(ie,9).toLowerCase()?(f=r.substr(ie,9),ie+=9):(f=o,0===ve&&pe(S)),f!==o?(v=c,e=`rows between ${u.value} preceding and ${v.value} following`,t=e):(ie=t,t=o)):(ie=t,t=o)):(ie=t,t=o));var v;return t}())===o&&(s=null),s!==o?(t=e={name:e,partitionby:n,orderby:u,window_frame_clause:s}):(ie=t,t=o)):(ie=t,t=o)):(ie=t,t=o)):(ie=t,t=o);return t}())===o&&(n=null),n!==o&&ou()!==o&&Jn()!==o?(t=e={window_specification:n,parentheses:!0}):(ie=t,t=o)):(ie=t,t=o)),t}function $e(){var t,e;return t=ie,function(){var t,e,n,u;t=ie,"partition"===r.substr(ie,9).toLowerCase()?(e=r.substr(ie,9),ie+=9):(e=o,0===ve&&pe(Fr));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="PARTITION"):(ie=t,t=o)):(ie=t,t=o);return t}()!==o&&ou()!==o&&gn()!==o&&ou()!==o&&(e=Ie())!==o?(t=e):(ie=t,t=o),t}function Fe(){var t,e;return t=ie,function(){var t,e,n,u;t=ie,"order"===r.substr(ie,5).toLowerCase()?(e=r.substr(ie,5),ie+=5):(e=o,0===ve&&pe(et));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?t=e=[e,n]:(ie=t,t=o)):(ie=t,t=o);return t}()!==o&&ou()!==o&&gn()!==o&&ou()!==o&&(e=function(){var r,t,e,n,u,s,a,i;if(r=ie,(t=Pe())!==o){for(e=[],n=ie,(u=ou())!==o&&(s=qn())!==o&&(a=ou())!==o&&(i=Pe())!==o?n=u=[u,s,a,i]:(ie=n,n=o);n!==o;)e.push(n),n=ie,(u=ou())!==o&&(s=qn())!==o&&(a=ou())!==o&&(i=Pe())!==o?n=u=[u,s,a,i]:(ie=n,n=o);e!==o?(t=v(t,e),r=t):(ie=r,r=o);}else ie=r,r=o;return r}())!==o?(t=e):(ie=t,t=o),t}function Pe(){var t,e,n;return t=ie,(e=je())!==o&&ou()!==o?((n=function(){var t,e,n,u;t=ie,"desc"===r.substr(ie,4).toLowerCase()?(e=r.substr(ie,4),ie+=4):(e=o,0===ve&&pe(it));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="DESC"):(ie=t,t=o)):(ie=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=ie,"asc"===r.substr(ie,3).toLowerCase()?(e=r.substr(ie,3),ie+=3):(e=o,0===ve&&pe(at));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="ASC"):(ie=t,t=o)):(ie=t,t=o);return t}()),n===o&&(n=null),n!==o?(t=e=function(r,t){const e={expr:r,type:"ASC"};return "DESC"===t&&(e.type="DESC"),e}(e,n)):(ie=t,t=o)):(ie=t,t=o),t}function He(){var r;return (r=pn())===o&&(r=ln()),r}function Ge(){var r,t,e,n,u,s,a,i;if(r=ie,(t=je())!==o){for(e=[],n=ie,(u=ou())!==o&&(s=qn())!==o&&(a=ou())!==o&&(i=je())!==o?n=u=[u,s,a,i]:(ie=n,n=o);n!==o;)e.push(n),n=ie,(u=ou())!==o&&(s=qn())!==o&&(a=ou())!==o&&(i=je())!==o?n=u=[u,s,a,i]:(ie=n,n=o);e!==o?(r=t=function(r,t){const e={type:"expr_list"};return e.value=hu(r,t),e}(t,e)):(ie=r,r=o);}else ie=r,r=o;return r}function je(){var r;return (r=function(){var r,t,e,n,u,s,a,i;if(r=ie,(t=Ye())!==o){for(e=[],n=ie,(u=ou())!==o&&(s=qn())!==o&&(a=ou())!==o&&(i=Ye())!==o?n=u=[u,s,a,i]:(ie=n,n=o);n!==o;)e.push(n),n=ie,(u=ou())!==o&&(s=qn())!==o&&(a=ou())!==o&&(i=Ye())!==o?n=u=[u,s,a,i]:(ie=n,n=o);e!==o?(t=v(t,e),r=t):(ie=r,r=o);}else ie=r,r=o;return r}())===o&&(r=function(){var r,t,e;r=ie,(t=du())===o&&(t=Yn());t!==o&&ou()!==o&&zn()!==o&&ou()!==o&&(e=Ie())!==o&&ou()!==o&&Jn()!==o?(r=t={definition:n=t,expr_list:e,type:"struct",keyword:n&&"struct",parentheses:!0}):(ie=r,r=o);var n;return r}())===o&&(r=function(){var r,t,e,n,u,s,a,i;if(r=ie,(t=Qe())!==o){if(e=[],n=ie,(u=ou())!==o&&(s=uu())!==o&&(a=ou())!==o&&(i=Qe())!==o?n=u=[u,s,a,i]:(ie=n,n=o),n!==o)for(;n!==o;)e.push(n),n=ie,(u=ou())!==o&&(s=uu())!==o&&(a=ou())!==o&&(i=Qe())!==o?n=u=[u,s,a,i]:(ie=n,n=o);else e=o;e!==o?(t=Au(t,e),r=t):(ie=r,r=o);}else ie=r,r=o;return r}())===o&&(r=function(){var r,t,e,n,u,s;if(r=ie,(t=Ze())!==o){if(e=[],n=ie,(u=ou())!==o&&(s=Qe())!==o?n=u=[u,s]:(ie=n,n=o),n!==o)for(;n!==o;)e.push(n),n=ie,(u=ou())!==o&&(s=Qe())!==o?n=u=[u,s]:(ie=n,n=o);else e=o;e!==o?(t=pu(t,e[0][1]),r=t):(ie=r,r=o);}else ie=r,r=o;return r}())===o&&(r=function(){var r,t,e,n,u,s,a,i;if(r=ie,(t=Be())!==o){for(e=[],n=ie,(u=su())!==o&&(s=Gn())!==o&&(a=ou())!==o&&(i=Be())!==o?n=u=[u,s,a,i]:(ie=n,n=o);n!==o;)e.push(n),n=ie,(u=su())!==o&&(s=Gn())!==o&&(a=ou())!==o&&(i=Be())!==o?n=u=[u,s,a,i]:(ie=n,n=o);e!==o?(t=I(t,e),r=t):(ie=r,r=o);}else ie=r,r=o;return r}())===o&&(r=me())===o&&(r=function(){var r,t,e,n,u,s;r=ie,(t=tu())!==o&&ou()!==o&&(e=Ie())!==o&&(n=ou())!==o&&(u=eu())!==o?(r=t={array_path:e,type:"array",keyword:"",parentheses:!0}):(ie=r,r=o);r===o&&(r=ie,(t=bu())===o&&(t=jn()),t===o&&(t=null),t!==o&&tu()!==o&&(e=ou())!==o&&(n=function(){var r,t,e,n,u,s,a,i;if(r=ie,(t=vn())!==o){for(e=[],n=ie,(u=ou())!==o&&(s=qn())!==o&&(a=ou())!==o&&(i=vn())!==o?n=u=[u,s,a,i]:(ie=n,n=o);n!==o;)e.push(n),n=ie,(u=ou())!==o&&(s=qn())!==o&&(a=ou())!==o&&(i=vn())!==o?n=u=[u,s,a,i]:(ie=n,n=o);e!==o?(t=v(t,e),r=t):(ie=r,r=o);}else ie=r,r=o;return r}())!==o&&(u=ou())!==o&&eu()!==o?(t=function(r,t){return {definition:r,array_path:t.map(r=>({expr:r,as:null})),type:"array",keyword:r&&"array",parentheses:!0}}(t,n),r=t):(ie=r,r=o),r===o&&(r=ie,(t=bu())===o&&(t=jn()),t===o&&(t=null),t!==o&&ou()!==o?((e=tu())===o&&(e=zn()),e!==o&&(n=ou())!==o&&(u=je())!==o&&ou()!==o?((s=eu())===o&&(s=Jn()),s!==o?(t=function(r,t){return {definition:r,expr_list:t,type:"array",keyword:r&&"array",parentheses:!0}}(t,u),r=t):(ie=r,r=o)):(ie=r,r=o)):(ie=r,r=o)));return r}()),r}function Ye(){var r,t;return r=ie,zn()!==o&&ou()!==o&&(t=Ie())!==o&&ou()!==o&&Jn()!==o?(r=t):(ie=r,r=o),r}function Be(){var r,t,e,n,u,s,a,i;if(r=ie,(t=Xe())!==o){for(e=[],n=ie,(u=su())!==o&&(s=Hn())!==o&&(a=ou())!==o&&(i=Xe())!==o?n=u=[u,s,a,i]:(ie=n,n=o);n!==o;)e.push(n),n=ie,(u=su())!==o&&(s=Hn())!==o&&(a=ou())!==o&&(i=Xe())!==o?n=u=[u,s,a,i]:(ie=n,n=o);e!==o?(r=t=I(t,e)):(ie=r,r=o);}else ie=r,r=o;return r}function Xe(){var t,e,n,u,s;return (t=We())===o&&(t=function(){var r,t,e;r=ie,(t=function(){var r,t,e,n,u;r=ie,t=ie,(e=Pn())!==o&&(n=ou())!==o&&(u=Fn())!==o?t=e=[e,n,u]:(ie=t,t=o);t!==o&&(t=_(t));(r=t)===o&&(r=Fn());return r}())!==o&&ou()!==o&&zn()!==o&&ou()!==o&&(e=ye())!==o&&ou()!==o&&Jn()!==o?(n=t,(u=e).parentheses=!0,t=pu(n,u),r=t):(ie=r,r=o);var n,u;return r}())===o&&(t=ie,(e=Pn())===o&&(e=ie,33===r.charCodeAt(ie)?(n="!",ie++):(n=o,0===ve&&pe(N)),n!==o?(u=ie,ve++,61===r.charCodeAt(ie)?(s="=",ie++):(s=o,0===ve&&pe(R)),ve--,s===o?u=void 0:(ie=u,u=o),u!==o?e=n=[n,u]:(ie=e,e=o)):(ie=e,e=o)),e!==o&&(n=ou())!==o&&(u=Xe())!==o?(t=e=pu("NOT",u)):(ie=t,t=o)),t}function We(){var r,t,e,n,u,s,a;return r=ie,(t=qe())!==o&&ou()!==o?(e=ie,ve++,n=Hn(),ve--,n===o?e=void 0:(ie=e,e=o),e!==o&&(n=ou())!==o?((u=function(){var r;(r=function(){var r,t,e,n,u,s,a;r=ie,t=[],e=ie,(n=ou())!==o&&(u=Ve())!==o&&(s=ou())!==o&&(a=qe())!==o?e=n=[n,u,s,a]:(ie=e,e=o);if(e!==o)for(;e!==o;)t.push(e),e=ie,(n=ou())!==o&&(u=Ve())!==o&&(s=ou())!==o&&(a=qe())!==o?e=n=[n,u,s,a]:(ie=e,e=o);else t=o;t!==o&&(t={type:"arithmetic",tail:t});return r=t}())===o&&(r=function(){var r,t,e,n;r=ie,(t=Ke())!==o&&ou()!==o&&(e=zn())!==o&&ou()!==o&&(n=Ge())!==o&&ou()!==o&&Jn()!==o?(r=t={op:t,right:n}):(ie=r,r=o);r===o&&(r=ie,(t=Ke())!==o&&ou()!==o&&(e=bn())!==o?(t=function(r,t){return {op:r,right:t}}(t,e),r=t):(ie=r,r=o));return r}())===o&&(r=function(){var r,t,e,n;r=ie,(t=function(){var r,t,e,n,u;r=ie,t=ie,(e=Pn())!==o&&(n=ou())!==o&&(u=Mn())!==o?t=e=[e,n,u]:(ie=t,t=o);t!==o&&(t=_(t));(r=t)===o&&(r=Mn());return r}())!==o&&ou()!==o&&(e=qe())!==o&&ou()!==o&&Hn()!==o&&ou()!==o&&(n=qe())!==o?(r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(ie=r,r=o);return r}())===o&&(r=function(){var r,t,e,n,u;r=ie,(t=kn())!==o&&(e=ou())!==o&&(n=qe())!==o?(r=t={op:"IS",right:n}):(ie=r,r=o);r===o&&(r=ie,t=ie,(e=kn())!==o&&(n=ou())!==o&&(u=Pn())!==o?t=e=[e,n,u]:(ie=t,t=o),t!==o&&(e=ou())!==o&&(n=qe())!==o?(t=function(r){return {op:"IS NOT",right:r}}(n),r=t):(ie=r,r=o));return r}())===o&&(r=function(){var r,t,e;r=ie,(t=function(){var r,t,e,n,u;r=ie,t=ie,(e=Pn())!==o&&(n=ou())!==o&&(u=$n())!==o?t=e=[e,n,u]:(ie=t,t=o);t!==o&&(t=_(t));(r=t)===o&&(r=$n());return r}())!==o&&ou()!==o&&(e=We())!==o?(r=t={op:t,right:e}):(ie=r,r=o);return r}());return r}())===o&&(u=null),u!==o?(s=t,r=t=null===(a=u)?s:"arithmetic"===a.type?Au(s,a.tail):wu(a.op,s,a.right)):(ie=r,r=o)):(ie=r,r=o)):(ie=r,r=o),r===o&&(r=bn())===o&&(r=rn()),r}function Ve(){var t;return ">="===r.substr(ie,2)?(t=">=",ie+=2):(t=o,0===ve&&pe(g)),t===o&&(62===r.charCodeAt(ie)?(t=">",ie++):(t=o,0===ve&&pe(O)),t===o&&("<="===r.substr(ie,2)?(t="<=",ie+=2):(t=o,0===ve&&pe(U)),t===o&&("<>"===r.substr(ie,2)?(t="<>",ie+=2):(t=o,0===ve&&pe(x)),t===o&&(60===r.charCodeAt(ie)?(t="<",ie++):(t=o,0===ve&&pe(M)),t===o&&(61===r.charCodeAt(ie)?(t="=",ie++):(t=o,0===ve&&pe(R)),t===o&&("!="===r.substr(ie,2)?(t="!=",ie+=2):(t=o,0===ve&&pe(D)))))))),t}function Ke(){var r,t,e,n,u;return r=ie,t=ie,(e=Pn())!==o&&(n=ou())!==o&&(u=Dn())!==o?t=e=[e,n,u]:(ie=t,t=o),t!==o&&(t=_(t)),(r=t)===o&&(r=Dn()),r}function qe(){var r,t,e,n,u,s,a,i;if(r=ie,(t=ze())!==o){for(e=[],n=ie,(u=ou())!==o&&(s=Ze())!==o&&(a=ou())!==o&&(i=ze())!==o?n=u=[u,s,a,i]:(ie=n,n=o);n!==o;)e.push(n),n=ie,(u=ou())!==o&&(s=Ze())!==o&&(a=ou())!==o&&(i=ze())!==o?n=u=[u,s,a,i]:(ie=n,n=o);e!==o?(r=t=I(t,e)):(ie=r,r=o);}else ie=r,r=o;return r}function Ze(){var t;return 43===r.charCodeAt(ie)?(t="+",ie++):(t=o,0===ve&&pe(k)),t===o&&(45===r.charCodeAt(ie)?(t="-",ie++):(t=o,0===ve&&pe($))),t}function ze(){var r,t,e,n,u,s,a,i;if(r=ie,(t=Qe())!==o){for(e=[],n=ie,(u=ou())!==o&&(s=Je())!==o&&(a=ou())!==o&&(i=Qe())!==o?n=u=[u,s,a,i]:(ie=n,n=o);n!==o;)e.push(n),n=ie,(u=ou())!==o&&(s=Je())!==o&&(a=ou())!==o&&(i=Qe())!==o?n=u=[u,s,a,i]:(ie=n,n=o);e!==o?(r=t=Au(t,e)):(ie=r,r=o);}else ie=r,r=o;return r}function Je(){var t;return 42===r.charCodeAt(ie)?(t="*",ie++):(t=o,0===ve&&pe(F)),t===o&&(47===r.charCodeAt(ie)?(t="/",ie++):(t=o,0===ve&&pe(P)),t===o&&(37===r.charCodeAt(ie)?(t="%",ie++):(t=o,0===ve&&pe(H)))),t}function Qe(){var t,e,n,u;return (t=vn())===o&&(t=function(){var t;(t=function(){var t,e,n,u;t=ie,(e=function(){var t,e,n,u;t=ie,"count"===r.substr(ie,5).toLowerCase()?(e=r.substr(ie,5),ie+=5):(e=o,0===ve&&pe(Et));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="COUNT"):(ie=t,t=o)):(ie=t,t=o);return t}())!==o&&ou()!==o&&zn()!==o&&ou()!==o&&(n=function(){var t,e,n;t=ie,(e=function(){var t,e;t=ie,42===r.charCodeAt(ie)?(e="*",ie++):(e=o,0===ve&&pe(F));e!==o&&(e={type:"star",value:"*"});return t=e}())!==o&&(e={expr:e});(t=e)===o&&(t=ie,(e=xn())===o&&(e=null),e!==o&&ou()!==o&&(n=rn())!==o?(t=e={distinct:e,expr:n}):(ie=t,t=o));return t}())!==o&&ou()!==o&&Jn()!==o&&ou()!==o?((u=fn())===o&&(u=null),u!==o?(t=e={type:"aggr_func",name:e,args:n,over:u}):(ie=t,t=o)):(ie=t,t=o);return t}())===o&&(t=function(){var t,e,n;t=ie,(e=function(){var t;(t=function(){var t,e,n,u;t=ie,"sum"===r.substr(ie,3).toLowerCase()?(e=r.substr(ie,3),ie+=3):(e=o,0===ve&&pe(yt));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="SUM"):(ie=t,t=o)):(ie=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=ie,"max"===r.substr(ie,3).toLowerCase()?(e=r.substr(ie,3),ie+=3):(e=o,0===ve&&pe(ht));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="MAX"):(ie=t,t=o)):(ie=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=ie,"min"===r.substr(ie,3).toLowerCase()?(e=r.substr(ie,3),ie+=3):(e=o,0===ve&&pe(At));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="MIN"):(ie=t,t=o)):(ie=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=ie,"avg"===r.substr(ie,3).toLowerCase()?(e=r.substr(ie,3),ie+=3):(e=o,0===ve&&pe(Tt));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="AVG"):(ie=t,t=o)):(ie=t,t=o);return t}());return t}())!==o&&ou()!==o&&zn()!==o&&ou()!==o&&(n=qe())!==o&&ou()!==o&&Jn()!==o?(t=e={type:"aggr_func",name:e,args:{expr:n}}):(ie=t,t=o);return t}());return t}())===o&&(t=function(){var t,e,n,u,s;t=ie,(e=function(){var r,t,e,n,u,s,a;r=ie,(t=tn())!==o?(e=ie,(n=ou())!==o&&(u=Kn())!==o&&(s=ou())!==o&&(a=tn())!==o?e=n=[n,u,s,a]:(ie=e,e=o),e===o&&(e=null),e!==o?(t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e),r=t):(ie=r,r=o)):(ie=r,r=o);return r}())!==o&&ou()!==o&&zn()!==o&&ou()!==o?((n=Ge())===o&&(n=null),n!==o&&ou()!==o&&(u=Jn())!==o&&ou()!==o?((s=fn())===o&&(s=null),s!==o?(t=e={type:"function",name:e,args:n||{type:"expr_list",value:[]},over:s}):(ie=t,t=o)):(ie=t,t=o)):(ie=t,t=o);t===o&&(t=ie,(e=function(){var t;(t=function(){var t,e,n,u;t=ie,"current_date"===r.substr(ie,12).toLowerCase()?(e=r.substr(ie,12),ie+=12):(e=o,0===ve&&pe($t));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="CURRENT_DATE"):(ie=t,t=o)):(ie=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=ie,"current_time"===r.substr(ie,12).toLowerCase()?(e=r.substr(ie,12),ie+=12):(e=o,0===ve&&pe(Xt));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="CURRENT_TIME"):(ie=t,t=o)):(ie=t,t=o);return t}())===o&&(t=Vn());return t}())!==o&&ou()!==o&&zn()!==o&&ou()!==o&&(n=Jn())!==o&&ou()!==o?((u=fn())===o&&(u=null),u!==o?(e=function(r,t){return {type:"function",name:r,args:{type:"expr_list",value:[]},over:t}}(e,u),t=e):(ie=t,t=o)):(ie=t,t=o));return t}())===o&&(t=function(){var t,e,n,u;t=ie,(e=function(){var t,e,n,u;t=ie,"interval"===r.substr(ie,8).toLowerCase()?(e=r.substr(ie,8),ie+=8):(e=o,0===ve&&pe(Ft));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="INTERVAL"):(ie=t,t=o)):(ie=t,t=o);return t}())!==o&&ou()!==o&&(n=je())!==o&&ou()!==o&&(u=function(){var t;(t=function(){var t,e,n,u;t=ie,"year"===r.substr(ie,4).toLowerCase()?(e=r.substr(ie,4),ie+=4):(e=o,0===ve&&pe(Pt));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="YEAR"):(ie=t,t=o)):(ie=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=ie,"month"===r.substr(ie,5).toLowerCase()?(e=r.substr(ie,5),ie+=5):(e=o,0===ve&&pe(Ht));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="MONTH"):(ie=t,t=o)):(ie=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=ie,"day"===r.substr(ie,3).toLowerCase()?(e=r.substr(ie,3),ie+=3):(e=o,0===ve&&pe(Gt));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="DAY"):(ie=t,t=o)):(ie=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=ie,"hour"===r.substr(ie,4).toLowerCase()?(e=r.substr(ie,4),ie+=4):(e=o,0===ve&&pe(jt));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="HOUR"):(ie=t,t=o)):(ie=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=ie,"minute"===r.substr(ie,6).toLowerCase()?(e=r.substr(ie,6),ie+=6):(e=o,0===ve&&pe(Yt));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="MINUTE"):(ie=t,t=o)):(ie=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=ie,"second"===r.substr(ie,6).toLowerCase()?(e=r.substr(ie,6),ie+=6):(e=o,0===ve&&pe(Bt));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="SECOND"):(ie=t,t=o)):(ie=t,t=o);return t}());return t}())!==o?(e={type:"interval",expr:n,unit:u.toLowerCase()},t=e):(ie=t,t=o);return t}())===o&&(t=rn())===o&&(t=ln())===o&&(t=ie,zn()!==o&&ou()!==o&&(e=je())!==o&&ou()!==o&&Jn()!==o?((u=e).parentheses=!0,t=u):(ie=t,t=o),t===o&&(t=ie,zn()!==o&&ou()!==o&&(e=Ge())!==o&&ou()!==o&&Jn()!==o?((n=e).parentheses=!0,t=n):(ie=t,t=o))),t}function rn(){var r,t,e,n,u;return r=ie,(t=tn())!==o&&ou()!==o&&Kn()!==o&&ou()!==o&&(e=function(){var r,t;r=ie,(t=un())!==o&&(t=t);(r=t)===o&&(r=en());return r}())!==o?(n=t,u=e,Su.add(`select::${n}::${u}`),r=t={type:"column_ref",table:n,column:u}):(ie=r,r=o),r===o&&(r=ie,(t=nn())!==o&&(t=function(r){return Su.add("select::null::"+r),{type:"column_ref",table:null,column:r}}(t)),r=t),r}function tn(){var r,t;return r=ie,(t=on())!==o?((G(t)?o:void 0)!==o?(r=t=t):(ie=r,r=o)):(ie=r,r=o),r===o&&(r=ie,(t=en())!==o&&(t=t),r=t),r}function en(){var t;return (t=function(){var t,e,n,u;t=ie,34===r.charCodeAt(ie)?(e='"',ie++):(e=o,0===ve&&pe(j));if(e!==o){if(n=[],Y.test(r.charAt(ie))?(u=r.charAt(ie),ie++):(u=o,0===ve&&pe(B)),u!==o)for(;u!==o;)n.push(u),Y.test(r.charAt(ie))?(u=r.charAt(ie),ie++):(u=o,0===ve&&pe(B));else n=o;n!==o?(34===r.charCodeAt(ie)?(u='"',ie++):(u=o,0===ve&&pe(j)),u!==o?(e=X(n),t=e):(ie=t,t=o)):(ie=t,t=o);}else ie=t,t=o;return t}())===o&&(t=function(){var t,e,n,u;t=ie,39===r.charCodeAt(ie)?(e="'",ie++):(e=o,0===ve&&pe(W));if(e!==o){if(n=[],V.test(r.charAt(ie))?(u=r.charAt(ie),ie++):(u=o,0===ve&&pe(K)),u!==o)for(;u!==o;)n.push(u),V.test(r.charAt(ie))?(u=r.charAt(ie),ie++):(u=o,0===ve&&pe(K));else n=o;n!==o?(39===r.charCodeAt(ie)?(u="'",ie++):(u=o,0===ve&&pe(W)),u!==o?(e=X(n),t=e):(ie=t,t=o)):(ie=t,t=o);}else ie=t,t=o;return t}())===o&&(t=function(){var t,e,n,u;t=ie,96===r.charCodeAt(ie)?(e="`",ie++):(e=o,0===ve&&pe(q));if(e!==o){if(n=[],Z.test(r.charAt(ie))?(u=r.charAt(ie),ie++):(u=o,0===ve&&pe(z)),u!==o)for(;u!==o;)n.push(u),Z.test(r.charAt(ie))?(u=r.charAt(ie),ie++):(u=o,0===ve&&pe(z));else n=o;n!==o?(96===r.charCodeAt(ie)?(u="`",ie++):(u=o,0===ve&&pe(q)),u!==o?(e=X(n),t=e):(ie=t,t=o)):(ie=t,t=o);}else ie=t,t=o;return t}()),t}function nn(){var r,t;return r=ie,(t=un())!==o?((G(t)?o:void 0)!==o?(r=t=t):(ie=r,r=o)):(ie=r,r=o),r===o&&(r=en()),r}function un(){var r,t,e,n;if(r=ie,(t=sn())!==o){for(e=[],n=cn();n!==o;)e.push(n),n=cn();e!==o?(r=t=J(t,e)):(ie=r,r=o);}else ie=r,r=o;return r}function on(){var r,t,e,n;if(r=ie,(t=sn())!==o){for(e=[],n=an();n!==o;)e.push(n),n=an();e!==o?(r=t=J(t,e)):(ie=r,r=o);}else ie=r,r=o;return r}function sn(){var t;return Q.test(r.charAt(ie))?(t=r.charAt(ie),ie++):(t=o,0===ve&&pe(rr)),t}function an(){var t;return tr.test(r.charAt(ie))?(t=r.charAt(ie),ie++):(t=o,0===ve&&pe(er)),t}function cn(){var t;return nr.test(r.charAt(ie))?(t=r.charAt(ie),ie++):(t=o,0===ve&&pe(ur)),t}function ln(){var t,e,n,u;return t=ie,e=ie,58===r.charCodeAt(ie)?(n=":",ie++):(n=o,0===ve&&pe(or)),n!==o&&(u=on())!==o?e=n=[n,u]:(ie=e,e=o),e!==o&&(e={type:"param",value:e[1]}),t=e}function fn(){var r,t,e,n;return r=ie,Rn()!==o&&ou()!==o&&(t=ke())!==o?(r={type:"window",as_window_specification:t}):(ie=r,r=o),r===o&&(r=ie,Rn()!==o&&ou()!==o&&(t=zn())!==o&&ou()!==o&&(e=$e())!==o&&ou()!==o?((n=Fe())===o&&(n=null),n!==o&&ou()!==o&&Jn()!==o?(r={partitionby:e,orderby:n}):(ie=r,r=o)):(ie=r,r=o)),r}function vn(){var t;return (t=bn())===o&&(t=pn())===o&&(t=function(){var t,e;t=ie,(e=function(){var t,e,n,u;t=ie,"true"===r.substr(ie,4).toLowerCase()?(e=r.substr(ie,4),ie+=4):(e=o,0===ve&&pe(Dr));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?t=e=[e,n]:(ie=t,t=o)):(ie=t,t=o);return t}())!==o&&(e={type:"bool",value:!0});(t=e)===o&&(t=ie,(e=function(){var t,e,n,u;t=ie,"false"===r.substr(ie,5).toLowerCase()?(e=r.substr(ie,5),ie+=5):(e=o,0===ve&&pe(kr));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?t=e=[e,n]:(ie=t,t=o)):(ie=t,t=o);return t}())!==o&&(e={type:"bool",value:!1}),t=e);return t}())===o&&(t=function(){var t,e;t=ie,(e=function(){var t,e,n,u;t=ie,"null"===r.substr(ie,4).toLowerCase()?(e=r.substr(ie,4),ie+=4):(e=o,0===ve&&pe(Mr));e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?t=e=[e,n]:(ie=t,t=o)):(ie=t,t=o);return t}())!==o&&(e={type:"null",value:null});return t=e}())===o&&(t=function(){var t,e,n,u,s,a,i;t=ie,(e=Xn())===o&&(e=Bn())===o&&(e=Wn());if(e!==o)if(ou()!==o){if(n=ie,39===r.charCodeAt(ie)?(u="'",ie++):(u=o,0===ve&&pe(W)),u!==o){for(s=[],a=Ln();a!==o;)s.push(a),a=Ln();s!==o?(39===r.charCodeAt(ie)?(a="'",ie++):(a=o,0===ve&&pe(W)),a!==o?n=u=[u,s,a]:(ie=n,n=o)):(ie=n,n=o);}else ie=n,n=o;n!==o?(c=n,e={type:e.toLowerCase(),value:c[1].join("")},t=e):(ie=t,t=o);}else ie=t,t=o;else ie=t,t=o;var c;t===o&&(t=ie,(e=Vn())!==o&&ou()!==o?((n=zn())===o&&(n=null),n!==o&&(u=ou())!==o?((s=Jn())===o&&(s=null),s!==o?((a=(a=function(r,t,e){if(t&&e)return !0}(0,n,s))?o:void 0)!==o&&ou()!==o?("on update current_timestamp"===r.substr(ie,27).toLowerCase()?(i=r.substr(ie,27),ie+=27):(i=o,0===ve&&pe(ar)),i===o&&(i=null),i!==o?(e=function(r,t,e,n){return {type:"origin",value:(n?`${r} ${n}`:r).toLowerCase()}}(e,0,0,i),t=e):(ie=t,t=o)):(ie=t,t=o)):(ie=t,t=o)):(ie=t,t=o)):(ie=t,t=o));return t}()),t}function bn(){var t,e,n,u,s;if(t=ie,e=ie,39===r.charCodeAt(ie)?(n="'",ie++):(n=o,0===ve&&pe(W)),n!==o){for(u=[],s=Ln();s!==o;)u.push(s),s=Ln();u!==o?(39===r.charCodeAt(ie)?(s="'",ie++):(s=o,0===ve&&pe(W)),s!==o?e=n=[n,u,s]:(ie=e,e=o)):(ie=e,e=o);}else ie=e,e=o;if(e!==o&&(e=sr(e)),(t=e)===o){if(t=ie,e=ie,34===r.charCodeAt(ie)?(n='"',ie++):(n=o,0===ve&&pe(j)),n!==o){for(u=[],s=dn();s!==o;)u.push(s),s=dn();u!==o?(34===r.charCodeAt(ie)?(s='"',ie++):(s=o,0===ve&&pe(j)),s!==o?e=n=[n,u,s]:(ie=e,e=o)):(ie=e,e=o);}else ie=e,e=o;e!==o&&(e=sr(e)),t=e;}return t}function dn(){var t;return ir.test(r.charAt(ie))?(t=r.charAt(ie),ie++):(t=o,0===ve&&pe(cr)),t===o&&(t=Cn()),t}function Ln(){var t;return lr.test(r.charAt(ie))?(t=r.charAt(ie),ie++):(t=o,0===ve&&pe(fr)),t===o&&(t=Cn()),t}function Cn(){var t,e,n,u,s,a,i,c,l,f;return t=ie,"\\'"===r.substr(ie,2)?(e="\\'",ie+=2):(e=o,0===ve&&pe(vr)),e!==o&&(e="'"),(t=e)===o&&(t=ie,'\\"'===r.substr(ie,2)?(e='\\"',ie+=2):(e=o,0===ve&&pe(br)),e!==o&&(e='"'),(t=e)===o&&(t=ie,"\\\\"===r.substr(ie,2)?(e="\\\\",ie+=2):(e=o,0===ve&&pe(dr)),e!==o&&(e="\\"),(t=e)===o&&(t=ie,"\\/"===r.substr(ie,2)?(e="\\/",ie+=2):(e=o,0===ve&&pe(Lr)),e!==o&&(e="/"),(t=e)===o&&(t=ie,"\\b"===r.substr(ie,2)?(e="\\b",ie+=2):(e=o,0===ve&&pe(Cr)),e!==o&&(e="\b"),(t=e)===o&&(t=ie,"\\f"===r.substr(ie,2)?(e="\\f",ie+=2):(e=o,0===ve&&pe(pr)),e!==o&&(e="\f"),(t=e)===o&&(t=ie,"\\n"===r.substr(ie,2)?(e="\\n",ie+=2):(e=o,0===ve&&pe(wr)),e!==o&&(e="\n"),(t=e)===o&&(t=ie,"\\r"===r.substr(ie,2)?(e="\\r",ie+=2):(e=o,0===ve&&pe(Er)),e!==o&&(e="\r"),(t=e)===o&&(t=ie,"\\t"===r.substr(ie,2)?(e="\\t",ie+=2):(e=o,0===ve&&pe(hr)),e!==o&&(e="\t"),(t=e)===o&&(t=ie,"\\u"===r.substr(ie,2)?(e="\\u",ie+=2):(e=o,0===ve&&pe(Ar)),e!==o&&(n=Tn())!==o&&(u=Tn())!==o&&(s=Tn())!==o&&(a=Tn())!==o?(i=n,c=u,l=s,f=a,t=e=String.fromCharCode(parseInt("0x"+i+c+l+f))):(ie=t,t=o),t===o&&(t=ie,92===r.charCodeAt(ie)?(e="\\",ie++):(e=o,0===ve&&pe(yr)),e!==o&&(e="\\"),t=e)))))))))),t}function pn(){var r,t,e;return r=ie,(t=function(){var r,t,e,n;r=ie,(t=wn())!==o&&(e=En())!==o&&(n=hn())!==o?(r=t={type:"bigint",value:t+e+n}):(ie=r,r=o);r===o&&(r=ie,(t=wn())!==o&&(e=En())!==o?(t=function(r,t){const e=r+t;return Eu(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e),r=t):(ie=r,r=o),r===o&&(r=ie,(t=wn())!==o&&(e=hn())!==o?(t=function(r,t){return {type:"bigint",value:r+t}}(t,e),r=t):(ie=r,r=o),r===o&&(r=ie,(t=wn())!==o&&(t=function(r){return Eu(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t)));return r}())!==o&&(t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),r=t}function wn(){var t,e,n;return (t=An())===o&&(t=yn())===o&&(t=ie,45===r.charCodeAt(ie)?(e="-",ie++):(e=o,0===ve&&pe($)),e===o&&(43===r.charCodeAt(ie)?(e="+",ie++):(e=o,0===ve&&pe(k))),e!==o&&(n=An())!==o?(t=e="-"+n):(ie=t,t=o),t===o&&(t=ie,45===r.charCodeAt(ie)?(e="-",ie++):(e=o,0===ve&&pe($)),e===o&&(43===r.charCodeAt(ie)?(e="+",ie++):(e=o,0===ve&&pe(k))),e!==o&&(n=yn())!==o?(t=e="-"+n):(ie=t,t=o))),t}function En(){var t,e,n;return t=ie,46===r.charCodeAt(ie)?(e=".",ie++):(e=o,0===ve&&pe(Sr)),e!==o&&(n=An())!==o?(t=e="."+n):(ie=t,t=o),t}function hn(){var t,e,n;return t=ie,(e=function(){var t,e,n;t=ie,gr.test(r.charAt(ie))?(e=r.charAt(ie),ie++):(e=o,0===ve&&pe(Or));e!==o?(Ur.test(r.charAt(ie))?(n=r.charAt(ie),ie++):(n=o,0===ve&&pe(xr)),n===o&&(n=null),n!==o?(t=e=e+(null!==(u=n)?u:"")):(ie=t,t=o)):(ie=t,t=o);var u;return t}())!==o&&(n=An())!==o?(t=e=e+n):(ie=t,t=o),t}function An(){var r,t,e;if(r=ie,t=[],(e=yn())!==o)for(;e!==o;)t.push(e),e=yn();else t=o;return t!==o&&(t=t.join("")),r=t}function yn(){var t;return Ir.test(r.charAt(ie))?(t=r.charAt(ie),ie++):(t=o,0===ve&&pe(Nr)),t}function Tn(){var t;return Rr.test(r.charAt(ie))?(t=r.charAt(ie),ie++):(t=o,0===ve&&pe(_r)),t}function mn(){var t,e,n,u;return t=ie,"from"===r.substr(ie,4).toLowerCase()?(e=r.substr(ie,4),ie+=4):(e=o,0===ve&&pe(Pr)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?t=e=[e,n]:(ie=t,t=o)):(ie=t,t=o),t}function Sn(){var t,e,n,u;return t=ie,"as"===r.substr(ie,2).toLowerCase()?(e=r.substr(ie,2),ie+=2):(e=o,0===ve&&pe(L)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?t=e=[e,n]:(ie=t,t=o)):(ie=t,t=o),t}function In(){var t,e,n,u;return t=ie,"join"===r.substr(ie,4).toLowerCase()?(e=r.substr(ie,4),ie+=4):(e=o,0===ve&&pe(Wr)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?t=e=[e,n]:(ie=t,t=o)):(ie=t,t=o),t}function Nn(){var t,e,n,u;return t=ie,"outer"===r.substr(ie,5).toLowerCase()?(e=r.substr(ie,5),ie+=5):(e=o,0===ve&&pe(Vr)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?t=e=[e,n]:(ie=t,t=o)):(ie=t,t=o),t}function Rn(){var t,e,n,u;return t=ie,"over"===r.substr(ie,4).toLowerCase()?(e=r.substr(ie,4),ie+=4):(e=o,0===ve&&pe(Kr)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?t=e=[e,n]:(ie=t,t=o)):(ie=t,t=o),t}function _n(){var t,e,n,u;return t=ie,"with"===r.substr(ie,4).toLowerCase()?(e=r.substr(ie,4),ie+=4):(e=o,0===ve&&pe(Qr)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?t=e=[e,n]:(ie=t,t=o)):(ie=t,t=o),t}function gn(){var t,e,n,u;return t=ie,"by"===r.substr(ie,2).toLowerCase()?(e=r.substr(ie,2),ie+=2):(e=o,0===ve&&pe(tt)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?t=e=[e,n]:(ie=t,t=o)):(ie=t,t=o),t}function On(){var t,e,n,u;return t=ie,"offset"===r.substr(ie,6).toLowerCase()?(e=r.substr(ie,6),ie+=6):(e=o,0===ve&&pe(st)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="OFFSET"):(ie=t,t=o)):(ie=t,t=o),t}function Un(){var t,e,n,u;return t=ie,"all"===r.substr(ie,3).toLowerCase()?(e=r.substr(ie,3),ie+=3):(e=o,0===ve&&pe(ct)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="ALL"):(ie=t,t=o)):(ie=t,t=o),t}function xn(){var t,e,n,u;return t=ie,"distinct"===r.substr(ie,8).toLowerCase()?(e=r.substr(ie,8),ie+=8):(e=o,0===ve&&pe(lt)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="DISTINCT"):(ie=t,t=o)):(ie=t,t=o),t}function Mn(){var t,e,n,u;return t=ie,"between"===r.substr(ie,7).toLowerCase()?(e=r.substr(ie,7),ie+=7):(e=o,0===ve&&pe(ft)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="BETWEEN"):(ie=t,t=o)):(ie=t,t=o),t}function Dn(){var t,e,n,u;return t=ie,"in"===r.substr(ie,2).toLowerCase()?(e=r.substr(ie,2),ie+=2):(e=o,0===ve&&pe(vt)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="IN"):(ie=t,t=o)):(ie=t,t=o),t}function kn(){var t,e,n,u;return t=ie,"is"===r.substr(ie,2).toLowerCase()?(e=r.substr(ie,2),ie+=2):(e=o,0===ve&&pe(bt)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="IS"):(ie=t,t=o)):(ie=t,t=o),t}function $n(){var t,e,n,u;return t=ie,"like"===r.substr(ie,4).toLowerCase()?(e=r.substr(ie,4),ie+=4):(e=o,0===ve&&pe(dt)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="LIKE"):(ie=t,t=o)):(ie=t,t=o),t}function Fn(){var t,e,n,u;return t=ie,"exists"===r.substr(ie,6).toLowerCase()?(e=r.substr(ie,6),ie+=6):(e=o,0===ve&&pe(Lt)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="EXISTS"):(ie=t,t=o)):(ie=t,t=o),t}function Pn(){var t,e,n,u;return t=ie,"not"===r.substr(ie,3).toLowerCase()?(e=r.substr(ie,3),ie+=3):(e=o,0===ve&&pe(Ct)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="NOT"):(ie=t,t=o)):(ie=t,t=o),t}function Hn(){var t,e,n,u;return t=ie,"and"===r.substr(ie,3).toLowerCase()?(e=r.substr(ie,3),ie+=3):(e=o,0===ve&&pe(pt)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="AND"):(ie=t,t=o)):(ie=t,t=o),t}function Gn(){var t,e,n,u;return t=ie,"or"===r.substr(ie,2).toLowerCase()?(e=r.substr(ie,2),ie+=2):(e=o,0===ve&&pe(wt)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="OR"):(ie=t,t=o)):(ie=t,t=o),t}function jn(){var t,e,n,u;return t=ie,"array"===r.substr(ie,5).toLowerCase()?(e=r.substr(ie,5),ie+=5):(e=o,0===ve&&pe(mt)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="ARRAY"):(ie=t,t=o)):(ie=t,t=o),t}function Yn(){var t,e,n,u;return t=ie,"struct"===r.substr(ie,6).toLowerCase()?(e=r.substr(ie,6),ie+=6):(e=o,0===ve&&pe(Ot)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="STRUCT"):(ie=t,t=o)):(ie=t,t=o),t}function Bn(){var t,e,n,u;return t=ie,"date"===r.substr(ie,4).toLowerCase()?(e=r.substr(ie,4),ie+=4):(e=o,0===ve&&pe(xt)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="DATE"):(ie=t,t=o)):(ie=t,t=o),t}function Xn(){var t,e,n,u;return t=ie,"time"===r.substr(ie,4).toLowerCase()?(e=r.substr(ie,4),ie+=4):(e=o,0===ve&&pe(Dt)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="TIME"):(ie=t,t=o)):(ie=t,t=o),t}function Wn(){var t,e,n,u;return t=ie,"timestamp"===r.substr(ie,9).toLowerCase()?(e=r.substr(ie,9),ie+=9):(e=o,0===ve&&pe(kt)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="TIMESTAMP"):(ie=t,t=o)):(ie=t,t=o),t}function Vn(){var t,e,n,u;return t=ie,"current_timestamp"===r.substr(ie,17).toLowerCase()?(e=r.substr(ie,17),ie+=17):(e=o,0===ve&&pe(Wt)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="CURRENT_TIMESTAMP"):(ie=t,t=o)):(ie=t,t=o),t}function Kn(){var t;return 46===r.charCodeAt(ie)?(t=".",ie++):(t=o,0===ve&&pe(Sr)),t}function qn(){var t;return 44===r.charCodeAt(ie)?(t=",",ie++):(t=o,0===ve&&pe(Vt)),t}function Zn(){var t;return 42===r.charCodeAt(ie)?(t="*",ie++):(t=o,0===ve&&pe(F)),t}function zn(){var t;return 40===r.charCodeAt(ie)?(t="(",ie++):(t=o,0===ve&&pe(i)),t}function Jn(){var t;return 41===r.charCodeAt(ie)?(t=")",ie++):(t=o,0===ve&&pe(c)),t}function Qn(){var t;return 60===r.charCodeAt(ie)?(t="<",ie++):(t=o,0===ve&&pe(M)),t}function ru(){var t;return 62===r.charCodeAt(ie)?(t=">",ie++):(t=o,0===ve&&pe(O)),t}function tu(){var t;return 91===r.charCodeAt(ie)?(t="[",ie++):(t=o,0===ve&&pe(Kt)),t}function eu(){var t;return 93===r.charCodeAt(ie)?(t="]",ie++):(t=o,0===ve&&pe(qt)),t}function nu(){var t;return 59===r.charCodeAt(ie)?(t=";",ie++):(t=o,0===ve&&pe(Zt)),t}function uu(){var t;return (t=function(){var t;return "||"===r.substr(ie,2)?(t="||",ie+=2):(t=o,0===ve&&pe(zt)),t}())===o&&(t=function(){var t;return "&&"===r.substr(ie,2)?(t="&&",ie+=2):(t=o,0===ve&&pe(Jt)),t}()),t}function ou(){var r,t;for(r=[],(t=cu())===o&&(t=au());t!==o;)r.push(t),(t=cu())===o&&(t=au());return r}function su(){var r,t;if(r=[],(t=cu())===o&&(t=au()),t!==o)for(;t!==o;)r.push(t),(t=cu())===o&&(t=au());else r=o;return r}function au(){var t;return (t=function(){var t,e,n,u,s,a;t=ie,"/*"===r.substr(ie,2)?(e="/*",ie+=2):(e=o,0===ve&&pe(Qt));if(e!==o){for(n=[],u=ie,s=ie,ve++,"*/"===r.substr(ie,2)?(a="*/",ie+=2):(a=o,0===ve&&pe(re)),ve--,a===o?s=void 0:(ie=s,s=o),s!==o&&(a=iu())!==o?u=s=[s,a]:(ie=u,u=o);u!==o;)n.push(u),u=ie,s=ie,ve++,"*/"===r.substr(ie,2)?(a="*/",ie+=2):(a=o,0===ve&&pe(re)),ve--,a===o?s=void 0:(ie=s,s=o),s!==o&&(a=iu())!==o?u=s=[s,a]:(ie=u,u=o);n!==o?("*/"===r.substr(ie,2)?(u="*/",ie+=2):(u=o,0===ve&&pe(re)),u!==o?t=e=[e,n,u]:(ie=t,t=o)):(ie=t,t=o);}else ie=t,t=o;return t}())===o&&(t=function(){var t,e,n,u,s,a;t=ie,"--"===r.substr(ie,2)?(e="--",ie+=2):(e=o,0===ve&&pe(te));if(e!==o){for(n=[],u=ie,s=ie,ve++,a=lu(),ve--,a===o?s=void 0:(ie=s,s=o),s!==o&&(a=iu())!==o?u=s=[s,a]:(ie=u,u=o);u!==o;)n.push(u),u=ie,s=ie,ve++,a=lu(),ve--,a===o?s=void 0:(ie=s,s=o),s!==o&&(a=iu())!==o?u=s=[s,a]:(ie=u,u=o);n!==o?t=e=[e,n]:(ie=t,t=o);}else ie=t,t=o;return t}())===o&&(t=function(){var t,e,n,u,s,a;t=ie,35===r.charCodeAt(ie)?(e="#",ie++):(e=o,0===ve&&pe(ee));if(e!==o){for(n=[],u=ie,s=ie,ve++,a=lu(),ve--,a===o?s=void 0:(ie=s,s=o),s!==o&&(a=iu())!==o?u=s=[s,a]:(ie=u,u=o);u!==o;)n.push(u),u=ie,s=ie,ve++,a=lu(),ve--,a===o?s=void 0:(ie=s,s=o),s!==o&&(a=iu())!==o?u=s=[s,a]:(ie=u,u=o);n!==o?t=e=[e,n]:(ie=t,t=o);}else ie=t,t=o;return t}()),t}function iu(){var t;return r.length>ie?(t=r.charAt(ie),ie++):(t=o,0===ve&&pe(ne)),t}function cu(){var t;return ue.test(r.charAt(ie))?(t=r.charAt(ie),ie++):(t=o,0===ve&&pe(oe)),t}function lu(){var t,e;if((t=function(){var t,e;t=ie,ve++,r.length>ie?(e=r.charAt(ie),ie++):(e=o,0===ve&&pe(ne));ve--,e===o?t=void 0:(ie=t,t=o);return t}())===o)if(t=[],Tr.test(r.charAt(ie))?(e=r.charAt(ie),ie++):(e=o,0===ve&&pe(mr)),e!==o)for(;e!==o;)t.push(e),Tr.test(r.charAt(ie))?(e=r.charAt(ie),ie++):(e=o,0===ve&&pe(mr));else t=o;return t}function fu(){var r,t,e,n,u,s,a,i;if(r=ie,(t=vu())!==o){for(e=[],n=ie,(u=ou())!==o&&(s=qn())!==o&&(a=ou())!==o&&(i=vu())!==o?n=u=[u,s,a,i]:(ie=n,n=o);n!==o;)e.push(n),n=ie,(u=ou())!==o&&(s=qn())!==o&&(a=ou())!==o&&(i=vu())!==o?n=u=[u,s,a,i]:(ie=n,n=o);e!==o?(r=t=v(t,e)):(ie=r,r=o);}else ie=r,r=o;return r}function vu(){var t,e,n,u;return t=ie,e=ie,(n=on())!==o?((u=(u=!0===Cu[n.toUpperCase()])?o:void 0)!==o?(e=n=n):(ie=e,e=o)):(ie=e,e=o),e===o&&(e=null),e!==o&&(n=ou())!==o&&(u=function(){var t;(t=du())===o&&(t=bu())===o&&(t=function(){var t,e;t=ie,(e=function(){var t,e,n,u;return t=ie,"string"===r.substr(ie,6).toLowerCase()?(e=r.substr(ie,6),ie+=6):(e=o,0===ve&&pe(gt)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="STRING"):(ie=t,t=o)):(ie=t,t=o),t}())!==o&&(e=se(e));return t=e}())===o&&(t=function(){var t,e;t=ie,(e=function(){var t,e,n,u;return t=ie,"numeric"===r.substr(ie,7).toLowerCase()?(e=r.substr(ie,7),ie+=7):(e=o,0===ve&&pe(Rt)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="NUMERIC"):(ie=t,t=o)):(ie=t,t=o),t}())===o&&(e=function(){var t,e,n,u;return t=ie,"int64"===r.substr(ie,5).toLowerCase()?(e=r.substr(ie,5),ie+=5):(e=o,0===ve&&pe(_t)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="INT64"):(ie=t,t=o)):(ie=t,t=o),t}())===o&&(e=function(){var t,e,n,u;return t=ie,"float64"===r.substr(ie,7).toLowerCase()?(e=r.substr(ie,7),ie+=7):(e=o,0===ve&&pe(Ut)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="FLOAT64"):(ie=t,t=o)):(ie=t,t=o),t}());e!==o&&(e=se(e));return t=e}())===o&&(t=function(){var t,e;t=ie,(e=Bn())===o&&(e=Xn())===o&&(e=Wn())===o&&(e=function(){var t,e,n,u;return t=ie,"datetime"===r.substr(ie,8).toLowerCase()?(e=r.substr(ie,8),ie+=8):(e=o,0===ve&&pe(Mt)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="DATETIME"):(ie=t,t=o)):(ie=t,t=o),t}());e!==o&&(e=se(e));return t=e}())===o&&(t=function(){var t,e;t=ie,(e=function(){var t,e,n,u;return t=ie,"bytes"===r.substr(ie,5).toLowerCase()?(e=r.substr(ie,5),ie+=5):(e=o,0===ve&&pe(St)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="BYTES"):(ie=t,t=o)):(ie=t,t=o),t}())===o&&(e=function(){var t,e,n,u;return t=ie,"bool"===r.substr(ie,4).toLowerCase()?(e=r.substr(ie,4),ie+=4):(e=o,0===ve&&pe(It)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="BOOL"):(ie=t,t=o)):(ie=t,t=o),t}())===o&&(e=function(){var t,e,n,u;return t=ie,"geography"===r.substr(ie,9).toLowerCase()?(e=r.substr(ie,9),ie+=9):(e=o,0===ve&&pe(Nt)),e!==o?(n=ie,ve++,u=sn(),ve--,u===o?n=void 0:(ie=n,n=o),n!==o?(t=e="GEOGRAPHY"):(ie=t,t=o)):(ie=t,t=o),t}());e!==o&&(e=se(e));return t=e}());return t}())!==o?(t=e=function(r,t){return {field_name:r,field_type:t}}(e,u)):(ie=t,t=o),t}function bu(){var r,t,e;return r=ie,(t=jn())!==o&&ou()!==o&&Qn()!==o&&ou()!==o&&(e=fu())!==o&&ou()!==o&&ru()!==o?(r=t=ae(t,e)):(ie=r,r=o),r}function du(){var r,t,e;return r=ie,(t=Yn())!==o&&ou()!==o&&Qn()!==o&&ou()!==o&&(e=fu())!==o&&ou()!==o&&ru()!==o?(r=t=ae(t,e)):(ie=r,r=o),r}const Lu={ARRAY:!0,ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CROSS:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,FOR:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,IS:!0,JOIN:!0,JSON:!0,KEY:!0,LEFT:!0,LIKE:!0,LIMIT:!0,LOW_PRIORITY:!0,NOT:!0,NULL:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,PARTITION:!0,RECURSIVE:!0,RENAME:!0,READ:!0,RIGHT:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,TYPE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WINDOW:!0,WITH:!0,WHEN:!0,WHERE:!0,WRITE:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0},Cu={BOOL:!0,BYTE:!0,DATE:!0,DATETIME:!0,FLOAT64:!0,INT64:!0,NUMERIC:!0,STRING:!0,TIME:!0,TIMESTAMP:!0,ARRAY:!0,STRUCT:!0};function pu(r,t){return {type:"unary_expr",operator:r,expr:t}}function wu(r,t,e){return {type:"binary_expr",operator:r,left:t,right:e}}function Eu(r){const t=n(Number.MAX_SAFE_INTEGER);return !(n(r)<t)}function hu(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][3]);return e}function Au(r,t){let e=r;for(let r=0;r<t.length;r++)e=wu(t[r][1],e,t[r][3]);return e}function yu(r){const t=Iu[r];return t||(r||null)}function Tu(r){const t=[];for(let e of r.keys()){const r=e.split("::");if(!r){t.push(e);break}r&&r[1]&&(r[1]=yu(r[1])),t.push(r.join("::"));}return t}const mu=new Set,Su=new Set,Iu={};if((e=a())!==o&&ie===r.length)return e;throw e!==o&&ie<r.length&&pe({type:"end"}),we(fe,le<r.length?r.charAt(le):null,le<r.length?Ce(le,le+1):Ce(le,le))}};},function(r,t,e){var n=e(0);function u(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,u);}!function(r,t){function e(){this.constructor=r;}e.prototype=t.prototype,r.prototype=new e;}(u,Error),u.buildMessage=function(r,t){var e={literal:function(r){return '"'+u(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?o(r.parts[t][0])+"-"+o(r.parts[t][1]):o(r.parts[t]);return "["+(r.inverted?"^":"")+e+"]"},any:function(r){return "any character"},end:function(r){return "end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function u(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}function o(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}return "Expected "+function(r){var t,n,u,o=new Array(r.length);for(t=0;t<r.length;t++)o[t]=(u=r[t],e[u.type](u));if(o.sort(),o.length>0){for(t=1,n=1;t<o.length;t++)o[t-1]!==o[t]&&(o[n]=o[t],n++);o.length=n;}switch(o.length){case 1:return o[0];case 2:return o[0]+" or "+o[1];default:return o.slice(0,-1).join(", ")+", or "+o[o.length-1]}}(r)+" but "+function(r){return r?'"'+u(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:u,parse:function(r,t){t=void 0!==t?t:{};var e,o={},s={start:Iu},a=Iu,i=function(r,t){return Ya(r,t)},c=hu("AUTO_INCREMENT",!0),l=hu("UNIQUE",!0),f=hu("PRIMARY",!0),v=hu("KEY",!0),b=hu("COLUMN_FORMAT",!0),d=hu("FIXED",!0),L=hu("DYNAMIC",!0),C=hu("DEFAULT",!0),p=hu("STORAGE",!0),w=hu("DISK",!0),E=hu("MEMORY",!0),h=hu("ALGORITHM",!0),A=hu("INSTANT",!0),y=hu("INPLACE",!0),T=hu("COPY",!0),m=hu("LOCK",!0),S=hu("NONE",!0),I=hu("SHARED",!0),N=hu("EXCLUSIVE",!0),R=hu("CHECK",!0),_=hu("NOCHECK",!0),g=hu("PRIMARY KEY",!0),O=hu("NOT",!0),U=hu("FOR",!0),x=hu("REPLICATION",!0),M=hu("FOREIGN KEY",!0),D=hu("MATCH FULL",!0),k=hu("MATCH PARTIAL",!0),$=hu("MATCH SIMPLE",!0),F=hu("ON DELETE",!0),P=hu("ON UPDATE",!0),H=hu("RESTRICT",!0),G=hu("CASCADE",!0),j=hu("SET NULL",!0),Y=hu("NO ACTION",!0),B=hu("SET DEFAULT",!0),X=hu("AVG_ROW_LENGTH",!0),W=hu("KEY_BLOCK_SIZE",!0),V=hu("MAX_ROWS",!0),K=hu("MIN_ROWS",!0),q=hu("STATS_SAMPLE_PAGES",!0),Z=hu("CHARACTER SET",!0),z=hu("CHARSET",!0),J=hu("COLLATE",!0),Q=hu("CONNECTION",!0),rr=hu("COMPRESSION",!0),tr=hu("'",!1),er=hu("ZLIB",!0),nr=hu("LZ4",!0),ur=hu("ENGINE",!0),or=hu("READ",!0),sr=hu("LOCAL",!0),ar=hu("LOW_PRIORITY",!0),ir=hu("WRITE",!0),cr=hu("(",!1),lr=hu(")",!1),fr=hu("BTREE",!0),vr=hu("HASH",!0),br=hu("WITH",!0),dr=hu("PARSER",!0),Lr=hu("VISIBLE",!0),Cr=hu("INVISIBLE",!0),pr=hu("FIRST",!0),wr=hu("ROWS",!0),Er=hu("ONLY",!0),hr=hu("NEXT",!0),Ar=hu("=",!1),yr=hu("DUPLICATE",!0),Tr=function(r,t){return Ba(r,t)},mr=hu("!",!1),Sr=function(r){return r[0]+" "+r[2]},Ir=hu(">=",!1),Nr=hu(">",!1),Rr=hu("<=",!1),_r=hu("<>",!1),gr=hu("<",!1),Or=hu("!=",!1),Ur=hu("+",!1),xr=hu("-",!1),Mr=hu("*",!1),Dr=hu("/",!1),kr=hu("%",!1),$r=function(r){return r.parentheses=!0,r},Fr=function(r){return !0===Pa[r.toUpperCase()]},Pr=hu('"',!1),Hr=/^[^"]/,Gr=Au(['"'],!0,!1),jr=function(r){return r.join("")},Yr=/^[^']/,Br=Au(["'"],!0,!1),Xr=hu("`",!1),Wr=/^[^`]/,Vr=Au(["`"],!0,!1),Kr=function(r,t){return r+t.join("")},qr=/^[A-Za-z_]/,Zr=Au([["A","Z"],["a","z"],"_"],!1,!1),zr=/^[A-Za-z0-9_]/,Jr=Au([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),Qr=/^[A-Za-z0-9_:]/,rt=Au([["A","Z"],["a","z"],["0","9"],"_",":"],!1,!1),tt=hu(":",!1),et=function(r){return {type:"string",value:r[1].join("")}},nt=hu("ON UPDATE CURRENT_TIMESTAMP",!0),ut=/^[^"\\\0-\x1F\x7F]/,ot=Au(['"',"\\",["\0",""],""],!0,!1),st=/^[^'\\]/,at=Au(["'","\\"],!0,!1),it=hu("\\'",!1),ct=hu('\\"',!1),lt=hu("\\\\",!1),ft=hu("\\/",!1),vt=hu("\\b",!1),bt=hu("\\f",!1),dt=hu("\\n",!1),Lt=hu("\\r",!1),Ct=hu("\\t",!1),pt=hu("\\u",!1),wt=hu("\\",!1),Et=/^[\n\r]/,ht=Au(["\n","\r"],!1,!1),At=hu(".",!1),yt=/^[0-9]/,Tt=Au([["0","9"]],!1,!1),mt=/^[0-9a-fA-F]/,St=Au([["0","9"],["a","f"],["A","F"]],!1,!1),It=/^[eE]/,Nt=Au(["e","E"],!1,!1),Rt=/^[+\-]/,_t=Au(["+","-"],!1,!1),gt=hu("NULL",!0),Ot=hu("NOT NULL",!0),Ut=hu("TRUE",!0),xt=hu("TO",!0),Mt=hu("FALSE",!0),Dt=(hu("DROP",!0)),kt=hu("USE",!0),$t=hu("ALTER",!0),Ft=hu("SELECT",!0),Pt=hu("UPDATE",!0),Ht=hu("CREATE",!0),Gt=hu("TEMPORARY",!0),jt=hu("IF NOT EXISTS",!0),Yt=hu("DELETE",!0),Bt=hu("INSERT",!0),Xt=hu("RECURSIVE",!1),Wt=hu("REPLACE",!0),Vt=hu("RENAME",!0),Kt=hu("IGNORE",!0),qt=(hu("PARTITION",!0)),Zt=hu("INTO",!0),zt=hu("FROM",!0),Jt=hu("SET",!0),Qt=hu("UNLOCK",!0),re=hu("AS",!0),te=hu("TABLE",!0),ee=hu("TABLES",!0),ne=hu("ON",!0),ue=hu("LEFT",!0),oe=hu("RIGHT",!0),se=hu("FULL",!0),ae=hu("INNER",!0),ie=hu("JOIN",!0),ce=hu("OUTER",!0),le=hu("OVER",!0),fe=hu("UNION",!0),ve=hu("VALUES",!0),be=hu("USING",!0),de=hu("WHERE",!0),Le=hu("GROUP",!0),Ce=hu("BY",!0),pe=hu("ORDER",!0),we=hu("HAVING",!0),Ee=hu("FETCH",!0),he=hu("OFFSET",!0),Ae=hu("ASC",!0),ye=hu("DESC",!0),Te=hu("ALL",!0),me=hu("DISTINCT",!0),Se=hu("BETWEEN",!0),Ie=hu("IN",!0),Ne=hu("IS",!0),Re=hu("LIKE",!0),_e=hu("EXISTS",!0),ge=hu("AND",!0),Oe=hu("OR",!0),Ue=hu("COUNT",!0),xe=hu("MAX",!0),Me=hu("MIN",!0),De=hu("SUM",!0),ke=hu("AVG",!0),$e=hu("CALL",!0),Fe=hu("CASE",!0),Pe=hu("WHEN",!0),He=hu("THEN",!0),Ge=hu("ELSE",!0),je=hu("END",!0),Ye=hu("CAST",!0),Be=hu("CHAR",!0),Xe=hu("VARCHAR",!0),We=hu("NUMERIC",!0),Ve=hu("DECIMAL",!0),Ke=hu("SIGNED",!0),qe=hu("UNSIGNED",!0),Ze=hu("INT",!0),ze=hu("ZEROFILL",!0),Je=hu("INTEGER",!0),Qe=hu("JSON",!0),rn=hu("SMALLINT",!0),tn=hu("TINYINT",!0),en=hu("TINYTEXT",!0),nn=hu("TEXT",!0),un=hu("MEDIUMTEXT",!0),on=hu("LONGTEXT",!0),sn=hu("BIGINT",!0),an=hu("FLOAT",!0),cn=hu("DOUBLE",!0),ln=hu("DATE",!0),fn=hu("DATETIME",!0),vn=hu("TIME",!0),bn=hu("TIMESTAMP",!0),dn=hu("TRUNCATE",!0),Ln=hu("USER",!0),Cn=hu("CURRENT_DATE",!0),pn=(hu("INTERVAL",!0)),wn=hu("YEAR",!0),En=hu("MONTH",!0),hn=hu("DAY",!0),An=hu("HOUR",!0),yn=hu("MINUTE",!0),Tn=hu("SECOND",!0),mn=hu("CURRENT_TIME",!0),Sn=hu("CURRENT_TIMESTAMP",!0),In=hu("CURRENT_USER",!0),Nn=hu("SESSION_USER",!0),Rn=hu("SYSTEM_USER",!0),_n=hu("GLOBAL",!0),gn=hu("SESSION",!0),On=hu("PERSIST",!0),Un=hu("PERSIST_ONLY",!0),xn=hu("@",!1),Mn=hu("@@",!1),Dn=hu("$",!1),kn=hu("return",!0),$n=hu(":=",!1),Fn=hu("DUAL",!0),Pn=hu("ADD",!0),Hn=hu("COLUMN",!0),Gn=hu("INDEX",!0),jn=hu("FULLTEXT",!0),Yn=hu("SPATIAL",!0),Bn=hu("COMMENT",!0),Xn=hu("CONSTRAINT",!0),Wn=hu("REFERENCES",!0),Vn=hu("SQL_CALC_FOUND_ROWS",!0),Kn=hu("SQL_CACHE",!0),qn=hu("SQL_NO_CACHE",!0),Zn=hu("SQL_SMALL_RESULT",!0),zn=hu("SQL_BIG_RESULT",!0),Jn=hu("SQL_BUFFER_RESULT",!0),Qn=hu(",",!1),ru=hu("[",!1),tu=hu("]",!1),eu=hu(";",!1),nu=hu("->",!1),uu=hu("->>",!1),ou=hu("||",!1),su=hu("&&",!1),au=hu("/*",!1),iu=hu("*/",!1),cu=hu("--",!1),lu=hu("#",!1),fu={type:"any"},vu=/^[ \t\n\r]/,bu=Au([" ","\t","\n","\r"],!1,!1),du=function(r){return {dataType:r}},Lu=0,Cu=[{line:1,column:1}],pu=0,wu=[],Eu=0;if("startRule"in t){if(!(t.startRule in s))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=s[t.startRule];}function hu(r,t){return {type:"literal",text:r,ignoreCase:t}}function Au(r,t,e){return {type:"class",parts:r,inverted:t,ignoreCase:e}}function yu(t){var e,n=Cu[t];if(n)return n;for(e=t-1;!Cu[e];)e--;for(n={line:(n=Cu[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return Cu[t]=n,n}function Tu(r,t){var e=yu(r),n=yu(t);return {start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function mu(r){Lu<pu||(Lu>pu&&(pu=Lu,wu=[]),wu.push(r));}function Su(r,t,e){return new u(u.buildMessage(r,t),r,t,e)}function Iu(){var r,t;return r=Lu,Ea()!==o?((t=function(){var r,t,e,n,u,s,a,i;if(r=Lu,(t=Ru())!==o){if(e=[],n=Lu,(u=Ea())!==o&&(s=pa())!==o&&(a=Ea())!==o&&(i=Ru())!==o?n=u=[u,s,a,i]:(Lu=n,n=o),n!==o)for(;n!==o;)e.push(n),n=Lu,(u=Ea())!==o&&(s=pa())!==o&&(a=Ea())!==o&&(i=Ru())!==o?n=u=[u,s,a,i]:(Lu=n,n=o);else e=o;e!==o?(t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return {tableList:Array.from(Ka),columnList:Wa(qa),ast:e}}(t,e),r=t):(Lu=r,r=o);}else Lu=r,r=o;return r}())===o&&(t=Nu())===o&&(t=Ru()),t!==o?(r=t):(Lu=r,r=o)):(Lu=r,r=o),r}function Nu(){var t;return (t=function(){var r,t,e,n;r=Lu,(t=is())!==o&&Ea()!==o&&(e=Es())!==o&&Ea()!==o&&(n=eo())!==o?(u=t,s=e,(a=n)&&a.forEach(r=>Ka.add(`${u}::${r.db}::${r.table}`)),t={tableList:Array.from(Ka),columnList:Wa(qa),ast:{type:u.toLowerCase(),keyword:s.toLowerCase(),name:a}},r=t):(Lu=r,r=o);var u,s,a;return r}())===o&&(t=function(){var t,e,n,u,s,a,c,l,f,v;t=Lu,(e=ls())!==o&&Ea()!==o?((n=fs())===o&&(n=null),n!==o&&Ea()!==o&&Es()!==o&&Ea()!==o?((u=vs())===o&&(u=null),u!==o&&Ea()!==o&&(s=eo())!==o&&Ea()!==o&&(a=function(){var r,t,e,n,u,s,a,c,l;if(r=Lu,(t=La())!==o)if(Ea()!==o)if((e=gu())!==o){for(n=[],u=Lu,(s=Ea())!==o&&(a=ba())!==o&&(c=Ea())!==o&&(l=gu())!==o?u=s=[s,a,c,l]:(Lu=u,u=o);u!==o;)n.push(u),u=Lu,(s=Ea())!==o&&(a=ba())!==o&&(c=Ea())!==o&&(l=gu())!==o?u=s=[s,a,c,l]:(Lu=u,u=o);n!==o&&(u=Ea())!==o&&(s=Ca())!==o?(t=i(e,n),r=t):(Lu=r,r=o);}else Lu=r,r=o;else Lu=r,r=o;else Lu=r,r=o;return r}())!==o&&Ea()!==o?((c=function(){var r,t,e,n,u,s,a,i;if(r=Lu,(t=Hu())!==o){for(e=[],n=Lu,(u=Ea())!==o?((s=ba())===o&&(s=null),s!==o&&(a=Ea())!==o&&(i=Hu())!==o?n=u=[u,s,a,i]:(Lu=n,n=o)):(Lu=n,n=o);n!==o;)e.push(n),n=Lu,(u=Ea())!==o?((s=ba())===o&&(s=null),s!==o&&(a=Ea())!==o&&(i=Hu())!==o?n=u=[u,s,a,i]:(Lu=n,n=o)):(Lu=n,n=o);e!==o?(t=Ya(t,e),r=t):(Lu=r,r=o);}else Lu=r,r=o;return r}())===o&&(c=null),c!==o&&Ea()!==o?((l=function(){var t,e,n,u;t=Lu,"ignore"===r.substr(Lu,6).toLowerCase()?(e=r.substr(Lu,6),Lu+=6):(e=o,0===Eu&&mu(Kt));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o);return t}())===o&&(l=bs()),l===o&&(l=null),l!==o&&Ea()!==o?((f=ws())===o&&(f=null),f!==o&&Ea()!==o?((v=_u())===o&&(v=null),v!==o?(b=e,d=n,L=u,p=a,w=c,E=l,h=f,A=v,(C=s)&&C.forEach(r=>Ka.add(`create::${r.db}::${r.table}`)),e={tableList:Array.from(Ka),columnList:Wa(qa),ast:{type:b[0].toLowerCase(),keyword:"table",temporary:d&&d[0].toLowerCase(),if_not_exists:L&&L[0].toLowerCase(),table:C,ignore_replace:E&&E[0].toLowerCase(),as:h&&h[0].toLowerCase(),query_expr:A&&A.ast,create_definitions:p,table_options:w}},t=e):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o);var b,d,L,C,p,w,E,h,A;t===o&&(t=Lu,(e=ls())!==o&&Ea()!==o?((n=fs())===o&&(n=null),n!==o&&Ea()!==o&&Es()!==o&&Ea()!==o?((u=vs())===o&&(u=null),u!==o&&Ea()!==o&&(s=eo())!==o&&Ea()!==o&&(a=function r(){var t,e;(t=function(){var r,t;r=Lu,Ms()!==o&&Ea()!==o&&(t=eo())!==o?(r={type:"like",table:t}):(Lu=r,r=o);return r}())===o&&(t=Lu,La()!==o&&Ea()!==o&&(e=r())!==o&&Ea()!==o&&Ca()!==o?((n=e).parentheses=!0,t=n):(Lu=t,t=o));var n;return t}())!==o?(e=function(r,t,e,n,u){return n&&n.forEach(r=>Ka.add(`create::${r.db}::${r.table}`)),{tableList:Array.from(Ka),columnList:Wa(qa),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t[0].toLowerCase(),if_not_exists:e&&e[0].toLowerCase(),table:n,like:u}}}(e,n,u,s,a),t=e):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o));return t}())===o&&(t=function(){var t,e,n,u;t=Lu,(e=function(){var t,e,n,u;t=Lu,"truncate"===r.substr(Lu,8).toLowerCase()?(e=r.substr(Lu,8),Lu+=8):(e=o,0===Eu&&mu(dn));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="TRUNCATE"):(Lu=t,t=o)):(Lu=t,t=o);return t}())!==o&&Ea()!==o?((n=Es())===o&&(n=null),n!==o&&Ea()!==o&&(u=eo())!==o?(s=e,a=n,(i=u)&&i.forEach(r=>Ka.add(`${s}::${r.db}::${r.table}`)),e={tableList:Array.from(Ka),columnList:Wa(qa),ast:{type:s.toLowerCase(),keyword:a&&a.toLowerCase()||"table",name:i}},t=e):(Lu=t,t=o)):(Lu=t,t=o);var s,a,i;return t}())===o&&(t=function(){var r,t,e;r=Lu,(t=ds())!==o&&Ea()!==o&&Es()!==o&&Ea()!==o&&(e=function(){var r,t,e,n,u,s,a,c;if(r=Lu,(t=Ju())!==o){for(e=[],n=Lu,(u=Ea())!==o&&(s=ba())!==o&&(a=Ea())!==o&&(c=Ju())!==o?n=u=[u,s,a,c]:(Lu=n,n=o);n!==o;)e.push(n),n=Lu,(u=Ea())!==o&&(s=ba())!==o&&(a=Ea())!==o&&(c=Ju())!==o?n=u=[u,s,a,c]:(Lu=n,n=o);e!==o?(t=i(t,e),r=t):(Lu=r,r=o);}else Lu=r,r=o;return r}())!==o?((n=e).forEach(r=>r.forEach(r=>r.table&&Ka.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(Ka),columnList:Wa(qa),ast:{type:"rename",table:n}},r=t):(Lu=r,r=o);var n;return r}())===o&&(t=function(){var t,e,n;t=Lu,(e=function(){var t,e,n,u;t=Lu,"call"===r.substr(Lu,4).toLowerCase()?(e=r.substr(Lu,4),Lu+=4):(e=o,0===Eu&&mu($e));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="CALL"):(Lu=t,t=o)):(Lu=t,t=o);return t}())!==o&&Ea()!==o&&(n=xa())!==o?(u=n,e={tableList:Array.from(Ka),columnList:Wa(qa),ast:{type:"call",expr:u}},t=e):(Lu=t,t=o);var u;return t}())===o&&(t=function(){var t,e,n;t=Lu,(e=function(){var t,e,n,u;t=Lu,"use"===r.substr(Lu,3).toLowerCase()?(e=r.substr(Lu,3),Lu+=3):(e=o,0===Eu&&mu(kt));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o);return t}())!==o&&Ea()!==o&&(n=$o())!==o?(u=n,Ka.add(`use::${u}::null`),e={tableList:Array.from(Ka),columnList:Wa(qa),ast:{type:"use",db:u}},t=e):(Lu=t,t=o);var u;return t}())===o&&(t=function(){var t,e,n,u;t=Lu,(e=function(){var t,e,n,u;t=Lu,"alter"===r.substr(Lu,5).toLowerCase()?(e=r.substr(Lu,5),Lu+=5):(e=o,0===Eu&&mu($t));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o);return t}())!==o&&Ea()!==o&&Es()!==o&&Ea()!==o&&(n=eo())!==o&&Ea()!==o&&(u=function(){var r,t,e,n,u,s,a,c;if(r=Lu,(t=xu())!==o){for(e=[],n=Lu,(u=Ea())!==o&&(s=ba())!==o&&(a=Ea())!==o&&(c=xu())!==o?n=u=[u,s,a,c]:(Lu=n,n=o);n!==o;)e.push(n),n=Lu,(u=Ea())!==o&&(s=ba())!==o&&(a=Ea())!==o&&(c=xu())!==o?n=u=[u,s,a,c]:(Lu=n,n=o);e!==o?(t=i(t,e),r=t):(Lu=r,r=o);}else Lu=r,r=o;return r}())!==o?(a=u,(s=n)&&s.length>0&&s.forEach(r=>Ka.add(`alter::${r.db}::${r.table}`)),e={tableList:Array.from(Ka),columnList:Wa(qa),ast:{type:"alter",table:s,expr:a}},t=e):(Lu=t,t=o);var s,a;return t}())===o&&(t=function(){var t,e,n,u;t=Lu,(e=ps())!==o&&Ea()!==o?((n=function(){var t,e,n,u;t=Lu,"global"===r.substr(Lu,6).toLowerCase()?(e=r.substr(Lu,6),Lu+=6):(e=o,0===Eu&&mu(_n));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="GLOBAL"):(Lu=t,t=o)):(Lu=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=Lu,"session"===r.substr(Lu,7).toLowerCase()?(e=r.substr(Lu,7),Lu+=7):(e=o,0===Eu&&mu(gn));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="SESSION"):(Lu=t,t=o)):(Lu=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=Lu,"local"===r.substr(Lu,5).toLowerCase()?(e=r.substr(Lu,5),Lu+=5):(e=o,0===Eu&&mu(sr));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="LOCAL"):(Lu=t,t=o)):(Lu=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=Lu,"persist"===r.substr(Lu,7).toLowerCase()?(e=r.substr(Lu,7),Lu+=7):(e=o,0===Eu&&mu(On));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="PERSIST"):(Lu=t,t=o)):(Lu=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=Lu,"persist_only"===r.substr(Lu,12).toLowerCase()?(e=r.substr(Lu,12),Lu+=12):(e=o,0===Eu&&mu(Un));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="PERSIST_ONLY"):(Lu=t,t=o)):(Lu=t,t=o);return t}()),n===o&&(n=null),n!==o&&Ea()!==o&&(u=Na())!==o?(s=n,(a=u).keyword=s,e={tableList:Array.from(Ka),columnList:Wa(qa),ast:{type:"set",expr:a}},t=e):(Lu=t,t=o)):(Lu=t,t=o);var s,a;return t}())===o&&(t=function(){var t,e,n;t=Lu,(e=function(){var t,e,n,u;t=Lu,"lock"===r.substr(Lu,4).toLowerCase()?(e=r.substr(Lu,4),Lu+=4):(e=o,0===Eu&&mu(m));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o);return t}())!==o&&Ea()!==o&&hs()!==o&&Ea()!==o&&(n=function(){var r,t,e,n,u,s,a,i;if(r=Lu,(t=Gu())!==o){for(e=[],n=Lu,(u=Ea())!==o&&(s=ba())!==o&&(a=Ea())!==o&&(i=Gu())!==o?n=u=[u,s,a,i]:(Lu=n,n=o);n!==o;)e.push(n),n=Lu,(u=Ea())!==o&&(s=ba())!==o&&(a=Ea())!==o&&(i=Gu())!==o?n=u=[u,s,a,i]:(Lu=n,n=o);e!==o?(t=Ya(t,e),r=t):(Lu=r,r=o);}else Lu=r,r=o;return r}())!==o?(u=n,e={tableList:Array.from(Ka),columnList:Wa(qa),ast:{type:"lock",keyword:"tables",tables:u}},t=e):(Lu=t,t=o);var u;return t}())===o&&(t=function(){var t,e;t=Lu,(e=function(){var t,e,n,u;t=Lu,"unlock"===r.substr(Lu,6).toLowerCase()?(e=r.substr(Lu,6),Lu+=6):(e=o,0===Eu&&mu(Qt));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o);return t}())!==o&&Ea()!==o&&hs()!==o?(e={tableList:Array.from(Ka),columnList:Wa(qa),ast:{type:"unlock",keyword:"tables"}},t=e):(Lu=t,t=o);return t}()),t}function Ru(){var t;return (t=_u())===o&&(t=function(){var r,t,e,n,u;r=Lu,(t=cs())!==o&&Ea()!==o&&(e=eo())!==o&&Ea()!==o&&ps()!==o&&Ea()!==o&&(n=bo())!==o&&Ea()!==o?((u=io())===o&&(u=null),u!==o?(a=n,i=u,(s=e)&&s.forEach(r=>{const{db:t,as:e,table:n}=r;Ka.add(`update::${t}::${n}`);}),a&&a.forEach(r=>qa.add(`update::${r.table}::${r.column}`)),t={tableList:Array.from(Ka),columnList:Wa(qa),ast:{type:"update",table:s,set:a,where:i}},r=t):(Lu=r,r=o)):(Lu=r,r=o);var s,a,i;return r}())===o&&(t=function(){var r,t,e,n,u,s,a,c;r=Lu,(t=Eo())!==o&&Ea()!==o?((e=Cs())===o&&(e=null),e!==o&&Ea()!==o&&(n=so())!==o&&Ea()!==o?((u=po())===o&&(u=null),u!==o&&Ea()!==o&&La()!==o&&Ea()!==o&&(s=function(){var r,t,e,n,u,s,a,c;if(r=Lu,(t=Po())!==o){for(e=[],n=Lu,(u=Ea())!==o&&(s=ba())!==o&&(a=Ea())!==o&&(c=Po())!==o?n=u=[u,s,a,c]:(Lu=n,n=o);n!==o;)e.push(n),n=Lu,(u=Ea())!==o&&(s=ba())!==o&&(a=Ea())!==o&&(c=Po())!==o?n=u=[u,s,a,c]:(Lu=n,n=o);e!==o?(t=i(t,e),r=t):(Lu=r,r=o);}else Lu=r,r=o;return r}())!==o&&Ea()!==o&&Ca()!==o&&Ea()!==o&&(a=Co())!==o&&Ea()!==o?((c=wo())===o&&(c=null),c!==o?(t=function(r,t,e,n,u,o){if(t&&(Ka.add(`insert::${t.db}::${t.table}`),t.as=null),n){let r=t&&t.table||null;n.forEach(t=>qa.add(`insert::${r}::${t}`));}return {tableList:Array.from(Ka),columnList:Wa(qa),ast:{type:r,table:[t],columns:n,values:u,partition:e,on_duplicate_update:o}}}(t,n,u,s,a,c),r=t):(Lu=r,r=o)):(Lu=r,r=o)):(Lu=r,r=o)):(Lu=r,r=o);return r}())===o&&(t=function(){var r,t,e,n,u,s;r=Lu,(t=Eo())!==o&&Ea()!==o&&Cs()!==o&&Ea()!==o&&(e=so())!==o&&Ea()!==o?((n=po())===o&&(n=null),n!==o&&Ea()!==o&&(u=Co())!==o&&Ea()!==o?((s=wo())===o&&(s=null),s!==o?(a=t,c=n,l=u,f=s,(i=e)&&(Ka.add(`insert::${i.db}::${i.table}`),qa.add(`insert::${i.table}::(.*)`),i.as=null),t={tableList:Array.from(Ka),columnList:Wa(qa),ast:{type:a,table:[i],columns:null,values:l,partition:c,on_duplicate_update:f}},r=t):(Lu=r,r=o)):(Lu=r,r=o)):(Lu=r,r=o);var a,i,c,l,f;return r}())===o&&(t=function(){var r,t,e,n,u,s;r=Lu,(t=Eo())!==o&&Ea()!==o&&Cs()!==o&&Ea()!==o&&(e=so())!==o&&Ea()!==o?((n=po())===o&&(n=null),n!==o&&Ea()!==o&&ps()!==o&&Ea()!==o&&(u=bo())!==o&&Ea()!==o?((s=wo())===o&&(s=null),s!==o?(a=t,c=n,l=u,f=s,(i=e)&&(Ka.add(`insert::${i.db}::${i.table}`),qa.add(`insert::${i.table}::(.*)`),i.as=null),t={tableList:Array.from(Ka),columnList:Wa(qa),ast:{type:a,table:[i],columns:null,partition:c,set:l,on_duplicate_update:f}},r=t):(Lu=r,r=o)):(Lu=r,r=o)):(Lu=r,r=o);var a,i,c,l,f;return r}())===o&&(t=function(){var t,e,n,u,s;t=Lu,(e=function(){var t,e,n,u;t=Lu,"delete"===r.substr(Lu,6).toLowerCase()?(e=r.substr(Lu,6),Lu+=6):(e=o,0===Eu&&mu(Yt));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o);return t}())!==o&&Ea()!==o?((n=eo())===o&&(n=null),n!==o&&Ea()!==o&&(u=zu())!==o&&Ea()!==o?((s=io())===o&&(s=null),s!==o?(e=function(r,t,e){if(t&&t.forEach(r=>{r.table&&Ka.add(`delete::${r.db}::${r.table}`),qa.add(`delete::${r.table}::(.*)`);}),null===r&&1===t.length){const e=t[0];r=[{db:e.db,table:e.table,as:e.as,addition:!0}];}return {tableList:Array.from(Ka),columnList:Wa(qa),ast:{type:"delete",table:r,from:t,where:e}}}(n,u,s),t=e):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o);return t}())===o&&(t=Nu())===o&&(t=function(){var r,t;r=[],t=Ia();for(;t!==o;)r.push(t),t=Ia();return r}()),t}function _u(){var r,t,e,n,u,s,a,i,c,l;if(r=Lu,(t=ju())!==o){for(e=[],n=Lu,(u=Ea())!==o&&(s=ms())!==o&&(a=Ea())!==o?((i=_s())===o&&(i=null),i!==o&&(c=Ea())!==o&&(l=ju())!==o?n=u=[u,s,a,i,c,l]:(Lu=n,n=o)):(Lu=n,n=o);n!==o;)e.push(n),n=Lu,(u=Ea())!==o&&(s=ms())!==o&&(a=Ea())!==o?((i=_s())===o&&(i=null),i!==o&&(c=Ea())!==o&&(l=ju())!==o?n=u=[u,s,a,i,c,l]:(Lu=n,n=o)):(Lu=n,n=o);e!==o&&(n=Ea())!==o?((u=co())===o&&(u=null),u!==o&&(s=Ea())!==o?((a=vo())===o&&(a=null),a!==o?(r=t=function(r,t,e,n){let u=r;for(let r=0;r<t.length;r++)u._next=t[r][5],u.union=t[r][3]?"union all":"union",u=u._next;return e&&(r._orderby=e),n&&(r._limit=n),{tableList:Array.from(Ka),columnList:Wa(qa),ast:r}}(t,e,u,a)):(Lu=r,r=o)):(Lu=r,r=o)):(Lu=r,r=o);}else Lu=r,r=o;return r}function gu(){var t;return (t=function(){var t;(t=function(){var t,e,n,u,s,a;t=Lu,(e=ku())===o&&(e=null);e!==o&&Ea()!==o?("primary key"===r.substr(Lu,11).toLowerCase()?(n=r.substr(Lu,11),Lu+=11):(n=o,0===Eu&&mu(g)),n!==o&&Ea()!==o?((u=Qu())===o&&(u=null),u!==o&&Ea()!==o&&(s=Xu())!==o&&Ea()!==o?((a=ro())===o&&(a=null),a!==o?(c=n,l=u,f=s,v=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c.toLowerCase(),keyword:i&&i.keyword,index_type:l,resource:"constraint",index_options:v},t=e):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o);var i,c,l,f,v;return t}())===o&&(t=function(){var t,e,n,u,s,a,i,c;t=Lu,(e=ku())===o&&(e=null);e!==o&&Ea()!==o&&(n=function(){var t,e,n,u;t=Lu,"unique"===r.substr(Lu,6).toLowerCase()?(e=r.substr(Lu,6),Lu+=6):(e=o,0===Eu&&mu(l));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="UNIQUE"):(Lu=t,t=o)):(Lu=t,t=o);return t}())!==o&&Ea()!==o?((u=ia())===o&&(u=ca()),u===o&&(u=null),u!==o&&Ea()!==o?((s=Po())===o&&(s=null),s!==o&&Ea()!==o?((a=Qu())===o&&(a=null),a!==o&&Ea()!==o&&(i=Xu())!==o&&Ea()!==o?((c=ro())===o&&(c=null),c!==o?(v=n,b=u,d=s,L=a,C=i,p=c,e={constraint:(f=e)&&f.constraint,definition:C,constraint_type:b&&`${v.toLowerCase()} ${b.toLowerCase()}`||v.toLowerCase(),keyword:f&&f.keyword,index_type:L,index:d,resource:"constraint",index_options:p},t=e):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o);var f,v,b,d,L,C,p;return t}())===o&&(t=function(){var t,e,n,u,s,a;t=Lu,(e=ku())===o&&(e=null);e!==o&&Ea()!==o?("foreign key"===r.substr(Lu,11).toLowerCase()?(n=r.substr(Lu,11),Lu+=11):(n=o,0===Eu&&mu(M)),n!==o&&Ea()!==o?((u=Po())===o&&(u=null),u!==o&&Ea()!==o&&(s=Xu())!==o&&Ea()!==o?((a=Fu())===o&&(a=null),a!==o?(c=n,l=u,f=s,v=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c,keyword:i&&i.keyword,index:l,resource:"constraint",reference_definition:v},t=e):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o);var i,c,l,f,v;return t}())===o&&(t=$u());return t}())===o&&(t=Ou())===o&&(t=Mu())===o&&(t=Du()),t}function Ou(){var t,e,n,u,s,a,i,h,A,y,T,m,S,I,N,R,_,g,O,U,x,M,D,k,$;return t=Lu,(e=ko())!==o&&Ea()!==o&&(n=$a())!==o&&Ea()!==o?((u=function(){var t,e;t=Lu,(e=function(){var t,e,n,u;t=Lu,"not null"===r.substr(Lu,8).toLowerCase()?(e=r.substr(Lu,8),Lu+=8):(e=o,0===Eu&&mu(Ot));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o);return t}())!==o&&(e={type:"not null",value:"not null"});return t=e}())===o&&(u=Ko()),u===o&&(u=null),u!==o&&Ea()!==o?((s=function(){var r,t;r=Lu,ss()!==o&&Ea()!==o?((t=Vo())===o&&(t=So()),t!==o?(r={type:"default",value:t}):(Lu=r,r=o)):(Lu=r,r=o);return r}())===o&&(s=null),s!==o&&Ea()!==o?("auto_increment"===r.substr(Lu,14).toLowerCase()?(a=r.substr(Lu,14),Lu+=14):(a=o,0===Eu&&mu(c)),a===o&&(a=null),a!==o&&Ea()!==o?(i=Lu,"unique"===r.substr(Lu,6).toLowerCase()?(h=r.substr(Lu,6),Lu+=6):(h=o,0===Eu&&mu(l)),h===o&&("primary"===r.substr(Lu,7).toLowerCase()?(h=r.substr(Lu,7),Lu+=7):(h=o,0===Eu&&mu(f))),h===o&&(h=null),h!==o&&(A=Ea())!==o?("key"===r.substr(Lu,3).toLowerCase()?(y=r.substr(Lu,3),Lu+=3):(y=o,0===Eu&&mu(v)),y!==o?i=h=[h,A,y]:(Lu=i,i=o)):(Lu=i,i=o),i===o&&(i=null),i!==o&&(h=Ea())!==o?((A=ya())===o&&(A=null),A!==o&&(y=Ea())!==o?((T=Uu())===o&&(T=null),T!==o&&Ea()!==o?((m=function(){var t,e,n;t=Lu,"column_format"===r.substr(Lu,13).toLowerCase()?(e=r.substr(Lu,13),Lu+=13):(e=o,0===Eu&&mu(b));e!==o&&Ea()!==o?("fixed"===r.substr(Lu,5).toLowerCase()?(n=r.substr(Lu,5),Lu+=5):(n=o,0===Eu&&mu(d)),n===o&&("dynamic"===r.substr(Lu,7).toLowerCase()?(n=r.substr(Lu,7),Lu+=7):(n=o,0===Eu&&mu(L)),n===o&&("default"===r.substr(Lu,7).toLowerCase()?(n=r.substr(Lu,7),Lu+=7):(n=o,0===Eu&&mu(C)))),n!==o?(e=function(r,t){return {type:"column_format",value:t.toLowerCase()}}(0,n),t=e):(Lu=t,t=o)):(Lu=t,t=o);return t}())===o&&(m=null),m!==o&&Ea()!==o?((S=function(){var t,e,n;t=Lu,"storage"===r.substr(Lu,7).toLowerCase()?(e=r.substr(Lu,7),Lu+=7):(e=o,0===Eu&&mu(p));e!==o&&Ea()!==o?("disk"===r.substr(Lu,4).toLowerCase()?(n=r.substr(Lu,4),Lu+=4):(n=o,0===Eu&&mu(w)),n===o&&("memory"===r.substr(Lu,6).toLowerCase()?(n=r.substr(Lu,6),Lu+=6):(n=o,0===Eu&&mu(E))),n!==o?(e={type:"storage",value:n.toLowerCase()},t=e):(Lu=t,t=o)):(Lu=t,t=o);return t}())===o&&(S=null),S!==o&&Ea()!==o?((I=Fu())===o&&(I=null),I!==o?(N=e,R=n,_=u,g=s,O=a,U=i,x=A,M=T,D=m,k=S,$=I,qa.add(`create::${N.table}::${N.column}`),_&&!_.value&&(_.value="null"),t=e={column:N,definition:R,nullable:_,default_val:g,auto_increment:O&&O.toLowerCase(),unique_or_primary:U&&`${U[0].toLowerCase()} ${U[2].toLowerCase()}`,comment:x,collate:M,column_format:D,storage:k,reference_definition:$,resource:"column"}):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o),t}function Uu(){var t,e;return t=Lu,function(){var t,e,n,u;t=Lu,"collate"===r.substr(Lu,7).toLowerCase()?(e=r.substr(Lu,7),Lu+=7):(e=o,0===Eu&&mu(J));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="COLLATE"):(Lu=t,t=o)):(Lu=t,t=o);return t}()!==o&&Ea()!==o&&(e=Go())!==o?(t={type:"collate",value:e}):(Lu=t,t=o),t}function xu(){var t;return (t=function(){var r,t,e;r=Lu,(t=sa())!==o&&Ea()!==o&&(e=$u())!==o?(n=e,t={action:"add",...n,type:"alter"},r=t):(Lu=r,r=o);var n;return r}())===o&&(t=function(){var t,e,n,u;t=Lu,(e=is())!==o&&Ea()!==o?("check"===r.substr(Lu,5).toLowerCase()?(n=r.substr(Lu,5),Lu+=5):(n=o,0===Eu&&mu(R)),n!==o&&Ea()!==o&&(u=Go())!==o?(e={action:"drop",constraint:u,keyword:n.toLowerCase(),resource:"constraint",type:"alter"},t=e):(Lu=t,t=o)):(Lu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=Lu,Is()!==o&&Ea()!==o?("check"===r.substr(Lu,5).toLowerCase()?(e=r.substr(Lu,5),Lu+=5):(e=o,0===Eu&&mu(R)),e!==o&&Ea()!==o?("check"===r.substr(Lu,5).toLowerCase()?(n=r.substr(Lu,5),Lu+=5):(n=o,0===Eu&&mu(R)),n!==o&&Ea()!==o&&fa()!==o&&Ea()!==o&&(u=Go())!==o?(t={action:"with",constraint:u,keyword:"check check",resource:"constraint",type:"alter"}):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o);return t}())===o&&(t=function(){var t,e,n;t=Lu,"nocheck"===r.substr(Lu,7).toLowerCase()?(e=r.substr(Lu,7),Lu+=7):(e=o,0===Eu&&mu(_));e!==o&&Ea()!==o&&fa()!==o&&Ea()!==o&&(n=Go())!==o?(t=e={action:"nocheck",constraint:n,resource:"constraint",type:"alter"}):(Lu=t,t=o);return t}())===o&&(t=function(){var r,t,e,n;r=Lu,(t=sa())!==o&&Ea()!==o?((e=aa())===o&&(e=null),e!==o&&Ea()!==o&&(n=Ou())!==o?(u=e,s=n,t={action:"add",...s,keyword:u,resource:"column",type:"alter"},r=t):(Lu=r,r=o)):(Lu=r,r=o);var u,s;return r}())===o&&(t=function(){var r,t,e;r=Lu,is()!==o&&Ea()!==o?((t=aa())===o&&(t=null),t!==o&&Ea()!==o&&(e=ko())!==o?(r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(Lu=r,r=o)):(Lu=r,r=o);return r}())===o&&(t=function(){var r,t,e;r=Lu,(t=sa())!==o&&Ea()!==o&&(e=Mu())!==o?(n=e,t={action:"add",type:"alter",...n},r=t):(Lu=r,r=o);var n;return r}())===o&&(t=function(){var r,t,e;r=Lu,(t=sa())!==o&&Ea()!==o&&(e=Du())!==o?(n=e,t={action:"add",type:"alter",...n},r=t):(Lu=r,r=o);var n;return r}())===o&&(t=function(){var r,t,e,n;r=Lu,(t=ds())!==o&&Ea()!==o?((e=as())===o&&(e=ws()),e===o&&(e=null),e!==o&&Ea()!==o&&(n=$o())!==o?(s=n,t={action:"rename",type:"alter",resource:"table",keyword:(u=e)&&u[0].toLowerCase(),table:s},r=t):(Lu=r,r=o)):(Lu=r,r=o);var u,s;return r}())===o&&(t=function(){var t,e,n;t=Lu,"algorithm"===r.substr(Lu,9).toLowerCase()?(e=r.substr(Lu,9),Lu+=9):(e=o,0===Eu&&mu(h));e!==o&&Ea()!==o&&oa()!==o&&Ea()!==o?("default"===r.substr(Lu,7).toLowerCase()?(n=r.substr(Lu,7),Lu+=7):(n=o,0===Eu&&mu(C)),n===o&&("instant"===r.substr(Lu,7).toLowerCase()?(n=r.substr(Lu,7),Lu+=7):(n=o,0===Eu&&mu(A)),n===o&&("inplace"===r.substr(Lu,7).toLowerCase()?(n=r.substr(Lu,7),Lu+=7):(n=o,0===Eu&&mu(y)),n===o&&("copy"===r.substr(Lu,4).toLowerCase()?(n=r.substr(Lu,4),Lu+=4):(n=o,0===Eu&&mu(T))))),n!==o?(t=e={type:"alter",keyword:"algorithm",resource:"algorithm",algorithm:n}):(Lu=t,t=o)):(Lu=t,t=o);return t}())===o&&(t=function(){var t,e,n;t=Lu,"lock"===r.substr(Lu,4).toLowerCase()?(e=r.substr(Lu,4),Lu+=4):(e=o,0===Eu&&mu(m));e!==o&&Ea()!==o&&oa()!==o&&Ea()!==o?("default"===r.substr(Lu,7).toLowerCase()?(n=r.substr(Lu,7),Lu+=7):(n=o,0===Eu&&mu(C)),n===o&&("none"===r.substr(Lu,4).toLowerCase()?(n=r.substr(Lu,4),Lu+=4):(n=o,0===Eu&&mu(S)),n===o&&("shared"===r.substr(Lu,6).toLowerCase()?(n=r.substr(Lu,6),Lu+=6):(n=o,0===Eu&&mu(I)),n===o&&("exclusive"===r.substr(Lu,9).toLowerCase()?(n=r.substr(Lu,9),Lu+=9):(n=o,0===Eu&&mu(N))))),n!==o?(t=e={type:"alter",keyword:"lock",resource:"lock",lock:n}):(Lu=t,t=o)):(Lu=t,t=o);return t}()),t}function Mu(){var r,t,e,n,u,s,a,i;return r=Lu,(t=ia())===o&&(t=ca()),t!==o&&Ea()!==o?((e=Po())===o&&(e=null),e!==o&&Ea()!==o?((n=Qu())===o&&(n=null),n!==o&&Ea()!==o&&(u=Xu())!==o&&Ea()!==o?((s=ro())===o&&(s=null),s!==o&&Ea()!==o?(a=n,i=s,r=t={index:e,definition:u,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i}):(Lu=r,r=o)):(Lu=r,r=o)):(Lu=r,r=o)):(Lu=r,r=o),r}function Du(){var t,e,n,u,s,a,i,c,l;return t=Lu,(e=function(){var t,e,n,u;t=Lu,"fulltext"===r.substr(Lu,8).toLowerCase()?(e=r.substr(Lu,8),Lu+=8):(e=o,0===Eu&&mu(jn));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="FULLTEXT"):(Lu=t,t=o)):(Lu=t,t=o);return t}())===o&&(e=function(){var t,e,n,u;t=Lu,"spatial"===r.substr(Lu,7).toLowerCase()?(e=r.substr(Lu,7),Lu+=7):(e=o,0===Eu&&mu(Yn));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="SPATIAL"):(Lu=t,t=o)):(Lu=t,t=o);return t}()),e!==o&&Ea()!==o?((n=ia())===o&&(n=ca()),n===o&&(n=null),n!==o&&Ea()!==o?((u=Po())===o&&(u=null),u!==o&&Ea()!==o&&(s=Xu())!==o&&Ea()!==o?((a=ro())===o&&(a=null),a!==o&&Ea()!==o?(i=e,l=a,t=e={index:u,definition:s,keyword:(c=n)&&`${i.toLowerCase()} ${c.toLowerCase()}`||i.toLowerCase(),index_options:l,resource:"index"}):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o),t}function ku(){var r,t,e,n;return r=Lu,(t=fa())!==o&&Ea()!==o?((e=$o())===o&&(e=null),e!==o?(n=e,r=t={keyword:t.toLowerCase(),constraint:n}):(Lu=r,r=o)):(Lu=r,r=o),r}function $u(){var t,e,n,u,s,a,i,c,l,f,v,b,d;return t=Lu,(e=ku())===o&&(e=null),e!==o&&Ea()!==o?("check"===r.substr(Lu,5).toLowerCase()?(n=r.substr(Lu,5),Lu+=5):(n=o,0===Eu&&mu(R)),n!==o&&Ea()!==o?(u=Lu,"not"===r.substr(Lu,3).toLowerCase()?(s=r.substr(Lu,3),Lu+=3):(s=o,0===Eu&&mu(O)),s!==o&&(a=Ea())!==o?("for"===r.substr(Lu,3).toLowerCase()?(i=r.substr(Lu,3),Lu+=3):(i=o,0===Eu&&mu(U)),i!==o&&(c=Ea())!==o?("replication"===r.substr(Lu,11).toLowerCase()?(l=r.substr(Lu,11),Lu+=11):(l=o,0===Eu&&mu(x)),l!==o&&(f=Ea())!==o?u=s=[s,a,i,c,l,f]:(Lu=u,u=o)):(Lu=u,u=o)):(Lu=u,u=o),u===o&&(u=null),u!==o&&(s=La())!==o&&(a=Ea())!==o&&(i=So())!==o&&(c=Ea())!==o&&(l=Ca())!==o?(v=e,b=u,d=i,t=e={constraint_type:n.toLowerCase(),keyword:v&&v.keyword,constraint:v&&v.constraint,index_type:b&&{keyword:"not for replication"},definition:[d],resource:"constraint"}):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o),t}function Fu(){var t,e,n,u,s,a,i,c,l,f;return t=Lu,(e=function(){var t,e,n,u;t=Lu,"references"===r.substr(Lu,10).toLowerCase()?(e=r.substr(Lu,10),Lu+=10):(e=o,0===Eu&&mu(Wn));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="REFERENCES"):(Lu=t,t=o)):(Lu=t,t=o);return t}())!==o&&Ea()!==o&&(n=eo())!==o&&Ea()!==o&&(u=Xu())!==o&&Ea()!==o?("match full"===r.substr(Lu,10).toLowerCase()?(s=r.substr(Lu,10),Lu+=10):(s=o,0===Eu&&mu(D)),s===o&&("match partial"===r.substr(Lu,13).toLowerCase()?(s=r.substr(Lu,13),Lu+=13):(s=o,0===Eu&&mu(k)),s===o&&("match simple"===r.substr(Lu,12).toLowerCase()?(s=r.substr(Lu,12),Lu+=12):(s=o,0===Eu&&mu($)))),s===o&&(s=null),s!==o&&Ea()!==o?((a=Pu())===o&&(a=null),a!==o&&Ea()!==o?((i=Pu())===o&&(i=null),i!==o?(c=s,l=a,f=i,t=e={definition:u,table:n,keyword:e.toLowerCase(),match:c&&c.toLowerCase(),on_delete:l,on_update:f}):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o),t}function Pu(){var t,e,n,u;return t=Lu,"on delete"===r.substr(Lu,9).toLowerCase()?(e=r.substr(Lu,9),Lu+=9):(e=o,0===Eu&&mu(F)),e===o&&("on update"===r.substr(Lu,9).toLowerCase()?(e=r.substr(Lu,9),Lu+=9):(e=o,0===Eu&&mu(P))),e!==o&&Ea()!==o&&(n=function(){var t,e;t=Lu,"restrict"===r.substr(Lu,8).toLowerCase()?(e=r.substr(Lu,8),Lu+=8):(e=o,0===Eu&&mu(H));e===o&&("cascade"===r.substr(Lu,7).toLowerCase()?(e=r.substr(Lu,7),Lu+=7):(e=o,0===Eu&&mu(G)),e===o&&("set null"===r.substr(Lu,8).toLowerCase()?(e=r.substr(Lu,8),Lu+=8):(e=o,0===Eu&&mu(j)),e===o&&("no action"===r.substr(Lu,9).toLowerCase()?(e=r.substr(Lu,9),Lu+=9):(e=o,0===Eu&&mu(Y)),e===o&&("set default"===r.substr(Lu,11).toLowerCase()?(e=r.substr(Lu,11),Lu+=11):(e=o,0===Eu&&mu(B))))));e!==o&&(e=e.toLowerCase());return t=e}())!==o?(u=n,t=e={type:e.toLowerCase(),value:u}):(Lu=t,t=o),t}function Hu(){var t,e,n,u,s,a,i,l,f;return t=Lu,"auto_increment"===r.substr(Lu,14).toLowerCase()?(e=r.substr(Lu,14),Lu+=14):(e=o,0===Eu&&mu(c)),e===o&&("avg_row_length"===r.substr(Lu,14).toLowerCase()?(e=r.substr(Lu,14),Lu+=14):(e=o,0===Eu&&mu(X)),e===o&&("key_block_size"===r.substr(Lu,14).toLowerCase()?(e=r.substr(Lu,14),Lu+=14):(e=o,0===Eu&&mu(W)),e===o&&("max_rows"===r.substr(Lu,8).toLowerCase()?(e=r.substr(Lu,8),Lu+=8):(e=o,0===Eu&&mu(V)),e===o&&("min_rows"===r.substr(Lu,8).toLowerCase()?(e=r.substr(Lu,8),Lu+=8):(e=o,0===Eu&&mu(K)),e===o&&("stats_sample_pages"===r.substr(Lu,18).toLowerCase()?(e=r.substr(Lu,18),Lu+=18):(e=o,0===Eu&&mu(q))))))),e!==o&&Ea()!==o?((n=oa())===o&&(n=null),n!==o&&Ea()!==o&&(u=Qo())!==o?(l=n,f=u,t=e={keyword:e.toLowerCase(),symbol:l,value:f.value}):(Lu=t,t=o)):(Lu=t,t=o),t===o&&(t=Lu,(e=ss())===o&&(e=null),e!==o&&Ea()!==o?("character set"===r.substr(Lu,13).toLowerCase()?(n=r.substr(Lu,13),Lu+=13):(n=o,0===Eu&&mu(Z)),n===o&&("charset"===r.substr(Lu,7).toLowerCase()?(n=r.substr(Lu,7),Lu+=7):(n=o,0===Eu&&mu(z)),n===o&&("collate"===r.substr(Lu,7).toLowerCase()?(n=r.substr(Lu,7),Lu+=7):(n=o,0===Eu&&mu(J)))),n!==o&&Ea()!==o?((u=oa())===o&&(u=null),u!==o&&(s=Ea())!==o&&(a=Go())!==o?(t=e=function(r,t,e,n){return {keyword:r&&`${r[0].toLowerCase()} ${t.toLowerCase()}`||t.toLowerCase(),symbol:e,value:n}}(e,n,u,a)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o),t===o&&(t=Lu,(e=la())===o&&("connection"===r.substr(Lu,10).toLowerCase()?(e=r.substr(Lu,10),Lu+=10):(e=o,0===Eu&&mu(Q))),e!==o&&Ea()!==o?((n=oa())===o&&(n=null),n!==o&&Ea()!==o&&(u=qo())!==o?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,u)):(Lu=t,t=o)):(Lu=t,t=o),t===o&&(t=Lu,"compression"===r.substr(Lu,11).toLowerCase()?(e=r.substr(Lu,11),Lu+=11):(e=o,0===Eu&&mu(rr)),e!==o&&Ea()!==o?((n=oa())===o&&(n=null),n!==o&&Ea()!==o?(u=Lu,39===r.charCodeAt(Lu)?(s="'",Lu++):(s=o,0===Eu&&mu(tr)),s!==o?("zlib"===r.substr(Lu,4).toLowerCase()?(a=r.substr(Lu,4),Lu+=4):(a=o,0===Eu&&mu(er)),a===o&&("lz4"===r.substr(Lu,3).toLowerCase()?(a=r.substr(Lu,3),Lu+=3):(a=o,0===Eu&&mu(nr)),a===o&&("none"===r.substr(Lu,4).toLowerCase()?(a=r.substr(Lu,4),Lu+=4):(a=o,0===Eu&&mu(S)))),a!==o?(39===r.charCodeAt(Lu)?(i="'",Lu++):(i=o,0===Eu&&mu(tr)),i!==o?u=s=[s,a,i]:(Lu=u,u=o)):(Lu=u,u=o)):(Lu=u,u=o),u!==o?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,u)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o),t===o&&(t=Lu,"engine"===r.substr(Lu,6).toLowerCase()?(e=r.substr(Lu,6),Lu+=6):(e=o,0===Eu&&mu(ur)),e!==o&&Ea()!==o?((n=oa())===o&&(n=null),n!==o&&Ea()!==o&&(u=Go())!==o?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}}(e,n,u)):(Lu=t,t=o)):(Lu=t,t=o))))),t}function Gu(){var t,e,n,u,s;return t=Lu,(e=uo())!==o&&Ea()!==o&&(n=function(){var t,e,n;return t=Lu,"read"===r.substr(Lu,4).toLowerCase()?(e=r.substr(Lu,4),Lu+=4):(e=o,0===Eu&&mu(or)),e!==o&&Ea()!==o?("local"===r.substr(Lu,5).toLowerCase()?(n=r.substr(Lu,5),Lu+=5):(n=o,0===Eu&&mu(sr)),n===o&&(n=null),n!==o?(t=e={type:"read",suffix:n&&"local"}):(Lu=t,t=o)):(Lu=t,t=o),t===o&&(t=Lu,"low_priority"===r.substr(Lu,12).toLowerCase()?(e=r.substr(Lu,12),Lu+=12):(e=o,0===Eu&&mu(ar)),e===o&&(e=null),e!==o&&Ea()!==o?("write"===r.substr(Lu,5).toLowerCase()?(n=r.substr(Lu,5),Lu+=5):(n=o,0===Eu&&mu(ir)),n!==o?(t=e={type:"write",prefix:e&&"low_priority"}):(Lu=t,t=o)):(Lu=t,t=o)),t}())!==o?(u=e,s=n,Ka.add(`lock::${u.db}::${u.table}`),t=e={table:u,lock_type:s}):(Lu=t,t=o),t}function ju(){var t,e,n,u,s,a,i;return (t=Wu())===o&&(t=Lu,e=Lu,40===r.charCodeAt(Lu)?(n="(",Lu++):(n=o,0===Eu&&mu(cr)),n!==o&&(u=Ea())!==o&&(s=ju())!==o&&(a=Ea())!==o?(41===r.charCodeAt(Lu)?(i=")",Lu++):(i=o,0===Eu&&mu(lr)),i!==o?e=n=[n,u,s,a,i]:(Lu=e,e=o)):(Lu=e,e=o),e!==o&&(e={...e[2],parentheses_symbol:!0}),t=e),t}function Yu(){var t,e,n,u,s,a,c,l,f;if(t=Lu,Is()!==o)if(Ea()!==o)if((e=Bu())!==o){for(n=[],u=Lu,(s=Ea())!==o&&(a=ba())!==o&&(c=Ea())!==o&&(l=Bu())!==o?u=s=[s,a,c,l]:(Lu=u,u=o);u!==o;)n.push(u),u=Lu,(s=Ea())!==o&&(a=ba())!==o&&(c=Ea())!==o&&(l=Bu())!==o?u=s=[s,a,c,l]:(Lu=u,u=o);n!==o?(t=i(e,n)):(Lu=t,t=o);}else Lu=t,t=o;else Lu=t,t=o;else Lu=t,t=o;return t===o&&(t=Lu,Ea()!==o&&Is()!==o&&(e=Ea())!==o&&(n=function(){var t,e,n,u;t=Lu,"RECURSIVE"===r.substr(Lu,9)?(e="RECURSIVE",Lu+=9):(e=o,0===Eu&&mu(Xt));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o);return t}())!==o&&(u=Ea())!==o&&(s=Bu())!==o?((f=s).recursive=!0,t=[f]):(Lu=t,t=o)),t}function Bu(){var r,t,e,n;return r=Lu,(t=Go())!==o&&Ea()!==o?((e=Xu())===o&&(e=null),e!==o&&Ea()!==o&&ws()!==o&&Ea()!==o&&La()!==o&&Ea()!==o&&(n=_u())!==o&&Ea()!==o&&Ca()!==o?(r=t={name:t,stmt:n,columns:e}):(Lu=r,r=o)):(Lu=r,r=o),r}function Xu(){var r,t,e,n,u,s,a,c;if(r=Lu,La()!==o)if(Ea()!==o)if((t=Po())!==o){for(e=[],n=Lu,(u=Ea())!==o&&(s=ba())!==o&&(a=Ea())!==o&&(c=Po())!==o?n=u=[u,s,a,c]:(Lu=n,n=o);n!==o;)e.push(n),n=Lu,(u=Ea())!==o&&(s=ba())!==o&&(a=Ea())!==o&&(c=Po())!==o?n=u=[u,s,a,c]:(Lu=n,n=o);e!==o&&(n=Ea())!==o&&(u=Ca())!==o?(r=i(t,e)):(Lu=r,r=o);}else Lu=r,r=o;else Lu=r,r=o;else Lu=r,r=o;return r}function Wu(){var t,e,n,u,s,a,i,c,l,f,v;return t=Lu,Ea()!==o?((e=Yu())===o&&(e=null),e!==o&&Ea()!==o&&function(){var t,e,n,u;t=Lu,"select"===r.substr(Lu,6).toLowerCase()?(e=r.substr(Lu,6),Lu+=6):(e=o,0===Eu&&mu(Ft));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o);return t}()!==o&&Ea()!==o?((n=function(){var r,t,e,n,u,s;if(r=Lu,(t=Vu())!==o){for(e=[],n=Lu,(u=Ea())!==o&&(s=Vu())!==o?n=u=[u,s]:(Lu=n,n=o);n!==o;)e.push(n),n=Lu,(u=Ea())!==o&&(s=Vu())!==o?n=u=[u,s]:(Lu=n,n=o);e!==o?(t=function(r,t){const e=[r];for(let r=0,n=t.length;r<n;++r)e.push(t[r][1]);return e}(t,e),r=t):(Lu=r,r=o);}else Lu=r,r=o;return r}())===o&&(n=null),n!==o&&Ea()!==o?((u=gs())===o&&(u=null),u!==o&&Ea()!==o&&(s=Ku())!==o&&Ea()!==o?((a=zu())===o&&(a=null),a!==o&&Ea()!==o?((i=io())===o&&(i=null),i!==o&&Ea()!==o?((c=function(){var t,e,n;t=Lu,(e=function(){var t,e,n,u;t=Lu,"group"===r.substr(Lu,5).toLowerCase()?(e=r.substr(Lu,5),Lu+=5):(e=o,0===Eu&&mu(Le));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o);return t}())!==o&&Ea()!==o&&Ns()!==o&&Ea()!==o&&(n=Ao())!==o?(e=n.value,t=e):(Lu=t,t=o);return t}())===o&&(c=null),c!==o&&Ea()!==o?((l=function(){var t,e;t=Lu,function(){var t,e,n,u;t=Lu,"having"===r.substr(Lu,6).toLowerCase()?(e=r.substr(Lu,6),Lu+=6):(e=o,0===Eu&&mu(we));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o);return t}()!==o&&Ea()!==o&&(e=So())!==o?(t=e):(Lu=t,t=o);return t}())===o&&(l=null),l!==o&&Ea()!==o?((f=co())===o&&(f=null),f!==o&&Ea()!==o?((v=vo())===o&&(v=null),v!==o?(t=function(r,t,e,n,u,o,s,a,i,c){return u&&u.forEach(r=>r.table&&Ka.add(`select::${r.db}::${r.table}`)),{with:r,type:"select",options:t,distinct:e,columns:n,from:u,where:o,groupby:s,having:a,orderby:i,limit:c}}(e,n,u,s,a,i,c,l,f,v)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o),t}function Vu(){var t,e;return t=Lu,(e=function(){var t;"sql_calc_found_rows"===r.substr(Lu,19).toLowerCase()?(t=r.substr(Lu,19),Lu+=19):(t=o,0===Eu&&mu(Vn));return t}())===o&&((e=function(){var t;"sql_cache"===r.substr(Lu,9).toLowerCase()?(t=r.substr(Lu,9),Lu+=9):(t=o,0===Eu&&mu(Kn));return t}())===o&&(e=function(){var t;"sql_no_cache"===r.substr(Lu,12).toLowerCase()?(t=r.substr(Lu,12),Lu+=12):(t=o,0===Eu&&mu(qn));return t}()),e===o&&(e=function(){var t;"sql_big_result"===r.substr(Lu,14).toLowerCase()?(t=r.substr(Lu,14),Lu+=14):(t=o,0===Eu&&mu(zn));return t}())===o&&(e=function(){var t;"sql_small_result"===r.substr(Lu,16).toLowerCase()?(t=r.substr(Lu,16),Lu+=16):(t=o,0===Eu&&mu(Zn));return t}())===o&&(e=function(){var t;"sql_buffer_result"===r.substr(Lu,17).toLowerCase()?(t=r.substr(Lu,17),Lu+=17):(t=o,0===Eu&&mu(Jn));return t}())),e!==o&&(e=e),t=e}function Ku(){var r,t,e,n,u,s,a,c,l,f;if(r=Lu,(t=_s())===o&&(t=Lu,(e=da())!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o),t===o&&(t=da())),t!==o){for(e=[],n=Lu,(u=Ea())!==o&&(s=ba())!==o&&(a=Ea())!==o&&(c=qu())!==o?n=u=[u,s,a,c]:(Lu=n,n=o);n!==o;)e.push(n),n=Lu,(u=Ea())!==o&&(s=ba())!==o&&(a=Ea())!==o&&(c=qu())!==o?n=u=[u,s,a,c]:(Lu=n,n=o);e!==o?(l=t,f=e,qa.add("select::null::(.*)"),r=t=f&&f.length>0?(l[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},Ya(l[0],f)):l[0]):(Lu=r,r=o);}else Lu=r,r=o;if(r===o)if(r=Lu,(t=qu())!==o){for(e=[],n=Lu,(u=Ea())!==o&&(s=ba())!==o&&(a=Ea())!==o&&(c=qu())!==o?n=u=[u,s,a,c]:(Lu=n,n=o);n!==o;)e.push(n),n=Lu,(u=Ea())!==o&&(s=ba())!==o&&(a=Ea())!==o&&(c=qu())!==o?n=u=[u,s,a,c]:(Lu=n,n=o);e!==o?(r=t=i(t,e)):(Lu=r,r=o);}else Lu=r,r=o;return r}function qu(){var r,t,e,n;return r=Lu,(t=$o())!==o&&Ea()!==o&&(e=va())!==o&&Ea()!==o&&da()!==o?(n=t,qa.add(`select::${n}::(.*)`),r=t={expr:{type:"column_ref",table:n,column:"*"},as:null}):(Lu=r,r=o),r===o&&(r=Lu,(t=So())!==o&&Ea()!==o?((e=Zu())===o&&(e=null),e!==o?(r=t={expr:t,as:e}):(Lu=r,r=o)):(Lu=r,r=o)),r}function Zu(){var r,t,e;return r=Lu,(t=ws())!==o&&Ea()!==o&&(e=function(){var r,t;r=Lu,(t=Go())!==o?((function(r){if(!0===Pa[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return !1}(t)?o:void 0)!==o?(r=t=t):(Lu=r,r=o)):(Lu=r,r=o);r===o&&(r=Lu,(t=Fo())!==o&&(t=t),r=t);return r}())!==o?(r=t=e):(Lu=r,r=o),r===o&&(r=Lu,(t=ws())===o&&(t=null),t!==o&&Ea()!==o&&(e=$o())!==o?(r=t=e):(Lu=r,r=o)),r}function zu(){var t,e;return t=Lu,function(){var t,e,n,u;t=Lu,"from"===r.substr(Lu,4).toLowerCase()?(e=r.substr(Lu,4),Lu+=4):(e=o,0===Eu&&mu(zt));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o);return t}()!==o&&Ea()!==o&&(e=eo())!==o?(t=e):(Lu=t,t=o),t}function Ju(){var r,t,e;return r=Lu,(t=so())!==o&&Ea()!==o&&as()!==o&&Ea()!==o&&(e=so())!==o?(r=t=[t,e]):(Lu=r,r=o),r}function Qu(){var t,e;return t=Lu,Ss()!==o&&Ea()!==o?("btree"===r.substr(Lu,5).toLowerCase()?(e=r.substr(Lu,5),Lu+=5):(e=o,0===Eu&&mu(fr)),e===o&&("hash"===r.substr(Lu,4).toLowerCase()?(e=r.substr(Lu,4),Lu+=4):(e=o,0===Eu&&mu(vr))),e!==o?(t={keyword:"using",type:e.toLowerCase()}):(Lu=t,t=o)):(Lu=t,t=o),t}function ro(){var r,t,e,n,u,s;if(r=Lu,(t=to())!==o){for(e=[],n=Lu,(u=Ea())!==o&&(s=to())!==o?n=u=[u,s]:(Lu=n,n=o);n!==o;)e.push(n),n=Lu,(u=Ea())!==o&&(s=to())!==o?n=u=[u,s]:(Lu=n,n=o);e!==o?(r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(Lu=r,r=o);}else Lu=r,r=o;return r}function to(){var t,e,n,u,s,a;return t=Lu,(e=function(){var t,e,n,u;t=Lu,"key_block_size"===r.substr(Lu,14).toLowerCase()?(e=r.substr(Lu,14),Lu+=14):(e=o,0===Eu&&mu(W));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="KEY_BLOCK_SIZE"):(Lu=t,t=o)):(Lu=t,t=o);return t}())!==o&&Ea()!==o?((n=oa())===o&&(n=null),n!==o&&Ea()!==o&&(u=Qo())!==o?(s=n,a=u,t=e={type:e.toLowerCase(),symbol:s,expr:a}):(Lu=t,t=o)):(Lu=t,t=o),t===o&&(t=Qu())===o&&(t=Lu,"with"===r.substr(Lu,4).toLowerCase()?(e=r.substr(Lu,4),Lu+=4):(e=o,0===Eu&&mu(br)),e!==o&&Ea()!==o?("parser"===r.substr(Lu,6).toLowerCase()?(n=r.substr(Lu,6),Lu+=6):(n=o,0===Eu&&mu(dr)),n!==o&&Ea()!==o&&(u=Go())!==o?(t=e={type:"with parser",expr:u}):(Lu=t,t=o)):(Lu=t,t=o),t===o&&(t=Lu,"visible"===r.substr(Lu,7).toLowerCase()?(e=r.substr(Lu,7),Lu+=7):(e=o,0===Eu&&mu(Lr)),e===o&&("invisible"===r.substr(Lu,9).toLowerCase()?(e=r.substr(Lu,9),Lu+=9):(e=o,0===Eu&&mu(Cr))),e!==o&&(e=function(r){return {type:r.toLowerCase(),expr:r.toLowerCase()}}(e)),(t=e)===o&&(t=ya()))),t}function eo(){var r,t,e,n,u,s;if(r=Lu,(t=uo())!==o){for(e=[],n=no();n!==o;)e.push(n),n=no();e!==o?(u=t,(s=e).unshift(u),s.forEach(r=>{const{table:t,as:e}=r;Za[t]=t,e&&(Za[e]=t);}),r=t=s):(Lu=r,r=o);}else Lu=r,r=o;return r}function no(){var r,t,e;return r=Lu,Ea()!==o&&(t=ba())!==o&&Ea()!==o&&(e=uo())!==o?(r=e):(Lu=r,r=o),r===o&&(r=Lu,Ea()!==o&&(t=function(){var r,t,e,n,u,s,a,i,c,l,f;if(r=Lu,(t=oo())!==o)if(Ea()!==o)if((e=uo())!==o)if(Ea()!==o)if((n=Ss())!==o)if(Ea()!==o)if(La()!==o)if(Ea()!==o)if((u=Go())!==o){for(s=[],a=Lu,(i=Ea())!==o&&(c=ba())!==o&&(l=Ea())!==o&&(f=Go())!==o?a=i=[i,c,l,f]:(Lu=a,a=o);a!==o;)s.push(a),a=Lu,(i=Ea())!==o&&(c=ba())!==o&&(l=Ea())!==o&&(f=Go())!==o?a=i=[i,c,l,f]:(Lu=a,a=o);s!==o&&(a=Ea())!==o&&(i=Ca())!==o?(v=t,d=u,L=s,(b=e).join=v,b.using=Ya(d,L),r=t=b):(Lu=r,r=o);}else Lu=r,r=o;else Lu=r,r=o;else Lu=r,r=o;else Lu=r,r=o;else Lu=r,r=o;else Lu=r,r=o;else Lu=r,r=o;else Lu=r,r=o;else Lu=r,r=o;var v,b,d,L;r===o&&(r=Lu,(t=oo())!==o&&Ea()!==o&&(e=uo())!==o&&Ea()!==o?((n=ao())===o&&(n=null),n!==o?(t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(Lu=r,r=o)):(Lu=r,r=o),r===o&&(r=Lu,(t=oo())!==o&&Ea()!==o&&(e=La())!==o&&Ea()!==o&&(n=_u())!==o&&Ea()!==o&&Ca()!==o&&Ea()!==o?((u=Zu())===o&&(u=null),u!==o&&(s=Ea())!==o?((a=ao())===o&&(a=null),a!==o?(t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,u,a),r=t):(Lu=r,r=o)):(Lu=r,r=o)):(Lu=r,r=o)));return r}())!==o?(r=t):(Lu=r,r=o)),r}function uo(){var t,e,n,u,s,a;return t=Lu,(e=function(){var t;"dual"===r.substr(Lu,4).toLowerCase()?(t=r.substr(Lu,4),Lu+=4):(t=o,0===Eu&&mu(Fn));return t}())!==o&&(e={type:"dual"}),(t=e)===o&&(t=Lu,(e=so())!==o&&Ea()!==o?((n=Zu())===o&&(n=null),n!==o?(a=n,t=e="var"===(s=e).type?(s.as=a,s):{db:s.db,table:s.table,as:a}):(Lu=t,t=o)):(Lu=t,t=o),t===o&&(t=Lu,(e=La())!==o&&Ea()!==o&&(n=_u())!==o&&Ea()!==o&&Ca()!==o&&Ea()!==o?((u=Zu())===o&&(u=null),u!==o?(t=e=function(r,t){return r.parentheses=!0,{expr:r,as:t}}(n,u)):(Lu=t,t=o)):(Lu=t,t=o))),t}function oo(){var t,e,n,u;return t=Lu,(e=function(){var t,e,n,u;t=Lu,"left"===r.substr(Lu,4).toLowerCase()?(e=r.substr(Lu,4),Lu+=4):(e=o,0===Eu&&mu(ue));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o);return t}())!==o&&(n=Ea())!==o?((u=Ts())===o&&(u=null),u!==o&&Ea()!==o&&ys()!==o?(t=e="LEFT JOIN"):(Lu=t,t=o)):(Lu=t,t=o),t===o&&(t=Lu,(e=function(){var t,e,n,u;t=Lu,"right"===r.substr(Lu,5).toLowerCase()?(e=r.substr(Lu,5),Lu+=5):(e=o,0===Eu&&mu(oe));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o);return t}())!==o&&(n=Ea())!==o?((u=Ts())===o&&(u=null),u!==o&&Ea()!==o&&ys()!==o?(t=e="RIGHT JOIN"):(Lu=t,t=o)):(Lu=t,t=o),t===o&&(t=Lu,(e=function(){var t,e,n,u;t=Lu,"full"===r.substr(Lu,4).toLowerCase()?(e=r.substr(Lu,4),Lu+=4):(e=o,0===Eu&&mu(se));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o);return t}())!==o&&(n=Ea())!==o?((u=Ts())===o&&(u=null),u!==o&&Ea()!==o&&ys()!==o?(t=e="FULL JOIN"):(Lu=t,t=o)):(Lu=t,t=o),t===o&&(t=Lu,e=Lu,(n=function(){var t,e,n,u;t=Lu,"inner"===r.substr(Lu,5).toLowerCase()?(e=r.substr(Lu,5),Lu+=5):(e=o,0===Eu&&mu(ae));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o);return t}())!==o&&(u=Ea())!==o?e=n=[n,u]:(Lu=e,e=o),e===o&&(e=null),e!==o&&(n=ys())!==o?(t=e="INNER JOIN"):(Lu=t,t=o)))),t}function so(){var r,t,e,n,u,s,a,i;return r=Lu,(t=$o())!==o?(e=Lu,(n=Ea())!==o&&(u=va())!==o&&(s=Ea())!==o&&(a=$o())!==o?e=n=[n,u,s,a]:(Lu=e,e=o),e===o&&(e=null),e!==o?(r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(Lu=r,r=o)):(Lu=r,r=o),r===o&&(r=Lu,(t=Da())!==o&&((i=t).db=null,i.table=i.name,t=i),r=t),r}function ao(){var r,t;return r=Lu,As()!==o&&Ea()!==o&&(t=So())!==o?(r=t):(Lu=r,r=o),r}function io(){var t,e;return t=Lu,function(){var t,e,n,u;t=Lu,"where"===r.substr(Lu,5).toLowerCase()?(e=r.substr(Lu,5),Lu+=5):(e=o,0===Eu&&mu(de));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o);return t}()!==o&&Ea()!==o&&(e=So())!==o?(t=e):(Lu=t,t=o),t}function co(){var t,e;return t=Lu,function(){var t,e,n,u;t=Lu,"order"===r.substr(Lu,5).toLowerCase()?(e=r.substr(Lu,5),Lu+=5):(e=o,0===Eu&&mu(pe));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o);return t}()!==o&&Ea()!==o&&Ns()!==o&&Ea()!==o&&(e=function(){var r,t,e,n,u,s,a,c;if(r=Lu,(t=lo())!==o){for(e=[],n=Lu,(u=Ea())!==o&&(s=ba())!==o&&(a=Ea())!==o&&(c=lo())!==o?n=u=[u,s,a,c]:(Lu=n,n=o);n!==o;)e.push(n),n=Lu,(u=Ea())!==o&&(s=ba())!==o&&(a=Ea())!==o&&(c=lo())!==o?n=u=[u,s,a,c]:(Lu=n,n=o);e!==o?(t=i(t,e),r=t):(Lu=r,r=o);}else Lu=r,r=o;return r}())!==o?(t=e):(Lu=t,t=o),t}function lo(){var t,e,n;return t=Lu,(e=So())!==o&&Ea()!==o?((n=function(){var t,e,n,u;t=Lu,"desc"===r.substr(Lu,4).toLowerCase()?(e=r.substr(Lu,4),Lu+=4):(e=o,0===Eu&&mu(ye));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="DESC"):(Lu=t,t=o)):(Lu=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=Lu,"asc"===r.substr(Lu,3).toLowerCase()?(e=r.substr(Lu,3),Lu+=3):(e=o,0===Eu&&mu(Ae));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="ASC"):(Lu=t,t=o)):(Lu=t,t=o);return t}()),n===o&&(n=null),n!==o?(t=e=function(r,t){const e={expr:r,type:"ASC"};return "DESC"===t&&(e.type="DESC"),e}(e,n)):(Lu=t,t=o)):(Lu=t,t=o),t}function fo(){var r;return (r=Qo())===o&&(r=Xo()),r}function vo(){var t,e,n,u,s,a,i,c;return t=Lu,Rs()!==o&&Ea()!==o?("first"===r.substr(Lu,5).toLowerCase()?(e=r.substr(Lu,5),Lu+=5):(e=o,0===Eu&&mu(pr)),e!==o&&Ea()!==o&&(n=fo())!==o&&Ea()!==o?("rows"===r.substr(Lu,4).toLowerCase()?(u=r.substr(Lu,4),Lu+=4):(u=o,0===Eu&&mu(wr)),u!==o&&Ea()!==o?("only"===r.substr(Lu,4).toLowerCase()?(s=r.substr(Lu,4),Lu+=4):(s=o,0===Eu&&mu(Er)),s!==o?(t={fetch:{prefix:"fetch first",value:n,suffix:"rows only"}}):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o),t===o&&(t=Lu,function(){var t,e,n,u;t=Lu,"offset"===r.substr(Lu,6).toLowerCase()?(e=r.substr(Lu,6),Lu+=6):(e=o,0===Eu&&mu(he));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="OFFSET"):(Lu=t,t=o)):(Lu=t,t=o);return t}()!==o&&Ea()!==o&&(e=fo())!==o&&Ea()!==o?("rows"===r.substr(Lu,4).toLowerCase()?(n=r.substr(Lu,4),Lu+=4):(n=o,0===Eu&&mu(wr)),n!==o&&Ea()!==o&&(u=Rs())!==o&&Ea()!==o?("next"===r.substr(Lu,4).toLowerCase()?(s=r.substr(Lu,4),Lu+=4):(s=o,0===Eu&&mu(hr)),s!==o&&Ea()!==o&&(a=fo())!==o&&Ea()!==o?("rows"===r.substr(Lu,4).toLowerCase()?(i=r.substr(Lu,4),Lu+=4):(i=o,0===Eu&&mu(wr)),i!==o&&Ea()!==o?("only"===r.substr(Lu,4).toLowerCase()?(c=r.substr(Lu,4),Lu+=4):(c=o,0===Eu&&mu(Er)),c!==o?(t=function(r,t){return {offset:{prefix:"offset",value:r,suffix:"rows"},fetch:{prefix:"fetch next",value:t,suffix:"rows only"}}}(e,a)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o)),t}function bo(){var r,t,e,n,u,s,a,c;if(r=Lu,(t=Lo())!==o){for(e=[],n=Lu,(u=Ea())!==o&&(s=ba())!==o&&(a=Ea())!==o&&(c=Lo())!==o?n=u=[u,s,a,c]:(Lu=n,n=o);n!==o;)e.push(n),n=Lu,(u=Ea())!==o&&(s=ba())!==o&&(a=Ea())!==o&&(c=Lo())!==o?n=u=[u,s,a,c]:(Lu=n,n=o);e!==o?(r=t=i(t,e)):(Lu=r,r=o);}else Lu=r,r=o;return r}function Lo(){var t,e,n,u,s,a,i,c;return t=Lu,e=Lu,(n=$o())!==o&&(u=Ea())!==o&&(s=va())!==o?e=n=[n,u,s]:(Lu=e,e=o),e===o&&(e=null),e!==o&&(n=Ea())!==o&&(u=Po())!==o&&(s=Ea())!==o?(61===r.charCodeAt(Lu)?(a="=",Lu++):(a=o,0===Eu&&mu(Ar)),a!==o&&Ea()!==o&&(i=Oo())!==o?(t=e={column:u,value:i,table:(c=e)&&c[0]}):(Lu=t,t=o)):(Lu=t,t=o),t}function Co(){var t;return (t=function(){var t,e;t=Lu,function(){var t,e,n,u;t=Lu,"values"===r.substr(Lu,6).toLowerCase()?(e=r.substr(Lu,6),Lu+=6):(e=o,0===Eu&&mu(ve));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o);return t}()!==o&&Ea()!==o&&(e=function(){var r,t,e,n,u,s,a,c;if(r=Lu,(t=ho())!==o){for(e=[],n=Lu,(u=Ea())!==o&&(s=ba())!==o&&(a=Ea())!==o&&(c=ho())!==o?n=u=[u,s,a,c]:(Lu=n,n=o);n!==o;)e.push(n),n=Lu,(u=Ea())!==o&&(s=ba())!==o&&(a=Ea())!==o&&(c=ho())!==o?n=u=[u,s,a,c]:(Lu=n,n=o);e!==o?(t=i(t,e),r=t):(Lu=r,r=o);}else Lu=r,r=o;return r}())!==o?(t=e):(Lu=t,t=o);return t}())===o&&(t=Wu()),t}function po(){var r,t,e,n,u,s,a,i,c;if(r=Lu,Ls()!==o)if(Ea()!==o)if((t=La())!==o)if(Ea()!==o)if((e=Go())!==o){for(n=[],u=Lu,(s=Ea())!==o&&(a=ba())!==o&&(i=Ea())!==o&&(c=Go())!==o?u=s=[s,a,i,c]:(Lu=u,u=o);u!==o;)n.push(u),u=Lu,(s=Ea())!==o&&(a=ba())!==o&&(i=Ea())!==o&&(c=Go())!==o?u=s=[s,a,i,c]:(Lu=u,u=o);n!==o&&(u=Ea())!==o&&(s=Ca())!==o?(r=Ya(e,n)):(Lu=r,r=o);}else Lu=r,r=o;else Lu=r,r=o;else Lu=r,r=o;else Lu=r,r=o;else Lu=r,r=o;return r===o&&(r=Lu,Ls()!==o&&Ea()!==o&&(t=ho())!==o?(r=t):(Lu=r,r=o)),r}function wo(){var t,e,n;return t=Lu,As()!==o&&Ea()!==o?("duplicate"===r.substr(Lu,9).toLowerCase()?(e=r.substr(Lu,9),Lu+=9):(e=o,0===Eu&&mu(yr)),e!==o&&Ea()!==o&&ca()!==o&&Ea()!==o&&cs()!==o&&Ea()!==o&&(n=bo())!==o?(t={keyword:"on duplicate key update",set:n}):(Lu=t,t=o)):(Lu=t,t=o),t}function Eo(){var t,e;return t=Lu,(e=function(){var t,e,n,u;t=Lu,"insert"===r.substr(Lu,6).toLowerCase()?(e=r.substr(Lu,6),Lu+=6):(e=o,0===Eu&&mu(Bt));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o);return t}())!==o&&(e="insert"),(t=e)===o&&(t=Lu,(e=bs())!==o&&(e="replace"),t=e),t}function ho(){var r,t;return r=Lu,La()!==o&&Ea()!==o&&(t=Ao())!==o&&Ea()!==o&&Ca()!==o?(r=t):(Lu=r,r=o),r}function Ao(){var r,t,e,n,u,s,a,i;if(r=Lu,(t=So())!==o){for(e=[],n=Lu,(u=Ea())!==o&&(s=ba())!==o&&(a=Ea())!==o&&(i=So())!==o?n=u=[u,s,a,i]:(Lu=n,n=o);n!==o;)e.push(n),n=Lu,(u=Ea())!==o&&(s=ba())!==o&&(a=Ea())!==o&&(i=So())!==o?n=u=[u,s,a,i]:(Lu=n,n=o);e!==o?(r=t=function(r,t){const e={type:"expr_list"};return e.value=Ya(r,t),e}(t,e)):(Lu=r,r=o);}else Lu=r,r=o;return r}function yo(){var t,e,n;return t=Lu,function(){var t,e,n,u;t=Lu,"interval"===r.substr(Lu,8).toLowerCase()?(e=r.substr(Lu,8),Lu+=8):(e=o,0===Eu&&mu(pn));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="INTERVAL"):(Lu=t,t=o)):(Lu=t,t=o);return t}()!==o&&Ea()!==o&&(e=So())!==o&&Ea()!==o&&(n=function(){var t;(t=function(){var t,e,n,u;t=Lu,"year"===r.substr(Lu,4).toLowerCase()?(e=r.substr(Lu,4),Lu+=4):(e=o,0===Eu&&mu(wn));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="YEAR"):(Lu=t,t=o)):(Lu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=Lu,"month"===r.substr(Lu,5).toLowerCase()?(e=r.substr(Lu,5),Lu+=5):(e=o,0===Eu&&mu(En));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="MONTH"):(Lu=t,t=o)):(Lu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=Lu,"day"===r.substr(Lu,3).toLowerCase()?(e=r.substr(Lu,3),Lu+=3):(e=o,0===Eu&&mu(hn));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="DAY"):(Lu=t,t=o)):(Lu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=Lu,"hour"===r.substr(Lu,4).toLowerCase()?(e=r.substr(Lu,4),Lu+=4):(e=o,0===Eu&&mu(An));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="HOUR"):(Lu=t,t=o)):(Lu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=Lu,"minute"===r.substr(Lu,6).toLowerCase()?(e=r.substr(Lu,6),Lu+=6):(e=o,0===Eu&&mu(yn));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="MINUTE"):(Lu=t,t=o)):(Lu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=Lu,"second"===r.substr(Lu,6).toLowerCase()?(e=r.substr(Lu,6),Lu+=6):(e=o,0===Eu&&mu(Tn));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="SECOND"):(Lu=t,t=o)):(Lu=t,t=o);return t}());return t}())!==o?(t={type:"interval",expr:e,unit:n.toLowerCase()}):(Lu=t,t=o),t}function To(){var t,e,n,u,s,a,i,c,l;if(t=Lu,Ps()!==o)if(Ea()!==o)if((e=So())===o&&(e=null),e!==o)if(Ea()!==o){if(n=[],(u=mo())!==o)for(;u!==o;)n.push(u),u=mo();else n=o;n!==o&&(u=Ea())!==o?((s=function(){var t,e;t=Lu,function(){var t,e,n,u;t=Lu,"else"===r.substr(Lu,4).toLowerCase()?(e=r.substr(Lu,4),Lu+=4):(e=o,0===Eu&&mu(Ge));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o);return t}()!==o&&Ea()!==o&&(e=So())!==o?(t={type:"else",result:e}):(Lu=t,t=o);return t}())===o&&(s=null),s!==o&&Ea()!==o&&function(){var t,e,n,u;t=Lu,"end"===r.substr(Lu,3).toLowerCase()?(e=r.substr(Lu,3),Lu+=3):(e=o,0===Eu&&mu(je));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o);return t}()!==o&&Ea()!==o?((a=Ps())===o&&(a=null),a!==o?(i=e,c=n,(l=s)&&c.push(l),t={type:"case",expr:i||null,args:c}):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o);}else Lu=t,t=o;else Lu=t,t=o;else Lu=t,t=o;else Lu=t,t=o;return t}function mo(){var t,e,n;return t=Lu,function(){var t,e,n,u;t=Lu,"when"===r.substr(Lu,4).toLowerCase()?(e=r.substr(Lu,4),Lu+=4):(e=o,0===Eu&&mu(Pe));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o);return t}()!==o&&Ea()!==o&&(e=So())!==o&&Ea()!==o&&function(){var t,e,n,u;t=Lu,"then"===r.substr(Lu,4).toLowerCase()?(e=r.substr(Lu,4),Lu+=4):(e=o,0===Eu&&mu(He));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o);return t}()!==o&&Ea()!==o&&(n=So())!==o?(t={type:"when",cond:e,result:n}):(Lu=t,t=o),t}function So(){var r;return (r=function(){var r,t,e,n,u,s,a,i;if(r=Lu,(t=Do())!==o){if(e=[],n=Lu,(u=Ea())!==o&&(s=wa())!==o&&(a=Ea())!==o&&(i=Do())!==o?n=u=[u,s,a,i]:(Lu=n,n=o),n!==o)for(;n!==o;)e.push(n),n=Lu,(u=Ea())!==o&&(s=wa())!==o&&(a=Ea())!==o&&(i=Do())!==o?n=u=[u,s,a,i]:(Lu=n,n=o);else e=o;e!==o?(t=Ba(t,e),r=t):(Lu=r,r=o);}else Lu=r,r=o;return r}())===o&&(r=function(){var r,t,e,n,u,s;if(r=Lu,(t=Uo())!==o){if(e=[],n=Lu,(u=Ea())!==o&&(s=Do())!==o?n=u=[u,s]:(Lu=n,n=o),n!==o)for(;n!==o;)e.push(n),n=Lu,(u=Ea())!==o&&(s=Do())!==o?n=u=[u,s]:(Lu=n,n=o);else e=o;e!==o?(t=Ha(t,e[0][1]),r=t):(Lu=r,r=o);}else Lu=r,r=o;return r}())===o&&(r=function(){var r,t,e,n,u,s,a,i;if(r=Lu,(t=Io())!==o){for(e=[],n=Lu,(u=ha())!==o&&(s=Fs())!==o&&(a=Ea())!==o&&(i=Io())!==o?n=u=[u,s,a,i]:(Lu=n,n=o);n!==o;)e.push(n),n=Lu,(u=ha())!==o&&(s=Fs())!==o&&(a=Ea())!==o&&(i=Io())!==o?n=u=[u,s,a,i]:(Lu=n,n=o);e!==o?(t=Tr(t,e),r=t):(Lu=r,r=o);}else Lu=r,r=o;return r}())===o&&(r=ju()),r}function Io(){var r,t,e,n,u,s,a,i;if(r=Lu,(t=No())!==o){for(e=[],n=Lu,(u=ha())!==o&&(s=$s())!==o&&(a=Ea())!==o&&(i=No())!==o?n=u=[u,s,a,i]:(Lu=n,n=o);n!==o;)e.push(n),n=Lu,(u=ha())!==o&&(s=$s())!==o&&(a=Ea())!==o&&(i=No())!==o?n=u=[u,s,a,i]:(Lu=n,n=o);e!==o?(r=t=Tr(t,e)):(Lu=r,r=o);}else Lu=r,r=o;return r}function No(){var t,e,n,u,s;return (t=Ro())===o&&(t=function(){var r,t,e;r=Lu,(t=function(){var r,t,e,n,u;r=Lu,t=Lu,(e=ks())!==o&&(n=Ea())!==o&&(u=Ds())!==o?t=e=[e,n,u]:(Lu=t,t=o);t!==o&&(t=Sr(t));(r=t)===o&&(r=Ds());return r}())!==o&&Ea()!==o&&La()!==o&&Ea()!==o&&(e=_u())!==o&&Ea()!==o&&Ca()!==o?(n=t,(u=e).parentheses=!0,t=Ha(n,u),r=t):(Lu=r,r=o);var n,u;return r}())===o&&(t=Lu,(e=ks())===o&&(e=Lu,33===r.charCodeAt(Lu)?(n="!",Lu++):(n=o,0===Eu&&mu(mr)),n!==o?(u=Lu,Eu++,61===r.charCodeAt(Lu)?(s="=",Lu++):(s=o,0===Eu&&mu(Ar)),Eu--,s===o?u=void 0:(Lu=u,u=o),u!==o?e=n=[n,u]:(Lu=e,e=o)):(Lu=e,e=o)),e!==o&&(n=Ea())!==o&&(u=No())!==o?(t=e=Ha("NOT",u)):(Lu=t,t=o)),t}function Ro(){var r,t,e,n,u,s,a;return r=Lu,(t=Oo())!==o&&Ea()!==o?(e=Lu,Eu++,n=$s(),Eu--,n===o?e=void 0:(Lu=e,e=o),e!==o&&(n=Ea())!==o?((u=function(){var r;(r=function(){var r,t,e,n,u,s,a;r=Lu,t=[],e=Lu,(n=Ea())!==o&&(u=_o())!==o&&(s=Ea())!==o&&(a=Oo())!==o?e=n=[n,u,s,a]:(Lu=e,e=o);if(e!==o)for(;e!==o;)t.push(e),e=Lu,(n=Ea())!==o&&(u=_o())!==o&&(s=Ea())!==o&&(a=Oo())!==o?e=n=[n,u,s,a]:(Lu=e,e=o);else t=o;t!==o&&(t={type:"arithmetic",tail:t});return r=t}())===o&&(r=function(){var r,t,e,n;r=Lu,(t=go())!==o&&Ea()!==o&&(e=La())!==o&&Ea()!==o&&(n=Ao())!==o&&Ea()!==o&&Ca()!==o?(r=t={op:t,right:n}):(Lu=r,r=o);r===o&&(r=Lu,(t=go())!==o&&Ea()!==o?((e=Da())===o&&(e=qo()),e!==o?(t=function(r,t){return {op:r,right:t}}(t,e),r=t):(Lu=r,r=o)):(Lu=r,r=o));return r}())===o&&(r=function(){var r,t,e,n;r=Lu,(t=function(){var r,t,e,n,u;r=Lu,t=Lu,(e=ks())!==o&&(n=Ea())!==o&&(u=Os())!==o?t=e=[e,n,u]:(Lu=t,t=o);t!==o&&(t=Sr(t));(r=t)===o&&(r=Os());return r}())!==o&&Ea()!==o&&(e=Oo())!==o&&Ea()!==o&&$s()!==o&&Ea()!==o&&(n=Oo())!==o?(r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(Lu=r,r=o);return r}())===o&&(r=function(){var r,t,e,n,u;r=Lu,(t=xs())!==o&&(e=Ea())!==o&&(n=Oo())!==o?(r=t={op:"IS",right:n}):(Lu=r,r=o);r===o&&(r=Lu,t=Lu,(e=xs())!==o&&(n=Ea())!==o&&(u=ks())!==o?t=e=[e,n,u]:(Lu=t,t=o),t!==o&&(e=Ea())!==o&&(n=Oo())!==o?(t=function(r){return {op:"IS NOT",right:r}}(n),r=t):(Lu=r,r=o));return r}())===o&&(r=function(){var r,t,e;r=Lu,(t=function(){var r,t,e,n,u;r=Lu,t=Lu,(e=ks())!==o&&(n=Ea())!==o&&(u=Ms())!==o?t=e=[e,n,u]:(Lu=t,t=o);t!==o&&(t=Sr(t));(r=t)===o&&(r=Ms());return r}())!==o&&Ea()!==o&&(e=Ro())!==o?(r=t={op:t,right:e}):(Lu=r,r=o);return r}());return r}())===o&&(u=null),u!==o?(s=t,r=t=null===(a=u)?s:"arithmetic"===a.type?Ba(s,a.tail):Ga(a.op,s,a.right)):(Lu=r,r=o)):(Lu=r,r=o)):(Lu=r,r=o),r===o&&(r=qo())===o&&(r=ko()),r}function _o(){var t;return ">="===r.substr(Lu,2)?(t=">=",Lu+=2):(t=o,0===Eu&&mu(Ir)),t===o&&(62===r.charCodeAt(Lu)?(t=">",Lu++):(t=o,0===Eu&&mu(Nr)),t===o&&("<="===r.substr(Lu,2)?(t="<=",Lu+=2):(t=o,0===Eu&&mu(Rr)),t===o&&("<>"===r.substr(Lu,2)?(t="<>",Lu+=2):(t=o,0===Eu&&mu(_r)),t===o&&(60===r.charCodeAt(Lu)?(t="<",Lu++):(t=o,0===Eu&&mu(gr)),t===o&&(61===r.charCodeAt(Lu)?(t="=",Lu++):(t=o,0===Eu&&mu(Ar)),t===o&&("!="===r.substr(Lu,2)?(t="!=",Lu+=2):(t=o,0===Eu&&mu(Or)))))))),t}function go(){var r,t,e,n,u;return r=Lu,t=Lu,(e=ks())!==o&&(n=Ea())!==o&&(u=Us())!==o?t=e=[e,n,u]:(Lu=t,t=o),t!==o&&(t=Sr(t)),(r=t)===o&&(r=Us()),r}function Oo(){var r,t,e,n,u,s,a,i;if(r=Lu,(t=xo())!==o){for(e=[],n=Lu,(u=Ea())!==o&&(s=Uo())!==o&&(a=Ea())!==o&&(i=xo())!==o?n=u=[u,s,a,i]:(Lu=n,n=o);n!==o;)e.push(n),n=Lu,(u=Ea())!==o&&(s=Uo())!==o&&(a=Ea())!==o&&(i=xo())!==o?n=u=[u,s,a,i]:(Lu=n,n=o);e!==o?(r=t=Tr(t,e)):(Lu=r,r=o);}else Lu=r,r=o;return r}function Uo(){var t;return 43===r.charCodeAt(Lu)?(t="+",Lu++):(t=o,0===Eu&&mu(Ur)),t===o&&(45===r.charCodeAt(Lu)?(t="-",Lu++):(t=o,0===Eu&&mu(xr))),t}function xo(){var r,t,e,n,u,s,a,i;if(r=Lu,(t=Do())!==o){for(e=[],n=Lu,(u=Ea())!==o&&(s=Mo())!==o&&(a=Ea())!==o&&(i=Do())!==o?n=u=[u,s,a,i]:(Lu=n,n=o);n!==o;)e.push(n),n=Lu,(u=Ea())!==o&&(s=Mo())!==o&&(a=Ea())!==o&&(i=Do())!==o?n=u=[u,s,a,i]:(Lu=n,n=o);e!==o?(r=t=Ba(t,e)):(Lu=r,r=o);}else Lu=r,r=o;return r}function Mo(){var t;return 42===r.charCodeAt(Lu)?(t="*",Lu++):(t=o,0===Eu&&mu(Mr)),t===o&&(47===r.charCodeAt(Lu)?(t="/",Lu++):(t=o,0===Eu&&mu(Dr)),t===o&&(37===r.charCodeAt(Lu)?(t="%",Lu++):(t=o,0===Eu&&mu(kr)))),t}function Do(){var t,e,n;return (t=function(){var t,e,n,u,s,a,i;t=Lu,(e=Hs())!==o&&Ea()!==o&&La()!==o&&Ea()!==o&&(n=So())!==o&&Ea()!==o&&ws()!==o&&Ea()!==o&&(u=$a())!==o&&Ea()!==o&&(s=Ca())!==o?(t=e={type:"cast",expr:n,symbol:"as",target:u}):(Lu=t,t=o);t===o&&(t=Lu,(e=Hs())!==o&&Ea()!==o&&La()!==o&&Ea()!==o&&(n=So())!==o&&Ea()!==o&&ws()!==o&&Ea()!==o&&(u=Bs())!==o&&Ea()!==o&&(s=La())!==o&&Ea()!==o&&(a=rs())!==o&&Ea()!==o&&Ca()!==o&&Ea()!==o&&(i=Ca())!==o?(e=function(r,t){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+")"}}}(n,a),t=e):(Lu=t,t=o),t===o&&(t=Lu,(e=Hs())!==o&&Ea()!==o&&La()!==o&&Ea()!==o&&(n=So())!==o&&Ea()!==o&&ws()!==o&&Ea()!==o&&(u=Bs())!==o&&Ea()!==o&&(s=La())!==o&&Ea()!==o&&(a=rs())!==o&&Ea()!==o&&ba()!==o&&Ea()!==o&&(i=rs())!==o&&Ea()!==o&&Ca()!==o&&Ea()!==o&&Ca()!==o?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+", "+e+")"}}}(n,a,i),t=e):(Lu=t,t=o),t===o&&(t=Lu,(e=Hs())!==o&&Ea()!==o&&La()!==o&&Ea()!==o&&(n=So())!==o&&Ea()!==o&&ws()!==o&&Ea()!==o&&(u=function(){var t;(t=function(){var t,e,n,u;t=Lu,"signed"===r.substr(Lu,6).toLowerCase()?(e=r.substr(Lu,6),Lu+=6):(e=o,0===Eu&&mu(Ke));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="SIGNED"):(Lu=t,t=o)):(Lu=t,t=o);return t}())===o&&(t=Xs());return t}())!==o&&Ea()!==o?((s=Vs())===o&&(s=null),s!==o&&Ea()!==o&&(a=Ca())!==o?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:t+(e?" "+e:"")}}}(n,u,s),t=e):(Lu=t,t=o)):(Lu=t,t=o))));return t}())===o&&(t=Vo())===o&&(t=function(){var t;(t=function(){var t,e,n,u;t=Lu,(e=function(){var t,e,n,u;t=Lu,"count"===r.substr(Lu,5).toLowerCase()?(e=r.substr(Lu,5),Lu+=5):(e=o,0===Eu&&mu(Ue));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="COUNT"):(Lu=t,t=o)):(Lu=t,t=o);return t}())!==o&&Ea()!==o&&La()!==o&&Ea()!==o&&(n=function(){var t,e,n;t=Lu,(e=function(){var t,e;t=Lu,42===r.charCodeAt(Lu)?(e="*",Lu++):(e=o,0===Eu&&mu(Mr));e!==o&&(e={type:"star",value:"*"});return t=e}())!==o&&(e={expr:e});(t=e)===o&&(t=Lu,(e=gs())===o&&(e=null),e!==o&&Ea()!==o&&(n=ko())!==o?(t=e={distinct:e,expr:n}):(Lu=t,t=o));return t}())!==o&&Ea()!==o&&Ca()!==o&&Ea()!==o?((u=Wo())===o&&(u=null),u!==o?(t=e={type:"aggr_func",name:e,args:n,over:u}):(Lu=t,t=o)):(Lu=t,t=o);return t}())===o&&(t=function(){var t,e,n;t=Lu,(e=function(){var t;(t=function(){var t,e,n,u;t=Lu,"sum"===r.substr(Lu,3).toLowerCase()?(e=r.substr(Lu,3),Lu+=3):(e=o,0===Eu&&mu(De));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="SUM"):(Lu=t,t=o)):(Lu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=Lu,"max"===r.substr(Lu,3).toLowerCase()?(e=r.substr(Lu,3),Lu+=3):(e=o,0===Eu&&mu(xe));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="MAX"):(Lu=t,t=o)):(Lu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=Lu,"min"===r.substr(Lu,3).toLowerCase()?(e=r.substr(Lu,3),Lu+=3):(e=o,0===Eu&&mu(Me));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="MIN"):(Lu=t,t=o)):(Lu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=Lu,"avg"===r.substr(Lu,3).toLowerCase()?(e=r.substr(Lu,3),Lu+=3):(e=o,0===Eu&&mu(ke));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="AVG"):(Lu=t,t=o)):(Lu=t,t=o);return t}());return t}())!==o&&Ea()!==o&&La()!==o&&Ea()!==o&&(n=Oo())!==o&&Ea()!==o&&Ca()!==o?(t=e={type:"aggr_func",name:e,args:{expr:n}}):(Lu=t,t=o);return t}());return t}())===o&&(t=function(){var t,e,n,u,s;t=Lu,(e=Ua())!==o&&Ea()!==o&&La()!==o&&Ea()!==o?((n=Ao())===o&&(n=null),n!==o&&Ea()!==o&&(u=Ca())!==o&&Ea()!==o?((s=Wo())===o&&(s=null),s!==o?(t=e={type:"function",name:e,args:n||{type:"expr_list",value:[]},over:s}):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o);t===o&&(t=Lu,(e=function(){var t;(t=function(){var t,e,n,u;t=Lu,"current_date"===r.substr(Lu,12).toLowerCase()?(e=r.substr(Lu,12),Lu+=12):(e=o,0===Eu&&mu(Cn));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="CURRENT_DATE"):(Lu=t,t=o)):(Lu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=Lu,"current_time"===r.substr(Lu,12).toLowerCase()?(e=r.substr(Lu,12),Lu+=12):(e=o,0===Eu&&mu(mn));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="CURRENT_TIME"):(Lu=t,t=o)):(Lu=t,t=o);return t}())===o&&(t=na())===o&&(t=function(){var t,e,n,u;t=Lu,"current_user"===r.substr(Lu,12).toLowerCase()?(e=r.substr(Lu,12),Lu+=12):(e=o,0===Eu&&mu(In));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="CURRENT_USER"):(Lu=t,t=o)):(Lu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=Lu,"user"===r.substr(Lu,4).toLowerCase()?(e=r.substr(Lu,4),Lu+=4):(e=o,0===Eu&&mu(Ln));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="USER"):(Lu=t,t=o)):(Lu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=Lu,"session_user"===r.substr(Lu,12).toLowerCase()?(e=r.substr(Lu,12),Lu+=12):(e=o,0===Eu&&mu(Nn));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="SESSION_USER"):(Lu=t,t=o)):(Lu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=Lu,"system_user"===r.substr(Lu,11).toLowerCase()?(e=r.substr(Lu,11),Lu+=11):(e=o,0===Eu&&mu(Rn));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="SYSTEM_USER"):(Lu=t,t=o)):(Lu=t,t=o);return t}());return t}())!==o&&Ea()!==o&&La()!==o&&Ea()!==o&&(n=Ca())!==o&&Ea()!==o?((u=Wo())===o&&(u=null),u!==o?(e=function(r,t){return {type:"function",name:r,args:{type:"expr_list",value:[]},over:t}}(e,u),t=e):(Lu=t,t=o)):(Lu=t,t=o));return t}())===o&&(t=To())===o&&(t=yo())===o&&(t=ko())===o&&(t=Xo())===o&&(t=Lu,La()!==o&&Ea()!==o&&(e=So())!==o&&Ea()!==o&&Ca()!==o?(t=$r(e)):(Lu=t,t=o),t===o&&(t=Lu,La()!==o&&Ea()!==o&&(e=Ao())!==o&&Ea()!==o&&Ca()!==o?((n=e).parentheses=!0,t=n):(Lu=t,t=o),t===o&&(t=Da()))),t}function ko(){var t,e,n,u,s,a,i,c,l,f;return t=Lu,e=Lu,(n=$o())!==o&&(u=Ea())!==o&&(s=va())!==o&&(a=Ea())!==o?e=n=[n,u,s,a]:(Lu=e,e=o),e===o&&(e=null),e!==o&&(n=Po())!==o&&(u=Ea())!==o?((s=function(){var t;"->>"===r.substr(Lu,3)?(t="->>",Lu+=3):(t=o,0===Eu&&mu(uu));return t}())===o&&(s=function(){var t;"->"===r.substr(Lu,2)?(t="->",Lu+=2):(t=o,0===Eu&&mu(nu));return t}()),s!==o&&(a=Ea())!==o?((i=qo())===o&&(i=Qo()),i!==o&&Ea()!==o?((c=Uu())===o&&(c=null),c!==o?(t=e=function(r,t,e,n,u){const o=r&&r[0]||null;return qa.add(`select::${o}::${t}`),{type:"column_ref",table:o,column:t,collate:u,arrow:e,property:n}}(e,n,s,i,c)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o),t===o&&(t=Lu,(e=$o())!==o&&(n=Ea())!==o&&(u=va())!==o&&(s=Ea())!==o&&(a=function(){var r,t;r=Lu,(t=Ho())!==o&&(t=t);(r=t)===o&&(r=Fo());return r}())!==o?(l=e,f=a,qa.add(`select::${l}::${f}`),t=e={type:"column_ref",table:l,column:f}):(Lu=t,t=o),t===o&&(t=Lu,(e=Po())!==o&&(e=function(r){return qa.add("select::null::"+r),{type:"column_ref",table:null,column:r}}(e)),t=e)),t}function $o(){var r,t;return r=Lu,(t=Go())!==o?((Fr(t)?o:void 0)!==o?(r=t=t):(Lu=r,r=o)):(Lu=r,r=o),r===o&&(r=Lu,(t=Fo())!==o&&(t=t),r=t),r}function Fo(){var t;return (t=function(){var t,e,n,u;t=Lu,34===r.charCodeAt(Lu)?(e='"',Lu++):(e=o,0===Eu&&mu(Pr));if(e!==o){if(n=[],Hr.test(r.charAt(Lu))?(u=r.charAt(Lu),Lu++):(u=o,0===Eu&&mu(Gr)),u!==o)for(;u!==o;)n.push(u),Hr.test(r.charAt(Lu))?(u=r.charAt(Lu),Lu++):(u=o,0===Eu&&mu(Gr));else n=o;n!==o?(34===r.charCodeAt(Lu)?(u='"',Lu++):(u=o,0===Eu&&mu(Pr)),u!==o?(e=jr(n),t=e):(Lu=t,t=o)):(Lu=t,t=o);}else Lu=t,t=o;return t}())===o&&(t=function(){var t,e,n,u;t=Lu,39===r.charCodeAt(Lu)?(e="'",Lu++):(e=o,0===Eu&&mu(tr));if(e!==o){if(n=[],Yr.test(r.charAt(Lu))?(u=r.charAt(Lu),Lu++):(u=o,0===Eu&&mu(Br)),u!==o)for(;u!==o;)n.push(u),Yr.test(r.charAt(Lu))?(u=r.charAt(Lu),Lu++):(u=o,0===Eu&&mu(Br));else n=o;n!==o?(39===r.charCodeAt(Lu)?(u="'",Lu++):(u=o,0===Eu&&mu(tr)),u!==o?(e=jr(n),t=e):(Lu=t,t=o)):(Lu=t,t=o);}else Lu=t,t=o;return t}())===o&&(t=function(){var t,e,n,u;t=Lu,96===r.charCodeAt(Lu)?(e="`",Lu++):(e=o,0===Eu&&mu(Xr));if(e!==o){if(n=[],Wr.test(r.charAt(Lu))?(u=r.charAt(Lu),Lu++):(u=o,0===Eu&&mu(Vr)),u!==o)for(;u!==o;)n.push(u),Wr.test(r.charAt(Lu))?(u=r.charAt(Lu),Lu++):(u=o,0===Eu&&mu(Vr));else n=o;n!==o?(96===r.charCodeAt(Lu)?(u="`",Lu++):(u=o,0===Eu&&mu(Xr)),u!==o?(e=jr(n),t=e):(Lu=t,t=o)):(Lu=t,t=o);}else Lu=t,t=o;return t}()),t}function Po(){var r,t;return r=Lu,(t=Ho())!==o?((Fr(t)?o:void 0)!==o?(r=t=t):(Lu=r,r=o)):(Lu=r,r=o),r===o&&(r=Fo()),r}function Ho(){var r,t,e,n;if(r=Lu,(t=jo())!==o){for(e=[],n=Bo();n!==o;)e.push(n),n=Bo();e!==o?(r=t=Kr(t,e)):(Lu=r,r=o);}else Lu=r,r=o;return r}function Go(){var r,t,e,n;if(r=Lu,(t=jo())!==o){for(e=[],n=Yo();n!==o;)e.push(n),n=Yo();e!==o?(r=t=Kr(t,e)):(Lu=r,r=o);}else Lu=r,r=o;return r}function jo(){var t;return qr.test(r.charAt(Lu))?(t=r.charAt(Lu),Lu++):(t=o,0===Eu&&mu(Zr)),t}function Yo(){var t;return zr.test(r.charAt(Lu))?(t=r.charAt(Lu),Lu++):(t=o,0===Eu&&mu(Jr)),t}function Bo(){var t;return Qr.test(r.charAt(Lu))?(t=r.charAt(Lu),Lu++):(t=o,0===Eu&&mu(rt)),t}function Xo(){var t,e,n,u;return t=Lu,e=Lu,58===r.charCodeAt(Lu)?(n=":",Lu++):(n=o,0===Eu&&mu(tt)),n!==o&&(u=Go())!==o?e=n=[n,u]:(Lu=e,e=o),e!==o&&(e={type:"param",value:e[1]}),t=e}function Wo(){var t,e,n;return t=Lu,function(){var t,e,n,u;t=Lu,"over"===r.substr(Lu,4).toLowerCase()?(e=r.substr(Lu,4),Lu+=4):(e=o,0===Eu&&mu(le));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o);return t}()!==o&&Ea()!==o&&La()!==o&&Ea()!==o&&Ls()!==o&&Ea()!==o&&Ns()!==o&&Ea()!==o&&(e=Ku())!==o&&Ea()!==o?((n=co())===o&&(n=null),n!==o&&Ea()!==o&&Ca()!==o?(t={partitionby:e,orderby:n}):(Lu=t,t=o)):(Lu=t,t=o),t}function Vo(){var t;return (t=qo())===o&&(t=Qo())===o&&(t=function(){var t,e;t=Lu,(e=function(){var t,e,n,u;t=Lu,"true"===r.substr(Lu,4).toLowerCase()?(e=r.substr(Lu,4),Lu+=4):(e=o,0===Eu&&mu(Ut));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o);return t}())!==o&&(e={type:"bool",value:!0});(t=e)===o&&(t=Lu,(e=function(){var t,e,n,u;t=Lu,"false"===r.substr(Lu,5).toLowerCase()?(e=r.substr(Lu,5),Lu+=5):(e=o,0===Eu&&mu(Mt));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o);return t}())!==o&&(e={type:"bool",value:!1}),t=e);return t}())===o&&(t=Ko())===o&&(t=function(){var t,e,n,u,s,a,i;t=Lu,(e=ta())===o&&(e=Qs())===o&&(e=ea())===o&&(e=ra());if(e!==o)if(Ea()!==o){if(n=Lu,39===r.charCodeAt(Lu)?(u="'",Lu++):(u=o,0===Eu&&mu(tr)),u!==o){for(s=[],a=zo();a!==o;)s.push(a),a=zo();s!==o?(39===r.charCodeAt(Lu)?(a="'",Lu++):(a=o,0===Eu&&mu(tr)),a!==o?n=u=[u,s,a]:(Lu=n,n=o)):(Lu=n,n=o);}else Lu=n,n=o;n!==o?(c=n,e={type:e.toLowerCase(),value:c[1].join("")},t=e):(Lu=t,t=o);}else Lu=t,t=o;else Lu=t,t=o;var c;t===o&&(t=Lu,(e=na())!==o&&Ea()!==o?((n=La())===o&&(n=null),n!==o&&(u=Ea())!==o?((s=Ca())===o&&(s=null),s!==o?((a=(a=function(r,t,e){if(t&&e)return !0}(0,n,s))?o:void 0)!==o&&Ea()!==o?("on update current_timestamp"===r.substr(Lu,27).toLowerCase()?(i=r.substr(Lu,27),Lu+=27):(i=o,0===Eu&&mu(nt)),i===o&&(i=null),i!==o?(e=function(r,t,e,n){return {type:"origin",value:(n?`${r} ${n}`:r).toLowerCase()}}(e,0,0,i),t=e):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o)):(Lu=t,t=o));return t}()),t}function Ko(){var t,e;return t=Lu,(e=function(){var t,e,n,u;t=Lu,"null"===r.substr(Lu,4).toLowerCase()?(e=r.substr(Lu,4),Lu+=4):(e=o,0===Eu&&mu(gt));e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o);return t}())!==o&&(e={type:"null",value:null}),t=e}function qo(){var t,e,n,u,s;if(t=Lu,e=Lu,39===r.charCodeAt(Lu)?(n="'",Lu++):(n=o,0===Eu&&mu(tr)),n!==o){for(u=[],s=zo();s!==o;)u.push(s),s=zo();u!==o?(39===r.charCodeAt(Lu)?(s="'",Lu++):(s=o,0===Eu&&mu(tr)),s!==o?e=n=[n,u,s]:(Lu=e,e=o)):(Lu=e,e=o);}else Lu=e,e=o;if(e!==o&&(e=et(e)),(t=e)===o){if(t=Lu,e=Lu,34===r.charCodeAt(Lu)?(n='"',Lu++):(n=o,0===Eu&&mu(Pr)),n!==o){for(u=[],s=Zo();s!==o;)u.push(s),s=Zo();u!==o?(34===r.charCodeAt(Lu)?(s='"',Lu++):(s=o,0===Eu&&mu(Pr)),s!==o?e=n=[n,u,s]:(Lu=e,e=o)):(Lu=e,e=o);}else Lu=e,e=o;e!==o&&(e=et(e)),t=e;}return t}function Zo(){var t;return ut.test(r.charAt(Lu))?(t=r.charAt(Lu),Lu++):(t=o,0===Eu&&mu(ot)),t===o&&(t=Jo()),t}function zo(){var t;return st.test(r.charAt(Lu))?(t=r.charAt(Lu),Lu++):(t=o,0===Eu&&mu(at)),t===o&&(t=Jo()),t}function Jo(){var t,e,n,u,s,a,i,c,l,f;return t=Lu,"\\'"===r.substr(Lu,2)?(e="\\'",Lu+=2):(e=o,0===Eu&&mu(it)),e!==o&&(e="'"),(t=e)===o&&(t=Lu,'\\"'===r.substr(Lu,2)?(e='\\"',Lu+=2):(e=o,0===Eu&&mu(ct)),e!==o&&(e='"'),(t=e)===o&&(t=Lu,"\\\\"===r.substr(Lu,2)?(e="\\\\",Lu+=2):(e=o,0===Eu&&mu(lt)),e!==o&&(e="\\"),(t=e)===o&&(t=Lu,"\\/"===r.substr(Lu,2)?(e="\\/",Lu+=2):(e=o,0===Eu&&mu(ft)),e!==o&&(e="/"),(t=e)===o&&(t=Lu,"\\b"===r.substr(Lu,2)?(e="\\b",Lu+=2):(e=o,0===Eu&&mu(vt)),e!==o&&(e="\b"),(t=e)===o&&(t=Lu,"\\f"===r.substr(Lu,2)?(e="\\f",Lu+=2):(e=o,0===Eu&&mu(bt)),e!==o&&(e="\f"),(t=e)===o&&(t=Lu,"\\n"===r.substr(Lu,2)?(e="\\n",Lu+=2):(e=o,0===Eu&&mu(dt)),e!==o&&(e="\n"),(t=e)===o&&(t=Lu,"\\r"===r.substr(Lu,2)?(e="\\r",Lu+=2):(e=o,0===Eu&&mu(Lt)),e!==o&&(e="\r"),(t=e)===o&&(t=Lu,"\\t"===r.substr(Lu,2)?(e="\\t",Lu+=2):(e=o,0===Eu&&mu(Ct)),e!==o&&(e="\t"),(t=e)===o&&(t=Lu,"\\u"===r.substr(Lu,2)?(e="\\u",Lu+=2):(e=o,0===Eu&&mu(pt)),e!==o&&(n=os())!==o&&(u=os())!==o&&(s=os())!==o&&(a=os())!==o?(i=n,c=u,l=s,f=a,t=e=String.fromCharCode(parseInt("0x"+i+c+l+f))):(Lu=t,t=o),t===o&&(t=Lu,92===r.charCodeAt(Lu)?(e="\\",Lu++):(e=o,0===Eu&&mu(wt)),e!==o&&(e="\\"),t=e)))))))))),t}function Qo(){var r,t,e;return r=Lu,(t=function(){var r,t,e,n;r=Lu,(t=rs())!==o&&(e=ts())!==o&&(n=es())!==o?(r=t={type:"bigint",value:t+e+n}):(Lu=r,r=o);r===o&&(r=Lu,(t=rs())!==o&&(e=ts())!==o?(t=function(r,t){const e=r+t;return ja(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e),r=t):(Lu=r,r=o),r===o&&(r=Lu,(t=rs())!==o&&(e=es())!==o?(t=function(r,t){return {type:"bigint",value:r+t}}(t,e),r=t):(Lu=r,r=o),r===o&&(r=Lu,(t=rs())!==o&&(t=function(r){return ja(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t)));return r}())!==o&&(t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),r=t}function rs(){var t,e,n;return (t=ns())===o&&(t=us())===o&&(t=Lu,45===r.charCodeAt(Lu)?(e="-",Lu++):(e=o,0===Eu&&mu(xr)),e===o&&(43===r.charCodeAt(Lu)?(e="+",Lu++):(e=o,0===Eu&&mu(Ur))),e!==o&&(n=ns())!==o?(t=e="-"+n):(Lu=t,t=o),t===o&&(t=Lu,45===r.charCodeAt(Lu)?(e="-",Lu++):(e=o,0===Eu&&mu(xr)),e===o&&(43===r.charCodeAt(Lu)?(e="+",Lu++):(e=o,0===Eu&&mu(Ur))),e!==o&&(n=us())!==o?(t=e="-"+n):(Lu=t,t=o))),t}function ts(){var t,e,n;return t=Lu,46===r.charCodeAt(Lu)?(e=".",Lu++):(e=o,0===Eu&&mu(At)),e!==o&&(n=ns())!==o?(t=e="."+n):(Lu=t,t=o),t}function es(){var t,e,n;return t=Lu,(e=function(){var t,e,n;t=Lu,It.test(r.charAt(Lu))?(e=r.charAt(Lu),Lu++):(e=o,0===Eu&&mu(Nt));e!==o?(Rt.test(r.charAt(Lu))?(n=r.charAt(Lu),Lu++):(n=o,0===Eu&&mu(_t)),n===o&&(n=null),n!==o?(t=e=e+(null!==(u=n)?u:"")):(Lu=t,t=o)):(Lu=t,t=o);var u;return t}())!==o&&(n=ns())!==o?(t=e=e+n):(Lu=t,t=o),t}function ns(){var r,t,e;if(r=Lu,t=[],(e=us())!==o)for(;e!==o;)t.push(e),e=us();else t=o;return t!==o&&(t=t.join("")),r=t}function us(){var t;return yt.test(r.charAt(Lu))?(t=r.charAt(Lu),Lu++):(t=o,0===Eu&&mu(Tt)),t}function os(){var t;return mt.test(r.charAt(Lu))?(t=r.charAt(Lu),Lu++):(t=o,0===Eu&&mu(St)),t}function ss(){var t,e,n,u;return t=Lu,"default"===r.substr(Lu,7).toLowerCase()?(e=r.substr(Lu,7),Lu+=7):(e=o,0===Eu&&mu(C)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o),t}function as(){var t,e,n,u;return t=Lu,"to"===r.substr(Lu,2).toLowerCase()?(e=r.substr(Lu,2),Lu+=2):(e=o,0===Eu&&mu(xt)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o),t}function is(){var t,e,n,u;return t=Lu,"drop"===r.substr(Lu,4).toLowerCase()?(e=r.substr(Lu,4),Lu+=4):(e=o,0===Eu&&mu(Dt)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="DROP"):(Lu=t,t=o)):(Lu=t,t=o),t}function cs(){var t,e,n,u;return t=Lu,"update"===r.substr(Lu,6).toLowerCase()?(e=r.substr(Lu,6),Lu+=6):(e=o,0===Eu&&mu(Pt)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o),t}function ls(){var t,e,n,u;return t=Lu,"create"===r.substr(Lu,6).toLowerCase()?(e=r.substr(Lu,6),Lu+=6):(e=o,0===Eu&&mu(Ht)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o),t}function fs(){var t,e,n,u;return t=Lu,"temporary"===r.substr(Lu,9).toLowerCase()?(e=r.substr(Lu,9),Lu+=9):(e=o,0===Eu&&mu(Gt)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o),t}function vs(){var t,e,n,u;return t=Lu,"if not exists"===r.substr(Lu,13).toLowerCase()?(e=r.substr(Lu,13),Lu+=13):(e=o,0===Eu&&mu(jt)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o),t}function bs(){var t,e,n,u;return t=Lu,"replace"===r.substr(Lu,7).toLowerCase()?(e=r.substr(Lu,7),Lu+=7):(e=o,0===Eu&&mu(Wt)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o),t}function ds(){var t,e,n,u;return t=Lu,"rename"===r.substr(Lu,6).toLowerCase()?(e=r.substr(Lu,6),Lu+=6):(e=o,0===Eu&&mu(Vt)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o),t}function Ls(){var t,e,n,u;return t=Lu,"partition"===r.substr(Lu,9).toLowerCase()?(e=r.substr(Lu,9),Lu+=9):(e=o,0===Eu&&mu(qt)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="PARTITION"):(Lu=t,t=o)):(Lu=t,t=o),t}function Cs(){var t,e,n,u;return t=Lu,"into"===r.substr(Lu,4).toLowerCase()?(e=r.substr(Lu,4),Lu+=4):(e=o,0===Eu&&mu(Zt)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o),t}function ps(){var t,e,n,u;return t=Lu,"set"===r.substr(Lu,3).toLowerCase()?(e=r.substr(Lu,3),Lu+=3):(e=o,0===Eu&&mu(Jt)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o),t}function ws(){var t,e,n,u;return t=Lu,"as"===r.substr(Lu,2).toLowerCase()?(e=r.substr(Lu,2),Lu+=2):(e=o,0===Eu&&mu(re)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o),t}function Es(){var t,e,n,u;return t=Lu,"table"===r.substr(Lu,5).toLowerCase()?(e=r.substr(Lu,5),Lu+=5):(e=o,0===Eu&&mu(te)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="TABLE"):(Lu=t,t=o)):(Lu=t,t=o),t}function hs(){var t,e,n,u;return t=Lu,"tables"===r.substr(Lu,6).toLowerCase()?(e=r.substr(Lu,6),Lu+=6):(e=o,0===Eu&&mu(ee)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="TABLES"):(Lu=t,t=o)):(Lu=t,t=o),t}function As(){var t,e,n,u;return t=Lu,"on"===r.substr(Lu,2).toLowerCase()?(e=r.substr(Lu,2),Lu+=2):(e=o,0===Eu&&mu(ne)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o),t}function ys(){var t,e,n,u;return t=Lu,"join"===r.substr(Lu,4).toLowerCase()?(e=r.substr(Lu,4),Lu+=4):(e=o,0===Eu&&mu(ie)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o),t}function Ts(){var t,e,n,u;return t=Lu,"outer"===r.substr(Lu,5).toLowerCase()?(e=r.substr(Lu,5),Lu+=5):(e=o,0===Eu&&mu(ce)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o),t}function ms(){var t,e,n,u;return t=Lu,"union"===r.substr(Lu,5).toLowerCase()?(e=r.substr(Lu,5),Lu+=5):(e=o,0===Eu&&mu(fe)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o),t}function Ss(){var t,e,n,u;return t=Lu,"using"===r.substr(Lu,5).toLowerCase()?(e=r.substr(Lu,5),Lu+=5):(e=o,0===Eu&&mu(be)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o),t}function Is(){var t,e,n,u;return t=Lu,"with"===r.substr(Lu,4).toLowerCase()?(e=r.substr(Lu,4),Lu+=4):(e=o,0===Eu&&mu(br)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o),t}function Ns(){var t,e,n,u;return t=Lu,"by"===r.substr(Lu,2).toLowerCase()?(e=r.substr(Lu,2),Lu+=2):(e=o,0===Eu&&mu(Ce)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o),t}function Rs(){var t,e,n,u;return t=Lu,"fetch"===r.substr(Lu,5).toLowerCase()?(e=r.substr(Lu,5),Lu+=5):(e=o,0===Eu&&mu(Ee)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="FETCH"):(Lu=t,t=o)):(Lu=t,t=o),t}function _s(){var t,e,n,u;return t=Lu,"all"===r.substr(Lu,3).toLowerCase()?(e=r.substr(Lu,3),Lu+=3):(e=o,0===Eu&&mu(Te)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="ALL"):(Lu=t,t=o)):(Lu=t,t=o),t}function gs(){var t,e,n,u;return t=Lu,"distinct"===r.substr(Lu,8).toLowerCase()?(e=r.substr(Lu,8),Lu+=8):(e=o,0===Eu&&mu(me)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="DISTINCT"):(Lu=t,t=o)):(Lu=t,t=o),t}function Os(){var t,e,n,u;return t=Lu,"between"===r.substr(Lu,7).toLowerCase()?(e=r.substr(Lu,7),Lu+=7):(e=o,0===Eu&&mu(Se)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="BETWEEN"):(Lu=t,t=o)):(Lu=t,t=o),t}function Us(){var t,e,n,u;return t=Lu,"in"===r.substr(Lu,2).toLowerCase()?(e=r.substr(Lu,2),Lu+=2):(e=o,0===Eu&&mu(Ie)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="IN"):(Lu=t,t=o)):(Lu=t,t=o),t}function xs(){var t,e,n,u;return t=Lu,"is"===r.substr(Lu,2).toLowerCase()?(e=r.substr(Lu,2),Lu+=2):(e=o,0===Eu&&mu(Ne)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="IS"):(Lu=t,t=o)):(Lu=t,t=o),t}function Ms(){var t,e,n,u;return t=Lu,"like"===r.substr(Lu,4).toLowerCase()?(e=r.substr(Lu,4),Lu+=4):(e=o,0===Eu&&mu(Re)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="LIKE"):(Lu=t,t=o)):(Lu=t,t=o),t}function Ds(){var t,e,n,u;return t=Lu,"exists"===r.substr(Lu,6).toLowerCase()?(e=r.substr(Lu,6),Lu+=6):(e=o,0===Eu&&mu(_e)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="EXISTS"):(Lu=t,t=o)):(Lu=t,t=o),t}function ks(){var t,e,n,u;return t=Lu,"not"===r.substr(Lu,3).toLowerCase()?(e=r.substr(Lu,3),Lu+=3):(e=o,0===Eu&&mu(O)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="NOT"):(Lu=t,t=o)):(Lu=t,t=o),t}function $s(){var t,e,n,u;return t=Lu,"and"===r.substr(Lu,3).toLowerCase()?(e=r.substr(Lu,3),Lu+=3):(e=o,0===Eu&&mu(ge)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="AND"):(Lu=t,t=o)):(Lu=t,t=o),t}function Fs(){var t,e,n,u;return t=Lu,"or"===r.substr(Lu,2).toLowerCase()?(e=r.substr(Lu,2),Lu+=2):(e=o,0===Eu&&mu(Oe)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="OR"):(Lu=t,t=o)):(Lu=t,t=o),t}function Ps(){var t,e,n,u;return t=Lu,"case"===r.substr(Lu,4).toLowerCase()?(e=r.substr(Lu,4),Lu+=4):(e=o,0===Eu&&mu(Fe)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o),t}function Hs(){var t,e,n,u;return t=Lu,"cast"===r.substr(Lu,4).toLowerCase()?(e=r.substr(Lu,4),Lu+=4):(e=o,0===Eu&&mu(Ye)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?t=e=[e,n]:(Lu=t,t=o)):(Lu=t,t=o),t}function Gs(){var t,e,n,u;return t=Lu,"char"===r.substr(Lu,4).toLowerCase()?(e=r.substr(Lu,4),Lu+=4):(e=o,0===Eu&&mu(Be)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="CHAR"):(Lu=t,t=o)):(Lu=t,t=o),t}function js(){var t,e,n,u;return t=Lu,"varchar"===r.substr(Lu,7).toLowerCase()?(e=r.substr(Lu,7),Lu+=7):(e=o,0===Eu&&mu(Xe)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="VARCHAR"):(Lu=t,t=o)):(Lu=t,t=o),t}function Ys(){var t,e,n,u;return t=Lu,"numeric"===r.substr(Lu,7).toLowerCase()?(e=r.substr(Lu,7),Lu+=7):(e=o,0===Eu&&mu(We)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="NUMERIC"):(Lu=t,t=o)):(Lu=t,t=o),t}function Bs(){var t,e,n,u;return t=Lu,"decimal"===r.substr(Lu,7).toLowerCase()?(e=r.substr(Lu,7),Lu+=7):(e=o,0===Eu&&mu(Ve)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="DECIMAL"):(Lu=t,t=o)):(Lu=t,t=o),t}function Xs(){var t,e,n,u;return t=Lu,"unsigned"===r.substr(Lu,8).toLowerCase()?(e=r.substr(Lu,8),Lu+=8):(e=o,0===Eu&&mu(qe)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="UNSIGNED"):(Lu=t,t=o)):(Lu=t,t=o),t}function Ws(){var t,e,n,u;return t=Lu,"int"===r.substr(Lu,3).toLowerCase()?(e=r.substr(Lu,3),Lu+=3):(e=o,0===Eu&&mu(Ze)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="INT"):(Lu=t,t=o)):(Lu=t,t=o),t}function Vs(){var t,e,n,u;return t=Lu,"integer"===r.substr(Lu,7).toLowerCase()?(e=r.substr(Lu,7),Lu+=7):(e=o,0===Eu&&mu(Je)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="INTEGER"):(Lu=t,t=o)):(Lu=t,t=o),t}function Ks(){var t,e,n,u;return t=Lu,"smallint"===r.substr(Lu,8).toLowerCase()?(e=r.substr(Lu,8),Lu+=8):(e=o,0===Eu&&mu(rn)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="SMALLINT"):(Lu=t,t=o)):(Lu=t,t=o),t}function qs(){var t,e,n,u;return t=Lu,"tinyint"===r.substr(Lu,7).toLowerCase()?(e=r.substr(Lu,7),Lu+=7):(e=o,0===Eu&&mu(tn)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="TINYINT"):(Lu=t,t=o)):(Lu=t,t=o),t}function Zs(){var t,e,n,u;return t=Lu,"bigint"===r.substr(Lu,6).toLowerCase()?(e=r.substr(Lu,6),Lu+=6):(e=o,0===Eu&&mu(sn)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="BIGINT"):(Lu=t,t=o)):(Lu=t,t=o),t}function zs(){var t,e,n,u;return t=Lu,"float"===r.substr(Lu,5).toLowerCase()?(e=r.substr(Lu,5),Lu+=5):(e=o,0===Eu&&mu(an)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="FLOAT"):(Lu=t,t=o)):(Lu=t,t=o),t}function Js(){var t,e,n,u;return t=Lu,"double"===r.substr(Lu,6).toLowerCase()?(e=r.substr(Lu,6),Lu+=6):(e=o,0===Eu&&mu(cn)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="DOUBLE"):(Lu=t,t=o)):(Lu=t,t=o),t}function Qs(){var t,e,n,u;return t=Lu,"date"===r.substr(Lu,4).toLowerCase()?(e=r.substr(Lu,4),Lu+=4):(e=o,0===Eu&&mu(ln)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="DATE"):(Lu=t,t=o)):(Lu=t,t=o),t}function ra(){var t,e,n,u;return t=Lu,"datetime"===r.substr(Lu,8).toLowerCase()?(e=r.substr(Lu,8),Lu+=8):(e=o,0===Eu&&mu(fn)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="DATETIME"):(Lu=t,t=o)):(Lu=t,t=o),t}function ta(){var t,e,n,u;return t=Lu,"time"===r.substr(Lu,4).toLowerCase()?(e=r.substr(Lu,4),Lu+=4):(e=o,0===Eu&&mu(vn)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="TIME"):(Lu=t,t=o)):(Lu=t,t=o),t}function ea(){var t,e,n,u;return t=Lu,"timestamp"===r.substr(Lu,9).toLowerCase()?(e=r.substr(Lu,9),Lu+=9):(e=o,0===Eu&&mu(bn)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="TIMESTAMP"):(Lu=t,t=o)):(Lu=t,t=o),t}function na(){var t,e,n,u;return t=Lu,"current_timestamp"===r.substr(Lu,17).toLowerCase()?(e=r.substr(Lu,17),Lu+=17):(e=o,0===Eu&&mu(Sn)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="CURRENT_TIMESTAMP"):(Lu=t,t=o)):(Lu=t,t=o),t}function ua(){var t;return (t=function(){var t;return "@@"===r.substr(Lu,2)?(t="@@",Lu+=2):(t=o,0===Eu&&mu(Mn)),t}())===o&&(t=function(){var t;return 64===r.charCodeAt(Lu)?(t="@",Lu++):(t=o,0===Eu&&mu(xn)),t}())===o&&(t=function(){var t;return 36===r.charCodeAt(Lu)?(t="$",Lu++):(t=o,0===Eu&&mu(Dn)),t}()),t}function oa(){var t;return 61===r.charCodeAt(Lu)?(t="=",Lu++):(t=o,0===Eu&&mu(Ar)),t}function sa(){var t,e,n,u;return t=Lu,"add"===r.substr(Lu,3).toLowerCase()?(e=r.substr(Lu,3),Lu+=3):(e=o,0===Eu&&mu(Pn)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="ADD"):(Lu=t,t=o)):(Lu=t,t=o),t}function aa(){var t,e,n,u;return t=Lu,"column"===r.substr(Lu,6).toLowerCase()?(e=r.substr(Lu,6),Lu+=6):(e=o,0===Eu&&mu(Hn)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="COLUMN"):(Lu=t,t=o)):(Lu=t,t=o),t}function ia(){var t,e,n,u;return t=Lu,"index"===r.substr(Lu,5).toLowerCase()?(e=r.substr(Lu,5),Lu+=5):(e=o,0===Eu&&mu(Gn)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="INDEX"):(Lu=t,t=o)):(Lu=t,t=o),t}function ca(){var t,e,n,u;return t=Lu,"key"===r.substr(Lu,3).toLowerCase()?(e=r.substr(Lu,3),Lu+=3):(e=o,0===Eu&&mu(v)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="KEY"):(Lu=t,t=o)):(Lu=t,t=o),t}function la(){var t,e,n,u;return t=Lu,"comment"===r.substr(Lu,7).toLowerCase()?(e=r.substr(Lu,7),Lu+=7):(e=o,0===Eu&&mu(Bn)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="COMMENT"):(Lu=t,t=o)):(Lu=t,t=o),t}function fa(){var t,e,n,u;return t=Lu,"constraint"===r.substr(Lu,10).toLowerCase()?(e=r.substr(Lu,10),Lu+=10):(e=o,0===Eu&&mu(Xn)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="CONSTRAINT"):(Lu=t,t=o)):(Lu=t,t=o),t}function va(){var t;return 46===r.charCodeAt(Lu)?(t=".",Lu++):(t=o,0===Eu&&mu(At)),t}function ba(){var t;return 44===r.charCodeAt(Lu)?(t=",",Lu++):(t=o,0===Eu&&mu(Qn)),t}function da(){var t;return 42===r.charCodeAt(Lu)?(t="*",Lu++):(t=o,0===Eu&&mu(Mr)),t}function La(){var t;return 40===r.charCodeAt(Lu)?(t="(",Lu++):(t=o,0===Eu&&mu(cr)),t}function Ca(){var t;return 41===r.charCodeAt(Lu)?(t=")",Lu++):(t=o,0===Eu&&mu(lr)),t}function pa(){var t;return 59===r.charCodeAt(Lu)?(t=";",Lu++):(t=o,0===Eu&&mu(eu)),t}function wa(){var t;return (t=function(){var t;return "||"===r.substr(Lu,2)?(t="||",Lu+=2):(t=o,0===Eu&&mu(ou)),t}())===o&&(t=function(){var t;return "&&"===r.substr(Lu,2)?(t="&&",Lu+=2):(t=o,0===Eu&&mu(su)),t}()),t}function Ea(){var r,t;for(r=[],(t=ma())===o&&(t=Aa());t!==o;)r.push(t),(t=ma())===o&&(t=Aa());return r}function ha(){var r,t;if(r=[],(t=ma())===o&&(t=Aa()),t!==o)for(;t!==o;)r.push(t),(t=ma())===o&&(t=Aa());else r=o;return r}function Aa(){var t;return (t=function(){var t,e,n,u,s,a;t=Lu,"/*"===r.substr(Lu,2)?(e="/*",Lu+=2):(e=o,0===Eu&&mu(au));if(e!==o){for(n=[],u=Lu,s=Lu,Eu++,"*/"===r.substr(Lu,2)?(a="*/",Lu+=2):(a=o,0===Eu&&mu(iu)),Eu--,a===o?s=void 0:(Lu=s,s=o),s!==o&&(a=Ta())!==o?u=s=[s,a]:(Lu=u,u=o);u!==o;)n.push(u),u=Lu,s=Lu,Eu++,"*/"===r.substr(Lu,2)?(a="*/",Lu+=2):(a=o,0===Eu&&mu(iu)),Eu--,a===o?s=void 0:(Lu=s,s=o),s!==o&&(a=Ta())!==o?u=s=[s,a]:(Lu=u,u=o);n!==o?("*/"===r.substr(Lu,2)?(u="*/",Lu+=2):(u=o,0===Eu&&mu(iu)),u!==o?t=e=[e,n,u]:(Lu=t,t=o)):(Lu=t,t=o);}else Lu=t,t=o;return t}())===o&&(t=function(){var t,e,n,u,s,a;t=Lu,"--"===r.substr(Lu,2)?(e="--",Lu+=2):(e=o,0===Eu&&mu(cu));if(e!==o){for(n=[],u=Lu,s=Lu,Eu++,a=Sa(),Eu--,a===o?s=void 0:(Lu=s,s=o),s!==o&&(a=Ta())!==o?u=s=[s,a]:(Lu=u,u=o);u!==o;)n.push(u),u=Lu,s=Lu,Eu++,a=Sa(),Eu--,a===o?s=void 0:(Lu=s,s=o),s!==o&&(a=Ta())!==o?u=s=[s,a]:(Lu=u,u=o);n!==o?t=e=[e,n]:(Lu=t,t=o);}else Lu=t,t=o;return t}())===o&&(t=function(){var t,e,n,u,s,a;t=Lu,35===r.charCodeAt(Lu)?(e="#",Lu++):(e=o,0===Eu&&mu(lu));if(e!==o){for(n=[],u=Lu,s=Lu,Eu++,a=Sa(),Eu--,a===o?s=void 0:(Lu=s,s=o),s!==o&&(a=Ta())!==o?u=s=[s,a]:(Lu=u,u=o);u!==o;)n.push(u),u=Lu,s=Lu,Eu++,a=Sa(),Eu--,a===o?s=void 0:(Lu=s,s=o),s!==o&&(a=Ta())!==o?u=s=[s,a]:(Lu=u,u=o);n!==o?t=e=[e,n]:(Lu=t,t=o);}else Lu=t,t=o;return t}()),t}function ya(){var r,t,e,n,u,s,a;return r=Lu,(t=la())!==o&&Ea()!==o?((e=oa())===o&&(e=null),e!==o&&Ea()!==o&&(n=qo())!==o?(s=e,a=n,r=t={type:(u=t).toLowerCase(),keyword:u.toLowerCase(),symbol:s,value:a}):(Lu=r,r=o)):(Lu=r,r=o),r}function Ta(){var t;return r.length>Lu?(t=r.charAt(Lu),Lu++):(t=o,0===Eu&&mu(fu)),t}function ma(){var t;return vu.test(r.charAt(Lu))?(t=r.charAt(Lu),Lu++):(t=o,0===Eu&&mu(bu)),t}function Sa(){var t,e;if((t=function(){var t,e;t=Lu,Eu++,r.length>Lu?(e=r.charAt(Lu),Lu++):(e=o,0===Eu&&mu(fu));Eu--,e===o?t=void 0:(Lu=t,t=o);return t}())===o)if(t=[],Et.test(r.charAt(Lu))?(e=r.charAt(Lu),Lu++):(e=o,0===Eu&&mu(ht)),e!==o)for(;e!==o;)t.push(e),Et.test(r.charAt(Lu))?(e=r.charAt(Lu),Lu++):(e=o,0===Eu&&mu(ht));else t=o;return t}function Ia(){var t,e;return t=Lu,Va=[],(void 0)!==o&&Ea()!==o?((e=Na())===o&&(e=function(){var t,e;t=Lu,function(){var t;return "return"===r.substr(Lu,6).toLowerCase()?(t=r.substr(Lu,6),Lu+=6):(t=o,0===Eu&&mu(kn)),t}()!==o&&Ea()!==o&&(e=Ra())!==o?(t={type:"return",expr:e}):(Lu=t,t=o);return t}()),e!==o?(t={stmt:e,vars:Va}):(Lu=t,t=o)):(Lu=t,t=o),t}function Na(){var t,e,n,u;return t=Lu,(e=Da())===o&&(e=ka()),e!==o&&Ea()!==o?((n=function(){var t;return ":="===r.substr(Lu,2)?(t=":=",Lu+=2):(t=o,0===Eu&&mu($n)),t}())===o&&(n=oa()),n!==o&&Ea()!==o&&(u=Ra())!==o?(t=e={type:"assign",left:e,symbol:n,right:u}):(Lu=t,t=o)):(Lu=t,t=o),t}function Ra(){var t;return (t=ju())===o&&(t=function(){var r,t,e,n,u;r=Lu,(t=Da())!==o&&Ea()!==o&&(e=oo())!==o&&Ea()!==o&&(n=Da())!==o&&Ea()!==o&&(u=ao())!==o?(r=t={type:"join",ltable:t,rtable:n,op:e,on:u}):(Lu=r,r=o);return r}())===o&&(t=_a())===o&&(t=function(){var t,e;t=Lu,function(){var t;return 91===r.charCodeAt(Lu)?(t="[",Lu++):(t=o,0===Eu&&mu(ru)),t}()!==o&&Ea()!==o&&(e=Ma())!==o&&Ea()!==o&&function(){var t;return 93===r.charCodeAt(Lu)?(t="]",Lu++):(t=o,0===Eu&&mu(tu)),t}()!==o?(t={type:"array",value:e}):(Lu=t,t=o);return t}()),t}function _a(){var r,t,e,n,u,s,a,i;if(r=Lu,(t=ga())!==o){for(e=[],n=Lu,(u=Ea())!==o&&(s=Uo())!==o&&(a=Ea())!==o&&(i=ga())!==o?n=u=[u,s,a,i]:(Lu=n,n=o);n!==o;)e.push(n),n=Lu,(u=Ea())!==o&&(s=Uo())!==o&&(a=Ea())!==o&&(i=ga())!==o?n=u=[u,s,a,i]:(Lu=n,n=o);e!==o?(r=t=Tr(t,e)):(Lu=r,r=o);}else Lu=r,r=o;return r}function ga(){var r,t,e,n,u,s,a,i;if(r=Lu,(t=Oa())!==o){for(e=[],n=Lu,(u=Ea())!==o&&(s=Mo())!==o&&(a=Ea())!==o&&(i=Oa())!==o?n=u=[u,s,a,i]:(Lu=n,n=o);n!==o;)e.push(n),n=Lu,(u=Ea())!==o&&(s=Mo())!==o&&(a=Ea())!==o&&(i=Oa())!==o?n=u=[u,s,a,i]:(Lu=n,n=o);e!==o?(r=t=Tr(t,e)):(Lu=r,r=o);}else Lu=r,r=o;return r}function Oa(){var r,t;return (r=Vo())===o&&(r=Da())===o&&(r=xa())===o&&(r=Xo())===o&&(r=Lu,La()!==o&&Ea()!==o&&(t=_a())!==o&&Ea()!==o&&Ca()!==o?(r=$r(t)):(Lu=r,r=o)),r}function Ua(){var r,t,e,n,u,s,a;return r=Lu,(t=$o())!==o?(e=Lu,(n=Ea())!==o&&(u=va())!==o&&(s=Ea())!==o&&(a=$o())!==o?e=n=[n,u,s,a]:(Lu=e,e=o),e===o&&(e=null),e!==o?(r=t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e)):(Lu=r,r=o)):(Lu=r,r=o),r}function xa(){var r,t,e;return r=Lu,(t=Ua())!==o&&Ea()!==o&&La()!==o&&Ea()!==o?((e=Ma())===o&&(e=null),e!==o&&Ea()!==o&&Ca()!==o?(r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(Lu=r,r=o)):(Lu=r,r=o),r===o&&(r=Lu,(t=Ua())!==o&&(t=function(r){return {type:"function",name:r,args:null}}(t)),r=t),r}function Ma(){var r,t,e,n,u,s,a,c;if(r=Lu,(t=Oa())!==o){for(e=[],n=Lu,(u=Ea())!==o&&(s=ba())!==o&&(a=Ea())!==o&&(c=Oa())!==o?n=u=[u,s,a,c]:(Lu=n,n=o);n!==o;)e.push(n),n=Lu,(u=Ea())!==o&&(s=ba())!==o&&(a=Ea())!==o&&(c=Oa())!==o?n=u=[u,s,a,c]:(Lu=n,n=o);e!==o?(r=t=i(t,e)):(Lu=r,r=o);}else Lu=r,r=o;return r}function Da(){var r,t,e,n,u;return r=Lu,(t=ua())!==o&&(e=ka())!==o?(n=t,u=e,r=t={type:"var",...u,prefix:n}):(Lu=r,r=o),r}function ka(){var t,e,n,u,s;return t=Lu,(e=Go())!==o&&(n=function(){var t,e,n,u,s;t=Lu,e=[],n=Lu,46===r.charCodeAt(Lu)?(u=".",Lu++):(u=o,0===Eu&&mu(At));u!==o&&(s=Go())!==o?n=u=[u,s]:(Lu=n,n=o);for(;n!==o;)e.push(n),n=Lu,46===r.charCodeAt(Lu)?(u=".",Lu++):(u=o,0===Eu&&mu(At)),u!==o&&(s=Go())!==o?n=u=[u,s]:(Lu=n,n=o);e!==o&&(e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return t=e}())!==o?(u=e,s=n,Va.push(u),t=e={type:"var",name:u,members:s,prefix:null}):(Lu=t,t=o),t}function $a(){var t;return (t=function(){var t,e,n,u;t=Lu,(e=Gs())===o&&(e=js());if(e!==o)if(Ea()!==o)if(La()!==o)if(Ea()!==o){if(n=[],yt.test(r.charAt(Lu))?(u=r.charAt(Lu),Lu++):(u=o,0===Eu&&mu(Tt)),u!==o)for(;u!==o;)n.push(u),yt.test(r.charAt(Lu))?(u=r.charAt(Lu),Lu++):(u=o,0===Eu&&mu(Tt));else n=o;n!==o&&(u=Ea())!==o&&Ca()!==o?(e={dataType:e,length:parseInt(n.join(""),10)},t=e):(Lu=t,t=o);}else Lu=t,t=o;else Lu=t,t=o;else Lu=t,t=o;else Lu=t,t=o;t===o&&(t=Lu,(e=Gs())!==o&&(e=du(e)),(t=e)===o&&(t=Lu,(e=js())!==o&&(e=du(e)),t=e));return t}())===o&&(t=function(){var t,e,n,u,s,a,i,c,l,f,v,b;t=Lu,(e=Ys())===o&&(e=Bs())===o&&(e=Ws())===o&&(e=Vs())===o&&(e=Ks())===o&&(e=qs())===o&&(e=Zs())===o&&(e=zs())===o&&(e=Js());if(e!==o)if((n=Ea())!==o)if((u=La())!==o)if((s=Ea())!==o){if(a=[],yt.test(r.charAt(Lu))?(i=r.charAt(Lu),Lu++):(i=o,0===Eu&&mu(Tt)),i!==o)for(;i!==o;)a.push(i),yt.test(r.charAt(Lu))?(i=r.charAt(Lu),Lu++):(i=o,0===Eu&&mu(Tt));else a=o;if(a!==o)if((i=Ea())!==o){if(c=Lu,(l=ba())!==o)if((f=Ea())!==o){if(v=[],yt.test(r.charAt(Lu))?(b=r.charAt(Lu),Lu++):(b=o,0===Eu&&mu(Tt)),b!==o)for(;b!==o;)v.push(b),yt.test(r.charAt(Lu))?(b=r.charAt(Lu),Lu++):(b=o,0===Eu&&mu(Tt));else v=o;v!==o?c=l=[l,f,v]:(Lu=c,c=o);}else Lu=c,c=o;else Lu=c,c=o;c===o&&(c=null),c!==o&&(l=Ea())!==o&&(f=Ca())!==o&&(v=Ea())!==o?((b=Fa())===o&&(b=null),b!==o?(d=c,L=b,e={dataType:e,length:parseInt(a.join(""),10),scale:d&&parseInt(d[2].join(""),10),parentheses:!0,suffix:L},t=e):(Lu=t,t=o)):(Lu=t,t=o);}else Lu=t,t=o;else Lu=t,t=o;}else Lu=t,t=o;else Lu=t,t=o;else Lu=t,t=o;else Lu=t,t=o;var d,L;if(t===o){if(t=Lu,(e=Ys())===o&&(e=Bs())===o&&(e=Ws())===o&&(e=Vs())===o&&(e=Ks())===o&&(e=qs())===o&&(e=Zs())===o&&(e=zs())===o&&(e=Js()),e!==o){if(n=[],yt.test(r.charAt(Lu))?(u=r.charAt(Lu),Lu++):(u=o,0===Eu&&mu(Tt)),u!==o)for(;u!==o;)n.push(u),yt.test(r.charAt(Lu))?(u=r.charAt(Lu),Lu++):(u=o,0===Eu&&mu(Tt));else n=o;n!==o&&(u=Ea())!==o?((s=Fa())===o&&(s=null),s!==o?(e=function(r,t,e){return {dataType:r,length:parseInt(t.join(""),10),suffix:e}}(e,n,s),t=e):(Lu=t,t=o)):(Lu=t,t=o);}else Lu=t,t=o;t===o&&(t=Lu,(e=Ys())===o&&(e=Bs())===o&&(e=Ws())===o&&(e=Vs())===o&&(e=Ks())===o&&(e=qs())===o&&(e=Zs())===o&&(e=zs())===o&&(e=Js()),e!==o&&(n=Ea())!==o?((u=Fa())===o&&(u=null),u!==o&&(s=Ea())!==o?(e=function(r,t){return {dataType:r,suffix:t}}(e,u),t=e):(Lu=t,t=o)):(Lu=t,t=o));}return t}())===o&&(t=function(){var r,t;r=Lu,(t=Qs())===o&&(t=ra())===o&&(t=ta())===o&&(t=ea());t!==o&&(t=du(t));return r=t}())===o&&(t=function(){var t,e;t=Lu,(e=function(){var t,e,n,u;return t=Lu,"json"===r.substr(Lu,4).toLowerCase()?(e=r.substr(Lu,4),Lu+=4):(e=o,0===Eu&&mu(Qe)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="JSON"):(Lu=t,t=o)):(Lu=t,t=o),t}())!==o&&(e=du(e));return t=e}())===o&&(t=function(){var t,e;t=Lu,(e=function(){var t,e,n,u;return t=Lu,"tinytext"===r.substr(Lu,8).toLowerCase()?(e=r.substr(Lu,8),Lu+=8):(e=o,0===Eu&&mu(en)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="TINYTEXT"):(Lu=t,t=o)):(Lu=t,t=o),t}())===o&&(e=function(){var t,e,n,u;return t=Lu,"text"===r.substr(Lu,4).toLowerCase()?(e=r.substr(Lu,4),Lu+=4):(e=o,0===Eu&&mu(nn)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="TEXT"):(Lu=t,t=o)):(Lu=t,t=o),t}())===o&&(e=function(){var t,e,n,u;return t=Lu,"mediumtext"===r.substr(Lu,10).toLowerCase()?(e=r.substr(Lu,10),Lu+=10):(e=o,0===Eu&&mu(un)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="MEDIUMTEXT"):(Lu=t,t=o)):(Lu=t,t=o),t}())===o&&(e=function(){var t,e,n,u;return t=Lu,"longtext"===r.substr(Lu,8).toLowerCase()?(e=r.substr(Lu,8),Lu+=8):(e=o,0===Eu&&mu(on)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="LONGTEXT"):(Lu=t,t=o)):(Lu=t,t=o),t}());e!==o&&(e={dataType:e});return t=e}()),t}function Fa(){var t,e,n;return t=Lu,(e=Xs())===o&&(e=null),e!==o&&Ea()!==o?((n=function(){var t,e,n,u;return t=Lu,"zerofill"===r.substr(Lu,8).toLowerCase()?(e=r.substr(Lu,8),Lu+=8):(e=o,0===Eu&&mu(ze)),e!==o?(n=Lu,Eu++,u=jo(),Eu--,u===o?n=void 0:(Lu=n,n=o),n!==o?(t=e="ZEROFILL"):(Lu=t,t=o)):(Lu=t,t=o),t}())===o&&(n=null),n!==o?(t=e=function(r,t){const e=[];return r&&e.push(r),t&&e.push(t),e}(e,n)):(Lu=t,t=o)):(Lu=t,t=o),t}const Pa={ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,IS:!0,JOIN:!0,JSON:!0,KEY:!0,LEFT:!0,LIKE:!0,LIMIT:!0,LOW_PRIORITY:!0,NOT:!0,NULL:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,RECURSIVE:!0,RENAME:!0,READ:!0,RIGHT:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,TYPE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WITH:!0,WHEN:!0,WHERE:!0,WRITE:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0};function Ha(r,t){return {type:"unary_expr",operator:r,expr:t}}function Ga(r,t,e){return {type:"binary_expr",operator:r,left:t,right:e}}function ja(r){const t=n(Number.MAX_SAFE_INTEGER);return !(n(r)<t)}function Ya(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][3]);return e}function Ba(r,t){let e=r;for(let r=0;r<t.length;r++)e=Ga(t[r][1],e,t[r][3]);return e}function Xa(r){const t=Za[r];return t||(r||null)}function Wa(r){const t=[];for(let e of r.keys()){const r=e.split("::");if(!r){t.push(e);break}r&&r[1]&&(r[1]=Xa(r[1])),t.push(r.join("::"));}return t}let Va=[];const Ka=new Set,qa=new Set,Za={};if((e=a())!==o&&Lu===r.length)return e;throw e!==o&&Lu<r.length&&mu({type:"end"}),Su(wu,pu<r.length?r.charAt(pu):null,pu<r.length?Tu(pu,pu+1):Tu(pu,pu))}};},function(r,t,e){var n=e(0);function u(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,u);}!function(r,t){function e(){this.constructor=r;}e.prototype=t.prototype,r.prototype=new e;}(u,Error),u.buildMessage=function(r,t){var e={literal:function(r){return '"'+u(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?o(r.parts[t][0])+"-"+o(r.parts[t][1]):o(r.parts[t]);return "["+(r.inverted?"^":"")+e+"]"},any:function(r){return "any character"},end:function(r){return "end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function u(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}function o(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}return "Expected "+function(r){var t,n,u,o=new Array(r.length);for(t=0;t<r.length;t++)o[t]=(u=r[t],e[u.type](u));if(o.sort(),o.length>0){for(t=1,n=1;t<o.length;t++)o[t-1]!==o[t]&&(o[n]=o[t],n++);o.length=n;}switch(o.length){case 1:return o[0];case 2:return o[0]+" or "+o[1];default:return o.slice(0,-1).join(", ")+", or "+o[o.length-1]}}(r)+" but "+function(r){return r?'"'+u(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:u,parse:function(r,t){t=void 0!==t?t:{};var e,o={},s={start:pu},a=pu,i=function(r,t){return Sa(r,t)},c=fu("AUTO_INCREMENT",!0),l=fu("UNIQUE",!0),f=fu("PRIMARY",!0),v=fu("KEY",!0),b=fu("COLUMN_FORMAT",!0),d=fu("FIXED",!0),L=fu("DYNAMIC",!0),C=fu("DEFAULT",!0),p=fu("STORAGE",!0),w=fu("DISK",!0),E=fu("MEMORY",!0),h=fu("ALGORITHM",!0),A=fu("INSTANT",!0),y=fu("INPLACE",!0),T=fu("COPY",!0),m=fu("LOCK",!0),S=fu("NONE",!0),I=fu("SHARED",!0),N=fu("EXCLUSIVE",!0),R=fu("PRIMARY KEY",!0),_=fu("FOREIGN KEY",!0),g=fu("MATCH FULL",!0),O=fu("MATCH PARTIAL",!0),U=fu("MATCH SIMPLE",!0),x=fu("ON DELETE",!0),M=fu("ON UPDATE",!0),D=fu("RESTRICT",!0),k=fu("CASCADE",!0),$=fu("SET NULL",!0),F=fu("NO ACTION",!0),P=fu("SET DEFAULT",!0),H=fu("AVG_ROW_LENGTH",!0),G=fu("KEY_BLOCK_SIZE",!0),j=fu("MAX_ROWS",!0),Y=fu("MIN_ROWS",!0),B=fu("STATS_SAMPLE_PAGES",!0),X=fu("CHARACTER SET",!0),W=fu("CHARSET",!0),V=fu("COLLATE",!0),K=fu("CONNECTION",!0),q=fu("COMPRESSION",!0),Z=fu("'",!1),z=fu("ZLIB",!0),J=fu("LZ4",!0),Q=fu("ENGINE",!0),rr=fu("READ",!0),tr=fu("LOCAL",!0),er=fu("LOW_PRIORITY",!0),nr=fu("WRITE",!0),ur=fu("(",!1),or=fu(")",!1),sr=fu("BTREE",!0),ar=fu("HASH",!0),ir=fu("WITH",!0),cr=fu("PARSER",!0),lr=fu("VISIBLE",!0),fr=fu("INVISIBLE",!0),vr=fu("=",!1),br=function(r,t){return Ia(r,t)},dr=function(r,t){return Ia(r,t)},Lr=fu("!",!1),Cr=function(r){return r[0]+" "+r[2]},pr=fu(">=",!1),wr=fu(">",!1),Er=fu("<=",!1),hr=fu("<>",!1),Ar=fu("<",!1),yr=fu("!=",!1),Tr=fu("+",!1),mr=fu("-",!1),Sr=fu("*",!1),Ir=fu("/",!1),Nr=fu("%",!1),Rr=function(r){return r.parentheses=!0,r},_r=function(r){return !0===Aa[r.toUpperCase()]},gr=fu('"',!1),Or=/^[^"]/,Ur=vu(['"'],!0,!1),xr=function(r){return r.join("")},Mr=/^[^']/,Dr=vu(["'"],!0,!1),kr=fu("`",!1),$r=/^[^`]/,Fr=vu(["`"],!0,!1),Pr=function(r,t){return r+t.join("")},Hr=/^[A-Za-z_]/,Gr=vu([["A","Z"],["a","z"],"_"],!1,!1),jr=/^[A-Za-z0-9_]/,Yr=vu([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),Br=/^[A-Za-z0-9_:]/,Xr=vu([["A","Z"],["a","z"],["0","9"],"_",":"],!1,!1),Wr=fu(":",!1),Vr=function(r){return {type:"string",value:r[1].join("")}},Kr=fu("ON UPDATE CURRENT_TIMESTAMP",!0),qr=/^[^"\\\0-\x1F\x7F]/,Zr=vu(['"',"\\",["\0",""],""],!0,!1),zr=/^[^'\\]/,Jr=vu(["'","\\"],!0,!1),Qr=fu("\\'",!1),rt=fu('\\"',!1),tt=fu("\\\\",!1),et=fu("\\/",!1),nt=fu("\\b",!1),ut=fu("\\f",!1),ot=fu("\\n",!1),st=fu("\\r",!1),at=fu("\\t",!1),it=fu("\\u",!1),ct=fu("\\",!1),lt=/^[\n\r]/,ft=vu(["\n","\r"],!1,!1),vt=fu(".",!1),bt=/^[0-9]/,dt=vu([["0","9"]],!1,!1),Lt=/^[0-9a-fA-F]/,Ct=vu([["0","9"],["a","f"],["A","F"]],!1,!1),pt=/^[eE]/,wt=vu(["e","E"],!1,!1),Et=/^[+\-]/,ht=vu(["+","-"],!1,!1),At=fu("NULL",!0),yt=fu("NOT NULL",!0),Tt=fu("TRUE",!0),mt=fu("TO",!0),St=fu("FALSE",!0),It=(fu("DROP",!0)),Nt=fu("USE",!0),Rt=fu("ALTER",!0),_t=fu("SELECT",!0),gt=fu("UPDATE",!0),Ot=fu("CREATE",!0),Ut=fu("TEMPORARY",!0),xt=fu("IF NOT EXISTS",!0),Mt=fu("DELETE",!0),Dt=fu("INSERT",!0),kt=fu("RECURSIVE",!1),$t=fu("REPLACE",!0),Ft=fu("RENAME",!0),Pt=fu("IGNORE",!0),Ht=(fu("PARTITION",!0)),Gt=fu("INTO",!0),jt=fu("OVERWRITE",!0),Yt=fu("FROM",!0),Bt=fu("SET",!0),Xt=fu("UNLOCK",!0),Wt=fu("AS",!0),Vt=fu("TABLE",!0),Kt=fu("TABLES",!0),qt=fu("ON",!0),Zt=fu("LEFT",!0),zt=fu("RIGHT",!0),Jt=fu("FULL",!0),Qt=fu("INNER",!0),re=fu("JOIN",!0),te=fu("OUTER",!0),ee=fu("OVER",!0),ne=fu("UNION",!0),ue=fu("VALUES",!0),oe=fu("USING",!0),se=fu("WHERE",!0),ae=fu("GROUP",!0),ie=fu("BY",!0),ce=fu("ORDER",!0),le=fu("HAVING",!0),fe=fu("LIMIT",!0),ve=fu("OFFSET",!0),be=fu("ASC",!0),de=fu("DESC",!0),Le=fu("ALL",!0),Ce=fu("DISTINCT",!0),pe=fu("BETWEEN",!0),we=fu("IN",!0),Ee=fu("IS",!0),he=fu("LIKE",!0),Ae=fu("EXISTS",!0),ye=fu("NOT",!0),Te=fu("AND",!0),me=fu("OR",!0),Se=fu("COUNT",!0),Ie=fu("MAX",!0),Ne=fu("MIN",!0),Re=fu("SUM",!0),_e=fu("AVG",!0),ge=fu("CALL",!0),Oe=fu("CASE",!0),Ue=fu("WHEN",!0),xe=fu("THEN",!0),Me=fu("ELSE",!0),De=fu("END",!0),ke=fu("CAST",!0),$e=fu("CHAR",!0),Fe=fu("VARCHAR",!0),Pe=fu("NUMERIC",!0),He=fu("DECIMAL",!0),Ge=fu("SIGNED",!0),je=fu("UNSIGNED",!0),Ye=fu("INT",!0),Be=fu("ZEROFILL",!0),Xe=fu("INTEGER",!0),We=fu("JSON",!0),Ve=fu("SMALLINT",!0),Ke=fu("TINYINT",!0),qe=fu("TINYTEXT",!0),Ze=fu("TEXT",!0),ze=fu("MEDIUMTEXT",!0),Je=fu("LONGTEXT",!0),Qe=fu("BIGINT",!0),rn=fu("FLOAT",!0),tn=fu("DOUBLE",!0),en=fu("DATE",!0),nn=fu("DATETIME",!0),un=fu("TIME",!0),on=fu("TIMESTAMP",!0),sn=fu("TRUNCATE",!0),an=fu("USER",!0),cn=fu("CURRENT_DATE",!0),ln=(fu("INTERVAL",!0)),fn=fu("YEAR",!0),vn=fu("MONTH",!0),bn=fu("DAY",!0),dn=fu("HOUR",!0),Ln=fu("MINUTE",!0),Cn=fu("SECOND",!0),pn=fu("CURRENT_TIME",!0),wn=fu("CURRENT_TIMESTAMP",!0),En=fu("CURRENT_USER",!0),hn=fu("SESSION_USER",!0),An=fu("SYSTEM_USER",!0),yn=fu("GLOBAL",!0),Tn=fu("SESSION",!0),mn=fu("PERSIST",!0),Sn=fu("PERSIST_ONLY",!0),In=fu("@",!1),Nn=fu("@@",!1),Rn=fu("$",!1),_n=fu("return",!0),gn=fu(":=",!1),On=fu("DUAL",!0),Un=fu("ADD",!0),xn=fu("COLUMN",!0),Mn=fu("INDEX",!0),Dn=fu("FULLTEXT",!0),kn=fu("SPATIAL",!0),$n=fu("COMMENT",!0),Fn=fu("CONSTRAINT",!0),Pn=fu("REFERENCES",!0),Hn=fu("SQL_CALC_FOUND_ROWS",!0),Gn=fu("SQL_CACHE",!0),jn=fu("SQL_NO_CACHE",!0),Yn=fu("SQL_SMALL_RESULT",!0),Bn=fu("SQL_BIG_RESULT",!0),Xn=fu("SQL_BUFFER_RESULT",!0),Wn=fu(",",!1),Vn=fu("[",!1),Kn=fu("]",!1),qn=fu(";",!1),Zn=fu("||",!1),zn=fu("&&",!1),Jn=fu("/*",!1),Qn=fu("*/",!1),ru=fu("--",!1),tu=fu("#",!1),eu={type:"any"},nu=/^[ \t\n\r]/,uu=vu([" ","\t","\n","\r"],!1,!1),ou=function(r){return {dataType:r}},su=0,au=[{line:1,column:1}],iu=0,cu=[],lu=0;if("startRule"in t){if(!(t.startRule in s))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=s[t.startRule];}function fu(r,t){return {type:"literal",text:r,ignoreCase:t}}function vu(r,t,e){return {type:"class",parts:r,inverted:t,ignoreCase:e}}function bu(t){var e,n=au[t];if(n)return n;for(e=t-1;!au[e];)e--;for(n={line:(n=au[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return au[t]=n,n}function du(r,t){var e=bu(r),n=bu(t);return {start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function Lu(r){su<iu||(su>iu&&(iu=su,cu=[]),cu.push(r));}function Cu(r,t,e){return new u(u.buildMessage(r,t),r,t,e)}function pu(){var r,t;return r=su,ta()!==o?((t=function(){var r,t,e,n,u,s,a,i;if(r=su,(t=Eu())!==o){if(e=[],n=su,(u=ta())!==o&&(s=Qs())!==o&&(a=ta())!==o&&(i=Eu())!==o?n=u=[u,s,a,i]:(su=n,n=o),n!==o)for(;n!==o;)e.push(n),n=su,(u=ta())!==o&&(s=Qs())!==o&&(a=ta())!==o&&(i=Eu())!==o?n=u=[u,s,a,i]:(su=n,n=o);else e=o;e!==o?(t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return {tableList:Array.from(ga),columnList:Ra(Oa),ast:e}}(t,e),r=t):(su=r,r=o);}else su=r,r=o;return r}())===o&&(t=wu())===o&&(t=Eu()),t!==o?(r=t):(su=r,r=o)):(su=r,r=o),r}function wu(){var t;return (t=function(){var r,t,e,n;r=su,(t=Ko())!==o&&ta()!==o&&(e=us())!==o&&ta()!==o&&(n=Xu())!==o?(u=t,s=e,(a=n)&&a.forEach(r=>ga.add(`${u}::${r.db}::${r.table}`)),t={tableList:Array.from(ga),columnList:Ra(Oa),ast:{type:u.toLowerCase(),keyword:s.toLowerCase(),name:a}},r=t):(su=r,r=o);var u,s,a;return r}())===o&&(t=function(){var t,e,n,u,s,a,c,l,f,v;t=su,(e=qo())!==o&&ta()!==o?((n=Zo())===o&&(n=null),n!==o&&ta()!==o&&us()!==o&&ta()!==o?((u=zo())===o&&(u=null),u!==o&&ta()!==o&&(s=Xu())!==o&&ta()!==o&&(a=function(){var r,t,e,n,u,s,a,c,l;if(r=su,(t=zs())!==o)if(ta()!==o)if((e=Au())!==o){for(n=[],u=su,(s=ta())!==o&&(a=qs())!==o&&(c=ta())!==o&&(l=Au())!==o?u=s=[s,a,c,l]:(su=u,u=o);u!==o;)n.push(u),u=su,(s=ta())!==o&&(a=qs())!==o&&(c=ta())!==o&&(l=Au())!==o?u=s=[s,a,c,l]:(su=u,u=o);n!==o&&(u=ta())!==o&&(s=Js())!==o?(t=i(e,n),r=t):(su=r,r=o);}else su=r,r=o;else su=r,r=o;else su=r,r=o;return r}())!==o&&ta()!==o?((c=function(){var r,t,e,n,u,s,a,i;if(r=su,(t=_u())!==o){for(e=[],n=su,(u=ta())!==o?((s=qs())===o&&(s=null),s!==o&&(a=ta())!==o&&(i=_u())!==o?n=u=[u,s,a,i]:(su=n,n=o)):(su=n,n=o);n!==o;)e.push(n),n=su,(u=ta())!==o?((s=qs())===o&&(s=null),s!==o&&(a=ta())!==o&&(i=_u())!==o?n=u=[u,s,a,i]:(su=n,n=o)):(su=n,n=o);e!==o?(t=Sa(t,e),r=t):(su=r,r=o);}else su=r,r=o;return r}())===o&&(c=null),c!==o&&ta()!==o?((l=function(){var t,e,n,u;t=su,"ignore"===r.substr(su,6).toLowerCase()?(e=r.substr(su,6),su+=6):(e=o,0===lu&&Lu(Pt));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o);return t}())===o&&(l=Jo()),l===o&&(l=null),l!==o&&ta()!==o?((f=ns())===o&&(f=null),f!==o&&ta()!==o?((v=hu())===o&&(v=null),v!==o?(b=e,d=n,L=u,p=a,w=c,E=l,h=f,A=v,(C=s)&&C.forEach(r=>ga.add(`create::${r.db}::${r.table}`)),e={tableList:Array.from(ga),columnList:Ra(Oa),ast:{type:b[0].toLowerCase(),keyword:"table",temporary:d&&d[0].toLowerCase(),if_not_exists:L&&L[0].toLowerCase(),table:C,ignore_replace:E&&E[0].toLowerCase(),as:h&&h[0].toLowerCase(),query_expr:A&&A.ast,create_definitions:p,table_options:w}},t=e):(su=t,t=o)):(su=t,t=o)):(su=t,t=o)):(su=t,t=o)):(su=t,t=o)):(su=t,t=o)):(su=t,t=o);var b,d,L,C,p,w,E,h,A;t===o&&(t=su,(e=qo())!==o&&ta()!==o?((n=Zo())===o&&(n=null),n!==o&&ta()!==o&&us()!==o&&ta()!==o?((u=zo())===o&&(u=null),u!==o&&ta()!==o&&(s=Xu())!==o&&ta()!==o&&(a=function r(){var t,e;(t=function(){var r,t;r=su,ps()!==o&&ta()!==o&&(t=Xu())!==o?(r={type:"like",table:t}):(su=r,r=o);return r}())===o&&(t=su,zs()!==o&&ta()!==o&&(e=r())!==o&&ta()!==o&&Js()!==o?((n=e).parentheses=!0,t=n):(su=t,t=o));var n;return t}())!==o?(e=function(r,t,e,n,u){return n&&n.forEach(r=>ga.add(`create::${r.db}::${r.table}`)),{tableList:Array.from(ga),columnList:Ra(Oa),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t[0].toLowerCase(),if_not_exists:e&&e[0].toLowerCase(),table:n,like:u}}}(e,n,u,s,a),t=e):(su=t,t=o)):(su=t,t=o)):(su=t,t=o));return t}())===o&&(t=function(){var t,e,n,u;t=su,(e=function(){var t,e,n,u;t=su,"truncate"===r.substr(su,8).toLowerCase()?(e=r.substr(su,8),su+=8):(e=o,0===lu&&Lu(sn));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="TRUNCATE"):(su=t,t=o)):(su=t,t=o);return t}())!==o&&ta()!==o?((n=us())===o&&(n=null),n!==o&&ta()!==o&&(u=Xu())!==o?(s=e,a=n,(i=u)&&i.forEach(r=>ga.add(`${s}::${r.db}::${r.table}`)),e={tableList:Array.from(ga),columnList:Ra(Oa),ast:{type:s.toLowerCase(),keyword:a&&a.toLowerCase()||"table",name:i}},t=e):(su=t,t=o)):(su=t,t=o);var s,a,i;return t}())===o&&(t=function(){var r,t,e;r=su,(t=Qo())!==o&&ta()!==o&&us()!==o&&ta()!==o&&(e=function(){var r,t,e,n,u,s,a,c;if(r=su,(t=Gu())!==o){for(e=[],n=su,(u=ta())!==o&&(s=qs())!==o&&(a=ta())!==o&&(c=Gu())!==o?n=u=[u,s,a,c]:(su=n,n=o);n!==o;)e.push(n),n=su,(u=ta())!==o&&(s=qs())!==o&&(a=ta())!==o&&(c=Gu())!==o?n=u=[u,s,a,c]:(su=n,n=o);e!==o?(t=i(t,e),r=t):(su=r,r=o);}else su=r,r=o;return r}())!==o?((n=e).forEach(r=>r.forEach(r=>r.table&&ga.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(ga),columnList:Ra(Oa),ast:{type:"rename",table:n}},r=t):(su=r,r=o);var n;return r}())===o&&(t=function(){var t,e,n;t=su,(e=function(){var t,e,n,u;t=su,"call"===r.substr(su,4).toLowerCase()?(e=r.substr(su,4),su+=4):(e=o,0===lu&&Lu(ge));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="CALL"):(su=t,t=o)):(su=t,t=o);return t}())!==o&&ta()!==o&&(n=La())!==o?(u=n,e={tableList:Array.from(ga),columnList:Ra(Oa),ast:{type:"call",expr:u}},t=e):(su=t,t=o);var u;return t}())===o&&(t=function(){var t,e,n;t=su,(e=function(){var t,e,n,u;t=su,"use"===r.substr(su,3).toLowerCase()?(e=r.substr(su,3),su+=3):(e=o,0===lu&&Lu(Nt));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o);return t}())!==o&&ta()!==o&&(n=mo())!==o?(u=n,ga.add(`use::${u}::null`),e={tableList:Array.from(ga),columnList:Ra(Oa),ast:{type:"use",db:u}},t=e):(su=t,t=o);var u;return t}())===o&&(t=function(){var t,e,n,u;t=su,(e=function(){var t,e,n,u;t=su,"alter"===r.substr(su,5).toLowerCase()?(e=r.substr(su,5),su+=5):(e=o,0===lu&&Lu(Rt));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o);return t}())!==o&&ta()!==o&&us()!==o&&ta()!==o&&(n=Xu())!==o&&ta()!==o&&(u=function(){var r,t,e,n,u,s,a,c;if(r=su,(t=Tu())!==o){for(e=[],n=su,(u=ta())!==o&&(s=qs())!==o&&(a=ta())!==o&&(c=Tu())!==o?n=u=[u,s,a,c]:(su=n,n=o);n!==o;)e.push(n),n=su,(u=ta())!==o&&(s=qs())!==o&&(a=ta())!==o&&(c=Tu())!==o?n=u=[u,s,a,c]:(su=n,n=o);e!==o?(t=i(t,e),r=t):(su=r,r=o);}else su=r,r=o;return r}())!==o?(a=u,(s=n)&&s.length>0&&s.forEach(r=>ga.add(`alter::${r.db}::${r.table}`)),e={tableList:Array.from(ga),columnList:Ra(Oa),ast:{type:"alter",table:s,expr:a}},t=e):(su=t,t=o);var s,a;return t}())===o&&(t=function(){var t,e,n,u;t=su,(e=es())!==o&&ta()!==o?((n=function(){var t,e,n,u;t=su,"global"===r.substr(su,6).toLowerCase()?(e=r.substr(su,6),su+=6):(e=o,0===lu&&Lu(yn));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="GLOBAL"):(su=t,t=o)):(su=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=su,"session"===r.substr(su,7).toLowerCase()?(e=r.substr(su,7),su+=7):(e=o,0===lu&&Lu(Tn));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="SESSION"):(su=t,t=o)):(su=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=su,"local"===r.substr(su,5).toLowerCase()?(e=r.substr(su,5),su+=5):(e=o,0===lu&&Lu(tr));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="LOCAL"):(su=t,t=o)):(su=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=su,"persist"===r.substr(su,7).toLowerCase()?(e=r.substr(su,7),su+=7):(e=o,0===lu&&Lu(mn));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="PERSIST"):(su=t,t=o)):(su=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=su,"persist_only"===r.substr(su,12).toLowerCase()?(e=r.substr(su,12),su+=12):(e=o,0===lu&&Lu(Sn));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="PERSIST_ONLY"):(su=t,t=o)):(su=t,t=o);return t}()),n===o&&(n=null),n!==o&&ta()!==o&&(u=ca())!==o?(s=n,(a=u).keyword=s,e={tableList:Array.from(ga),columnList:Ra(Oa),ast:{type:"set",expr:a}},t=e):(su=t,t=o)):(su=t,t=o);var s,a;return t}())===o&&(t=function(){var t,e,n;t=su,(e=function(){var t,e,n,u;t=su,"lock"===r.substr(su,4).toLowerCase()?(e=r.substr(su,4),su+=4):(e=o,0===lu&&Lu(m));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o);return t}())!==o&&ta()!==o&&os()!==o&&ta()!==o&&(n=function(){var r,t,e,n,u,s,a,i;if(r=su,(t=gu())!==o){for(e=[],n=su,(u=ta())!==o&&(s=qs())!==o&&(a=ta())!==o&&(i=gu())!==o?n=u=[u,s,a,i]:(su=n,n=o);n!==o;)e.push(n),n=su,(u=ta())!==o&&(s=qs())!==o&&(a=ta())!==o&&(i=gu())!==o?n=u=[u,s,a,i]:(su=n,n=o);e!==o?(t=Sa(t,e),r=t):(su=r,r=o);}else su=r,r=o;return r}())!==o?(u=n,e={tableList:Array.from(ga),columnList:Ra(Oa),ast:{type:"lock",keyword:"tables",tables:u}},t=e):(su=t,t=o);var u;return t}())===o&&(t=function(){var t,e;t=su,(e=function(){var t,e,n,u;t=su,"unlock"===r.substr(su,6).toLowerCase()?(e=r.substr(su,6),su+=6):(e=o,0===lu&&Lu(Xt));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o);return t}())!==o&&ta()!==o&&os()!==o?(e={tableList:Array.from(ga),columnList:Ra(Oa),ast:{type:"unlock",keyword:"tables"}},t=e):(su=t,t=o);return t}()),t}function Eu(){var t;return (t=hu())===o&&(t=function(){var t,e,n,u,s;t=su,(e=function(){var t,e,n,u;t=su,"update"===r.substr(su,6).toLowerCase()?(e=r.substr(su,6),su+=6):(e=o,0===lu&&Lu(gt));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o);return t}())!==o&&ta()!==o&&(n=Xu())!==o&&ta()!==o&&es()!==o&&ta()!==o&&(u=function(){var r,t,e,n,u,s,a,c;if(r=su,(t=eo())!==o){for(e=[],n=su,(u=ta())!==o&&(s=qs())!==o&&(a=ta())!==o&&(c=eo())!==o?n=u=[u,s,a,c]:(su=n,n=o);n!==o;)e.push(n),n=su,(u=ta())!==o&&(s=qs())!==o&&(a=ta())!==o&&(c=eo())!==o?n=u=[u,s,a,c]:(su=n,n=o);e!==o?(t=i(t,e),r=t):(su=r,r=o);}else su=r,r=o;return r}())!==o&&ta()!==o?((s=zu())===o&&(s=null),s!==o?(c=u,l=s,(a=n)&&a.forEach(r=>{const{db:t,as:e,table:n}=r;ga.add(`update::${t}::${n}`);}),c&&c.forEach(r=>Oa.add(`update::${r.table}::${r.column}`)),e={tableList:Array.from(ga),columnList:Ra(Oa),ast:{type:"update",table:a,set:c,where:l}},t=e):(su=t,t=o)):(su=t,t=o);var a,c,l;return t}())===o&&(t=function(){var r,t,e,n,u,s,a,c;r=su,(t=oo())!==o&&ta()!==o&&(e=ts())!==o&&ta()!==o?((n=us())===o&&(n=null),n!==o&&ta()!==o&&(u=qu())!==o?((s=uo())===o&&(s=null),s!==o&&ta()!==o&&zs()!==o&&ta()!==o&&(a=function(){var r,t,e,n,u,s,a,c;if(r=su,(t=Io())!==o){for(e=[],n=su,(u=ta())!==o&&(s=qs())!==o&&(a=ta())!==o&&(c=Io())!==o?n=u=[u,s,a,c]:(su=n,n=o);n!==o;)e.push(n),n=su,(u=ta())!==o&&(s=qs())!==o&&(a=ta())!==o&&(c=Io())!==o?n=u=[u,s,a,c]:(su=n,n=o);e!==o?(t=i(t,e),r=t):(su=r,r=o);}else su=r,r=o;return r}())!==o&&ta()!==o&&Js()!==o&&ta()!==o&&(c=no())!==o?(t=function(r,t,e,n,u,o,s){if(n&&(ga.add(`insert::${n.db}::${n.table}`),n.as=null),o){let r=n&&n.table||null;o.forEach(t=>Oa.add(`insert::${r}::${t}`));}const a=e?" "+e.toLowerCase():"";return {tableList:Array.from(ga),columnList:Ra(Oa),ast:{type:r,prefix:`${t.toLowerCase()}${a}`,table:[n],columns:o,values:s,partition:u}}}(t,e,n,u,s,a,c),r=t):(su=r,r=o)):(su=r,r=o)):(su=r,r=o);return r}())===o&&(t=function(){var t,e,n,u,s,a,i;t=su,(e=oo())!==o&&ta()!==o?((n=ts())===o&&(n=function(){var t,e,n,u;t=su,"overwrite"===r.substr(su,9).toLowerCase()?(e=r.substr(su,9),su+=9):(e=o,0===lu&&Lu(jt));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="OVERWRITE"):(su=t,t=o)):(su=t,t=o);return t}()),n!==o&&ta()!==o?((u=us())===o&&(u=null),u!==o&&ta()!==o&&(s=qu())!==o&&ta()!==o?((a=uo())===o&&(a=null),a!==o&&ta()!==o&&(i=no())!==o?(e=function(r,t,e,n,u,o){n&&(ga.add(`insert::${n.db}::${n.table}`),Oa.add(`insert::${n.table}::(.*)`),n.as=null);const s=e?" "+e.toLowerCase():"";return {tableList:Array.from(ga),columnList:Ra(Oa),ast:{type:r,prefix:`${t.toLowerCase()}${s}`,table:[n],columns:null,values:o,partition:u}}}(e,n,u,s,a,i),t=e):(su=t,t=o)):(su=t,t=o)):(su=t,t=o)):(su=t,t=o);return t}())===o&&(t=function(){var t,e,n,u,s;t=su,(e=function(){var t,e,n,u;t=su,"delete"===r.substr(su,6).toLowerCase()?(e=r.substr(su,6),su+=6):(e=o,0===lu&&Lu(Mt));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o);return t}())!==o&&ta()!==o?((n=Xu())===o&&(n=null),n!==o&&ta()!==o&&(u=Hu())!==o&&ta()!==o?((s=zu())===o&&(s=null),s!==o?(e=function(r,t,e){if(t&&t.forEach(r=>{r.table&&ga.add(`delete::${r.db}::${r.table}`),Oa.add(`delete::${r.table}::(.*)`);}),null===r&&1===t.length){const e=t[0];r=[{db:e.db,table:e.table,as:e.as,addition:!0}];}return {tableList:Array.from(ga),columnList:Ra(Oa),ast:{type:"delete",table:r,from:t,where:e}}}(n,u,s),t=e):(su=t,t=o)):(su=t,t=o)):(su=t,t=o);return t}())===o&&(t=wu())===o&&(t=function(){var r,t;r=[],t=ia();for(;t!==o;)r.push(t),t=ia();return r}()),t}function hu(){var r,t,e,n,u,s,a,i,c,l;if(r=su,(t=Ou())!==o){for(e=[],n=su,(u=ta())!==o&&(s=is())!==o&&(a=ta())!==o?((i=vs())===o&&(i=null),i!==o&&(c=ta())!==o&&(l=Ou())!==o?n=u=[u,s,a,i,c,l]:(su=n,n=o)):(su=n,n=o);n!==o;)e.push(n),n=su,(u=ta())!==o&&(s=is())!==o&&(a=ta())!==o?((i=vs())===o&&(i=null),i!==o&&(c=ta())!==o&&(l=Ou())!==o?n=u=[u,s,a,i,c,l]:(su=n,n=o)):(su=n,n=o);e!==o&&(n=ta())!==o?((u=Ju())===o&&(u=null),u!==o&&(s=ta())!==o?((a=to())===o&&(a=null),a!==o?(r=t=function(r,t,e,n){t.forEach(r=>r.slice(1,1));let u=r;for(let r=0;r<t.length;r++)u._next=t[r][5],u.union=t[r][3]?"union all":"union",u=u._next;return e&&(r._orderby=e),n&&(r._limit=n),{tableList:Array.from(ga),columnList:Ra(Oa),ast:r}}(t,e,u,a)):(su=r,r=o)):(su=r,r=o)):(su=r,r=o);}else su=r,r=o;return r}function Au(){var t;return (t=yu())===o&&(t=mu())===o&&(t=Su())===o&&(t=function(){var t;(t=function(){var t,e,n,u,s,a;t=su,(e=Iu())===o&&(e=null);e!==o&&ta()!==o?("primary key"===r.substr(su,11).toLowerCase()?(n=r.substr(su,11),su+=11):(n=o,0===lu&&Lu(R)),n!==o&&ta()!==o?((u=ju())===o&&(u=null),u!==o&&ta()!==o&&(s=Mu())!==o&&ta()!==o?((a=Yu())===o&&(a=null),a!==o?(c=n,l=u,f=s,v=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c.toLowerCase(),keyword:i&&i.keyword,index_type:l,resource:"constraint",index_options:v},t=e):(su=t,t=o)):(su=t,t=o)):(su=t,t=o)):(su=t,t=o);var i,c,l,f,v;return t}())===o&&(t=function(){var t,e,n,u,s,a,i,c;t=su,(e=Iu())===o&&(e=null);e!==o&&ta()!==o&&(n=function(){var t,e,n,u;t=su,"unique"===r.substr(su,6).toLowerCase()?(e=r.substr(su,6),su+=6):(e=o,0===lu&&Lu(l));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="UNIQUE"):(su=t,t=o)):(su=t,t=o);return t}())!==o&&ta()!==o?((u=Xs())===o&&(u=Ws()),u===o&&(u=null),u!==o&&ta()!==o?((s=Io())===o&&(s=null),s!==o&&ta()!==o?((a=ju())===o&&(a=null),a!==o&&ta()!==o&&(i=Mu())!==o&&ta()!==o?((c=Yu())===o&&(c=null),c!==o?(v=n,b=u,d=s,L=a,C=i,p=c,e={constraint:(f=e)&&f.constraint,definition:C,constraint_type:b&&`${v.toLowerCase()} ${b.toLowerCase()}`||v.toLowerCase(),keyword:f&&f.keyword,index_type:L,index:d,resource:"constraint",index_options:p},t=e):(su=t,t=o)):(su=t,t=o)):(su=t,t=o)):(su=t,t=o)):(su=t,t=o);var f,v,b,d,L,C,p;return t}())===o&&(t=function(){var t,e,n,u,s,a;t=su,(e=Iu())===o&&(e=null);e!==o&&ta()!==o?("foreign key"===r.substr(su,11).toLowerCase()?(n=r.substr(su,11),su+=11):(n=o,0===lu&&Lu(_)),n!==o&&ta()!==o?((u=Io())===o&&(u=null),u!==o&&ta()!==o&&(s=Mu())!==o&&ta()!==o?((a=Nu())===o&&(a=null),a!==o?(c=n,l=u,f=s,v=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c,keyword:i&&i.keyword,index:l,resource:"constraint",reference_definition:v},t=e):(su=t,t=o)):(su=t,t=o)):(su=t,t=o)):(su=t,t=o);var i,c,l,f,v;return t}());return t}()),t}function yu(){var t,e,n,u,s,a,i,h,A,y,T,m,S,I,N,R,_,g,O,U,x,M,D,k,$;return t=su,(e=To())!==o&&ta()!==o&&(n=Ea())!==o&&ta()!==o?((u=function(){var t,e;t=su,(e=function(){var t,e,n,u;t=su,"not null"===r.substr(su,8).toLowerCase()?(e=r.substr(su,8),su+=8):(e=o,0===lu&&Lu(yt));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o);return t}())!==o&&(e={type:"not null",value:"not null"});return t=e}())===o&&(u=Mo()),u===o&&(u=null),u!==o&&ta()!==o?((s=function(){var r,t;r=su,Wo()!==o&&ta()!==o?((t=xo())===o&&(t=fo()),t!==o?(r={type:"default",value:t}):(su=r,r=o)):(su=r,r=o);return r}())===o&&(s=null),s!==o&&ta()!==o?("auto_increment"===r.substr(su,14).toLowerCase()?(a=r.substr(su,14),su+=14):(a=o,0===lu&&Lu(c)),a===o&&(a=null),a!==o&&ta()!==o?(i=su,"unique"===r.substr(su,6).toLowerCase()?(h=r.substr(su,6),su+=6):(h=o,0===lu&&Lu(l)),h===o&&("primary"===r.substr(su,7).toLowerCase()?(h=r.substr(su,7),su+=7):(h=o,0===lu&&Lu(f))),h===o&&(h=null),h!==o&&(A=ta())!==o?("key"===r.substr(su,3).toLowerCase()?(y=r.substr(su,3),su+=3):(y=o,0===lu&&Lu(v)),y!==o?i=h=[h,A,y]:(su=i,i=o)):(su=i,i=o),i===o&&(i=null),i!==o&&(h=ta())!==o?((A=ua())===o&&(A=null),A!==o&&(y=ta())!==o?((T=function(){var t,e;t=su,function(){var t,e,n,u;t=su,"collate"===r.substr(su,7).toLowerCase()?(e=r.substr(su,7),su+=7):(e=o,0===lu&&Lu(V));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="COLLATE"):(su=t,t=o)):(su=t,t=o);return t}()!==o&&ta()!==o&&(e=No())!==o?(t={type:"collate",value:e}):(su=t,t=o);return t}())===o&&(T=null),T!==o&&ta()!==o?((m=function(){var t,e,n;t=su,"column_format"===r.substr(su,13).toLowerCase()?(e=r.substr(su,13),su+=13):(e=o,0===lu&&Lu(b));e!==o&&ta()!==o?("fixed"===r.substr(su,5).toLowerCase()?(n=r.substr(su,5),su+=5):(n=o,0===lu&&Lu(d)),n===o&&("dynamic"===r.substr(su,7).toLowerCase()?(n=r.substr(su,7),su+=7):(n=o,0===lu&&Lu(L)),n===o&&("default"===r.substr(su,7).toLowerCase()?(n=r.substr(su,7),su+=7):(n=o,0===lu&&Lu(C)))),n!==o?(e=function(r,t){return {type:"column_format",value:t.toLowerCase()}}(0,n),t=e):(su=t,t=o)):(su=t,t=o);return t}())===o&&(m=null),m!==o&&ta()!==o?((S=function(){var t,e,n;t=su,"storage"===r.substr(su,7).toLowerCase()?(e=r.substr(su,7),su+=7):(e=o,0===lu&&Lu(p));e!==o&&ta()!==o?("disk"===r.substr(su,4).toLowerCase()?(n=r.substr(su,4),su+=4):(n=o,0===lu&&Lu(w)),n===o&&("memory"===r.substr(su,6).toLowerCase()?(n=r.substr(su,6),su+=6):(n=o,0===lu&&Lu(E))),n!==o?(e={type:"storage",value:n.toLowerCase()},t=e):(su=t,t=o)):(su=t,t=o);return t}())===o&&(S=null),S!==o&&ta()!==o?((I=Nu())===o&&(I=null),I!==o?(N=e,R=n,_=u,g=s,O=a,U=i,x=A,M=T,D=m,k=S,$=I,Oa.add(`create::${N.table}::${N.column}`),_&&!_.value&&(_.value="null"),t=e={column:N,definition:R,nullable:_,default_val:g,auto_increment:O&&O.toLowerCase(),unique_or_primary:U&&`${U[0].toLowerCase()} ${U[2].toLowerCase()}`,comment:x,collate:M,column_format:D,storage:k,reference_definition:$,resource:"column"}):(su=t,t=o)):(su=t,t=o)):(su=t,t=o)):(su=t,t=o)):(su=t,t=o)):(su=t,t=o)):(su=t,t=o)):(su=t,t=o)):(su=t,t=o)):(su=t,t=o),t}function Tu(){var t;return (t=function(){var r,t,e,n;r=su,(t=Ys())!==o&&ta()!==o?((e=Bs())===o&&(e=null),e!==o&&ta()!==o&&(n=yu())!==o?(u=e,s=n,t={action:"add",...s,keyword:u,resource:"column",type:"alter"},r=t):(su=r,r=o)):(su=r,r=o);var u,s;return r}())===o&&(t=function(){var r,t,e;r=su,Ko()!==o&&ta()!==o?((t=Bs())===o&&(t=null),t!==o&&ta()!==o&&(e=To())!==o?(r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(su=r,r=o)):(su=r,r=o);return r}())===o&&(t=function(){var r,t,e;r=su,(t=Ys())!==o&&ta()!==o&&(e=mu())!==o?(n=e,t={action:"add",type:"alter",...n},r=t):(su=r,r=o);var n;return r}())===o&&(t=function(){var r,t,e;r=su,(t=Ys())!==o&&ta()!==o&&(e=Su())!==o?(n=e,t={action:"add",type:"alter",...n},r=t):(su=r,r=o);var n;return r}())===o&&(t=function(){var r,t,e,n;r=su,(t=Qo())!==o&&ta()!==o?((e=Vo())===o&&(e=ns()),e===o&&(e=null),e!==o&&ta()!==o&&(n=mo())!==o?(s=n,t={action:"rename",type:"alter",resource:"table",keyword:(u=e)&&u[0].toLowerCase(),table:s},r=t):(su=r,r=o)):(su=r,r=o);var u,s;return r}())===o&&(t=function(){var t,e,n;t=su,"algorithm"===r.substr(su,9).toLowerCase()?(e=r.substr(su,9),su+=9):(e=o,0===lu&&Lu(h));e!==o&&ta()!==o&&js()!==o&&ta()!==o?("default"===r.substr(su,7).toLowerCase()?(n=r.substr(su,7),su+=7):(n=o,0===lu&&Lu(C)),n===o&&("instant"===r.substr(su,7).toLowerCase()?(n=r.substr(su,7),su+=7):(n=o,0===lu&&Lu(A)),n===o&&("inplace"===r.substr(su,7).toLowerCase()?(n=r.substr(su,7),su+=7):(n=o,0===lu&&Lu(y)),n===o&&("copy"===r.substr(su,4).toLowerCase()?(n=r.substr(su,4),su+=4):(n=o,0===lu&&Lu(T))))),n!==o?(t=e={type:"alter",keyword:"algorithm",resource:"algorithm",algorithm:n}):(su=t,t=o)):(su=t,t=o);return t}())===o&&(t=function(){var t,e,n;t=su,"lock"===r.substr(su,4).toLowerCase()?(e=r.substr(su,4),su+=4):(e=o,0===lu&&Lu(m));e!==o&&ta()!==o&&js()!==o&&ta()!==o?("default"===r.substr(su,7).toLowerCase()?(n=r.substr(su,7),su+=7):(n=o,0===lu&&Lu(C)),n===o&&("none"===r.substr(su,4).toLowerCase()?(n=r.substr(su,4),su+=4):(n=o,0===lu&&Lu(S)),n===o&&("shared"===r.substr(su,6).toLowerCase()?(n=r.substr(su,6),su+=6):(n=o,0===lu&&Lu(I)),n===o&&("exclusive"===r.substr(su,9).toLowerCase()?(n=r.substr(su,9),su+=9):(n=o,0===lu&&Lu(N))))),n!==o?(t=e={type:"alter",keyword:"lock",resource:"lock",lock:n}):(su=t,t=o)):(su=t,t=o);return t}()),t}function mu(){var r,t,e,n,u,s,a,i;return r=su,(t=Xs())===o&&(t=Ws()),t!==o&&ta()!==o?((e=Io())===o&&(e=null),e!==o&&ta()!==o?((n=ju())===o&&(n=null),n!==o&&ta()!==o&&(u=Mu())!==o&&ta()!==o?((s=Yu())===o&&(s=null),s!==o&&ta()!==o?(a=n,i=s,r=t={index:e,definition:u,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i}):(su=r,r=o)):(su=r,r=o)):(su=r,r=o)):(su=r,r=o),r}function Su(){var t,e,n,u,s,a,i,c,l;return t=su,(e=function(){var t,e,n,u;t=su,"fulltext"===r.substr(su,8).toLowerCase()?(e=r.substr(su,8),su+=8):(e=o,0===lu&&Lu(Dn));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="FULLTEXT"):(su=t,t=o)):(su=t,t=o);return t}())===o&&(e=function(){var t,e,n,u;t=su,"spatial"===r.substr(su,7).toLowerCase()?(e=r.substr(su,7),su+=7):(e=o,0===lu&&Lu(kn));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="SPATIAL"):(su=t,t=o)):(su=t,t=o);return t}()),e!==o&&ta()!==o?((n=Xs())===o&&(n=Ws()),n===o&&(n=null),n!==o&&ta()!==o?((u=Io())===o&&(u=null),u!==o&&ta()!==o&&(s=Mu())!==o&&ta()!==o?((a=Yu())===o&&(a=null),a!==o&&ta()!==o?(i=e,l=a,t=e={index:u,definition:s,keyword:(c=n)&&`${i.toLowerCase()} ${c.toLowerCase()}`||i.toLowerCase(),index_options:l,resource:"index"}):(su=t,t=o)):(su=t,t=o)):(su=t,t=o)):(su=t,t=o),t}function Iu(){var t,e,n,u;return t=su,(e=function(){var t,e,n,u;t=su,"constraint"===r.substr(su,10).toLowerCase()?(e=r.substr(su,10),su+=10):(e=o,0===lu&&Lu(Fn));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="CONSTRAINT"):(su=t,t=o)):(su=t,t=o);return t}())!==o&&ta()!==o?((n=mo())===o&&(n=null),n!==o?(u=n,t=e={keyword:e.toLowerCase(),constraint:u}):(su=t,t=o)):(su=t,t=o),t}function Nu(){var t,e,n,u,s,a,i,c,l,f;return t=su,(e=function(){var t,e,n,u;t=su,"references"===r.substr(su,10).toLowerCase()?(e=r.substr(su,10),su+=10):(e=o,0===lu&&Lu(Pn));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="REFERENCES"):(su=t,t=o)):(su=t,t=o);return t}())!==o&&ta()!==o&&(n=Xu())!==o&&ta()!==o&&(u=Mu())!==o&&ta()!==o?("match full"===r.substr(su,10).toLowerCase()?(s=r.substr(su,10),su+=10):(s=o,0===lu&&Lu(g)),s===o&&("match partial"===r.substr(su,13).toLowerCase()?(s=r.substr(su,13),su+=13):(s=o,0===lu&&Lu(O)),s===o&&("match simple"===r.substr(su,12).toLowerCase()?(s=r.substr(su,12),su+=12):(s=o,0===lu&&Lu(U)))),s===o&&(s=null),s!==o&&ta()!==o?((a=Ru())===o&&(a=null),a!==o&&ta()!==o?((i=Ru())===o&&(i=null),i!==o?(c=s,l=a,f=i,t=e={definition:u,table:n,keyword:e.toLowerCase(),match:c&&c.toLowerCase(),on_delete:l,on_update:f}):(su=t,t=o)):(su=t,t=o)):(su=t,t=o)):(su=t,t=o),t}function Ru(){var t,e,n,u;return t=su,"on delete"===r.substr(su,9).toLowerCase()?(e=r.substr(su,9),su+=9):(e=o,0===lu&&Lu(x)),e===o&&("on update"===r.substr(su,9).toLowerCase()?(e=r.substr(su,9),su+=9):(e=o,0===lu&&Lu(M))),e!==o&&ta()!==o&&(n=function(){var t,e;t=su,"restrict"===r.substr(su,8).toLowerCase()?(e=r.substr(su,8),su+=8):(e=o,0===lu&&Lu(D));e===o&&("cascade"===r.substr(su,7).toLowerCase()?(e=r.substr(su,7),su+=7):(e=o,0===lu&&Lu(k)),e===o&&("set null"===r.substr(su,8).toLowerCase()?(e=r.substr(su,8),su+=8):(e=o,0===lu&&Lu($)),e===o&&("no action"===r.substr(su,9).toLowerCase()?(e=r.substr(su,9),su+=9):(e=o,0===lu&&Lu(F)),e===o&&("set default"===r.substr(su,11).toLowerCase()?(e=r.substr(su,11),su+=11):(e=o,0===lu&&Lu(P))))));e!==o&&(e=e.toLowerCase());return t=e}())!==o?(u=n,t=e={type:e.toLowerCase(),value:u}):(su=t,t=o),t}function _u(){var t,e,n,u,s,a,i,l,f;return t=su,"auto_increment"===r.substr(su,14).toLowerCase()?(e=r.substr(su,14),su+=14):(e=o,0===lu&&Lu(c)),e===o&&("avg_row_length"===r.substr(su,14).toLowerCase()?(e=r.substr(su,14),su+=14):(e=o,0===lu&&Lu(H)),e===o&&("key_block_size"===r.substr(su,14).toLowerCase()?(e=r.substr(su,14),su+=14):(e=o,0===lu&&Lu(G)),e===o&&("max_rows"===r.substr(su,8).toLowerCase()?(e=r.substr(su,8),su+=8):(e=o,0===lu&&Lu(j)),e===o&&("min_rows"===r.substr(su,8).toLowerCase()?(e=r.substr(su,8),su+=8):(e=o,0===lu&&Lu(Y)),e===o&&("stats_sample_pages"===r.substr(su,18).toLowerCase()?(e=r.substr(su,18),su+=18):(e=o,0===lu&&Lu(B))))))),e!==o&&ta()!==o?((n=js())===o&&(n=null),n!==o&&ta()!==o&&(u=Po())!==o?(l=n,f=u,t=e={keyword:e.toLowerCase(),symbol:l,value:f.value}):(su=t,t=o)):(su=t,t=o),t===o&&(t=su,(e=Wo())===o&&(e=null),e!==o&&ta()!==o?("character set"===r.substr(su,13).toLowerCase()?(n=r.substr(su,13),su+=13):(n=o,0===lu&&Lu(X)),n===o&&("charset"===r.substr(su,7).toLowerCase()?(n=r.substr(su,7),su+=7):(n=o,0===lu&&Lu(W)),n===o&&("collate"===r.substr(su,7).toLowerCase()?(n=r.substr(su,7),su+=7):(n=o,0===lu&&Lu(V)))),n!==o&&ta()!==o?((u=js())===o&&(u=null),u!==o&&(s=ta())!==o&&(a=No())!==o?(t=e=function(r,t,e,n){return {keyword:r&&`${r[0].toLowerCase()} ${t.toLowerCase()}`||t.toLowerCase(),symbol:e,value:n}}(e,n,u,a)):(su=t,t=o)):(su=t,t=o)):(su=t,t=o),t===o&&(t=su,(e=Vs())===o&&("connection"===r.substr(su,10).toLowerCase()?(e=r.substr(su,10),su+=10):(e=o,0===lu&&Lu(K))),e!==o&&ta()!==o?((n=js())===o&&(n=null),n!==o&&ta()!==o&&(u=Do())!==o?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,u)):(su=t,t=o)):(su=t,t=o),t===o&&(t=su,"compression"===r.substr(su,11).toLowerCase()?(e=r.substr(su,11),su+=11):(e=o,0===lu&&Lu(q)),e!==o&&ta()!==o?((n=js())===o&&(n=null),n!==o&&ta()!==o?(u=su,39===r.charCodeAt(su)?(s="'",su++):(s=o,0===lu&&Lu(Z)),s!==o?("zlib"===r.substr(su,4).toLowerCase()?(a=r.substr(su,4),su+=4):(a=o,0===lu&&Lu(z)),a===o&&("lz4"===r.substr(su,3).toLowerCase()?(a=r.substr(su,3),su+=3):(a=o,0===lu&&Lu(J)),a===o&&("none"===r.substr(su,4).toLowerCase()?(a=r.substr(su,4),su+=4):(a=o,0===lu&&Lu(S)))),a!==o?(39===r.charCodeAt(su)?(i="'",su++):(i=o,0===lu&&Lu(Z)),i!==o?u=s=[s,a,i]:(su=u,u=o)):(su=u,u=o)):(su=u,u=o),u!==o?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,u)):(su=t,t=o)):(su=t,t=o)):(su=t,t=o),t===o&&(t=su,"engine"===r.substr(su,6).toLowerCase()?(e=r.substr(su,6),su+=6):(e=o,0===lu&&Lu(Q)),e!==o&&ta()!==o?((n=js())===o&&(n=null),n!==o&&ta()!==o&&(u=No())!==o?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}}(e,n,u)):(su=t,t=o)):(su=t,t=o))))),t}function gu(){var t,e,n,u,s;return t=su,(e=Vu())!==o&&ta()!==o&&(n=function(){var t,e,n;return t=su,"read"===r.substr(su,4).toLowerCase()?(e=r.substr(su,4),su+=4):(e=o,0===lu&&Lu(rr)),e!==o&&ta()!==o?("local"===r.substr(su,5).toLowerCase()?(n=r.substr(su,5),su+=5):(n=o,0===lu&&Lu(tr)),n===o&&(n=null),n!==o?(t=e={type:"read",suffix:n&&"local"}):(su=t,t=o)):(su=t,t=o),t===o&&(t=su,"low_priority"===r.substr(su,12).toLowerCase()?(e=r.substr(su,12),su+=12):(e=o,0===lu&&Lu(er)),e===o&&(e=null),e!==o&&ta()!==o?("write"===r.substr(su,5).toLowerCase()?(n=r.substr(su,5),su+=5):(n=o,0===lu&&Lu(nr)),n!==o?(t=e={type:"write",prefix:e&&"low_priority"}):(su=t,t=o)):(su=t,t=o)),t}())!==o?(u=e,s=n,ga.add(`lock::${u.db}::${u.table}`),t=e={table:u,lock_type:s}):(su=t,t=o),t}function Ou(){var t,e,n,u,s,a,i;return (t=Du())===o&&(t=su,e=su,40===r.charCodeAt(su)?(n="(",su++):(n=o,0===lu&&Lu(ur)),n!==o&&(u=ta())!==o&&(s=Ou())!==o&&(a=ta())!==o?(41===r.charCodeAt(su)?(i=")",su++):(i=o,0===lu&&Lu(or)),i!==o?e=n=[n,u,s,a,i]:(su=e,e=o)):(su=e,e=o),e!==o&&(e={...e[2],parentheses_symbol:!0}),t=e),t}function Uu(){var t,e,n,u,s,a,c,l,f;if(t=su,ls()!==o)if(ta()!==o)if((e=xu())!==o){for(n=[],u=su,(s=ta())!==o&&(a=qs())!==o&&(c=ta())!==o&&(l=xu())!==o?u=s=[s,a,c,l]:(su=u,u=o);u!==o;)n.push(u),u=su,(s=ta())!==o&&(a=qs())!==o&&(c=ta())!==o&&(l=xu())!==o?u=s=[s,a,c,l]:(su=u,u=o);n!==o?(t=i(e,n)):(su=t,t=o);}else su=t,t=o;else su=t,t=o;else su=t,t=o;return t===o&&(t=su,ta()!==o&&ls()!==o&&(e=ta())!==o&&(n=function(){var t,e,n,u;t=su,"RECURSIVE"===r.substr(su,9)?(e="RECURSIVE",su+=9):(e=o,0===lu&&Lu(kt));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o);return t}())!==o&&(u=ta())!==o&&(s=xu())!==o?((f=s).recursive=!0,t=[f]):(su=t,t=o)),t}function xu(){var r,t,e,n;return r=su,(t=No())!==o&&ta()!==o?((e=Mu())===o&&(e=null),e!==o&&ta()!==o&&ns()!==o&&ta()!==o&&zs()!==o&&ta()!==o&&(n=hu())!==o&&ta()!==o&&Js()!==o?(r=t={name:t,stmt:n,columns:e}):(su=r,r=o)):(su=r,r=o),r}function Mu(){var r,t,e,n,u,s,a,c;if(r=su,zs()!==o)if(ta()!==o)if((t=Io())!==o){for(e=[],n=su,(u=ta())!==o&&(s=qs())!==o&&(a=ta())!==o&&(c=Io())!==o?n=u=[u,s,a,c]:(su=n,n=o);n!==o;)e.push(n),n=su,(u=ta())!==o&&(s=qs())!==o&&(a=ta())!==o&&(c=Io())!==o?n=u=[u,s,a,c]:(su=n,n=o);e!==o&&(n=ta())!==o&&(u=Js())!==o?(r=i(t,e)):(su=r,r=o);}else su=r,r=o;else su=r,r=o;else su=r,r=o;return r}function Du(){var t,e,n,u,s,a,i,c,l,f,v;return t=su,ta()!==o?((e=Uu())===o&&(e=null),e!==o&&ta()!==o&&function(){var t,e,n,u;t=su,"select"===r.substr(su,6).toLowerCase()?(e=r.substr(su,6),su+=6):(e=o,0===lu&&Lu(_t));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o);return t}()!==o&&ta()!==o?((n=function(){var r,t,e,n,u,s;if(r=su,(t=ku())!==o){for(e=[],n=su,(u=ta())!==o&&(s=ku())!==o?n=u=[u,s]:(su=n,n=o);n!==o;)e.push(n),n=su,(u=ta())!==o&&(s=ku())!==o?n=u=[u,s]:(su=n,n=o);e!==o?(t=function(r,t){const e=[r];for(let r=0,n=t.length;r<n;++r)e.push(t[r][1]);return e}(t,e),r=t):(su=r,r=o);}else su=r,r=o;return r}())===o&&(n=null),n!==o&&ta()!==o?((u=bs())===o&&(u=null),u!==o&&ta()!==o&&(s=$u())!==o&&ta()!==o?((a=Hu())===o&&(a=null),a!==o&&ta()!==o?((i=zu())===o&&(i=null),i!==o&&ta()!==o?((c=function(){var t,e,n;t=su,(e=function(){var t,e,n,u;t=su,"group"===r.substr(su,5).toLowerCase()?(e=r.substr(su,5),su+=5):(e=o,0===lu&&Lu(ae));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o);return t}())!==o&&ta()!==o&&fs()!==o&&ta()!==o&&(n=ao())!==o?(e=n.value,t=e):(su=t,t=o);return t}())===o&&(c=null),c!==o&&ta()!==o?((l=function(){var t,e;t=su,function(){var t,e,n,u;t=su,"having"===r.substr(su,6).toLowerCase()?(e=r.substr(su,6),su+=6):(e=o,0===lu&&Lu(le));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o);return t}()!==o&&ta()!==o&&(e=fo())!==o?(t=e):(su=t,t=o);return t}())===o&&(l=null),l!==o&&ta()!==o?((f=Ju())===o&&(f=null),f!==o&&ta()!==o?((v=to())===o&&(v=null),v!==o?(t=function(r,t,e,n,u,o,s,a,i,c){return u&&u.forEach(r=>r.table&&ga.add(`select::${r.db}::${r.table}`)),{with:r,type:"select",options:t,distinct:e,columns:n,from:u,where:o,groupby:s,having:a,orderby:i,limit:c}}(e,n,u,s,a,i,c,l,f,v)):(su=t,t=o)):(su=t,t=o)):(su=t,t=o)):(su=t,t=o)):(su=t,t=o)):(su=t,t=o)):(su=t,t=o)):(su=t,t=o)):(su=t,t=o)):(su=t,t=o),t}function ku(){var t,e;return t=su,(e=function(){var t;"sql_calc_found_rows"===r.substr(su,19).toLowerCase()?(t=r.substr(su,19),su+=19):(t=o,0===lu&&Lu(Hn));return t}())===o&&((e=function(){var t;"sql_cache"===r.substr(su,9).toLowerCase()?(t=r.substr(su,9),su+=9):(t=o,0===lu&&Lu(Gn));return t}())===o&&(e=function(){var t;"sql_no_cache"===r.substr(su,12).toLowerCase()?(t=r.substr(su,12),su+=12):(t=o,0===lu&&Lu(jn));return t}()),e===o&&(e=function(){var t;"sql_big_result"===r.substr(su,14).toLowerCase()?(t=r.substr(su,14),su+=14):(t=o,0===lu&&Lu(Bn));return t}())===o&&(e=function(){var t;"sql_small_result"===r.substr(su,16).toLowerCase()?(t=r.substr(su,16),su+=16):(t=o,0===lu&&Lu(Yn));return t}())===o&&(e=function(){var t;"sql_buffer_result"===r.substr(su,17).toLowerCase()?(t=r.substr(su,17),su+=17):(t=o,0===lu&&Lu(Xn));return t}())),e!==o&&(e=e),t=e}function $u(){var r,t,e,n,u,s,a,c,l,f;if(r=su,(t=vs())===o&&(t=su,(e=Zs())!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o),t===o&&(t=Zs())),t!==o){for(e=[],n=su,(u=ta())!==o&&(s=qs())!==o&&(a=ta())!==o&&(c=Fu())!==o?n=u=[u,s,a,c]:(su=n,n=o);n!==o;)e.push(n),n=su,(u=ta())!==o&&(s=qs())!==o&&(a=ta())!==o&&(c=Fu())!==o?n=u=[u,s,a,c]:(su=n,n=o);e!==o?(l=t,f=e,Oa.add("select::null::(.*)"),r=t=f&&f.length>0?(l[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},Sa(l[0],f)):l[0]):(su=r,r=o);}else su=r,r=o;if(r===o)if(r=su,(t=Fu())!==o){for(e=[],n=su,(u=ta())!==o&&(s=qs())!==o&&(a=ta())!==o&&(c=Fu())!==o?n=u=[u,s,a,c]:(su=n,n=o);n!==o;)e.push(n),n=su,(u=ta())!==o&&(s=qs())!==o&&(a=ta())!==o&&(c=Fu())!==o?n=u=[u,s,a,c]:(su=n,n=o);e!==o?(r=t=i(t,e)):(su=r,r=o);}else su=r,r=o;return r}function Fu(){var r,t,e,n;return r=su,(t=mo())!==o&&ta()!==o&&(e=Ks())!==o&&ta()!==o&&Zs()!==o?(n=t,Oa.add(`select::${n}::(.*)`),r=t={expr:{type:"column_ref",table:n,column:"*"},as:null}):(su=r,r=o),r===o&&(r=su,(t=fo())!==o&&ta()!==o?((e=Pu())===o&&(e=null),e!==o?(r=t={expr:t,as:e}):(su=r,r=o)):(su=r,r=o)),r}function Pu(){var r,t,e;return r=su,(t=ns())!==o&&ta()!==o&&(e=function(){var r,t;r=su,(t=No())!==o?((function(r){if(!0===Aa[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return !1}(t)?o:void 0)!==o?(r=t=t):(su=r,r=o)):(su=r,r=o);r===o&&(r=su,(t=So())!==o&&(t=t),r=t);return r}())!==o?(r=t=e):(su=r,r=o),r===o&&(r=su,(t=ns())===o&&(t=null),t!==o&&ta()!==o&&(e=mo())!==o?(r=t=e):(su=r,r=o)),r}function Hu(){var t,e;return t=su,function(){var t,e,n,u;t=su,"from"===r.substr(su,4).toLowerCase()?(e=r.substr(su,4),su+=4):(e=o,0===lu&&Lu(Yt));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o);return t}()!==o&&ta()!==o&&(e=Xu())!==o?(t=e):(su=t,t=o),t}function Gu(){var r,t,e;return r=su,(t=qu())!==o&&ta()!==o&&Vo()!==o&&ta()!==o&&(e=qu())!==o?(r=t=[t,e]):(su=r,r=o),r}function ju(){var t,e;return t=su,cs()!==o&&ta()!==o?("btree"===r.substr(su,5).toLowerCase()?(e=r.substr(su,5),su+=5):(e=o,0===lu&&Lu(sr)),e===o&&("hash"===r.substr(su,4).toLowerCase()?(e=r.substr(su,4),su+=4):(e=o,0===lu&&Lu(ar))),e!==o?(t={keyword:"using",type:e.toLowerCase()}):(su=t,t=o)):(su=t,t=o),t}function Yu(){var r,t,e,n,u,s;if(r=su,(t=Bu())!==o){for(e=[],n=su,(u=ta())!==o&&(s=Bu())!==o?n=u=[u,s]:(su=n,n=o);n!==o;)e.push(n),n=su,(u=ta())!==o&&(s=Bu())!==o?n=u=[u,s]:(su=n,n=o);e!==o?(r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(su=r,r=o);}else su=r,r=o;return r}function Bu(){var t,e,n,u,s,a;return t=su,(e=function(){var t,e,n,u;t=su,"key_block_size"===r.substr(su,14).toLowerCase()?(e=r.substr(su,14),su+=14):(e=o,0===lu&&Lu(G));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="KEY_BLOCK_SIZE"):(su=t,t=o)):(su=t,t=o);return t}())!==o&&ta()!==o?((n=js())===o&&(n=null),n!==o&&ta()!==o&&(u=Po())!==o?(s=n,a=u,t=e={type:e.toLowerCase(),symbol:s,expr:a}):(su=t,t=o)):(su=t,t=o),t===o&&(t=ju())===o&&(t=su,"with"===r.substr(su,4).toLowerCase()?(e=r.substr(su,4),su+=4):(e=o,0===lu&&Lu(ir)),e!==o&&ta()!==o?("parser"===r.substr(su,6).toLowerCase()?(n=r.substr(su,6),su+=6):(n=o,0===lu&&Lu(cr)),n!==o&&ta()!==o&&(u=No())!==o?(t=e={type:"with parser",expr:u}):(su=t,t=o)):(su=t,t=o),t===o&&(t=su,"visible"===r.substr(su,7).toLowerCase()?(e=r.substr(su,7),su+=7):(e=o,0===lu&&Lu(lr)),e===o&&("invisible"===r.substr(su,9).toLowerCase()?(e=r.substr(su,9),su+=9):(e=o,0===lu&&Lu(fr))),e!==o&&(e=function(r){return {type:r.toLowerCase(),expr:r.toLowerCase()}}(e)),(t=e)===o&&(t=ua()))),t}function Xu(){var r,t,e,n,u,s;if(r=su,(t=Vu())!==o){for(e=[],n=Wu();n!==o;)e.push(n),n=Wu();e!==o?(u=t,(s=e).unshift(u),s.forEach(r=>{const{table:t,as:e}=r;Ua[t]=t,e&&(Ua[e]=t);}),r=t=s):(su=r,r=o);}else su=r,r=o;return r}function Wu(){var r,t,e;return r=su,ta()!==o&&(t=qs())!==o&&ta()!==o&&(e=Vu())!==o?(r=e):(su=r,r=o),r===o&&(r=su,ta()!==o&&(t=function(){var r,t,e,n,u,s,a,i,c,l,f;if(r=su,(t=Ku())!==o)if(ta()!==o)if((e=Vu())!==o)if(ta()!==o)if((n=cs())!==o)if(ta()!==o)if(zs()!==o)if(ta()!==o)if((u=No())!==o){for(s=[],a=su,(i=ta())!==o&&(c=qs())!==o&&(l=ta())!==o&&(f=No())!==o?a=i=[i,c,l,f]:(su=a,a=o);a!==o;)s.push(a),a=su,(i=ta())!==o&&(c=qs())!==o&&(l=ta())!==o&&(f=No())!==o?a=i=[i,c,l,f]:(su=a,a=o);s!==o&&(a=ta())!==o&&(i=Js())!==o?(v=t,d=u,L=s,(b=e).join=v,b.using=Sa(d,L),r=t=b):(su=r,r=o);}else su=r,r=o;else su=r,r=o;else su=r,r=o;else su=r,r=o;else su=r,r=o;else su=r,r=o;else su=r,r=o;else su=r,r=o;else su=r,r=o;var v,b,d,L;r===o&&(r=su,(t=Ku())!==o&&ta()!==o&&(e=Vu())!==o&&ta()!==o?((n=Zu())===o&&(n=null),n!==o?(t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(su=r,r=o)):(su=r,r=o),r===o&&(r=su,(t=Ku())!==o&&ta()!==o&&(e=zs())!==o&&ta()!==o&&(n=hu())!==o&&ta()!==o&&Js()!==o&&ta()!==o?((u=Pu())===o&&(u=null),u!==o&&(s=ta())!==o?((a=Zu())===o&&(a=null),a!==o?(t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,u,a),r=t):(su=r,r=o)):(su=r,r=o)):(su=r,r=o)));return r}())!==o?(r=t):(su=r,r=o)),r}function Vu(){var t,e,n,u,s,a;return t=su,(e=function(){var t;"dual"===r.substr(su,4).toLowerCase()?(t=r.substr(su,4),su+=4):(t=o,0===lu&&Lu(On));return t}())!==o&&(e={type:"dual"}),(t=e)===o&&(t=su,(e=qu())!==o&&ta()!==o?((n=Pu())===o&&(n=null),n!==o?(a=n,t=e="var"===(s=e).type?(s.as=a,s):{db:s.db,table:s.table,as:a}):(su=t,t=o)):(su=t,t=o),t===o&&(t=su,(e=zs())!==o&&ta()!==o&&(n=hu())!==o&&ta()!==o&&Js()!==o&&ta()!==o?((u=Pu())===o&&(u=null),u!==o?(t=e=function(r,t){return r.parentheses=!0,{expr:r,as:t}}(n,u)):(su=t,t=o)):(su=t,t=o))),t}function Ku(){var t,e,n,u;return t=su,(e=function(){var t,e,n,u;t=su,"left"===r.substr(su,4).toLowerCase()?(e=r.substr(su,4),su+=4):(e=o,0===lu&&Lu(Zt));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o);return t}())!==o&&(n=ta())!==o?((u=as())===o&&(u=null),u!==o&&ta()!==o&&ss()!==o?(t=e="LEFT JOIN"):(su=t,t=o)):(su=t,t=o),t===o&&(t=su,(e=function(){var t,e,n,u;t=su,"right"===r.substr(su,5).toLowerCase()?(e=r.substr(su,5),su+=5):(e=o,0===lu&&Lu(zt));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o);return t}())!==o&&(n=ta())!==o?((u=as())===o&&(u=null),u!==o&&ta()!==o&&ss()!==o?(t=e="RIGHT JOIN"):(su=t,t=o)):(su=t,t=o),t===o&&(t=su,(e=function(){var t,e,n,u;t=su,"full"===r.substr(su,4).toLowerCase()?(e=r.substr(su,4),su+=4):(e=o,0===lu&&Lu(Jt));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o);return t}())!==o&&(n=ta())!==o?((u=as())===o&&(u=null),u!==o&&ta()!==o&&ss()!==o?(t=e="FULL JOIN"):(su=t,t=o)):(su=t,t=o),t===o&&(t=su,e=su,(n=function(){var t,e,n,u;t=su,"inner"===r.substr(su,5).toLowerCase()?(e=r.substr(su,5),su+=5):(e=o,0===lu&&Lu(Qt));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o);return t}())!==o&&(u=ta())!==o?e=n=[n,u]:(su=e,e=o),e===o&&(e=null),e!==o&&(n=ss())!==o?(t=e="INNER JOIN"):(su=t,t=o)))),t}function qu(){var r,t,e,n,u,s,a,i;return r=su,(t=mo())!==o?(e=su,(n=ta())!==o&&(u=Ks())!==o&&(s=ta())!==o&&(a=mo())!==o?e=n=[n,u,s,a]:(su=e,e=o),e===o&&(e=null),e!==o?(r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(su=r,r=o)):(su=r,r=o),r===o&&(r=su,(t=pa())!==o&&((i=t).db=null,i.table=i.name,t=i),r=t),r}function Zu(){var t,e;return t=su,function(){var t,e,n,u;t=su,"on"===r.substr(su,2).toLowerCase()?(e=r.substr(su,2),su+=2):(e=o,0===lu&&Lu(qt));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o);return t}()!==o&&ta()!==o&&(e=fo())!==o?(t=e):(su=t,t=o),t}function zu(){var t,e;return t=su,function(){var t,e,n,u;t=su,"where"===r.substr(su,5).toLowerCase()?(e=r.substr(su,5),su+=5):(e=o,0===lu&&Lu(se));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o);return t}()!==o&&ta()!==o&&(e=fo())!==o?(t=e):(su=t,t=o),t}function Ju(){var t,e;return t=su,function(){var t,e,n,u;t=su,"order"===r.substr(su,5).toLowerCase()?(e=r.substr(su,5),su+=5):(e=o,0===lu&&Lu(ce));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o);return t}()!==o&&ta()!==o&&fs()!==o&&ta()!==o&&(e=function(){var r,t,e,n,u,s,a,c;if(r=su,(t=Qu())!==o){for(e=[],n=su,(u=ta())!==o&&(s=qs())!==o&&(a=ta())!==o&&(c=Qu())!==o?n=u=[u,s,a,c]:(su=n,n=o);n!==o;)e.push(n),n=su,(u=ta())!==o&&(s=qs())!==o&&(a=ta())!==o&&(c=Qu())!==o?n=u=[u,s,a,c]:(su=n,n=o);e!==o?(t=i(t,e),r=t):(su=r,r=o);}else su=r,r=o;return r}())!==o?(t=e):(su=t,t=o),t}function Qu(){var t,e,n;return t=su,(e=fo())!==o&&ta()!==o?((n=function(){var t,e,n,u;t=su,"desc"===r.substr(su,4).toLowerCase()?(e=r.substr(su,4),su+=4):(e=o,0===lu&&Lu(de));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="DESC"):(su=t,t=o)):(su=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=su,"asc"===r.substr(su,3).toLowerCase()?(e=r.substr(su,3),su+=3):(e=o,0===lu&&Lu(be));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="ASC"):(su=t,t=o)):(su=t,t=o);return t}()),n===o&&(n=null),n!==o?(t=e=function(r,t){const e={expr:r,type:"ASC"};return "DESC"===t&&(e.type="DESC"),e}(e,n)):(su=t,t=o)):(su=t,t=o),t}function ro(){var r;return (r=Po())===o&&(r=Oo()),r}function to(){var t,e,n,u,s,a;return t=su,function(){var t,e,n,u;t=su,"limit"===r.substr(su,5).toLowerCase()?(e=r.substr(su,5),su+=5):(e=o,0===lu&&Lu(fe));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o);return t}()!==o&&ta()!==o&&(e=ro())!==o&&ta()!==o?(n=su,(u=qs())===o&&(u=function(){var t,e,n,u;t=su,"offset"===r.substr(su,6).toLowerCase()?(e=r.substr(su,6),su+=6):(e=o,0===lu&&Lu(ve));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="OFFSET"):(su=t,t=o)):(su=t,t=o);return t}()),u!==o&&(s=ta())!==o&&(a=ro())!==o?n=u=[u,s,a]:(su=n,n=o),n===o&&(n=null),n!==o?(t=function(r,t){const e=[r];return t&&e.push(t[2]),{seperator:t&&t[0]&&t[0].toLowerCase()||"",value:e}}(e,n)):(su=t,t=o)):(su=t,t=o),t}function eo(){var t,e,n,u,s,a,i,c;return t=su,e=su,(n=mo())!==o&&(u=ta())!==o&&(s=Ks())!==o?e=n=[n,u,s]:(su=e,e=o),e===o&&(e=null),e!==o&&(n=ta())!==o&&(u=Io())!==o&&(s=ta())!==o?(61===r.charCodeAt(su)?(a="=",su++):(a=o,0===lu&&Lu(vr)),a!==o&&ta()!==o&&(i=wo())!==o?(t=e={column:u,value:i,table:(c=e)&&c[0]}):(su=t,t=o)):(su=t,t=o),t}function no(){var t;return (t=function(){var t,e;t=su,function(){var t,e,n,u;t=su,"values"===r.substr(su,6).toLowerCase()?(e=r.substr(su,6),su+=6):(e=o,0===lu&&Lu(ue));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o);return t}()!==o&&ta()!==o&&(e=function(){var r,t,e,n,u,s,a,c;if(r=su,(t=so())!==o){for(e=[],n=su,(u=ta())!==o&&(s=qs())!==o&&(a=ta())!==o&&(c=so())!==o?n=u=[u,s,a,c]:(su=n,n=o);n!==o;)e.push(n),n=su,(u=ta())!==o&&(s=qs())!==o&&(a=ta())!==o&&(c=so())!==o?n=u=[u,s,a,c]:(su=n,n=o);e!==o?(t=i(t,e),r=t):(su=r,r=o);}else su=r,r=o;return r}())!==o?(t=e):(su=t,t=o);return t}())===o&&(t=Du()),t}function uo(){var r,t,e,n,u,s,a,i,c;if(r=su,rs()!==o)if(ta()!==o)if((t=zs())!==o)if(ta()!==o)if((e=No())!==o){for(n=[],u=su,(s=ta())!==o&&(a=qs())!==o&&(i=ta())!==o&&(c=No())!==o?u=s=[s,a,i,c]:(su=u,u=o);u!==o;)n.push(u),u=su,(s=ta())!==o&&(a=qs())!==o&&(i=ta())!==o&&(c=No())!==o?u=s=[s,a,i,c]:(su=u,u=o);n!==o&&(u=ta())!==o&&(s=Js())!==o?(r=Sa(e,n)):(su=r,r=o);}else su=r,r=o;else su=r,r=o;else su=r,r=o;else su=r,r=o;else su=r,r=o;return r===o&&(r=su,rs()!==o&&ta()!==o&&(t=so())!==o?(r=t):(su=r,r=o)),r}function oo(){var t,e;return t=su,(e=function(){var t,e,n,u;t=su,"insert"===r.substr(su,6).toLowerCase()?(e=r.substr(su,6),su+=6):(e=o,0===lu&&Lu(Dt));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o);return t}())!==o&&(e="insert"),(t=e)===o&&(t=su,(e=Jo())!==o&&(e="replace"),t=e),t}function so(){var r,t;return r=su,zs()!==o&&ta()!==o&&(t=ao())!==o&&ta()!==o&&Js()!==o?(r=t):(su=r,r=o),r}function ao(){var r,t,e,n,u,s,a,i;if(r=su,(t=fo())!==o){for(e=[],n=su,(u=ta())!==o&&(s=qs())!==o&&(a=ta())!==o&&(i=fo())!==o?n=u=[u,s,a,i]:(su=n,n=o);n!==o;)e.push(n),n=su,(u=ta())!==o&&(s=qs())!==o&&(a=ta())!==o&&(i=fo())!==o?n=u=[u,s,a,i]:(su=n,n=o);e!==o?(r=t=function(r,t){const e={type:"expr_list"};return e.value=Sa(r,t),e}(t,e)):(su=r,r=o);}else su=r,r=o;return r}function io(){var t,e,n;return t=su,function(){var t,e,n,u;t=su,"interval"===r.substr(su,8).toLowerCase()?(e=r.substr(su,8),su+=8):(e=o,0===lu&&Lu(ln));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="INTERVAL"):(su=t,t=o)):(su=t,t=o);return t}()!==o&&ta()!==o&&(e=fo())!==o&&ta()!==o&&(n=function(){var t;(t=function(){var t,e,n,u;t=su,"year"===r.substr(su,4).toLowerCase()?(e=r.substr(su,4),su+=4):(e=o,0===lu&&Lu(fn));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="YEAR"):(su=t,t=o)):(su=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=su,"month"===r.substr(su,5).toLowerCase()?(e=r.substr(su,5),su+=5):(e=o,0===lu&&Lu(vn));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="MONTH"):(su=t,t=o)):(su=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=su,"day"===r.substr(su,3).toLowerCase()?(e=r.substr(su,3),su+=3):(e=o,0===lu&&Lu(bn));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="DAY"):(su=t,t=o)):(su=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=su,"hour"===r.substr(su,4).toLowerCase()?(e=r.substr(su,4),su+=4):(e=o,0===lu&&Lu(dn));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="HOUR"):(su=t,t=o)):(su=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=su,"minute"===r.substr(su,6).toLowerCase()?(e=r.substr(su,6),su+=6):(e=o,0===lu&&Lu(Ln));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="MINUTE"):(su=t,t=o)):(su=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=su,"second"===r.substr(su,6).toLowerCase()?(e=r.substr(su,6),su+=6):(e=o,0===lu&&Lu(Cn));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="SECOND"):(su=t,t=o)):(su=t,t=o);return t}());return t}())!==o?(t={type:"interval",expr:e,unit:n.toLowerCase()}):(su=t,t=o),t}function co(){var t,e,n,u,s,a,i,c,l;if(t=su,ys()!==o)if(ta()!==o)if((e=fo())===o&&(e=null),e!==o)if(ta()!==o){if(n=[],(u=lo())!==o)for(;u!==o;)n.push(u),u=lo();else n=o;n!==o&&(u=ta())!==o?((s=function(){var t,e;t=su,function(){var t,e,n,u;t=su,"else"===r.substr(su,4).toLowerCase()?(e=r.substr(su,4),su+=4):(e=o,0===lu&&Lu(Me));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o);return t}()!==o&&ta()!==o&&(e=fo())!==o?(t={type:"else",result:e}):(su=t,t=o);return t}())===o&&(s=null),s!==o&&ta()!==o&&function(){var t,e,n,u;t=su,"end"===r.substr(su,3).toLowerCase()?(e=r.substr(su,3),su+=3):(e=o,0===lu&&Lu(De));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o);return t}()!==o&&ta()!==o?((a=ys())===o&&(a=null),a!==o?(i=e,c=n,(l=s)&&c.push(l),t={type:"case",expr:i||null,args:c}):(su=t,t=o)):(su=t,t=o)):(su=t,t=o);}else su=t,t=o;else su=t,t=o;else su=t,t=o;else su=t,t=o;return t}function lo(){var t,e,n;return t=su,function(){var t,e,n,u;t=su,"when"===r.substr(su,4).toLowerCase()?(e=r.substr(su,4),su+=4):(e=o,0===lu&&Lu(Ue));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o);return t}()!==o&&ta()!==o&&(e=fo())!==o&&ta()!==o&&function(){var t,e,n,u;t=su,"then"===r.substr(su,4).toLowerCase()?(e=r.substr(su,4),su+=4):(e=o,0===lu&&Lu(xe));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o);return t}()!==o&&ta()!==o&&(n=fo())!==o?(t={type:"when",cond:e,result:n}):(su=t,t=o),t}function fo(){var r;return (r=function(){var r,t,e,n,u,s,a,i;if(r=su,(t=yo())!==o){if(e=[],n=su,(u=ta())!==o&&(s=ra())!==o&&(a=ta())!==o&&(i=yo())!==o?n=u=[u,s,a,i]:(su=n,n=o),n!==o)for(;n!==o;)e.push(n),n=su,(u=ta())!==o&&(s=ra())!==o&&(a=ta())!==o&&(i=yo())!==o?n=u=[u,s,a,i]:(su=n,n=o);else e=o;e!==o?(t=br(t,e),r=t):(su=r,r=o);}else su=r,r=o;return r}())===o&&(r=function(){var r,t,e,n,u,s;if(r=su,(t=Eo())!==o){if(e=[],n=su,(u=ta())!==o&&(s=yo())!==o?n=u=[u,s]:(su=n,n=o),n!==o)for(;n!==o;)e.push(n),n=su,(u=ta())!==o&&(s=yo())!==o?n=u=[u,s]:(su=n,n=o);else e=o;e!==o?(t=ya(t,e[0][1]),r=t):(su=r,r=o);}else su=r,r=o;return r}())===o&&(r=function(){var r,t,e,n,u,s,a,i;if(r=su,(t=vo())!==o){for(e=[],n=su,(u=ea())!==o&&(s=As())!==o&&(a=ta())!==o&&(i=vo())!==o?n=u=[u,s,a,i]:(su=n,n=o);n!==o;)e.push(n),n=su,(u=ea())!==o&&(s=As())!==o&&(a=ta())!==o&&(i=vo())!==o?n=u=[u,s,a,i]:(su=n,n=o);e!==o?(t=dr(t,e),r=t):(su=r,r=o);}else su=r,r=o;return r}())===o&&(r=Ou()),r}function vo(){var r,t,e,n,u,s,a,i;if(r=su,(t=bo())!==o){for(e=[],n=su,(u=ea())!==o&&(s=hs())!==o&&(a=ta())!==o&&(i=bo())!==o?n=u=[u,s,a,i]:(su=n,n=o);n!==o;)e.push(n),n=su,(u=ea())!==o&&(s=hs())!==o&&(a=ta())!==o&&(i=bo())!==o?n=u=[u,s,a,i]:(su=n,n=o);e!==o?(r=t=br(t,e)):(su=r,r=o);}else su=r,r=o;return r}function bo(){var t,e,n,u,s;return (t=Lo())===o&&(t=function(){var r,t,e;r=su,(t=function(){var r,t,e,n,u;r=su,t=su,(e=Es())!==o&&(n=ta())!==o&&(u=ws())!==o?t=e=[e,n,u]:(su=t,t=o);t!==o&&(t=Cr(t));(r=t)===o&&(r=ws());return r}())!==o&&ta()!==o&&zs()!==o&&ta()!==o&&(e=hu())!==o&&ta()!==o&&Js()!==o?(n=t,(u=e).parentheses=!0,t=ya(n,u),r=t):(su=r,r=o);var n,u;return r}())===o&&(t=su,(e=Es())===o&&(e=su,33===r.charCodeAt(su)?(n="!",su++):(n=o,0===lu&&Lu(Lr)),n!==o?(u=su,lu++,61===r.charCodeAt(su)?(s="=",su++):(s=o,0===lu&&Lu(vr)),lu--,s===o?u=void 0:(su=u,u=o),u!==o?e=n=[n,u]:(su=e,e=o)):(su=e,e=o)),e!==o&&(n=ta())!==o&&(u=bo())!==o?(t=e=ya("NOT",u)):(su=t,t=o)),t}function Lo(){var r,t,e,n,u,s,a;return r=su,(t=wo())!==o&&ta()!==o?(e=su,lu++,n=hs(),lu--,n===o?e=void 0:(su=e,e=o),e!==o&&(n=ta())!==o?((u=function(){var r;(r=function(){var r,t,e,n,u,s,a;r=su,t=[],e=su,(n=ta())!==o&&(u=Co())!==o&&(s=ta())!==o&&(a=wo())!==o?e=n=[n,u,s,a]:(su=e,e=o);if(e!==o)for(;e!==o;)t.push(e),e=su,(n=ta())!==o&&(u=Co())!==o&&(s=ta())!==o&&(a=wo())!==o?e=n=[n,u,s,a]:(su=e,e=o);else t=o;t!==o&&(t={type:"arithmetic",tail:t});return r=t}())===o&&(r=function(){var r,t,e,n;r=su,(t=po())!==o&&ta()!==o&&(e=zs())!==o&&ta()!==o&&(n=ao())!==o&&ta()!==o&&Js()!==o?(r=t={op:t,right:n}):(su=r,r=o);r===o&&(r=su,(t=po())!==o&&ta()!==o?((e=pa())===o&&(e=Do()),e!==o?(t=function(r,t){return {op:r,right:t}}(t,e),r=t):(su=r,r=o)):(su=r,r=o));return r}())===o&&(r=function(){var r,t,e,n;r=su,(t=function(){var r,t,e,n,u;r=su,t=su,(e=Es())!==o&&(n=ta())!==o&&(u=ds())!==o?t=e=[e,n,u]:(su=t,t=o);t!==o&&(t=Cr(t));(r=t)===o&&(r=ds());return r}())!==o&&ta()!==o&&(e=wo())!==o&&ta()!==o&&hs()!==o&&ta()!==o&&(n=wo())!==o?(r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(su=r,r=o);return r}())===o&&(r=function(){var r,t,e,n,u;r=su,(t=Cs())!==o&&(e=ta())!==o&&(n=wo())!==o?(r=t={op:"IS",right:n}):(su=r,r=o);r===o&&(r=su,t=su,(e=Cs())!==o&&(n=ta())!==o&&(u=Es())!==o?t=e=[e,n,u]:(su=t,t=o),t!==o&&(e=ta())!==o&&(n=wo())!==o?(t=function(r){return {op:"IS NOT",right:r}}(n),r=t):(su=r,r=o));return r}())===o&&(r=function(){var r,t,e;r=su,(t=function(){var r,t,e,n,u;r=su,t=su,(e=Es())!==o&&(n=ta())!==o&&(u=ps())!==o?t=e=[e,n,u]:(su=t,t=o);t!==o&&(t=Cr(t));(r=t)===o&&(r=ps());return r}())!==o&&ta()!==o&&(e=Lo())!==o?(r=t={op:t,right:e}):(su=r,r=o);return r}());return r}())===o&&(u=null),u!==o?(s=t,r=t=null===(a=u)?s:"arithmetic"===a.type?Ia(s,a.tail):Ta(a.op,s,a.right)):(su=r,r=o)):(su=r,r=o)):(su=r,r=o),r===o&&(r=Do())===o&&(r=To()),r}function Co(){var t;return ">="===r.substr(su,2)?(t=">=",su+=2):(t=o,0===lu&&Lu(pr)),t===o&&(62===r.charCodeAt(su)?(t=">",su++):(t=o,0===lu&&Lu(wr)),t===o&&("<="===r.substr(su,2)?(t="<=",su+=2):(t=o,0===lu&&Lu(Er)),t===o&&("<>"===r.substr(su,2)?(t="<>",su+=2):(t=o,0===lu&&Lu(hr)),t===o&&(60===r.charCodeAt(su)?(t="<",su++):(t=o,0===lu&&Lu(Ar)),t===o&&(61===r.charCodeAt(su)?(t="=",su++):(t=o,0===lu&&Lu(vr)),t===o&&("!="===r.substr(su,2)?(t="!=",su+=2):(t=o,0===lu&&Lu(yr)))))))),t}function po(){var r,t,e,n,u;return r=su,t=su,(e=Es())!==o&&(n=ta())!==o&&(u=Ls())!==o?t=e=[e,n,u]:(su=t,t=o),t!==o&&(t=Cr(t)),(r=t)===o&&(r=Ls()),r}function wo(){var r,t,e,n,u,s,a,i;if(r=su,(t=ho())!==o){for(e=[],n=su,(u=ta())!==o&&(s=Eo())!==o&&(a=ta())!==o&&(i=ho())!==o?n=u=[u,s,a,i]:(su=n,n=o);n!==o;)e.push(n),n=su,(u=ta())!==o&&(s=Eo())!==o&&(a=ta())!==o&&(i=ho())!==o?n=u=[u,s,a,i]:(su=n,n=o);e!==o?(r=t=dr(t,e)):(su=r,r=o);}else su=r,r=o;return r}function Eo(){var t;return 43===r.charCodeAt(su)?(t="+",su++):(t=o,0===lu&&Lu(Tr)),t===o&&(45===r.charCodeAt(su)?(t="-",su++):(t=o,0===lu&&Lu(mr))),t}function ho(){var r,t,e,n,u,s,a,i;if(r=su,(t=yo())!==o){for(e=[],n=su,(u=ta())!==o&&(s=Ao())!==o&&(a=ta())!==o&&(i=yo())!==o?n=u=[u,s,a,i]:(su=n,n=o);n!==o;)e.push(n),n=su,(u=ta())!==o&&(s=Ao())!==o&&(a=ta())!==o&&(i=yo())!==o?n=u=[u,s,a,i]:(su=n,n=o);e!==o?(r=t=Ia(t,e)):(su=r,r=o);}else su=r,r=o;return r}function Ao(){var t;return 42===r.charCodeAt(su)?(t="*",su++):(t=o,0===lu&&Lu(Sr)),t===o&&(47===r.charCodeAt(su)?(t="/",su++):(t=o,0===lu&&Lu(Ir)),t===o&&(37===r.charCodeAt(su)?(t="%",su++):(t=o,0===lu&&Lu(Nr)))),t}function yo(){var t,e,n;return (t=function(){var t,e,n,u,s,a,i;t=su,(e=Ts())!==o&&ta()!==o&&zs()!==o&&ta()!==o&&(n=fo())!==o&&ta()!==o&&ns()!==o&&ta()!==o&&(u=Ea())!==o&&ta()!==o&&(s=Js())!==o?(t=e={type:"cast",expr:n,symbol:"as",target:u}):(su=t,t=o);t===o&&(t=su,(e=Ts())!==o&&ta()!==o&&zs()!==o&&ta()!==o&&(n=fo())!==o&&ta()!==o&&ns()!==o&&ta()!==o&&(u=Ns())!==o&&ta()!==o&&(s=zs())!==o&&ta()!==o&&(a=Ho())!==o&&ta()!==o&&Js()!==o&&ta()!==o&&(i=Js())!==o?(e=function(r,t){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+")"}}}(n,a),t=e):(su=t,t=o),t===o&&(t=su,(e=Ts())!==o&&ta()!==o&&zs()!==o&&ta()!==o&&(n=fo())!==o&&ta()!==o&&ns()!==o&&ta()!==o&&(u=Ns())!==o&&ta()!==o&&(s=zs())!==o&&ta()!==o&&(a=Ho())!==o&&ta()!==o&&qs()!==o&&ta()!==o&&(i=Ho())!==o&&ta()!==o&&Js()!==o&&ta()!==o&&Js()!==o?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+", "+e+")"}}}(n,a,i),t=e):(su=t,t=o),t===o&&(t=su,(e=Ts())!==o&&ta()!==o&&zs()!==o&&ta()!==o&&(n=fo())!==o&&ta()!==o&&ns()!==o&&ta()!==o&&(u=function(){var t;(t=function(){var t,e,n,u;t=su,"signed"===r.substr(su,6).toLowerCase()?(e=r.substr(su,6),su+=6):(e=o,0===lu&&Lu(Ge));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="SIGNED"):(su=t,t=o)):(su=t,t=o);return t}())===o&&(t=Rs());return t}())!==o&&ta()!==o?((s=gs())===o&&(s=null),s!==o&&ta()!==o&&(a=Js())!==o?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:t+(e?" "+e:"")}}}(n,u,s),t=e):(su=t,t=o)):(su=t,t=o))));return t}())===o&&(t=xo())===o&&(t=function(){var t;(t=function(){var t,e,n,u;t=su,(e=function(){var t,e,n,u;t=su,"count"===r.substr(su,5).toLowerCase()?(e=r.substr(su,5),su+=5):(e=o,0===lu&&Lu(Se));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="COUNT"):(su=t,t=o)):(su=t,t=o);return t}())!==o&&ta()!==o&&zs()!==o&&ta()!==o&&(n=function(){var t,e,n;t=su,(e=function(){var t,e;t=su,42===r.charCodeAt(su)?(e="*",su++):(e=o,0===lu&&Lu(Sr));e!==o&&(e={type:"star",value:"*"});return t=e}())!==o&&(e={expr:e});(t=e)===o&&(t=su,(e=bs())===o&&(e=null),e!==o&&ta()!==o&&(n=To())!==o?(t=e={distinct:e,expr:n}):(su=t,t=o));return t}())!==o&&ta()!==o&&Js()!==o&&ta()!==o?((u=Uo())===o&&(u=null),u!==o?(t=e={type:"aggr_func",name:e,args:n,over:u}):(su=t,t=o)):(su=t,t=o);return t}())===o&&(t=function(){var t,e,n;t=su,(e=function(){var t;(t=function(){var t,e,n,u;t=su,"sum"===r.substr(su,3).toLowerCase()?(e=r.substr(su,3),su+=3):(e=o,0===lu&&Lu(Re));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="SUM"):(su=t,t=o)):(su=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=su,"max"===r.substr(su,3).toLowerCase()?(e=r.substr(su,3),su+=3):(e=o,0===lu&&Lu(Ie));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="MAX"):(su=t,t=o)):(su=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=su,"min"===r.substr(su,3).toLowerCase()?(e=r.substr(su,3),su+=3):(e=o,0===lu&&Lu(Ne));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="MIN"):(su=t,t=o)):(su=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=su,"avg"===r.substr(su,3).toLowerCase()?(e=r.substr(su,3),su+=3):(e=o,0===lu&&Lu(_e));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="AVG"):(su=t,t=o)):(su=t,t=o);return t}());return t}())!==o&&ta()!==o&&zs()!==o&&ta()!==o&&(n=wo())!==o&&ta()!==o&&Js()!==o?(t=e={type:"aggr_func",name:e,args:{expr:n}}):(su=t,t=o);return t}());return t}())===o&&(t=function(){var t,e,n,u,s;t=su,(e=da())!==o&&ta()!==o&&zs()!==o&&ta()!==o?((n=ao())===o&&(n=null),n!==o&&ta()!==o&&(u=Js())!==o&&ta()!==o?((s=Uo())===o&&(s=null),s!==o?(t=e={type:"function",name:e,args:n||{type:"expr_list",value:[]},over:s}):(su=t,t=o)):(su=t,t=o)):(su=t,t=o);t===o&&(t=su,(e=function(){var t;(t=function(){var t,e,n,u;t=su,"current_date"===r.substr(su,12).toLowerCase()?(e=r.substr(su,12),su+=12):(e=o,0===lu&&Lu(cn));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="CURRENT_DATE"):(su=t,t=o)):(su=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=su,"current_time"===r.substr(su,12).toLowerCase()?(e=r.substr(su,12),su+=12):(e=o,0===lu&&Lu(pn));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="CURRENT_TIME"):(su=t,t=o)):(su=t,t=o);return t}())===o&&(t=Hs())===o&&(t=function(){var t,e,n,u;t=su,"current_user"===r.substr(su,12).toLowerCase()?(e=r.substr(su,12),su+=12):(e=o,0===lu&&Lu(En));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="CURRENT_USER"):(su=t,t=o)):(su=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=su,"user"===r.substr(su,4).toLowerCase()?(e=r.substr(su,4),su+=4):(e=o,0===lu&&Lu(an));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="USER"):(su=t,t=o)):(su=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=su,"session_user"===r.substr(su,12).toLowerCase()?(e=r.substr(su,12),su+=12):(e=o,0===lu&&Lu(hn));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="SESSION_USER"):(su=t,t=o)):(su=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=su,"system_user"===r.substr(su,11).toLowerCase()?(e=r.substr(su,11),su+=11):(e=o,0===lu&&Lu(An));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="SYSTEM_USER"):(su=t,t=o)):(su=t,t=o);return t}());return t}())!==o&&ta()!==o&&zs()!==o&&ta()!==o&&(n=Js())!==o&&ta()!==o?((u=Uo())===o&&(u=null),u!==o?(e=function(r,t){return {type:"function",name:r,args:{type:"expr_list",value:[]},over:t}}(e,u),t=e):(su=t,t=o)):(su=t,t=o));return t}())===o&&(t=co())===o&&(t=io())===o&&(t=To())===o&&(t=Oo())===o&&(t=su,zs()!==o&&ta()!==o&&(e=fo())!==o&&ta()!==o&&Js()!==o?(t=Rr(e)):(su=t,t=o),t===o&&(t=su,zs()!==o&&ta()!==o&&(e=ao())!==o&&ta()!==o&&Js()!==o?((n=e).parentheses=!0,t=n):(su=t,t=o),t===o&&(t=pa()))),t}function To(){var r,t,e,n,u;return r=su,(t=mo())!==o&&ta()!==o&&Ks()!==o&&ta()!==o&&(e=Io())!==o?(n=t,u=e,Oa.add(`select::${n}::${u}`),r=t={type:"column_ref",table:n,column:u}):(su=r,r=o),r===o&&(r=su,(t=Io())!==o&&(t=function(r){return Oa.add("select::null::"+r),{type:"column_ref",table:null,column:r}}(t)),r=t),r}function mo(){var r,t;return r=su,(t=No())!==o?((_r(t)?o:void 0)!==o?(r=t=t):(su=r,r=o)):(su=r,r=o),r===o&&(r=su,(t=So())!==o&&(t=t),r=t),r}function So(){var t;return (t=function(){var t,e,n,u;t=su,34===r.charCodeAt(su)?(e='"',su++):(e=o,0===lu&&Lu(gr));if(e!==o){if(n=[],Or.test(r.charAt(su))?(u=r.charAt(su),su++):(u=o,0===lu&&Lu(Ur)),u!==o)for(;u!==o;)n.push(u),Or.test(r.charAt(su))?(u=r.charAt(su),su++):(u=o,0===lu&&Lu(Ur));else n=o;n!==o?(34===r.charCodeAt(su)?(u='"',su++):(u=o,0===lu&&Lu(gr)),u!==o?(e=xr(n),t=e):(su=t,t=o)):(su=t,t=o);}else su=t,t=o;return t}())===o&&(t=function(){var t,e,n,u;t=su,39===r.charCodeAt(su)?(e="'",su++):(e=o,0===lu&&Lu(Z));if(e!==o){if(n=[],Mr.test(r.charAt(su))?(u=r.charAt(su),su++):(u=o,0===lu&&Lu(Dr)),u!==o)for(;u!==o;)n.push(u),Mr.test(r.charAt(su))?(u=r.charAt(su),su++):(u=o,0===lu&&Lu(Dr));else n=o;n!==o?(39===r.charCodeAt(su)?(u="'",su++):(u=o,0===lu&&Lu(Z)),u!==o?(e=xr(n),t=e):(su=t,t=o)):(su=t,t=o);}else su=t,t=o;return t}())===o&&(t=function(){var t,e,n,u;t=su,96===r.charCodeAt(su)?(e="`",su++):(e=o,0===lu&&Lu(kr));if(e!==o){if(n=[],$r.test(r.charAt(su))?(u=r.charAt(su),su++):(u=o,0===lu&&Lu(Fr)),u!==o)for(;u!==o;)n.push(u),$r.test(r.charAt(su))?(u=r.charAt(su),su++):(u=o,0===lu&&Lu(Fr));else n=o;n!==o?(96===r.charCodeAt(su)?(u="`",su++):(u=o,0===lu&&Lu(kr)),u!==o?(e=xr(n),t=e):(su=t,t=o)):(su=t,t=o);}else su=t,t=o;return t}()),t}function Io(){var r,t;return r=su,(t=function(){var r,t,e,n;if(r=su,(t=Ro())!==o){for(e=[],n=go();n!==o;)e.push(n),n=go();e!==o?(t=Pr(t,e),r=t):(su=r,r=o);}else su=r,r=o;return r}())!==o?((_r(t)?o:void 0)!==o?(r=t=t):(su=r,r=o)):(su=r,r=o),r===o&&(r=So()),r}function No(){var r,t,e,n;if(r=su,(t=Ro())!==o){for(e=[],n=_o();n!==o;)e.push(n),n=_o();e!==o?(r=t=Pr(t,e)):(su=r,r=o);}else su=r,r=o;return r}function Ro(){var t;return Hr.test(r.charAt(su))?(t=r.charAt(su),su++):(t=o,0===lu&&Lu(Gr)),t}function _o(){var t;return jr.test(r.charAt(su))?(t=r.charAt(su),su++):(t=o,0===lu&&Lu(Yr)),t}function go(){var t;return Br.test(r.charAt(su))?(t=r.charAt(su),su++):(t=o,0===lu&&Lu(Xr)),t}function Oo(){var t,e,n,u;return t=su,e=su,58===r.charCodeAt(su)?(n=":",su++):(n=o,0===lu&&Lu(Wr)),n!==o&&(u=No())!==o?e=n=[n,u]:(su=e,e=o),e!==o&&(e={type:"param",value:e[1]}),t=e}function Uo(){var t,e,n;return t=su,function(){var t,e,n,u;t=su,"over"===r.substr(su,4).toLowerCase()?(e=r.substr(su,4),su+=4):(e=o,0===lu&&Lu(ee));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o);return t}()!==o&&ta()!==o&&zs()!==o&&ta()!==o&&rs()!==o&&ta()!==o&&fs()!==o&&ta()!==o&&(e=$u())!==o&&ta()!==o?((n=Ju())===o&&(n=null),n!==o&&ta()!==o&&Js()!==o?(t={partitionby:e,orderby:n}):(su=t,t=o)):(su=t,t=o),t}function xo(){var t;return (t=Do())===o&&(t=Po())===o&&(t=function(){var t,e;t=su,(e=function(){var t,e,n,u;t=su,"true"===r.substr(su,4).toLowerCase()?(e=r.substr(su,4),su+=4):(e=o,0===lu&&Lu(Tt));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o);return t}())!==o&&(e={type:"bool",value:!0});(t=e)===o&&(t=su,(e=function(){var t,e,n,u;t=su,"false"===r.substr(su,5).toLowerCase()?(e=r.substr(su,5),su+=5):(e=o,0===lu&&Lu(St));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o);return t}())!==o&&(e={type:"bool",value:!1}),t=e);return t}())===o&&(t=Mo())===o&&(t=function(){var t,e,n,u,s,a,i;t=su,(e=Fs())===o&&(e=ks())===o&&(e=Ps())===o&&(e=$s());if(e!==o)if(ta()!==o){if(n=su,39===r.charCodeAt(su)?(u="'",su++):(u=o,0===lu&&Lu(Z)),u!==o){for(s=[],a=$o();a!==o;)s.push(a),a=$o();s!==o?(39===r.charCodeAt(su)?(a="'",su++):(a=o,0===lu&&Lu(Z)),a!==o?n=u=[u,s,a]:(su=n,n=o)):(su=n,n=o);}else su=n,n=o;n!==o?(c=n,e={type:e.toLowerCase(),value:c[1].join("")},t=e):(su=t,t=o);}else su=t,t=o;else su=t,t=o;var c;t===o&&(t=su,(e=Hs())!==o&&ta()!==o?((n=zs())===o&&(n=null),n!==o&&(u=ta())!==o?((s=Js())===o&&(s=null),s!==o?((a=(a=function(r,t,e){if(t&&e)return !0}(0,n,s))?o:void 0)!==o&&ta()!==o?("on update current_timestamp"===r.substr(su,27).toLowerCase()?(i=r.substr(su,27),su+=27):(i=o,0===lu&&Lu(Kr)),i===o&&(i=null),i!==o?(e=function(r,t,e,n){return {type:"origin",value:(n?`${r} ${n}`:r).toLowerCase()}}(e,0,0,i),t=e):(su=t,t=o)):(su=t,t=o)):(su=t,t=o)):(su=t,t=o)):(su=t,t=o));return t}()),t}function Mo(){var t,e;return t=su,(e=function(){var t,e,n,u;t=su,"null"===r.substr(su,4).toLowerCase()?(e=r.substr(su,4),su+=4):(e=o,0===lu&&Lu(At));e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o);return t}())!==o&&(e={type:"null",value:null}),t=e}function Do(){var t,e,n,u,s;if(t=su,e=su,39===r.charCodeAt(su)?(n="'",su++):(n=o,0===lu&&Lu(Z)),n!==o){for(u=[],s=$o();s!==o;)u.push(s),s=$o();u!==o?(39===r.charCodeAt(su)?(s="'",su++):(s=o,0===lu&&Lu(Z)),s!==o?e=n=[n,u,s]:(su=e,e=o)):(su=e,e=o);}else su=e,e=o;if(e!==o&&(e=Vr(e)),(t=e)===o){if(t=su,e=su,34===r.charCodeAt(su)?(n='"',su++):(n=o,0===lu&&Lu(gr)),n!==o){for(u=[],s=ko();s!==o;)u.push(s),s=ko();u!==o?(34===r.charCodeAt(su)?(s='"',su++):(s=o,0===lu&&Lu(gr)),s!==o?e=n=[n,u,s]:(su=e,e=o)):(su=e,e=o);}else su=e,e=o;e!==o&&(e=Vr(e)),t=e;}return t}function ko(){var t;return qr.test(r.charAt(su))?(t=r.charAt(su),su++):(t=o,0===lu&&Lu(Zr)),t===o&&(t=Fo()),t}function $o(){var t;return zr.test(r.charAt(su))?(t=r.charAt(su),su++):(t=o,0===lu&&Lu(Jr)),t===o&&(t=Fo()),t}function Fo(){var t,e,n,u,s,a,i,c,l,f;return t=su,"\\'"===r.substr(su,2)?(e="\\'",su+=2):(e=o,0===lu&&Lu(Qr)),e!==o&&(e="'"),(t=e)===o&&(t=su,'\\"'===r.substr(su,2)?(e='\\"',su+=2):(e=o,0===lu&&Lu(rt)),e!==o&&(e='"'),(t=e)===o&&(t=su,"\\\\"===r.substr(su,2)?(e="\\\\",su+=2):(e=o,0===lu&&Lu(tt)),e!==o&&(e="\\"),(t=e)===o&&(t=su,"\\/"===r.substr(su,2)?(e="\\/",su+=2):(e=o,0===lu&&Lu(et)),e!==o&&(e="/"),(t=e)===o&&(t=su,"\\b"===r.substr(su,2)?(e="\\b",su+=2):(e=o,0===lu&&Lu(nt)),e!==o&&(e="\b"),(t=e)===o&&(t=su,"\\f"===r.substr(su,2)?(e="\\f",su+=2):(e=o,0===lu&&Lu(ut)),e!==o&&(e="\f"),(t=e)===o&&(t=su,"\\n"===r.substr(su,2)?(e="\\n",su+=2):(e=o,0===lu&&Lu(ot)),e!==o&&(e="\n"),(t=e)===o&&(t=su,"\\r"===r.substr(su,2)?(e="\\r",su+=2):(e=o,0===lu&&Lu(st)),e!==o&&(e="\r"),(t=e)===o&&(t=su,"\\t"===r.substr(su,2)?(e="\\t",su+=2):(e=o,0===lu&&Lu(at)),e!==o&&(e="\t"),(t=e)===o&&(t=su,"\\u"===r.substr(su,2)?(e="\\u",su+=2):(e=o,0===lu&&Lu(it)),e!==o&&(n=Xo())!==o&&(u=Xo())!==o&&(s=Xo())!==o&&(a=Xo())!==o?(i=n,c=u,l=s,f=a,t=e=String.fromCharCode(parseInt("0x"+i+c+l+f))):(su=t,t=o),t===o&&(t=su,92===r.charCodeAt(su)?(e="\\",su++):(e=o,0===lu&&Lu(ct)),e!==o&&(e="\\"),t=e)))))))))),t}function Po(){var r,t,e;return r=su,(t=function(){var r,t,e,n;r=su,(t=Ho())!==o&&(e=Go())!==o&&(n=jo())!==o?(r=t={type:"bigint",value:t+e+n}):(su=r,r=o);r===o&&(r=su,(t=Ho())!==o&&(e=Go())!==o?(t=function(r,t){const e=r+t;return ma(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e),r=t):(su=r,r=o),r===o&&(r=su,(t=Ho())!==o&&(e=jo())!==o?(t=function(r,t){return {type:"bigint",value:r+t}}(t,e),r=t):(su=r,r=o),r===o&&(r=su,(t=Ho())!==o&&(t=function(r){return ma(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t)));return r}())!==o&&(t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),r=t}function Ho(){var t,e,n;return (t=Yo())===o&&(t=Bo())===o&&(t=su,45===r.charCodeAt(su)?(e="-",su++):(e=o,0===lu&&Lu(mr)),e===o&&(43===r.charCodeAt(su)?(e="+",su++):(e=o,0===lu&&Lu(Tr))),e!==o&&(n=Yo())!==o?(t=e="-"+n):(su=t,t=o),t===o&&(t=su,45===r.charCodeAt(su)?(e="-",su++):(e=o,0===lu&&Lu(mr)),e===o&&(43===r.charCodeAt(su)?(e="+",su++):(e=o,0===lu&&Lu(Tr))),e!==o&&(n=Bo())!==o?(t=e="-"+n):(su=t,t=o))),t}function Go(){var t,e,n;return t=su,46===r.charCodeAt(su)?(e=".",su++):(e=o,0===lu&&Lu(vt)),e!==o&&(n=Yo())!==o?(t=e="."+n):(su=t,t=o),t}function jo(){var t,e,n;return t=su,(e=function(){var t,e,n;t=su,pt.test(r.charAt(su))?(e=r.charAt(su),su++):(e=o,0===lu&&Lu(wt));e!==o?(Et.test(r.charAt(su))?(n=r.charAt(su),su++):(n=o,0===lu&&Lu(ht)),n===o&&(n=null),n!==o?(t=e=e+(null!==(u=n)?u:"")):(su=t,t=o)):(su=t,t=o);var u;return t}())!==o&&(n=Yo())!==o?(t=e=e+n):(su=t,t=o),t}function Yo(){var r,t,e;if(r=su,t=[],(e=Bo())!==o)for(;e!==o;)t.push(e),e=Bo();else t=o;return t!==o&&(t=t.join("")),r=t}function Bo(){var t;return bt.test(r.charAt(su))?(t=r.charAt(su),su++):(t=o,0===lu&&Lu(dt)),t}function Xo(){var t;return Lt.test(r.charAt(su))?(t=r.charAt(su),su++):(t=o,0===lu&&Lu(Ct)),t}function Wo(){var t,e,n,u;return t=su,"default"===r.substr(su,7).toLowerCase()?(e=r.substr(su,7),su+=7):(e=o,0===lu&&Lu(C)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o),t}function Vo(){var t,e,n,u;return t=su,"to"===r.substr(su,2).toLowerCase()?(e=r.substr(su,2),su+=2):(e=o,0===lu&&Lu(mt)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o),t}function Ko(){var t,e,n,u;return t=su,"drop"===r.substr(su,4).toLowerCase()?(e=r.substr(su,4),su+=4):(e=o,0===lu&&Lu(It)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="DROP"):(su=t,t=o)):(su=t,t=o),t}function qo(){var t,e,n,u;return t=su,"create"===r.substr(su,6).toLowerCase()?(e=r.substr(su,6),su+=6):(e=o,0===lu&&Lu(Ot)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o),t}function Zo(){var t,e,n,u;return t=su,"temporary"===r.substr(su,9).toLowerCase()?(e=r.substr(su,9),su+=9):(e=o,0===lu&&Lu(Ut)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o),t}function zo(){var t,e,n,u;return t=su,"if not exists"===r.substr(su,13).toLowerCase()?(e=r.substr(su,13),su+=13):(e=o,0===lu&&Lu(xt)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o),t}function Jo(){var t,e,n,u;return t=su,"replace"===r.substr(su,7).toLowerCase()?(e=r.substr(su,7),su+=7):(e=o,0===lu&&Lu($t)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o),t}function Qo(){var t,e,n,u;return t=su,"rename"===r.substr(su,6).toLowerCase()?(e=r.substr(su,6),su+=6):(e=o,0===lu&&Lu(Ft)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o),t}function rs(){var t,e,n,u;return t=su,"partition"===r.substr(su,9).toLowerCase()?(e=r.substr(su,9),su+=9):(e=o,0===lu&&Lu(Ht)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="PARTITION"):(su=t,t=o)):(su=t,t=o),t}function ts(){var t,e,n,u;return t=su,"into"===r.substr(su,4).toLowerCase()?(e=r.substr(su,4),su+=4):(e=o,0===lu&&Lu(Gt)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="INTO"):(su=t,t=o)):(su=t,t=o),t}function es(){var t,e,n,u;return t=su,"set"===r.substr(su,3).toLowerCase()?(e=r.substr(su,3),su+=3):(e=o,0===lu&&Lu(Bt)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o),t}function ns(){var t,e,n,u;return t=su,"as"===r.substr(su,2).toLowerCase()?(e=r.substr(su,2),su+=2):(e=o,0===lu&&Lu(Wt)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o),t}function us(){var t,e,n,u;return t=su,"table"===r.substr(su,5).toLowerCase()?(e=r.substr(su,5),su+=5):(e=o,0===lu&&Lu(Vt)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="TABLE"):(su=t,t=o)):(su=t,t=o),t}function os(){var t,e,n,u;return t=su,"tables"===r.substr(su,6).toLowerCase()?(e=r.substr(su,6),su+=6):(e=o,0===lu&&Lu(Kt)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="TABLES"):(su=t,t=o)):(su=t,t=o),t}function ss(){var t,e,n,u;return t=su,"join"===r.substr(su,4).toLowerCase()?(e=r.substr(su,4),su+=4):(e=o,0===lu&&Lu(re)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o),t}function as(){var t,e,n,u;return t=su,"outer"===r.substr(su,5).toLowerCase()?(e=r.substr(su,5),su+=5):(e=o,0===lu&&Lu(te)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o),t}function is(){var t,e,n,u;return t=su,"union"===r.substr(su,5).toLowerCase()?(e=r.substr(su,5),su+=5):(e=o,0===lu&&Lu(ne)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o),t}function cs(){var t,e,n,u;return t=su,"using"===r.substr(su,5).toLowerCase()?(e=r.substr(su,5),su+=5):(e=o,0===lu&&Lu(oe)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o),t}function ls(){var t,e,n,u;return t=su,"with"===r.substr(su,4).toLowerCase()?(e=r.substr(su,4),su+=4):(e=o,0===lu&&Lu(ir)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o),t}function fs(){var t,e,n,u;return t=su,"by"===r.substr(su,2).toLowerCase()?(e=r.substr(su,2),su+=2):(e=o,0===lu&&Lu(ie)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o),t}function vs(){var t,e,n,u;return t=su,"all"===r.substr(su,3).toLowerCase()?(e=r.substr(su,3),su+=3):(e=o,0===lu&&Lu(Le)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="ALL"):(su=t,t=o)):(su=t,t=o),t}function bs(){var t,e,n,u;return t=su,"distinct"===r.substr(su,8).toLowerCase()?(e=r.substr(su,8),su+=8):(e=o,0===lu&&Lu(Ce)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="DISTINCT"):(su=t,t=o)):(su=t,t=o),t}function ds(){var t,e,n,u;return t=su,"between"===r.substr(su,7).toLowerCase()?(e=r.substr(su,7),su+=7):(e=o,0===lu&&Lu(pe)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="BETWEEN"):(su=t,t=o)):(su=t,t=o),t}function Ls(){var t,e,n,u;return t=su,"in"===r.substr(su,2).toLowerCase()?(e=r.substr(su,2),su+=2):(e=o,0===lu&&Lu(we)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="IN"):(su=t,t=o)):(su=t,t=o),t}function Cs(){var t,e,n,u;return t=su,"is"===r.substr(su,2).toLowerCase()?(e=r.substr(su,2),su+=2):(e=o,0===lu&&Lu(Ee)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="IS"):(su=t,t=o)):(su=t,t=o),t}function ps(){var t,e,n,u;return t=su,"like"===r.substr(su,4).toLowerCase()?(e=r.substr(su,4),su+=4):(e=o,0===lu&&Lu(he)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="LIKE"):(su=t,t=o)):(su=t,t=o),t}function ws(){var t,e,n,u;return t=su,"exists"===r.substr(su,6).toLowerCase()?(e=r.substr(su,6),su+=6):(e=o,0===lu&&Lu(Ae)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="EXISTS"):(su=t,t=o)):(su=t,t=o),t}function Es(){var t,e,n,u;return t=su,"not"===r.substr(su,3).toLowerCase()?(e=r.substr(su,3),su+=3):(e=o,0===lu&&Lu(ye)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="NOT"):(su=t,t=o)):(su=t,t=o),t}function hs(){var t,e,n,u;return t=su,"and"===r.substr(su,3).toLowerCase()?(e=r.substr(su,3),su+=3):(e=o,0===lu&&Lu(Te)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="AND"):(su=t,t=o)):(su=t,t=o),t}function As(){var t,e,n,u;return t=su,"or"===r.substr(su,2).toLowerCase()?(e=r.substr(su,2),su+=2):(e=o,0===lu&&Lu(me)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="OR"):(su=t,t=o)):(su=t,t=o),t}function ys(){var t,e,n,u;return t=su,"case"===r.substr(su,4).toLowerCase()?(e=r.substr(su,4),su+=4):(e=o,0===lu&&Lu(Oe)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o),t}function Ts(){var t,e,n,u;return t=su,"cast"===r.substr(su,4).toLowerCase()?(e=r.substr(su,4),su+=4):(e=o,0===lu&&Lu(ke)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?t=e=[e,n]:(su=t,t=o)):(su=t,t=o),t}function ms(){var t,e,n,u;return t=su,"char"===r.substr(su,4).toLowerCase()?(e=r.substr(su,4),su+=4):(e=o,0===lu&&Lu($e)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="CHAR"):(su=t,t=o)):(su=t,t=o),t}function Ss(){var t,e,n,u;return t=su,"varchar"===r.substr(su,7).toLowerCase()?(e=r.substr(su,7),su+=7):(e=o,0===lu&&Lu(Fe)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="VARCHAR"):(su=t,t=o)):(su=t,t=o),t}function Is(){var t,e,n,u;return t=su,"numeric"===r.substr(su,7).toLowerCase()?(e=r.substr(su,7),su+=7):(e=o,0===lu&&Lu(Pe)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="NUMERIC"):(su=t,t=o)):(su=t,t=o),t}function Ns(){var t,e,n,u;return t=su,"decimal"===r.substr(su,7).toLowerCase()?(e=r.substr(su,7),su+=7):(e=o,0===lu&&Lu(He)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="DECIMAL"):(su=t,t=o)):(su=t,t=o),t}function Rs(){var t,e,n,u;return t=su,"unsigned"===r.substr(su,8).toLowerCase()?(e=r.substr(su,8),su+=8):(e=o,0===lu&&Lu(je)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="UNSIGNED"):(su=t,t=o)):(su=t,t=o),t}function _s(){var t,e,n,u;return t=su,"int"===r.substr(su,3).toLowerCase()?(e=r.substr(su,3),su+=3):(e=o,0===lu&&Lu(Ye)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="INT"):(su=t,t=o)):(su=t,t=o),t}function gs(){var t,e,n,u;return t=su,"integer"===r.substr(su,7).toLowerCase()?(e=r.substr(su,7),su+=7):(e=o,0===lu&&Lu(Xe)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="INTEGER"):(su=t,t=o)):(su=t,t=o),t}function Os(){var t,e,n,u;return t=su,"smallint"===r.substr(su,8).toLowerCase()?(e=r.substr(su,8),su+=8):(e=o,0===lu&&Lu(Ve)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="SMALLINT"):(su=t,t=o)):(su=t,t=o),t}function Us(){var t,e,n,u;return t=su,"tinyint"===r.substr(su,7).toLowerCase()?(e=r.substr(su,7),su+=7):(e=o,0===lu&&Lu(Ke)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="TINYINT"):(su=t,t=o)):(su=t,t=o),t}function xs(){var t,e,n,u;return t=su,"bigint"===r.substr(su,6).toLowerCase()?(e=r.substr(su,6),su+=6):(e=o,0===lu&&Lu(Qe)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="BIGINT"):(su=t,t=o)):(su=t,t=o),t}function Ms(){var t,e,n,u;return t=su,"float"===r.substr(su,5).toLowerCase()?(e=r.substr(su,5),su+=5):(e=o,0===lu&&Lu(rn)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="FLOAT"):(su=t,t=o)):(su=t,t=o),t}function Ds(){var t,e,n,u;return t=su,"double"===r.substr(su,6).toLowerCase()?(e=r.substr(su,6),su+=6):(e=o,0===lu&&Lu(tn)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="DOUBLE"):(su=t,t=o)):(su=t,t=o),t}function ks(){var t,e,n,u;return t=su,"date"===r.substr(su,4).toLowerCase()?(e=r.substr(su,4),su+=4):(e=o,0===lu&&Lu(en)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="DATE"):(su=t,t=o)):(su=t,t=o),t}function $s(){var t,e,n,u;return t=su,"datetime"===r.substr(su,8).toLowerCase()?(e=r.substr(su,8),su+=8):(e=o,0===lu&&Lu(nn)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="DATETIME"):(su=t,t=o)):(su=t,t=o),t}function Fs(){var t,e,n,u;return t=su,"time"===r.substr(su,4).toLowerCase()?(e=r.substr(su,4),su+=4):(e=o,0===lu&&Lu(un)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="TIME"):(su=t,t=o)):(su=t,t=o),t}function Ps(){var t,e,n,u;return t=su,"timestamp"===r.substr(su,9).toLowerCase()?(e=r.substr(su,9),su+=9):(e=o,0===lu&&Lu(on)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="TIMESTAMP"):(su=t,t=o)):(su=t,t=o),t}function Hs(){var t,e,n,u;return t=su,"current_timestamp"===r.substr(su,17).toLowerCase()?(e=r.substr(su,17),su+=17):(e=o,0===lu&&Lu(wn)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="CURRENT_TIMESTAMP"):(su=t,t=o)):(su=t,t=o),t}function Gs(){var t;return (t=function(){var t;return "@@"===r.substr(su,2)?(t="@@",su+=2):(t=o,0===lu&&Lu(Nn)),t}())===o&&(t=function(){var t;return 64===r.charCodeAt(su)?(t="@",su++):(t=o,0===lu&&Lu(In)),t}())===o&&(t=function(){var t;return 36===r.charCodeAt(su)?(t="$",su++):(t=o,0===lu&&Lu(Rn)),t}()),t}function js(){var t;return 61===r.charCodeAt(su)?(t="=",su++):(t=o,0===lu&&Lu(vr)),t}function Ys(){var t,e,n,u;return t=su,"add"===r.substr(su,3).toLowerCase()?(e=r.substr(su,3),su+=3):(e=o,0===lu&&Lu(Un)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="ADD"):(su=t,t=o)):(su=t,t=o),t}function Bs(){var t,e,n,u;return t=su,"column"===r.substr(su,6).toLowerCase()?(e=r.substr(su,6),su+=6):(e=o,0===lu&&Lu(xn)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="COLUMN"):(su=t,t=o)):(su=t,t=o),t}function Xs(){var t,e,n,u;return t=su,"index"===r.substr(su,5).toLowerCase()?(e=r.substr(su,5),su+=5):(e=o,0===lu&&Lu(Mn)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="INDEX"):(su=t,t=o)):(su=t,t=o),t}function Ws(){var t,e,n,u;return t=su,"key"===r.substr(su,3).toLowerCase()?(e=r.substr(su,3),su+=3):(e=o,0===lu&&Lu(v)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="KEY"):(su=t,t=o)):(su=t,t=o),t}function Vs(){var t,e,n,u;return t=su,"comment"===r.substr(su,7).toLowerCase()?(e=r.substr(su,7),su+=7):(e=o,0===lu&&Lu($n)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="COMMENT"):(su=t,t=o)):(su=t,t=o),t}function Ks(){var t;return 46===r.charCodeAt(su)?(t=".",su++):(t=o,0===lu&&Lu(vt)),t}function qs(){var t;return 44===r.charCodeAt(su)?(t=",",su++):(t=o,0===lu&&Lu(Wn)),t}function Zs(){var t;return 42===r.charCodeAt(su)?(t="*",su++):(t=o,0===lu&&Lu(Sr)),t}function zs(){var t;return 40===r.charCodeAt(su)?(t="(",su++):(t=o,0===lu&&Lu(ur)),t}function Js(){var t;return 41===r.charCodeAt(su)?(t=")",su++):(t=o,0===lu&&Lu(or)),t}function Qs(){var t;return 59===r.charCodeAt(su)?(t=";",su++):(t=o,0===lu&&Lu(qn)),t}function ra(){var t;return (t=function(){var t;return "||"===r.substr(su,2)?(t="||",su+=2):(t=o,0===lu&&Lu(Zn)),t}())===o&&(t=function(){var t;return "&&"===r.substr(su,2)?(t="&&",su+=2):(t=o,0===lu&&Lu(zn)),t}()),t}function ta(){var r,t;for(r=[],(t=sa())===o&&(t=na());t!==o;)r.push(t),(t=sa())===o&&(t=na());return r}function ea(){var r,t;if(r=[],(t=sa())===o&&(t=na()),t!==o)for(;t!==o;)r.push(t),(t=sa())===o&&(t=na());else r=o;return r}function na(){var t;return (t=function(){var t,e,n,u,s,a;t=su,"/*"===r.substr(su,2)?(e="/*",su+=2):(e=o,0===lu&&Lu(Jn));if(e!==o){for(n=[],u=su,s=su,lu++,"*/"===r.substr(su,2)?(a="*/",su+=2):(a=o,0===lu&&Lu(Qn)),lu--,a===o?s=void 0:(su=s,s=o),s!==o&&(a=oa())!==o?u=s=[s,a]:(su=u,u=o);u!==o;)n.push(u),u=su,s=su,lu++,"*/"===r.substr(su,2)?(a="*/",su+=2):(a=o,0===lu&&Lu(Qn)),lu--,a===o?s=void 0:(su=s,s=o),s!==o&&(a=oa())!==o?u=s=[s,a]:(su=u,u=o);n!==o?("*/"===r.substr(su,2)?(u="*/",su+=2):(u=o,0===lu&&Lu(Qn)),u!==o?t=e=[e,n,u]:(su=t,t=o)):(su=t,t=o);}else su=t,t=o;return t}())===o&&(t=function(){var t,e,n,u,s,a;t=su,"--"===r.substr(su,2)?(e="--",su+=2):(e=o,0===lu&&Lu(ru));if(e!==o){for(n=[],u=su,s=su,lu++,a=aa(),lu--,a===o?s=void 0:(su=s,s=o),s!==o&&(a=oa())!==o?u=s=[s,a]:(su=u,u=o);u!==o;)n.push(u),u=su,s=su,lu++,a=aa(),lu--,a===o?s=void 0:(su=s,s=o),s!==o&&(a=oa())!==o?u=s=[s,a]:(su=u,u=o);n!==o?t=e=[e,n]:(su=t,t=o);}else su=t,t=o;return t}())===o&&(t=function(){var t,e,n,u,s,a;t=su,35===r.charCodeAt(su)?(e="#",su++):(e=o,0===lu&&Lu(tu));if(e!==o){for(n=[],u=su,s=su,lu++,a=aa(),lu--,a===o?s=void 0:(su=s,s=o),s!==o&&(a=oa())!==o?u=s=[s,a]:(su=u,u=o);u!==o;)n.push(u),u=su,s=su,lu++,a=aa(),lu--,a===o?s=void 0:(su=s,s=o),s!==o&&(a=oa())!==o?u=s=[s,a]:(su=u,u=o);n!==o?t=e=[e,n]:(su=t,t=o);}else su=t,t=o;return t}()),t}function ua(){var r,t,e,n,u,s,a;return r=su,(t=Vs())!==o&&ta()!==o?((e=js())===o&&(e=null),e!==o&&ta()!==o&&(n=Do())!==o?(s=e,a=n,r=t={type:(u=t).toLowerCase(),keyword:u.toLowerCase(),symbol:s,value:a}):(su=r,r=o)):(su=r,r=o),r}function oa(){var t;return r.length>su?(t=r.charAt(su),su++):(t=o,0===lu&&Lu(eu)),t}function sa(){var t;return nu.test(r.charAt(su))?(t=r.charAt(su),su++):(t=o,0===lu&&Lu(uu)),t}function aa(){var t,e;if((t=function(){var t,e;t=su,lu++,r.length>su?(e=r.charAt(su),su++):(e=o,0===lu&&Lu(eu));lu--,e===o?t=void 0:(su=t,t=o);return t}())===o)if(t=[],lt.test(r.charAt(su))?(e=r.charAt(su),su++):(e=o,0===lu&&Lu(ft)),e!==o)for(;e!==o;)t.push(e),lt.test(r.charAt(su))?(e=r.charAt(su),su++):(e=o,0===lu&&Lu(ft));else t=o;return t}function ia(){var t,e;return t=su,_a=[],(void 0)!==o&&ta()!==o?((e=ca())===o&&(e=function(){var t,e;t=su,function(){var t;return "return"===r.substr(su,6).toLowerCase()?(t=r.substr(su,6),su+=6):(t=o,0===lu&&Lu(_n)),t}()!==o&&ta()!==o&&(e=la())!==o?(t={type:"return",expr:e}):(su=t,t=o);return t}()),e!==o?(t={stmt:e,vars:_a}):(su=t,t=o)):(su=t,t=o),t}function ca(){var t,e,n,u;return t=su,(e=pa())===o&&(e=wa()),e!==o&&ta()!==o?((n=function(){var t;return ":="===r.substr(su,2)?(t=":=",su+=2):(t=o,0===lu&&Lu(gn)),t}())===o&&(n=js()),n!==o&&ta()!==o&&(u=la())!==o?(t=e={type:"assign",left:e,symbol:n,right:u}):(su=t,t=o)):(su=t,t=o),t}function la(){var t;return (t=Ou())===o&&(t=function(){var r,t,e,n,u;r=su,(t=pa())!==o&&ta()!==o&&(e=Ku())!==o&&ta()!==o&&(n=pa())!==o&&ta()!==o&&(u=Zu())!==o?(r=t={type:"join",ltable:t,rtable:n,op:e,on:u}):(su=r,r=o);return r}())===o&&(t=fa())===o&&(t=function(){var t,e;t=su,function(){var t;return 91===r.charCodeAt(su)?(t="[",su++):(t=o,0===lu&&Lu(Vn)),t}()!==o&&ta()!==o&&(e=Ca())!==o&&ta()!==o&&function(){var t;return 93===r.charCodeAt(su)?(t="]",su++):(t=o,0===lu&&Lu(Kn)),t}()!==o?(t={type:"array",value:e}):(su=t,t=o);return t}()),t}function fa(){var r,t,e,n,u,s,a,i;if(r=su,(t=va())!==o){for(e=[],n=su,(u=ta())!==o&&(s=Eo())!==o&&(a=ta())!==o&&(i=va())!==o?n=u=[u,s,a,i]:(su=n,n=o);n!==o;)e.push(n),n=su,(u=ta())!==o&&(s=Eo())!==o&&(a=ta())!==o&&(i=va())!==o?n=u=[u,s,a,i]:(su=n,n=o);e!==o?(r=t=dr(t,e)):(su=r,r=o);}else su=r,r=o;return r}function va(){var r,t,e,n,u,s,a,i;if(r=su,(t=ba())!==o){for(e=[],n=su,(u=ta())!==o&&(s=Ao())!==o&&(a=ta())!==o&&(i=ba())!==o?n=u=[u,s,a,i]:(su=n,n=o);n!==o;)e.push(n),n=su,(u=ta())!==o&&(s=Ao())!==o&&(a=ta())!==o&&(i=ba())!==o?n=u=[u,s,a,i]:(su=n,n=o);e!==o?(r=t=dr(t,e)):(su=r,r=o);}else su=r,r=o;return r}function ba(){var r,t;return (r=xo())===o&&(r=pa())===o&&(r=La())===o&&(r=Oo())===o&&(r=su,zs()!==o&&ta()!==o&&(t=fa())!==o&&ta()!==o&&Js()!==o?(r=Rr(t)):(su=r,r=o)),r}function da(){var r,t,e,n,u,s,a;return r=su,(t=mo())!==o?(e=su,(n=ta())!==o&&(u=Ks())!==o&&(s=ta())!==o&&(a=mo())!==o?e=n=[n,u,s,a]:(su=e,e=o),e===o&&(e=null),e!==o?(r=t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e)):(su=r,r=o)):(su=r,r=o),r}function La(){var r,t,e;return r=su,(t=da())!==o&&ta()!==o&&zs()!==o&&ta()!==o?((e=Ca())===o&&(e=null),e!==o&&ta()!==o&&Js()!==o?(r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(su=r,r=o)):(su=r,r=o),r===o&&(r=su,(t=da())!==o&&(t=function(r){return {type:"function",name:r,args:null}}(t)),r=t),r}function Ca(){var r,t,e,n,u,s,a,c;if(r=su,(t=ba())!==o){for(e=[],n=su,(u=ta())!==o&&(s=qs())!==o&&(a=ta())!==o&&(c=ba())!==o?n=u=[u,s,a,c]:(su=n,n=o);n!==o;)e.push(n),n=su,(u=ta())!==o&&(s=qs())!==o&&(a=ta())!==o&&(c=ba())!==o?n=u=[u,s,a,c]:(su=n,n=o);e!==o?(r=t=i(t,e)):(su=r,r=o);}else su=r,r=o;return r}function pa(){var r,t,e,n,u;return r=su,(t=Gs())!==o&&(e=wa())!==o?(n=t,u=e,r=t={type:"var",...u,prefix:n}):(su=r,r=o),r}function wa(){var t,e,n,u,s;return t=su,(e=No())!==o&&(n=function(){var t,e,n,u,s;t=su,e=[],n=su,46===r.charCodeAt(su)?(u=".",su++):(u=o,0===lu&&Lu(vt));u!==o&&(s=No())!==o?n=u=[u,s]:(su=n,n=o);for(;n!==o;)e.push(n),n=su,46===r.charCodeAt(su)?(u=".",su++):(u=o,0===lu&&Lu(vt)),u!==o&&(s=No())!==o?n=u=[u,s]:(su=n,n=o);e!==o&&(e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return t=e}())!==o?(u=e,s=n,_a.push(u),t=e={type:"var",name:u,members:s,prefix:null}):(su=t,t=o),t}function Ea(){var t;return (t=function(){var t,e,n,u;t=su,(e=ms())===o&&(e=Ss());if(e!==o)if(ta()!==o)if(zs()!==o)if(ta()!==o){if(n=[],bt.test(r.charAt(su))?(u=r.charAt(su),su++):(u=o,0===lu&&Lu(dt)),u!==o)for(;u!==o;)n.push(u),bt.test(r.charAt(su))?(u=r.charAt(su),su++):(u=o,0===lu&&Lu(dt));else n=o;n!==o&&(u=ta())!==o&&Js()!==o?(e={dataType:e,length:parseInt(n.join(""),10)},t=e):(su=t,t=o);}else su=t,t=o;else su=t,t=o;else su=t,t=o;else su=t,t=o;t===o&&(t=su,(e=ms())!==o&&(e=ou(e)),(t=e)===o&&(t=su,(e=Ss())!==o&&(e=ou(e)),t=e));return t}())===o&&(t=function(){var t,e,n,u,s,a,i,c,l,f,v,b;t=su,(e=Is())===o&&(e=Ns())===o&&(e=_s())===o&&(e=gs())===o&&(e=Os())===o&&(e=Us())===o&&(e=xs())===o&&(e=Ms())===o&&(e=Ds());if(e!==o)if((n=ta())!==o)if((u=zs())!==o)if((s=ta())!==o){if(a=[],bt.test(r.charAt(su))?(i=r.charAt(su),su++):(i=o,0===lu&&Lu(dt)),i!==o)for(;i!==o;)a.push(i),bt.test(r.charAt(su))?(i=r.charAt(su),su++):(i=o,0===lu&&Lu(dt));else a=o;if(a!==o)if((i=ta())!==o){if(c=su,(l=qs())!==o)if((f=ta())!==o){if(v=[],bt.test(r.charAt(su))?(b=r.charAt(su),su++):(b=o,0===lu&&Lu(dt)),b!==o)for(;b!==o;)v.push(b),bt.test(r.charAt(su))?(b=r.charAt(su),su++):(b=o,0===lu&&Lu(dt));else v=o;v!==o?c=l=[l,f,v]:(su=c,c=o);}else su=c,c=o;else su=c,c=o;c===o&&(c=null),c!==o&&(l=ta())!==o&&(f=Js())!==o&&(v=ta())!==o?((b=ha())===o&&(b=null),b!==o?(d=c,L=b,e={dataType:e,length:parseInt(a.join(""),10),scale:d&&parseInt(d[2].join(""),10),parentheses:!0,suffix:L},t=e):(su=t,t=o)):(su=t,t=o);}else su=t,t=o;else su=t,t=o;}else su=t,t=o;else su=t,t=o;else su=t,t=o;else su=t,t=o;var d,L;if(t===o){if(t=su,(e=Is())===o&&(e=Ns())===o&&(e=_s())===o&&(e=gs())===o&&(e=Os())===o&&(e=Us())===o&&(e=xs())===o&&(e=Ms())===o&&(e=Ds()),e!==o){if(n=[],bt.test(r.charAt(su))?(u=r.charAt(su),su++):(u=o,0===lu&&Lu(dt)),u!==o)for(;u!==o;)n.push(u),bt.test(r.charAt(su))?(u=r.charAt(su),su++):(u=o,0===lu&&Lu(dt));else n=o;n!==o&&(u=ta())!==o?((s=ha())===o&&(s=null),s!==o?(e=function(r,t,e){return {dataType:r,length:parseInt(t.join(""),10),suffix:e}}(e,n,s),t=e):(su=t,t=o)):(su=t,t=o);}else su=t,t=o;t===o&&(t=su,(e=Is())===o&&(e=Ns())===o&&(e=_s())===o&&(e=gs())===o&&(e=Os())===o&&(e=Us())===o&&(e=xs())===o&&(e=Ms())===o&&(e=Ds()),e!==o&&(n=ta())!==o?((u=ha())===o&&(u=null),u!==o&&(s=ta())!==o?(e=function(r,t){return {dataType:r,suffix:t}}(e,u),t=e):(su=t,t=o)):(su=t,t=o));}return t}())===o&&(t=function(){var r,t;r=su,(t=ks())===o&&(t=$s())===o&&(t=Fs())===o&&(t=Ps());t!==o&&(t=ou(t));return r=t}())===o&&(t=function(){var t,e;t=su,(e=function(){var t,e,n,u;return t=su,"json"===r.substr(su,4).toLowerCase()?(e=r.substr(su,4),su+=4):(e=o,0===lu&&Lu(We)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="JSON"):(su=t,t=o)):(su=t,t=o),t}())!==o&&(e=ou(e));return t=e}())===o&&(t=function(){var t,e;t=su,(e=function(){var t,e,n,u;return t=su,"tinytext"===r.substr(su,8).toLowerCase()?(e=r.substr(su,8),su+=8):(e=o,0===lu&&Lu(qe)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="TINYTEXT"):(su=t,t=o)):(su=t,t=o),t}())===o&&(e=function(){var t,e,n,u;return t=su,"text"===r.substr(su,4).toLowerCase()?(e=r.substr(su,4),su+=4):(e=o,0===lu&&Lu(Ze)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="TEXT"):(su=t,t=o)):(su=t,t=o),t}())===o&&(e=function(){var t,e,n,u;return t=su,"mediumtext"===r.substr(su,10).toLowerCase()?(e=r.substr(su,10),su+=10):(e=o,0===lu&&Lu(ze)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="MEDIUMTEXT"):(su=t,t=o)):(su=t,t=o),t}())===o&&(e=function(){var t,e,n,u;return t=su,"longtext"===r.substr(su,8).toLowerCase()?(e=r.substr(su,8),su+=8):(e=o,0===lu&&Lu(Je)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="LONGTEXT"):(su=t,t=o)):(su=t,t=o),t}());e!==o&&(e={dataType:e});return t=e}()),t}function ha(){var t,e,n;return t=su,(e=Rs())===o&&(e=null),e!==o&&ta()!==o?((n=function(){var t,e,n,u;return t=su,"zerofill"===r.substr(su,8).toLowerCase()?(e=r.substr(su,8),su+=8):(e=o,0===lu&&Lu(Be)),e!==o?(n=su,lu++,u=Ro(),lu--,u===o?n=void 0:(su=n,n=o),n!==o?(t=e="ZEROFILL"):(su=t,t=o)):(su=t,t=o),t}())===o&&(n=null),n!==o?(t=e=function(r,t){const e=[];return r&&e.push(r),t&&e.push(t),e}(e,n)):(su=t,t=o)):(su=t,t=o),t}const Aa={ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,IS:!0,JOIN:!0,JSON:!0,KEY:!0,LEFT:!0,LIKE:!0,LIMIT:!0,LOW_PRIORITY:!0,NOT:!0,NULL:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,RECURSIVE:!0,RENAME:!0,READ:!0,RIGHT:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,STATUS:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,TYPE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WITH:!0,WHEN:!0,WHERE:!0,WRITE:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0};function ya(r,t){return {type:"unary_expr",operator:r,expr:t}}function Ta(r,t,e){return {type:"binary_expr",operator:r,left:t,right:e}}function ma(r){const t=n(Number.MAX_SAFE_INTEGER);return !(n(r)<t)}function Sa(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][3]);return e}function Ia(r,t){let e=r;for(let r=0;r<t.length;r++)e=Ta(t[r][1],e,t[r][3]);return e}function Na(r){const t=Ua[r];return t||(r||null)}function Ra(r){const t=[];for(let e of r.keys()){const r=e.split("::");if(!r){t.push(e);break}r&&r[1]&&(r[1]=Na(r[1])),t.push(r.join("::"));}return t}let _a=[];const ga=new Set,Oa=new Set,Ua={};if((e=a())!==o&&su===r.length)return e;throw e!==o&&su<r.length&&Lu({type:"end"}),Cu(cu,iu<r.length?r.charAt(iu):null,iu<r.length?du(iu,iu+1):du(iu,iu))}};},function(r,t,e){var n=e(0);function u(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,u);}!function(r,t){function e(){this.constructor=r;}e.prototype=t.prototype,r.prototype=new e;}(u,Error),u.buildMessage=function(r,t){var e={literal:function(r){return '"'+u(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?o(r.parts[t][0])+"-"+o(r.parts[t][1]):o(r.parts[t]);return "["+(r.inverted?"^":"")+e+"]"},any:function(r){return "any character"},end:function(r){return "end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function u(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}function o(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}return "Expected "+function(r){var t,n,u,o=new Array(r.length);for(t=0;t<r.length;t++)o[t]=(u=r[t],e[u.type](u));if(o.sort(),o.length>0){for(t=1,n=1;t<o.length;t++)o[t-1]!==o[t]&&(o[n]=o[t],n++);o.length=n;}switch(o.length){case 1:return o[0];case 2:return o[0]+" or "+o[1];default:return o.slice(0,-1).join(", ")+", or "+o[o.length-1]}}(r)+" but "+function(r){return r?'"'+u(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:u,parse:function(r,t){t=void 0!==t?t:{};var e,o={},s={start:yu},a=yu,i=function(r,t){return Fa(r,t)},c=Cu("AUTO_INCREMENT",!0),l=Cu("UNIQUE",!0),f=Cu("PRIMARY",!0),v=Cu("KEY",!0),b=Cu("COLUMN_FORMAT",!0),d=Cu("FIXED",!0),L=Cu("DYNAMIC",!0),C=Cu("DEFAULT",!0),p=Cu("STORAGE",!0),w=Cu("DISK",!0),E=Cu("MEMORY",!0),h=Cu("ALGORITHM",!0),A=Cu("INSTANT",!0),y=Cu("INPLACE",!0),T=Cu("COPY",!0),m=Cu("LOCK",!0),S=Cu("NONE",!0),I=Cu("SHARED",!0),N=Cu("EXCLUSIVE",!0),R=Cu("CHECK",!0),_=Cu("NOCHECK",!0),g=Cu("NOT",!0),O=Cu("FOR",!0),U=Cu("REPLICATION",!0),x=Cu("FOREIGN KEY",!0),M=Cu("MATCH FULL",!0),D=Cu("MATCH PARTIAL",!0),k=Cu("MATCH SIMPLE",!0),$=Cu("ON DELETE",!0),F=Cu("ON UPDATE",!0),P=Cu("RESTRICT",!0),H=Cu("CASCADE",!0),G=Cu("SET NULL",!0),j=Cu("NO ACTION",!0),Y=Cu("SET DEFAULT",!0),B=Cu("AVG_ROW_LENGTH",!0),X=Cu("KEY_BLOCK_SIZE",!0),W=Cu("MAX_ROWS",!0),V=Cu("MIN_ROWS",!0),K=Cu("STATS_SAMPLE_PAGES",!0),q=Cu("CHARACTER SET",!0),Z=Cu("CHARSET",!0),z=Cu("COLLATE",!0),J=Cu("CONNECTION",!0),Q=Cu("COMPRESSION",!0),rr=Cu("'",!1),tr=Cu("ZLIB",!0),er=Cu("LZ4",!0),nr=Cu("ENGINE",!0),ur=Cu("READ",!0),or=Cu("LOCAL",!0),sr=Cu("LOW_PRIORITY",!0),ar=Cu("WRITE",!0),ir=Cu("(",!1),cr=Cu(")",!1),lr=Cu("BTREE",!0),fr=Cu("HASH",!0),vr=Cu("WITH",!0),br=Cu("PARSER",!0),dr=Cu("VISIBLE",!0),Lr=Cu("INVISIBLE",!0),Cr=Cu("=",!1),pr=Cu("DUPLICATE",!0),wr=function(r,t){return Pa(r,t)},Er=Cu("!",!1),hr=function(r){return r[0]+" "+r[2]},Ar=Cu(">=",!1),yr=Cu(">",!1),Tr=Cu("<=",!1),mr=Cu("<>",!1),Sr=Cu("<",!1),Ir=Cu("!=",!1),Nr=Cu("+",!1),Rr=Cu("-",!1),_r=Cu("*",!1),gr=Cu("/",!1),Or=Cu("%",!1),Ur=function(r){return r.parentheses=!0,r},xr=Cu("?",!1),Mr=function(r){return !0===Ma[r.toUpperCase()]},Dr=Cu('"',!1),kr=/^[^"]/,$r=pu(['"'],!0,!1),Fr=function(r){return r.join("")},Pr=/^[^']/,Hr=pu(["'"],!0,!1),Gr=Cu("`",!1),jr=/^[^`]/,Yr=pu(["`"],!0,!1),Br=function(r,t){return r+t.join("")},Xr=/^[A-Za-z_]/,Wr=pu([["A","Z"],["a","z"],"_"],!1,!1),Vr=/^[A-Za-z0-9_]/,Kr=pu([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),qr=/^[A-Za-z0-9_:]/,Zr=pu([["A","Z"],["a","z"],["0","9"],"_",":"],!1,!1),zr=Cu(":",!1),Jr=function(r){return {type:"string",value:r[1].join("")}},Qr=Cu("ON UPDATE CURRENT_TIMESTAMP",!0),rt=/^[^"\\\0-\x1F\x7F]/,tt=pu(['"',"\\",["\0",""],""],!0,!1),et=/^[^'\\]/,nt=pu(["'","\\"],!0,!1),ut=Cu("\\'",!1),ot=Cu('\\"',!1),st=Cu("\\\\",!1),at=Cu("\\/",!1),it=Cu("\\b",!1),ct=Cu("\\f",!1),lt=Cu("\\n",!1),ft=Cu("\\r",!1),vt=Cu("\\t",!1),bt=Cu("\\u",!1),dt=Cu("\\",!1),Lt=/^[\n\r]/,Ct=pu(["\n","\r"],!1,!1),pt=Cu(".",!1),wt=/^[0-9]/,Et=pu([["0","9"]],!1,!1),ht=/^[0-9a-fA-F]/,At=pu([["0","9"],["a","f"],["A","F"]],!1,!1),yt=/^[eE]/,Tt=pu(["e","E"],!1,!1),mt=/^[+\-]/,St=pu(["+","-"],!1,!1),It=Cu("NULL",!0),Nt=Cu("NOT NULL",!0),Rt=Cu("TRUE",!0),_t=Cu("TO",!0),gt=Cu("FALSE",!0),Ot=(Cu("DROP",!0)),Ut=Cu("USE",!0),xt=Cu("ALTER",!0),Mt=Cu("SELECT",!0),Dt=Cu("UPDATE",!0),kt=Cu("CREATE",!0),$t=Cu("TEMPORARY",!0),Ft=Cu("IF NOT EXISTS",!0),Pt=Cu("DELETE",!0),Ht=Cu("INSERT",!0),Gt=Cu("RECURSIVE",!1),jt=Cu("REPLACE",!0),Yt=Cu("RENAME",!0),Bt=Cu("IGNORE",!0),Xt=(Cu("PARTITION",!0)),Wt=Cu("INTO",!0),Vt=Cu("FROM",!0),Kt=Cu("SET",!0),qt=Cu("UNLOCK",!0),Zt=Cu("AS",!0),zt=Cu("TABLE",!0),Jt=Cu("TABLES",!0),Qt=Cu("ON",!0),re=Cu("LEFT",!0),te=Cu("RIGHT",!0),ee=Cu("FULL",!0),ne=Cu("INNER",!0),ue=Cu("JOIN",!0),oe=Cu("OUTER",!0),se=Cu("OVER",!0),ae=Cu("UNION",!0),ie=Cu("VALUES",!0),ce=Cu("USING",!0),le=Cu("WHERE",!0),fe=Cu("GROUP",!0),ve=Cu("BY",!0),be=Cu("ORDER",!0),de=Cu("HAVING",!0),Le=Cu("LIMIT",!0),Ce=Cu("OFFSET",!0),pe=Cu("ASC",!0),we=Cu("DESC",!0),Ee=Cu("ALL",!0),he=Cu("DISTINCT",!0),Ae=Cu("BETWEEN",!0),ye=Cu("IN",!0),Te=Cu("IS",!0),me=Cu("LIKE",!0),Se=Cu("EXISTS",!0),Ie=Cu("AND",!0),Ne=Cu("OR",!0),Re=Cu("COUNT",!0),_e=Cu("MAX",!0),ge=Cu("MIN",!0),Oe=Cu("SUM",!0),Ue=Cu("AVG",!0),xe=Cu("CALL",!0),Me=Cu("CASE",!0),De=Cu("WHEN",!0),ke=Cu("THEN",!0),$e=Cu("ELSE",!0),Fe=Cu("END",!0),Pe=Cu("CAST",!0),He=Cu("CHAR",!0),Ge=Cu("VARCHAR",!0),je=Cu("NUMERIC",!0),Ye=Cu("DECIMAL",!0),Be=Cu("SIGNED",!0),Xe=Cu("UNSIGNED",!0),We=Cu("INT",!0),Ve=Cu("ZEROFILL",!0),Ke=Cu("INTEGER",!0),qe=Cu("JSON",!0),Ze=Cu("SMALLINT",!0),ze=Cu("TINYINT",!0),Je=Cu("TINYTEXT",!0),Qe=Cu("TEXT",!0),rn=Cu("MEDIUMTEXT",!0),tn=Cu("LONGTEXT",!0),en=Cu("BIGINT",!0),nn=Cu("FLOAT",!0),un=Cu("DOUBLE",!0),on=Cu("DATE",!0),sn=Cu("DATETIME",!0),an=Cu("TIME",!0),cn=Cu("TIMESTAMP",!0),ln=Cu("TRUNCATE",!0),fn=Cu("USER",!0),vn=Cu("CURRENT_DATE",!0),bn=(Cu("INTERVAL",!0)),dn=Cu("YEAR",!0),Ln=Cu("MONTH",!0),Cn=Cu("DAY",!0),pn=Cu("HOUR",!0),wn=Cu("MINUTE",!0),En=Cu("SECOND",!0),hn=Cu("CURRENT_TIME",!0),An=Cu("CURRENT_TIMESTAMP",!0),yn=Cu("CURRENT_USER",!0),Tn=Cu("SESSION_USER",!0),mn=Cu("SYSTEM_USER",!0),Sn=Cu("GLOBAL",!0),In=Cu("SESSION",!0),Nn=Cu("PERSIST",!0),Rn=Cu("PERSIST_ONLY",!0),_n=Cu("@",!1),gn=Cu("@@",!1),On=Cu("$",!1),Un=Cu("return",!0),xn=Cu(":=",!1),Mn=Cu("DUAL",!0),Dn=Cu("ADD",!0),kn=Cu("COLUMN",!0),$n=Cu("INDEX",!0),Fn=Cu("FULLTEXT",!0),Pn=Cu("SPATIAL",!0),Hn=Cu("COMMENT",!0),Gn=Cu("CONSTRAINT",!0),jn=Cu("REFERENCES",!0),Yn=Cu("SQL_CALC_FOUND_ROWS",!0),Bn=Cu("SQL_CACHE",!0),Xn=Cu("SQL_NO_CACHE",!0),Wn=Cu("SQL_SMALL_RESULT",!0),Vn=Cu("SQL_BIG_RESULT",!0),Kn=Cu("SQL_BUFFER_RESULT",!0),qn=Cu(",",!1),Zn=Cu("[",!1),zn=Cu("]",!1),Jn=Cu(";",!1),Qn=Cu("->",!1),ru=Cu("->>",!1),tu=Cu("||",!1),eu=Cu("&&",!1),nu=Cu("/*",!1),uu=Cu("*/",!1),ou=Cu("--",!1),su=Cu("#",!1),au={type:"any"},iu=/^[ \t\n\r]/,cu=pu([" ","\t","\n","\r"],!1,!1),lu=function(r){return {dataType:r}},fu=0,vu=[{line:1,column:1}],bu=0,du=[],Lu=0;if("startRule"in t){if(!(t.startRule in s))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=s[t.startRule];}function Cu(r,t){return {type:"literal",text:r,ignoreCase:t}}function pu(r,t,e){return {type:"class",parts:r,inverted:t,ignoreCase:e}}function wu(t){var e,n=vu[t];if(n)return n;for(e=t-1;!vu[e];)e--;for(n={line:(n=vu[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return vu[t]=n,n}function Eu(r,t){var e=wu(r),n=wu(t);return {start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function hu(r){fu<bu||(fu>bu&&(bu=fu,du=[]),du.push(r));}function Au(r,t,e){return new u(u.buildMessage(r,t),r,t,e)}function yu(){var r,t;return r=fu,da()!==o?((t=function(){var r,t,e,n,u,s,a,i;if(r=fu,(t=mu())!==o){if(e=[],n=fu,(u=da())!==o&&(s=va())!==o&&(a=da())!==o&&(i=mu())!==o?n=u=[u,s,a,i]:(fu=n,n=o),n!==o)for(;n!==o;)e.push(n),n=fu,(u=da())!==o&&(s=va())!==o&&(a=da())!==o&&(i=mu())!==o?n=u=[u,s,a,i]:(fu=n,n=o);else e=o;e!==o?(t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return {tableList:Array.from(Ya),columnList:Ga(Ba),ast:e}}(t,e),r=t):(fu=r,r=o);}else fu=r,r=o;return r}())===o&&(t=Tu())===o&&(t=mu()),t!==o?(r=t):(fu=r,r=o)):(fu=r,r=o),r}function Tu(){var t;return (t=function(){var r,t,e,n;r=fu,(t=us())!==o&&da()!==o&&(e=Ls())!==o&&da()!==o&&(n=Ju())!==o?(u=t,s=e,(a=n)&&a.forEach(r=>Ya.add(`${u}::${r.db}::${r.table}`)),t={tableList:Array.from(Ya),columnList:Ga(Ba),ast:{type:u.toLowerCase(),keyword:s.toLowerCase(),name:a}},r=t):(fu=r,r=o);var u,s,a;return r}())===o&&(t=function(){var t,e,n,u,s,a,c,l,f,v;t=fu,(e=ss())!==o&&da()!==o?((n=as())===o&&(n=null),n!==o&&da()!==o&&Ls()!==o&&da()!==o?((u=is())===o&&(u=null),u!==o&&da()!==o&&(s=Ju())!==o&&da()!==o&&(a=function(){var r,t,e,n,u,s,a,c,l;if(r=fu,(t=la())!==o)if(da()!==o)if((e=Iu())!==o){for(n=[],u=fu,(s=da())!==o&&(a=ia())!==o&&(c=da())!==o&&(l=Iu())!==o?u=s=[s,a,c,l]:(fu=u,u=o);u!==o;)n.push(u),u=fu,(s=da())!==o&&(a=ia())!==o&&(c=da())!==o&&(l=Iu())!==o?u=s=[s,a,c,l]:(fu=u,u=o);n!==o&&(u=da())!==o&&(s=fa())!==o?(t=i(e,n),r=t):(fu=r,r=o);}else fu=r,r=o;else fu=r,r=o;else fu=r,r=o;return r}())!==o&&da()!==o?((c=function(){var r,t,e,n,u,s,a,i;if(r=fu,(t=ku())!==o){for(e=[],n=fu,(u=da())!==o?((s=ia())===o&&(s=null),s!==o&&(a=da())!==o&&(i=ku())!==o?n=u=[u,s,a,i]:(fu=n,n=o)):(fu=n,n=o);n!==o;)e.push(n),n=fu,(u=da())!==o?((s=ia())===o&&(s=null),s!==o&&(a=da())!==o&&(i=ku())!==o?n=u=[u,s,a,i]:(fu=n,n=o)):(fu=n,n=o);e!==o?(t=Fa(t,e),r=t):(fu=r,r=o);}else fu=r,r=o;return r}())===o&&(c=null),c!==o&&da()!==o?((l=function(){var t,e,n,u;t=fu,"ignore"===r.substr(fu,6).toLowerCase()?(e=r.substr(fu,6),fu+=6):(e=o,0===Lu&&hu(Bt));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o);return t}())===o&&(l=cs()),l===o&&(l=null),l!==o&&da()!==o?((f=ds())===o&&(f=null),f!==o&&da()!==o?((v=Su())===o&&(v=null),v!==o?(b=e,d=n,L=u,p=a,w=c,E=l,h=f,A=v,(C=s)&&C.forEach(r=>Ya.add(`create::${r.db}::${r.table}`)),e={tableList:Array.from(Ya),columnList:Ga(Ba),ast:{type:b[0].toLowerCase(),keyword:"table",temporary:d&&d[0].toLowerCase(),if_not_exists:L&&L[0].toLowerCase(),table:C,ignore_replace:E&&E[0].toLowerCase(),as:h&&h[0].toLowerCase(),query_expr:A&&A.ast,create_definitions:p,table_options:w}},t=e):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o);var b,d,L,C,p,w,E,h,A;t===o&&(t=fu,(e=ss())!==o&&da()!==o?((n=as())===o&&(n=null),n!==o&&da()!==o&&Ls()!==o&&da()!==o?((u=is())===o&&(u=null),u!==o&&da()!==o&&(s=Ju())!==o&&da()!==o&&(a=function r(){var t,e;(t=function(){var r,t;r=fu,_s()!==o&&da()!==o&&(t=Ju())!==o?(r={type:"like",table:t}):(fu=r,r=o);return r}())===o&&(t=fu,la()!==o&&da()!==o&&(e=r())!==o&&da()!==o&&fa()!==o?((n=e).parentheses=!0,t=n):(fu=t,t=o));var n;return t}())!==o?(e=function(r,t,e,n,u){return n&&n.forEach(r=>Ya.add(`create::${r.db}::${r.table}`)),{tableList:Array.from(Ya),columnList:Ga(Ba),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t[0].toLowerCase(),if_not_exists:e&&e[0].toLowerCase(),table:n,like:u}}}(e,n,u,s,a),t=e):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o));return t}())===o&&(t=function(){var t,e,n,u;t=fu,(e=function(){var t,e,n,u;t=fu,"truncate"===r.substr(fu,8).toLowerCase()?(e=r.substr(fu,8),fu+=8):(e=o,0===Lu&&hu(ln));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="TRUNCATE"):(fu=t,t=o)):(fu=t,t=o);return t}())!==o&&da()!==o?((n=Ls())===o&&(n=null),n!==o&&da()!==o&&(u=Ju())!==o?(s=e,a=n,(i=u)&&i.forEach(r=>Ya.add(`${s}::${r.db}::${r.table}`)),e={tableList:Array.from(Ya),columnList:Ga(Ba),ast:{type:s.toLowerCase(),keyword:a&&a.toLowerCase()||"table",name:i}},t=e):(fu=t,t=o)):(fu=t,t=o);var s,a,i;return t}())===o&&(t=function(){var r,t,e;r=fu,(t=ls())!==o&&da()!==o&&Ls()!==o&&da()!==o&&(e=function(){var r,t,e,n,u,s,a,c;if(r=fu,(t=Ku())!==o){for(e=[],n=fu,(u=da())!==o&&(s=ia())!==o&&(a=da())!==o&&(c=Ku())!==o?n=u=[u,s,a,c]:(fu=n,n=o);n!==o;)e.push(n),n=fu,(u=da())!==o&&(s=ia())!==o&&(a=da())!==o&&(c=Ku())!==o?n=u=[u,s,a,c]:(fu=n,n=o);e!==o?(t=i(t,e),r=t):(fu=r,r=o);}else fu=r,r=o;return r}())!==o?((n=e).forEach(r=>r.forEach(r=>r.table&&Ya.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(Ya),columnList:Ga(Ba),ast:{type:"rename",table:n}},r=t):(fu=r,r=o);var n;return r}())===o&&(t=function(){var t,e,n;t=fu,(e=function(){var t,e,n,u;t=fu,"call"===r.substr(fu,4).toLowerCase()?(e=r.substr(fu,4),fu+=4):(e=o,0===Lu&&hu(xe));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="CALL"):(fu=t,t=o)):(fu=t,t=o);return t}())!==o&&da()!==o&&(n=Ra())!==o?(u=n,e={tableList:Array.from(Ya),columnList:Ga(Ba),ast:{type:"call",expr:u}},t=e):(fu=t,t=o);var u;return t}())===o&&(t=function(){var t,e,n;t=fu,(e=function(){var t,e,n,u;t=fu,"use"===r.substr(fu,3).toLowerCase()?(e=r.substr(fu,3),fu+=3):(e=o,0===Lu&&hu(Ut));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o);return t}())!==o&&da()!==o&&(n=xo())!==o?(u=n,Ya.add(`use::${u}::null`),e={tableList:Array.from(Ya),columnList:Ga(Ba),ast:{type:"use",db:u}},t=e):(fu=t,t=o);var u;return t}())===o&&(t=function(){var t,e,n,u;t=fu,(e=function(){var t,e,n,u;t=fu,"alter"===r.substr(fu,5).toLowerCase()?(e=r.substr(fu,5),fu+=5):(e=o,0===Lu&&hu(xt));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o);return t}())!==o&&da()!==o&&Ls()!==o&&da()!==o&&(n=Ju())!==o&&da()!==o&&(u=function(){var r,t,e,n,u,s,a,c;if(r=fu,(t=_u())!==o){for(e=[],n=fu,(u=da())!==o&&(s=ia())!==o&&(a=da())!==o&&(c=_u())!==o?n=u=[u,s,a,c]:(fu=n,n=o);n!==o;)e.push(n),n=fu,(u=da())!==o&&(s=ia())!==o&&(a=da())!==o&&(c=_u())!==o?n=u=[u,s,a,c]:(fu=n,n=o);e!==o?(t=i(t,e),r=t):(fu=r,r=o);}else fu=r,r=o;return r}())!==o?(a=u,(s=n)&&s.length>0&&s.forEach(r=>Ya.add(`alter::${r.db}::${r.table}`)),e={tableList:Array.from(Ya),columnList:Ga(Ba),ast:{type:"alter",table:s,expr:a}},t=e):(fu=t,t=o);var s,a;return t}())===o&&(t=function(){var t,e,n,u;t=fu,(e=bs())!==o&&da()!==o?((n=function(){var t,e,n,u;t=fu,"global"===r.substr(fu,6).toLowerCase()?(e=r.substr(fu,6),fu+=6):(e=o,0===Lu&&hu(Sn));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="GLOBAL"):(fu=t,t=o)):(fu=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=fu,"session"===r.substr(fu,7).toLowerCase()?(e=r.substr(fu,7),fu+=7):(e=o,0===Lu&&hu(In));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="SESSION"):(fu=t,t=o)):(fu=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=fu,"local"===r.substr(fu,5).toLowerCase()?(e=r.substr(fu,5),fu+=5):(e=o,0===Lu&&hu(or));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="LOCAL"):(fu=t,t=o)):(fu=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=fu,"persist"===r.substr(fu,7).toLowerCase()?(e=r.substr(fu,7),fu+=7):(e=o,0===Lu&&hu(Nn));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="PERSIST"):(fu=t,t=o)):(fu=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=fu,"persist_only"===r.substr(fu,12).toLowerCase()?(e=r.substr(fu,12),fu+=12):(e=o,0===Lu&&hu(Rn));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="PERSIST_ONLY"):(fu=t,t=o)):(fu=t,t=o);return t}()),n===o&&(n=null),n!==o&&da()!==o&&(u=ya())!==o?(s=n,(a=u).keyword=s,e={tableList:Array.from(Ya),columnList:Ga(Ba),ast:{type:"set",expr:a}},t=e):(fu=t,t=o)):(fu=t,t=o);var s,a;return t}())===o&&(t=function(){var t,e,n;t=fu,(e=function(){var t,e,n,u;t=fu,"lock"===r.substr(fu,4).toLowerCase()?(e=r.substr(fu,4),fu+=4):(e=o,0===Lu&&hu(m));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o);return t}())!==o&&da()!==o&&Cs()!==o&&da()!==o&&(n=function(){var r,t,e,n,u,s,a,i;if(r=fu,(t=$u())!==o){for(e=[],n=fu,(u=da())!==o&&(s=ia())!==o&&(a=da())!==o&&(i=$u())!==o?n=u=[u,s,a,i]:(fu=n,n=o);n!==o;)e.push(n),n=fu,(u=da())!==o&&(s=ia())!==o&&(a=da())!==o&&(i=$u())!==o?n=u=[u,s,a,i]:(fu=n,n=o);e!==o?(t=Fa(t,e),r=t):(fu=r,r=o);}else fu=r,r=o;return r}())!==o?(u=n,e={tableList:Array.from(Ya),columnList:Ga(Ba),ast:{type:"lock",keyword:"tables",tables:u}},t=e):(fu=t,t=o);var u;return t}())===o&&(t=function(){var t,e;t=fu,(e=function(){var t,e,n,u;t=fu,"unlock"===r.substr(fu,6).toLowerCase()?(e=r.substr(fu,6),fu+=6):(e=o,0===Lu&&hu(qt));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o);return t}())!==o&&da()!==o&&Cs()!==o?(e={tableList:Array.from(Ya),columnList:Ga(Ba),ast:{type:"unlock",keyword:"tables"}},t=e):(fu=t,t=o);return t}()),t}function mu(){var t;return (t=Su())===o&&(t=function(){var r,t,e,n,u,s,a;r=fu,(t=os())!==o&&da()!==o&&(e=Ju())!==o&&da()!==o&&bs()!==o&&da()!==o&&(n=co())!==o&&da()!==o?((u=uo())===o&&(u=null),u!==o&&da()!==o?((s=oo())===o&&(s=null),s!==o&&da()!==o?((a=io())===o&&(a=null),a!==o?(c=n,l=u,f=s,v=a,(i=e)&&i.forEach(r=>{const{db:t,as:e,table:n}=r;Ya.add(`update::${t}::${n}`);}),c&&c.forEach(r=>Ba.add(`update::${r.table}::${r.column}`)),t={tableList:Array.from(Ya),columnList:Ga(Ba),ast:{type:"update",table:i,set:c,where:l,orderby:f,limit:v}},r=t):(fu=r,r=o)):(fu=r,r=o)):(fu=r,r=o)):(fu=r,r=o);var i,c,l,f,v;return r}())===o&&(t=function(){var r,t,e,n,u,s,a,c;r=fu,(t=Lo())!==o&&da()!==o?((e=vs())===o&&(e=null),e!==o&&da()!==o&&(n=eo())!==o&&da()!==o?((u=vo())===o&&(u=null),u!==o&&da()!==o&&la()!==o&&da()!==o&&(s=function(){var r,t,e,n,u,s,a,c;if(r=fu,(t=Do())!==o){for(e=[],n=fu,(u=da())!==o&&(s=ia())!==o&&(a=da())!==o&&(c=Do())!==o?n=u=[u,s,a,c]:(fu=n,n=o);n!==o;)e.push(n),n=fu,(u=da())!==o&&(s=ia())!==o&&(a=da())!==o&&(c=Do())!==o?n=u=[u,s,a,c]:(fu=n,n=o);e!==o?(t=i(t,e),r=t):(fu=r,r=o);}else fu=r,r=o;return r}())!==o&&da()!==o&&fa()!==o&&da()!==o&&(a=fo())!==o&&da()!==o?((c=bo())===o&&(c=null),c!==o?(t=function(r,t,e,n,u,o){if(t&&(Ya.add(`insert::${t.db}::${t.table}`),t.as=null),n){let r=t&&t.table||null;n.forEach(t=>Ba.add(`insert::${r}::${t}`));}return {tableList:Array.from(Ya),columnList:Ga(Ba),ast:{type:r,table:[t],columns:n,values:u,partition:e,on_duplicate_update:o}}}(t,n,u,s,a,c),r=t):(fu=r,r=o)):(fu=r,r=o)):(fu=r,r=o)):(fu=r,r=o);return r}())===o&&(t=function(){var r,t,e,n,u,s;r=fu,(t=Lo())!==o&&da()!==o&&vs()!==o&&da()!==o&&(e=eo())!==o&&da()!==o?((n=vo())===o&&(n=null),n!==o&&da()!==o&&(u=fo())!==o&&da()!==o?((s=bo())===o&&(s=null),s!==o?(a=t,c=n,l=u,f=s,(i=e)&&(Ya.add(`insert::${i.db}::${i.table}`),Ba.add(`insert::${i.table}::(.*)`),i.as=null),t={tableList:Array.from(Ya),columnList:Ga(Ba),ast:{type:a,table:[i],columns:null,values:l,partition:c,on_duplicate_update:f}},r=t):(fu=r,r=o)):(fu=r,r=o)):(fu=r,r=o);var a,i,c,l,f;return r}())===o&&(t=function(){var r,t,e,n,u,s;r=fu,(t=Lo())!==o&&da()!==o&&vs()!==o&&da()!==o&&(e=eo())!==o&&da()!==o?((n=vo())===o&&(n=null),n!==o&&da()!==o&&bs()!==o&&da()!==o&&(u=co())!==o&&da()!==o?((s=bo())===o&&(s=null),s!==o?(a=t,c=n,l=u,f=s,(i=e)&&(Ya.add(`insert::${i.db}::${i.table}`),Ba.add(`insert::${i.table}::(.*)`),i.as=null),t={tableList:Array.from(Ya),columnList:Ga(Ba),ast:{type:a,table:[i],columns:null,partition:c,set:l,on_duplicate_update:f}},r=t):(fu=r,r=o)):(fu=r,r=o)):(fu=r,r=o);var a,i,c,l,f;return r}())===o&&(t=function(){var t,e,n,u,s,a,i;t=fu,(e=function(){var t,e,n,u;t=fu,"delete"===r.substr(fu,6).toLowerCase()?(e=r.substr(fu,6),fu+=6):(e=o,0===Lu&&hu(Pt));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o);return t}())!==o&&da()!==o?((n=Ju())===o&&(n=null),n!==o&&da()!==o&&(u=Vu())!==o&&da()!==o?((s=uo())===o&&(s=null),s!==o&&da()!==o?((a=oo())===o&&(a=null),a!==o&&da()!==o?((i=io())===o&&(i=null),i!==o?(e=function(r,t,e,n,u){if(t&&t.forEach(r=>{r.table&&Ya.add(`delete::${r.db}::${r.table}`),Ba.add(`delete::${r.table}::(.*)`);}),null===r&&1===t.length){const e=t[0];r=[{db:e.db,table:e.table,as:e.as,addition:!0}];}return {tableList:Array.from(Ya),columnList:Ga(Ba),ast:{type:"delete",table:r,from:t,where:e,orderby:n,limit:u}}}(n,u,s,a,i),t=e):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o);return t}())===o&&(t=Tu())===o&&(t=function(){var r,t;r=[],t=Aa();for(;t!==o;)r.push(t),t=Aa();return r}()),t}function Su(){var r,t,e,n,u,s,a,i,c,l;if(r=fu,(t=Fu())!==o){for(e=[],n=fu,(u=da())!==o&&(s=hs())!==o&&(a=da())!==o?((i=ms())===o&&(i=null),i!==o&&(c=da())!==o&&(l=Fu())!==o?n=u=[u,s,a,i,c,l]:(fu=n,n=o)):(fu=n,n=o);n!==o;)e.push(n),n=fu,(u=da())!==o&&(s=hs())!==o&&(a=da())!==o?((i=ms())===o&&(i=null),i!==o&&(c=da())!==o&&(l=Fu())!==o?n=u=[u,s,a,i,c,l]:(fu=n,n=o)):(fu=n,n=o);e!==o&&(n=da())!==o?((u=oo())===o&&(u=null),u!==o&&(s=da())!==o?((a=io())===o&&(a=null),a!==o?(r=t=function(r,t,e,n){let u=r;for(let r=0;r<t.length;r++)u._next=t[r][5],u.union=t[r][3]?"union all":"union",u=u._next;return e&&(r._orderby=e),n&&(r._limit=n),{tableList:Array.from(Ya),columnList:Ga(Ba),ast:r}}(t,e,u,a)):(fu=r,r=o)):(fu=r,r=o)):(fu=r,r=o);}else fu=r,r=o;return r}function Iu(){var t;return (t=function(){var t;(t=function(){var t,e,n,u,s,a,i,c;t=fu,(e=Uu())===o&&(e=null);e!==o&&da()!==o?(n=fu,"primary"===r.substr(fu,7).toLowerCase()?(u=r.substr(fu,7),fu+=7):(u=o,0===Lu&&hu(f)),u!==o&&(s=da())!==o?("key"===r.substr(fu,3).toLowerCase()?(a=r.substr(fu,3),fu+=3):(a=o,0===Lu&&hu(v)),a!==o?n=u=[u,s,a]:(fu=n,n=o)):(fu=n,n=o),n!==o&&(u=da())!==o?((s=qu())===o&&(s=null),s!==o&&(a=da())!==o&&(i=Gu())!==o&&da()!==o?((c=Zu())===o&&(c=null),c!==o?(b=n,d=s,L=i,C=c,e={constraint:(l=e)&&l.constraint,definition:L,constraint_type:`${b[0].toLowerCase()} ${b[2].toLowerCase()}`,keyword:l&&l.keyword,index_type:d,resource:"constraint",index_options:C},t=e):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o);var l,b,d,L,C;return t}())===o&&(t=function(){var t,e,n,u,s,a,i,c;t=fu,(e=Uu())===o&&(e=null);e!==o&&da()!==o&&(n=function(){var t,e,n,u;t=fu,"unique"===r.substr(fu,6).toLowerCase()?(e=r.substr(fu,6),fu+=6):(e=o,0===Lu&&hu(l));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="UNIQUE"):(fu=t,t=o)):(fu=t,t=o);return t}())!==o&&da()!==o?((u=na())===o&&(u=ua()),u===o&&(u=null),u!==o&&da()!==o?((s=Do())===o&&(s=null),s!==o&&da()!==o?((a=qu())===o&&(a=null),a!==o&&da()!==o&&(i=Gu())!==o&&da()!==o?((c=Zu())===o&&(c=null),c!==o?(v=n,b=u,d=s,L=a,C=i,p=c,e={constraint:(f=e)&&f.constraint,definition:C,constraint_type:b&&`${v.toLowerCase()} ${b.toLowerCase()}`||v.toLowerCase(),keyword:f&&f.keyword,index_type:L,index:d,resource:"constraint",index_options:p},t=e):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o);var f,v,b,d,L,C,p;return t}())===o&&(t=function(){var t,e,n,u,s,a;t=fu,(e=Uu())===o&&(e=null);e!==o&&da()!==o?("foreign key"===r.substr(fu,11).toLowerCase()?(n=r.substr(fu,11),fu+=11):(n=o,0===Lu&&hu(x)),n!==o&&da()!==o?((u=Do())===o&&(u=null),u!==o&&da()!==o&&(s=Gu())!==o&&da()!==o?((a=Mu())===o&&(a=null),a!==o?(c=n,l=u,f=s,v=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c,keyword:i&&i.keyword,index:l,resource:"constraint",reference_definition:v},t=e):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o);var i,c,l,f,v;return t}())===o&&(t=xu());return t}())===o&&(t=Nu())===o&&(t=gu())===o&&(t=Ou()),t}function Nu(){var t,e,n,u,s,a,i,h,A,y,T,m,S,I,N,R,_,g,O,U,x,M,D,k,$;return t=fu,(e=Uo())!==o&&da()!==o&&(n=Ua())!==o&&da()!==o?((u=function(){var t,e;t=fu,(e=function(){var t,e,n,u;t=fu,"not null"===r.substr(fu,8).toLowerCase()?(e=r.substr(fu,8),fu+=8):(e=o,0===Lu&&hu(Nt));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o);return t}())!==o&&(e={type:"not null",value:"not null"});return t=e}())===o&&(u=Bo()),u===o&&(u=null),u!==o&&da()!==o?((s=function(){var r,t;r=fu,es()!==o&&da()!==o?((t=Yo())===o&&(t=Ao()),t!==o?(r={type:"default",value:t}):(fu=r,r=o)):(fu=r,r=o);return r}())===o&&(s=null),s!==o&&da()!==o?("auto_increment"===r.substr(fu,14).toLowerCase()?(a=r.substr(fu,14),fu+=14):(a=o,0===Lu&&hu(c)),a===o&&(a=null),a!==o&&da()!==o?(i=fu,"unique"===r.substr(fu,6).toLowerCase()?(h=r.substr(fu,6),fu+=6):(h=o,0===Lu&&hu(l)),h===o&&("primary"===r.substr(fu,7).toLowerCase()?(h=r.substr(fu,7),fu+=7):(h=o,0===Lu&&hu(f))),h===o&&(h=null),h!==o&&(A=da())!==o?("key"===r.substr(fu,3).toLowerCase()?(y=r.substr(fu,3),fu+=3):(y=o,0===Lu&&hu(v)),y!==o?i=h=[h,A,y]:(fu=i,i=o)):(fu=i,i=o),i===o&&(i=null),i!==o&&(h=da())!==o?((A=pa())===o&&(A=null),A!==o&&(y=da())!==o?((T=Ru())===o&&(T=null),T!==o&&da()!==o?((m=function(){var t,e,n;t=fu,"column_format"===r.substr(fu,13).toLowerCase()?(e=r.substr(fu,13),fu+=13):(e=o,0===Lu&&hu(b));e!==o&&da()!==o?("fixed"===r.substr(fu,5).toLowerCase()?(n=r.substr(fu,5),fu+=5):(n=o,0===Lu&&hu(d)),n===o&&("dynamic"===r.substr(fu,7).toLowerCase()?(n=r.substr(fu,7),fu+=7):(n=o,0===Lu&&hu(L)),n===o&&("default"===r.substr(fu,7).toLowerCase()?(n=r.substr(fu,7),fu+=7):(n=o,0===Lu&&hu(C)))),n!==o?(e=function(r,t){return {type:"column_format",value:t.toLowerCase()}}(0,n),t=e):(fu=t,t=o)):(fu=t,t=o);return t}())===o&&(m=null),m!==o&&da()!==o?((S=function(){var t,e,n;t=fu,"storage"===r.substr(fu,7).toLowerCase()?(e=r.substr(fu,7),fu+=7):(e=o,0===Lu&&hu(p));e!==o&&da()!==o?("disk"===r.substr(fu,4).toLowerCase()?(n=r.substr(fu,4),fu+=4):(n=o,0===Lu&&hu(w)),n===o&&("memory"===r.substr(fu,6).toLowerCase()?(n=r.substr(fu,6),fu+=6):(n=o,0===Lu&&hu(E))),n!==o?(e={type:"storage",value:n.toLowerCase()},t=e):(fu=t,t=o)):(fu=t,t=o);return t}())===o&&(S=null),S!==o&&da()!==o?((I=Mu())===o&&(I=null),I!==o?(N=e,R=n,_=u,g=s,O=a,U=i,x=A,M=T,D=m,k=S,$=I,Ba.add(`create::${N.table}::${N.column}`),_&&!_.value&&(_.value="null"),t=e={column:N,definition:R,nullable:_,default_val:g,auto_increment:O&&O.toLowerCase(),unique_or_primary:U&&`${U[0].toLowerCase()} ${U[2].toLowerCase()}`,comment:x,collate:M,column_format:D,storage:k,reference_definition:$,resource:"column"}):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o),t}function Ru(){var t,e;return t=fu,function(){var t,e,n,u;t=fu,"collate"===r.substr(fu,7).toLowerCase()?(e=r.substr(fu,7),fu+=7):(e=o,0===Lu&&hu(z));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="COLLATE"):(fu=t,t=o)):(fu=t,t=o);return t}()!==o&&da()!==o&&(e=$o())!==o?(t={type:"collate",value:e}):(fu=t,t=o),t}function _u(){var t;return (t=function(){var r,t,e;r=fu,(t=ta())!==o&&da()!==o&&(e=xu())!==o?(n=e,t={action:"add",...n,type:"alter"},r=t):(fu=r,r=o);var n;return r}())===o&&(t=function(){var t,e,n,u;t=fu,(e=us())!==o&&da()!==o?("check"===r.substr(fu,5).toLowerCase()?(n=r.substr(fu,5),fu+=5):(n=o,0===Lu&&hu(R)),n!==o&&da()!==o&&(u=$o())!==o?(e={action:"drop",constraint:u,keyword:n.toLowerCase(),resource:"constraint",type:"alter"},t=e):(fu=t,t=o)):(fu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=fu,ys()!==o&&da()!==o?("check"===r.substr(fu,5).toLowerCase()?(e=r.substr(fu,5),fu+=5):(e=o,0===Lu&&hu(R)),e!==o&&da()!==o?("check"===r.substr(fu,5).toLowerCase()?(n=r.substr(fu,5),fu+=5):(n=o,0===Lu&&hu(R)),n!==o&&da()!==o&&sa()!==o&&da()!==o&&(u=$o())!==o?(t={action:"with",constraint:u,keyword:"check check",resource:"constraint",type:"alter"}):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o);return t}())===o&&(t=function(){var t,e,n;t=fu,"nocheck"===r.substr(fu,7).toLowerCase()?(e=r.substr(fu,7),fu+=7):(e=o,0===Lu&&hu(_));e!==o&&da()!==o&&sa()!==o&&da()!==o&&(n=$o())!==o?(t=e={action:"nocheck",constraint:n,resource:"constraint",type:"alter"}):(fu=t,t=o);return t}())===o&&(t=function(){var r,t,e,n;r=fu,(t=ta())!==o&&da()!==o?((e=ea())===o&&(e=null),e!==o&&da()!==o&&(n=Nu())!==o?(u=e,s=n,t={action:"add",...s,keyword:u,resource:"column",type:"alter"},r=t):(fu=r,r=o)):(fu=r,r=o);var u,s;return r}())===o&&(t=function(){var r,t,e;r=fu,us()!==o&&da()!==o?((t=ea())===o&&(t=null),t!==o&&da()!==o&&(e=Uo())!==o?(r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(fu=r,r=o)):(fu=r,r=o);return r}())===o&&(t=function(){var r,t,e;r=fu,(t=ta())!==o&&da()!==o&&(e=gu())!==o?(n=e,t={action:"add",type:"alter",...n},r=t):(fu=r,r=o);var n;return r}())===o&&(t=function(){var r,t,e;r=fu,(t=ta())!==o&&da()!==o&&(e=Ou())!==o?(n=e,t={action:"add",type:"alter",...n},r=t):(fu=r,r=o);var n;return r}())===o&&(t=function(){var r,t,e,n;r=fu,(t=ls())!==o&&da()!==o?((e=ns())===o&&(e=ds()),e===o&&(e=null),e!==o&&da()!==o&&(n=xo())!==o?(s=n,t={action:"rename",type:"alter",resource:"table",keyword:(u=e)&&u[0].toLowerCase(),table:s},r=t):(fu=r,r=o)):(fu=r,r=o);var u,s;return r}())===o&&(t=function(){var t,e,n;t=fu,"algorithm"===r.substr(fu,9).toLowerCase()?(e=r.substr(fu,9),fu+=9):(e=o,0===Lu&&hu(h));e!==o&&da()!==o&&ra()!==o&&da()!==o?("default"===r.substr(fu,7).toLowerCase()?(n=r.substr(fu,7),fu+=7):(n=o,0===Lu&&hu(C)),n===o&&("instant"===r.substr(fu,7).toLowerCase()?(n=r.substr(fu,7),fu+=7):(n=o,0===Lu&&hu(A)),n===o&&("inplace"===r.substr(fu,7).toLowerCase()?(n=r.substr(fu,7),fu+=7):(n=o,0===Lu&&hu(y)),n===o&&("copy"===r.substr(fu,4).toLowerCase()?(n=r.substr(fu,4),fu+=4):(n=o,0===Lu&&hu(T))))),n!==o?(t=e={type:"alter",keyword:"algorithm",resource:"algorithm",algorithm:n}):(fu=t,t=o)):(fu=t,t=o);return t}())===o&&(t=function(){var t,e,n;t=fu,"lock"===r.substr(fu,4).toLowerCase()?(e=r.substr(fu,4),fu+=4):(e=o,0===Lu&&hu(m));e!==o&&da()!==o&&ra()!==o&&da()!==o?("default"===r.substr(fu,7).toLowerCase()?(n=r.substr(fu,7),fu+=7):(n=o,0===Lu&&hu(C)),n===o&&("none"===r.substr(fu,4).toLowerCase()?(n=r.substr(fu,4),fu+=4):(n=o,0===Lu&&hu(S)),n===o&&("shared"===r.substr(fu,6).toLowerCase()?(n=r.substr(fu,6),fu+=6):(n=o,0===Lu&&hu(I)),n===o&&("exclusive"===r.substr(fu,9).toLowerCase()?(n=r.substr(fu,9),fu+=9):(n=o,0===Lu&&hu(N))))),n!==o?(t=e={type:"alter",keyword:"lock",resource:"lock",lock:n}):(fu=t,t=o)):(fu=t,t=o);return t}()),t}function gu(){var r,t,e,n,u,s,a,i;return r=fu,(t=na())===o&&(t=ua()),t!==o&&da()!==o?((e=Do())===o&&(e=null),e!==o&&da()!==o?((n=qu())===o&&(n=null),n!==o&&da()!==o&&(u=Gu())!==o&&da()!==o?((s=Zu())===o&&(s=null),s!==o&&da()!==o?(a=n,i=s,r=t={index:e,definition:u,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i}):(fu=r,r=o)):(fu=r,r=o)):(fu=r,r=o)):(fu=r,r=o),r}function Ou(){var t,e,n,u,s,a,i,c,l;return t=fu,(e=function(){var t,e,n,u;t=fu,"fulltext"===r.substr(fu,8).toLowerCase()?(e=r.substr(fu,8),fu+=8):(e=o,0===Lu&&hu(Fn));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="FULLTEXT"):(fu=t,t=o)):(fu=t,t=o);return t}())===o&&(e=function(){var t,e,n,u;t=fu,"spatial"===r.substr(fu,7).toLowerCase()?(e=r.substr(fu,7),fu+=7):(e=o,0===Lu&&hu(Pn));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="SPATIAL"):(fu=t,t=o)):(fu=t,t=o);return t}()),e!==o&&da()!==o?((n=na())===o&&(n=ua()),n===o&&(n=null),n!==o&&da()!==o?((u=Do())===o&&(u=null),u!==o&&da()!==o&&(s=Gu())!==o&&da()!==o?((a=Zu())===o&&(a=null),a!==o&&da()!==o?(i=e,l=a,t=e={index:u,definition:s,keyword:(c=n)&&`${i.toLowerCase()} ${c.toLowerCase()}`||i.toLowerCase(),index_options:l,resource:"index"}):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o),t}function Uu(){var r,t,e,n;return r=fu,(t=sa())!==o&&da()!==o?((e=xo())===o&&(e=null),e!==o?(n=e,r=t={keyword:t.toLowerCase(),constraint:n}):(fu=r,r=o)):(fu=r,r=o),r}function xu(){var t,e,n,u,s,a,i,c,l,f,v,b,d;return t=fu,(e=Uu())===o&&(e=null),e!==o&&da()!==o?("check"===r.substr(fu,5).toLowerCase()?(n=r.substr(fu,5),fu+=5):(n=o,0===Lu&&hu(R)),n!==o&&da()!==o?(u=fu,"not"===r.substr(fu,3).toLowerCase()?(s=r.substr(fu,3),fu+=3):(s=o,0===Lu&&hu(g)),s!==o&&(a=da())!==o?("for"===r.substr(fu,3).toLowerCase()?(i=r.substr(fu,3),fu+=3):(i=o,0===Lu&&hu(O)),i!==o&&(c=da())!==o?("replication"===r.substr(fu,11).toLowerCase()?(l=r.substr(fu,11),fu+=11):(l=o,0===Lu&&hu(U)),l!==o&&(f=da())!==o?u=s=[s,a,i,c,l,f]:(fu=u,u=o)):(fu=u,u=o)):(fu=u,u=o),u===o&&(u=null),u!==o&&(s=la())!==o&&(a=da())!==o&&(i=Ao())!==o&&(c=da())!==o&&(l=fa())!==o?(v=e,b=u,d=i,t=e={constraint_type:n.toLowerCase(),keyword:v&&v.keyword,constraint:v&&v.constraint,index_type:b&&{keyword:"not for replication"},definition:[d],resource:"constraint"}):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o),t}function Mu(){var t,e,n,u,s,a,i,c,l,f;return t=fu,(e=function(){var t,e,n,u;t=fu,"references"===r.substr(fu,10).toLowerCase()?(e=r.substr(fu,10),fu+=10):(e=o,0===Lu&&hu(jn));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="REFERENCES"):(fu=t,t=o)):(fu=t,t=o);return t}())!==o&&da()!==o&&(n=Ju())!==o&&da()!==o&&(u=Gu())!==o&&da()!==o?("match full"===r.substr(fu,10).toLowerCase()?(s=r.substr(fu,10),fu+=10):(s=o,0===Lu&&hu(M)),s===o&&("match partial"===r.substr(fu,13).toLowerCase()?(s=r.substr(fu,13),fu+=13):(s=o,0===Lu&&hu(D)),s===o&&("match simple"===r.substr(fu,12).toLowerCase()?(s=r.substr(fu,12),fu+=12):(s=o,0===Lu&&hu(k)))),s===o&&(s=null),s!==o&&da()!==o?((a=Du())===o&&(a=null),a!==o&&da()!==o?((i=Du())===o&&(i=null),i!==o?(c=s,l=a,f=i,t=e={definition:u,table:n,keyword:e.toLowerCase(),match:c&&c.toLowerCase(),on_delete:l,on_update:f}):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o),t}function Du(){var t,e,n,u;return t=fu,"on delete"===r.substr(fu,9).toLowerCase()?(e=r.substr(fu,9),fu+=9):(e=o,0===Lu&&hu($)),e===o&&("on update"===r.substr(fu,9).toLowerCase()?(e=r.substr(fu,9),fu+=9):(e=o,0===Lu&&hu(F))),e!==o&&da()!==o&&(n=function(){var t,e;t=fu,"restrict"===r.substr(fu,8).toLowerCase()?(e=r.substr(fu,8),fu+=8):(e=o,0===Lu&&hu(P));e===o&&("cascade"===r.substr(fu,7).toLowerCase()?(e=r.substr(fu,7),fu+=7):(e=o,0===Lu&&hu(H)),e===o&&("set null"===r.substr(fu,8).toLowerCase()?(e=r.substr(fu,8),fu+=8):(e=o,0===Lu&&hu(G)),e===o&&("no action"===r.substr(fu,9).toLowerCase()?(e=r.substr(fu,9),fu+=9):(e=o,0===Lu&&hu(j)),e===o&&("set default"===r.substr(fu,11).toLowerCase()?(e=r.substr(fu,11),fu+=11):(e=o,0===Lu&&hu(Y))))));e!==o&&(e=e.toLowerCase());return t=e}())!==o?(u=n,t=e={type:e.toLowerCase(),value:u}):(fu=t,t=o),t}function ku(){var t,e,n,u,s,a,i,l,f;return t=fu,"auto_increment"===r.substr(fu,14).toLowerCase()?(e=r.substr(fu,14),fu+=14):(e=o,0===Lu&&hu(c)),e===o&&("avg_row_length"===r.substr(fu,14).toLowerCase()?(e=r.substr(fu,14),fu+=14):(e=o,0===Lu&&hu(B)),e===o&&("key_block_size"===r.substr(fu,14).toLowerCase()?(e=r.substr(fu,14),fu+=14):(e=o,0===Lu&&hu(X)),e===o&&("max_rows"===r.substr(fu,8).toLowerCase()?(e=r.substr(fu,8),fu+=8):(e=o,0===Lu&&hu(W)),e===o&&("min_rows"===r.substr(fu,8).toLowerCase()?(e=r.substr(fu,8),fu+=8):(e=o,0===Lu&&hu(V)),e===o&&("stats_sample_pages"===r.substr(fu,18).toLowerCase()?(e=r.substr(fu,18),fu+=18):(e=o,0===Lu&&hu(K))))))),e!==o&&da()!==o?((n=ra())===o&&(n=null),n!==o&&da()!==o&&(u=qo())!==o?(l=n,f=u,t=e={keyword:e.toLowerCase(),symbol:l,value:f.value}):(fu=t,t=o)):(fu=t,t=o),t===o&&(t=fu,(e=es())===o&&(e=null),e!==o&&da()!==o?("character set"===r.substr(fu,13).toLowerCase()?(n=r.substr(fu,13),fu+=13):(n=o,0===Lu&&hu(q)),n===o&&("charset"===r.substr(fu,7).toLowerCase()?(n=r.substr(fu,7),fu+=7):(n=o,0===Lu&&hu(Z)),n===o&&("collate"===r.substr(fu,7).toLowerCase()?(n=r.substr(fu,7),fu+=7):(n=o,0===Lu&&hu(z)))),n!==o&&da()!==o?((u=ra())===o&&(u=null),u!==o&&(s=da())!==o&&(a=$o())!==o?(t=e=function(r,t,e,n){return {keyword:r&&`${r[0].toLowerCase()} ${t.toLowerCase()}`||t.toLowerCase(),symbol:e,value:n}}(e,n,u,a)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o),t===o&&(t=fu,(e=oa())===o&&("connection"===r.substr(fu,10).toLowerCase()?(e=r.substr(fu,10),fu+=10):(e=o,0===Lu&&hu(J))),e!==o&&da()!==o?((n=ra())===o&&(n=null),n!==o&&da()!==o&&(u=Xo())!==o?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,u)):(fu=t,t=o)):(fu=t,t=o),t===o&&(t=fu,"compression"===r.substr(fu,11).toLowerCase()?(e=r.substr(fu,11),fu+=11):(e=o,0===Lu&&hu(Q)),e!==o&&da()!==o?((n=ra())===o&&(n=null),n!==o&&da()!==o?(u=fu,39===r.charCodeAt(fu)?(s="'",fu++):(s=o,0===Lu&&hu(rr)),s!==o?("zlib"===r.substr(fu,4).toLowerCase()?(a=r.substr(fu,4),fu+=4):(a=o,0===Lu&&hu(tr)),a===o&&("lz4"===r.substr(fu,3).toLowerCase()?(a=r.substr(fu,3),fu+=3):(a=o,0===Lu&&hu(er)),a===o&&("none"===r.substr(fu,4).toLowerCase()?(a=r.substr(fu,4),fu+=4):(a=o,0===Lu&&hu(S)))),a!==o?(39===r.charCodeAt(fu)?(i="'",fu++):(i=o,0===Lu&&hu(rr)),i!==o?u=s=[s,a,i]:(fu=u,u=o)):(fu=u,u=o)):(fu=u,u=o),u!==o?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,u)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o),t===o&&(t=fu,"engine"===r.substr(fu,6).toLowerCase()?(e=r.substr(fu,6),fu+=6):(e=o,0===Lu&&hu(nr)),e!==o&&da()!==o?((n=ra())===o&&(n=null),n!==o&&da()!==o&&(u=$o())!==o?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}}(e,n,u)):(fu=t,t=o)):(fu=t,t=o))))),t}function $u(){var t,e,n,u,s;return t=fu,(e=ro())!==o&&da()!==o&&(n=function(){var t,e,n;return t=fu,"read"===r.substr(fu,4).toLowerCase()?(e=r.substr(fu,4),fu+=4):(e=o,0===Lu&&hu(ur)),e!==o&&da()!==o?("local"===r.substr(fu,5).toLowerCase()?(n=r.substr(fu,5),fu+=5):(n=o,0===Lu&&hu(or)),n===o&&(n=null),n!==o?(t=e={type:"read",suffix:n&&"local"}):(fu=t,t=o)):(fu=t,t=o),t===o&&(t=fu,"low_priority"===r.substr(fu,12).toLowerCase()?(e=r.substr(fu,12),fu+=12):(e=o,0===Lu&&hu(sr)),e===o&&(e=null),e!==o&&da()!==o?("write"===r.substr(fu,5).toLowerCase()?(n=r.substr(fu,5),fu+=5):(n=o,0===Lu&&hu(ar)),n!==o?(t=e={type:"write",prefix:e&&"low_priority"}):(fu=t,t=o)):(fu=t,t=o)),t}())!==o?(u=e,s=n,Ya.add(`lock::${u.db}::${u.table}`),t=e={table:u,lock_type:s}):(fu=t,t=o),t}function Fu(){var t,e,n,u,s,a,i;return (t=ju())===o&&(t=fu,e=fu,40===r.charCodeAt(fu)?(n="(",fu++):(n=o,0===Lu&&hu(ir)),n!==o&&(u=da())!==o&&(s=Fu())!==o&&(a=da())!==o?(41===r.charCodeAt(fu)?(i=")",fu++):(i=o,0===Lu&&hu(cr)),i!==o?e=n=[n,u,s,a,i]:(fu=e,e=o)):(fu=e,e=o),e!==o&&(e={...e[2],parentheses_symbol:!0}),t=e),t}function Pu(){var t,e,n,u,s,a,c,l,f;if(t=fu,ys()!==o)if(da()!==o)if((e=Hu())!==o){for(n=[],u=fu,(s=da())!==o&&(a=ia())!==o&&(c=da())!==o&&(l=Hu())!==o?u=s=[s,a,c,l]:(fu=u,u=o);u!==o;)n.push(u),u=fu,(s=da())!==o&&(a=ia())!==o&&(c=da())!==o&&(l=Hu())!==o?u=s=[s,a,c,l]:(fu=u,u=o);n!==o?(t=i(e,n)):(fu=t,t=o);}else fu=t,t=o;else fu=t,t=o;else fu=t,t=o;return t===o&&(t=fu,da()!==o&&ys()!==o&&(e=da())!==o&&(n=function(){var t,e,n,u;t=fu,"RECURSIVE"===r.substr(fu,9)?(e="RECURSIVE",fu+=9):(e=o,0===Lu&&hu(Gt));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o);return t}())!==o&&(u=da())!==o&&(s=Hu())!==o?((f=s).recursive=!0,t=[f]):(fu=t,t=o)),t}function Hu(){var r,t,e,n;return r=fu,(t=$o())!==o&&da()!==o?((e=Gu())===o&&(e=null),e!==o&&da()!==o&&ds()!==o&&da()!==o&&la()!==o&&da()!==o&&(n=Su())!==o&&da()!==o&&fa()!==o?(r=t={name:t,stmt:n,columns:e}):(fu=r,r=o)):(fu=r,r=o),r}function Gu(){var r,t,e,n,u,s,a,c;if(r=fu,la()!==o)if(da()!==o)if((t=Do())!==o){for(e=[],n=fu,(u=da())!==o&&(s=ia())!==o&&(a=da())!==o&&(c=Do())!==o?n=u=[u,s,a,c]:(fu=n,n=o);n!==o;)e.push(n),n=fu,(u=da())!==o&&(s=ia())!==o&&(a=da())!==o&&(c=Do())!==o?n=u=[u,s,a,c]:(fu=n,n=o);e!==o&&(n=da())!==o&&(u=fa())!==o?(r=i(t,e)):(fu=r,r=o);}else fu=r,r=o;else fu=r,r=o;else fu=r,r=o;return r}function ju(){var t,e,n,u,s,a,i,c,l,f,v,b,d,L,C;return t=fu,da()!==o?((e=Pu())===o&&(e=null),e!==o&&da()!==o&&function(){var t,e,n,u;t=fu,"select"===r.substr(fu,6).toLowerCase()?(e=r.substr(fu,6),fu+=6):(e=o,0===Lu&&hu(Mt));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o);return t}()!==o&&da()!==o?((n=function(){var r,t,e,n,u,s;if(r=fu,(t=Yu())!==o){for(e=[],n=fu,(u=da())!==o&&(s=Yu())!==o?n=u=[u,s]:(fu=n,n=o);n!==o;)e.push(n),n=fu,(u=da())!==o&&(s=Yu())!==o?n=u=[u,s]:(fu=n,n=o);e!==o?(t=function(r,t){const e=[r];for(let r=0,n=t.length;r<n;++r)e.push(t[r][1]);return e}(t,e),r=t):(fu=r,r=o);}else fu=r,r=o;return r}())===o&&(n=null),n!==o&&da()!==o?((u=Ss())===o&&(u=null),u!==o&&da()!==o&&(s=Bu())!==o&&da()!==o?((a=Vu())===o&&(a=null),a!==o&&da()!==o?((i=uo())===o&&(i=null),i!==o&&da()!==o?((c=function(){var t,e,n;t=fu,(e=function(){var t,e,n,u;t=fu,"group"===r.substr(fu,5).toLowerCase()?(e=r.substr(fu,5),fu+=5):(e=o,0===Lu&&hu(fe));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o);return t}())!==o&&da()!==o&&Ts()!==o&&da()!==o&&(n=po())!==o?(e=n.value,t=e):(fu=t,t=o);return t}())===o&&(c=null),c!==o&&da()!==o?((l=function(){var t,e;t=fu,function(){var t,e,n,u;t=fu,"having"===r.substr(fu,6).toLowerCase()?(e=r.substr(fu,6),fu+=6):(e=o,0===Lu&&hu(de));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o);return t}()!==o&&da()!==o&&(e=Ao())!==o?(t=e):(fu=t,t=o);return t}())===o&&(l=null),l!==o&&da()!==o?((f=oo())===o&&(f=null),f!==o&&da()!==o?((v=io())===o&&(v=null),v!==o?(b=fu,"for"===r.substr(fu,3).toLowerCase()?(d=r.substr(fu,3),fu+=3):(d=o,0===Lu&&hu(O)),d!==o&&(L=da())!==o&&(C=os())!==o?b=d=[d,L,C]:(fu=b,b=o),b===o&&(b=null),b!==o?(t=function(r,t,e,n,u,o,s,a,i,c,l){return u&&u.forEach(r=>r.table&&Ya.add(`select::${r.db}::${r.table}`)),{with:r,type:"select",options:t,distinct:e,columns:n,from:u,where:o,groupby:s,having:a,orderby:i,limit:c,for_update:l&&`${l[0]} ${l[2][0]}`}}(e,n,u,s,a,i,c,l,f,v,b)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o),t}function Yu(){var t,e;return t=fu,(e=function(){var t;"sql_calc_found_rows"===r.substr(fu,19).toLowerCase()?(t=r.substr(fu,19),fu+=19):(t=o,0===Lu&&hu(Yn));return t}())===o&&((e=function(){var t;"sql_cache"===r.substr(fu,9).toLowerCase()?(t=r.substr(fu,9),fu+=9):(t=o,0===Lu&&hu(Bn));return t}())===o&&(e=function(){var t;"sql_no_cache"===r.substr(fu,12).toLowerCase()?(t=r.substr(fu,12),fu+=12):(t=o,0===Lu&&hu(Xn));return t}()),e===o&&(e=function(){var t;"sql_big_result"===r.substr(fu,14).toLowerCase()?(t=r.substr(fu,14),fu+=14):(t=o,0===Lu&&hu(Vn));return t}())===o&&(e=function(){var t;"sql_small_result"===r.substr(fu,16).toLowerCase()?(t=r.substr(fu,16),fu+=16):(t=o,0===Lu&&hu(Wn));return t}())===o&&(e=function(){var t;"sql_buffer_result"===r.substr(fu,17).toLowerCase()?(t=r.substr(fu,17),fu+=17):(t=o,0===Lu&&hu(Kn));return t}())),e!==o&&(e=e),t=e}function Bu(){var r,t,e,n,u,s,a,c,l,f;if(r=fu,(t=ms())===o&&(t=fu,(e=ca())!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o),t===o&&(t=ca())),t!==o){for(e=[],n=fu,(u=da())!==o&&(s=ia())!==o&&(a=da())!==o&&(c=Xu())!==o?n=u=[u,s,a,c]:(fu=n,n=o);n!==o;)e.push(n),n=fu,(u=da())!==o&&(s=ia())!==o&&(a=da())!==o&&(c=Xu())!==o?n=u=[u,s,a,c]:(fu=n,n=o);e!==o?(l=t,f=e,Ba.add("select::null::(.*)"),r=t=f&&f.length>0?(l[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},Fa(l[0],f)):l[0]):(fu=r,r=o);}else fu=r,r=o;if(r===o)if(r=fu,(t=Xu())!==o){for(e=[],n=fu,(u=da())!==o&&(s=ia())!==o&&(a=da())!==o&&(c=Xu())!==o?n=u=[u,s,a,c]:(fu=n,n=o);n!==o;)e.push(n),n=fu,(u=da())!==o&&(s=ia())!==o&&(a=da())!==o&&(c=Xu())!==o?n=u=[u,s,a,c]:(fu=n,n=o);e!==o?(r=t=i(t,e)):(fu=r,r=o);}else fu=r,r=o;return r}function Xu(){var r,t,e,n;return r=fu,(t=xo())!==o&&da()!==o&&(e=aa())!==o&&da()!==o&&ca()!==o?(n=t,Ba.add(`select::${n}::(.*)`),r=t={expr:{type:"column_ref",table:n,column:"*"},as:null}):(fu=r,r=o),r===o&&(r=fu,(t=Ao())!==o&&da()!==o?((e=Wu())===o&&(e=null),e!==o?(r=t={expr:t,as:e}):(fu=r,r=o)):(fu=r,r=o)),r}function Wu(){var r,t,e;return r=fu,(t=ds())!==o&&da()!==o&&(e=function(){var r,t;r=fu,(t=$o())!==o?((function(r){if(!0===Ma[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return !1}(t)?o:void 0)!==o?(r=t=t):(fu=r,r=o)):(fu=r,r=o);r===o&&(r=fu,(t=Mo())!==o&&(t=t),r=t);return r}())!==o?(r=t=e):(fu=r,r=o),r===o&&(r=fu,(t=ds())===o&&(t=null),t!==o&&da()!==o&&(e=xo())!==o?(r=t=e):(fu=r,r=o)),r}function Vu(){var t,e;return t=fu,function(){var t,e,n,u;t=fu,"from"===r.substr(fu,4).toLowerCase()?(e=r.substr(fu,4),fu+=4):(e=o,0===Lu&&hu(Vt));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o);return t}()!==o&&da()!==o&&(e=Ju())!==o?(t=e):(fu=t,t=o),t}function Ku(){var r,t,e;return r=fu,(t=eo())!==o&&da()!==o&&ns()!==o&&da()!==o&&(e=eo())!==o?(r=t=[t,e]):(fu=r,r=o),r}function qu(){var t,e;return t=fu,As()!==o&&da()!==o?("btree"===r.substr(fu,5).toLowerCase()?(e=r.substr(fu,5),fu+=5):(e=o,0===Lu&&hu(lr)),e===o&&("hash"===r.substr(fu,4).toLowerCase()?(e=r.substr(fu,4),fu+=4):(e=o,0===Lu&&hu(fr))),e!==o?(t={keyword:"using",type:e.toLowerCase()}):(fu=t,t=o)):(fu=t,t=o),t}function Zu(){var r,t,e,n,u,s;if(r=fu,(t=zu())!==o){for(e=[],n=fu,(u=da())!==o&&(s=zu())!==o?n=u=[u,s]:(fu=n,n=o);n!==o;)e.push(n),n=fu,(u=da())!==o&&(s=zu())!==o?n=u=[u,s]:(fu=n,n=o);e!==o?(r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(fu=r,r=o);}else fu=r,r=o;return r}function zu(){var t,e,n,u,s,a;return t=fu,(e=function(){var t,e,n,u;t=fu,"key_block_size"===r.substr(fu,14).toLowerCase()?(e=r.substr(fu,14),fu+=14):(e=o,0===Lu&&hu(X));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="KEY_BLOCK_SIZE"):(fu=t,t=o)):(fu=t,t=o);return t}())!==o&&da()!==o?((n=ra())===o&&(n=null),n!==o&&da()!==o&&(u=qo())!==o?(s=n,a=u,t=e={type:e.toLowerCase(),symbol:s,expr:a}):(fu=t,t=o)):(fu=t,t=o),t===o&&(t=qu())===o&&(t=fu,"with"===r.substr(fu,4).toLowerCase()?(e=r.substr(fu,4),fu+=4):(e=o,0===Lu&&hu(vr)),e!==o&&da()!==o?("parser"===r.substr(fu,6).toLowerCase()?(n=r.substr(fu,6),fu+=6):(n=o,0===Lu&&hu(br)),n!==o&&da()!==o&&(u=$o())!==o?(t=e={type:"with parser",expr:u}):(fu=t,t=o)):(fu=t,t=o),t===o&&(t=fu,"visible"===r.substr(fu,7).toLowerCase()?(e=r.substr(fu,7),fu+=7):(e=o,0===Lu&&hu(dr)),e===o&&("invisible"===r.substr(fu,9).toLowerCase()?(e=r.substr(fu,9),fu+=9):(e=o,0===Lu&&hu(Lr))),e!==o&&(e=function(r){return {type:r.toLowerCase(),expr:r.toLowerCase()}}(e)),(t=e)===o&&(t=pa()))),t}function Ju(){var r,t,e,n,u,s;if(r=fu,(t=ro())!==o){for(e=[],n=Qu();n!==o;)e.push(n),n=Qu();e!==o?(u=t,(s=e).unshift(u),s.forEach(r=>{const{table:t,as:e}=r;Xa[t]=t,e&&(Xa[e]=t);}),r=t=s):(fu=r,r=o);}else fu=r,r=o;return r}function Qu(){var r,t,e;return r=fu,da()!==o&&(t=ia())!==o&&da()!==o&&(e=ro())!==o?(r=e):(fu=r,r=o),r===o&&(r=fu,da()!==o&&(t=function(){var r,t,e,n,u,s,a,i,c,l,f;if(r=fu,(t=to())!==o)if(da()!==o)if((e=ro())!==o)if(da()!==o)if((n=As())!==o)if(da()!==o)if(la()!==o)if(da()!==o)if((u=$o())!==o){for(s=[],a=fu,(i=da())!==o&&(c=ia())!==o&&(l=da())!==o&&(f=$o())!==o?a=i=[i,c,l,f]:(fu=a,a=o);a!==o;)s.push(a),a=fu,(i=da())!==o&&(c=ia())!==o&&(l=da())!==o&&(f=$o())!==o?a=i=[i,c,l,f]:(fu=a,a=o);s!==o&&(a=da())!==o&&(i=fa())!==o?(v=t,d=u,L=s,(b=e).join=v,b.using=Fa(d,L),r=t=b):(fu=r,r=o);}else fu=r,r=o;else fu=r,r=o;else fu=r,r=o;else fu=r,r=o;else fu=r,r=o;else fu=r,r=o;else fu=r,r=o;else fu=r,r=o;else fu=r,r=o;var v,b,d,L;r===o&&(r=fu,(t=to())!==o&&da()!==o&&(e=ro())!==o&&da()!==o?((n=no())===o&&(n=null),n!==o?(t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(fu=r,r=o)):(fu=r,r=o),r===o&&(r=fu,(t=to())!==o&&da()!==o&&(e=la())!==o&&da()!==o&&(n=Su())!==o&&da()!==o&&fa()!==o&&da()!==o?((u=Wu())===o&&(u=null),u!==o&&(s=da())!==o?((a=no())===o&&(a=null),a!==o?(t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,u,a),r=t):(fu=r,r=o)):(fu=r,r=o)):(fu=r,r=o)));return r}())!==o?(r=t):(fu=r,r=o)),r}function ro(){var t,e,n,u,s,a;return t=fu,(e=function(){var t;"dual"===r.substr(fu,4).toLowerCase()?(t=r.substr(fu,4),fu+=4):(t=o,0===Lu&&hu(Mn));return t}())!==o&&(e={type:"dual"}),(t=e)===o&&(t=fu,(e=eo())!==o&&da()!==o?((n=Wu())===o&&(n=null),n!==o?(a=n,t=e="var"===(s=e).type?(s.as=a,s):{db:s.db,table:s.table,as:a}):(fu=t,t=o)):(fu=t,t=o),t===o&&(t=fu,(e=la())!==o&&da()!==o&&(n=Su())!==o&&da()!==o&&fa()!==o&&da()!==o?((u=Wu())===o&&(u=null),u!==o?(t=e=function(r,t){return r.parentheses=!0,{expr:r,as:t}}(n,u)):(fu=t,t=o)):(fu=t,t=o))),t}function to(){var t,e,n,u;return t=fu,(e=function(){var t,e,n,u;t=fu,"left"===r.substr(fu,4).toLowerCase()?(e=r.substr(fu,4),fu+=4):(e=o,0===Lu&&hu(re));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o);return t}())!==o&&(n=da())!==o?((u=Es())===o&&(u=null),u!==o&&da()!==o&&ws()!==o?(t=e="LEFT JOIN"):(fu=t,t=o)):(fu=t,t=o),t===o&&(t=fu,(e=function(){var t,e,n,u;t=fu,"right"===r.substr(fu,5).toLowerCase()?(e=r.substr(fu,5),fu+=5):(e=o,0===Lu&&hu(te));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o);return t}())!==o&&(n=da())!==o?((u=Es())===o&&(u=null),u!==o&&da()!==o&&ws()!==o?(t=e="RIGHT JOIN"):(fu=t,t=o)):(fu=t,t=o),t===o&&(t=fu,(e=function(){var t,e,n,u;t=fu,"full"===r.substr(fu,4).toLowerCase()?(e=r.substr(fu,4),fu+=4):(e=o,0===Lu&&hu(ee));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o);return t}())!==o&&(n=da())!==o?((u=Es())===o&&(u=null),u!==o&&da()!==o&&ws()!==o?(t=e="FULL JOIN"):(fu=t,t=o)):(fu=t,t=o),t===o&&(t=fu,e=fu,(n=function(){var t,e,n,u;t=fu,"inner"===r.substr(fu,5).toLowerCase()?(e=r.substr(fu,5),fu+=5):(e=o,0===Lu&&hu(ne));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o);return t}())!==o&&(u=da())!==o?e=n=[n,u]:(fu=e,e=o),e===o&&(e=null),e!==o&&(n=ws())!==o?(t=e="INNER JOIN"):(fu=t,t=o)))),t}function eo(){var r,t,e,n,u,s,a,i;return r=fu,(t=xo())!==o?(e=fu,(n=da())!==o&&(u=aa())!==o&&(s=da())!==o&&(a=xo())!==o?e=n=[n,u,s,a]:(fu=e,e=o),e===o&&(e=null),e!==o?(r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(fu=r,r=o)):(fu=r,r=o),r===o&&(r=fu,(t=ga())!==o&&((i=t).db=null,i.table=i.name,t=i),r=t),r}function no(){var r,t;return r=fu,ps()!==o&&da()!==o&&(t=Ao())!==o?(r=t):(fu=r,r=o),r}function uo(){var t,e;return t=fu,function(){var t,e,n,u;t=fu,"where"===r.substr(fu,5).toLowerCase()?(e=r.substr(fu,5),fu+=5):(e=o,0===Lu&&hu(le));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o);return t}()!==o&&da()!==o&&(e=Ao())!==o?(t=e):(fu=t,t=o),t}function oo(){var t,e;return t=fu,function(){var t,e,n,u;t=fu,"order"===r.substr(fu,5).toLowerCase()?(e=r.substr(fu,5),fu+=5):(e=o,0===Lu&&hu(be));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o);return t}()!==o&&da()!==o&&Ts()!==o&&da()!==o&&(e=function(){var r,t,e,n,u,s,a,c;if(r=fu,(t=so())!==o){for(e=[],n=fu,(u=da())!==o&&(s=ia())!==o&&(a=da())!==o&&(c=so())!==o?n=u=[u,s,a,c]:(fu=n,n=o);n!==o;)e.push(n),n=fu,(u=da())!==o&&(s=ia())!==o&&(a=da())!==o&&(c=so())!==o?n=u=[u,s,a,c]:(fu=n,n=o);e!==o?(t=i(t,e),r=t):(fu=r,r=o);}else fu=r,r=o;return r}())!==o?(t=e):(fu=t,t=o),t}function so(){var t,e,n;return t=fu,(e=Ao())!==o&&da()!==o?((n=function(){var t,e,n,u;t=fu,"desc"===r.substr(fu,4).toLowerCase()?(e=r.substr(fu,4),fu+=4):(e=o,0===Lu&&hu(we));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="DESC"):(fu=t,t=o)):(fu=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=fu,"asc"===r.substr(fu,3).toLowerCase()?(e=r.substr(fu,3),fu+=3):(e=o,0===Lu&&hu(pe));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="ASC"):(fu=t,t=o)):(fu=t,t=o);return t}()),n===o&&(n=null),n!==o?(t=e=function(r,t){const e={expr:r,type:"ASC"};return "DESC"===t&&(e.type="DESC"),e}(e,n)):(fu=t,t=o)):(fu=t,t=o),t}function ao(){var r;return (r=qo())===o&&(r=Go()),r}function io(){var t,e,n,u,s,a;return t=fu,function(){var t,e,n,u;t=fu,"limit"===r.substr(fu,5).toLowerCase()?(e=r.substr(fu,5),fu+=5):(e=o,0===Lu&&hu(Le));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o);return t}()!==o&&da()!==o&&(e=ao())!==o&&da()!==o?(n=fu,(u=ia())===o&&(u=function(){var t,e,n,u;t=fu,"offset"===r.substr(fu,6).toLowerCase()?(e=r.substr(fu,6),fu+=6):(e=o,0===Lu&&hu(Ce));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="OFFSET"):(fu=t,t=o)):(fu=t,t=o);return t}()),u!==o&&(s=da())!==o&&(a=ao())!==o?n=u=[u,s,a]:(fu=n,n=o),n===o&&(n=null),n!==o?(t=function(r,t){const e=[r];return t&&e.push(t[2]),{seperator:t&&t[0]&&t[0].toLowerCase()||"",value:e}}(e,n)):(fu=t,t=o)):(fu=t,t=o),t}function co(){var r,t,e,n,u,s,a,c;if(r=fu,(t=lo())!==o){for(e=[],n=fu,(u=da())!==o&&(s=ia())!==o&&(a=da())!==o&&(c=lo())!==o?n=u=[u,s,a,c]:(fu=n,n=o);n!==o;)e.push(n),n=fu,(u=da())!==o&&(s=ia())!==o&&(a=da())!==o&&(c=lo())!==o?n=u=[u,s,a,c]:(fu=n,n=o);e!==o?(r=t=i(t,e)):(fu=r,r=o);}else fu=r,r=o;return r}function lo(){var t,e,n,u,s,a,i,c;return t=fu,e=fu,(n=xo())!==o&&(u=da())!==o&&(s=aa())!==o?e=n=[n,u,s]:(fu=e,e=o),e===o&&(e=null),e!==o&&(n=da())!==o&&(u=Do())!==o&&(s=da())!==o?(61===r.charCodeAt(fu)?(a="=",fu++):(a=o,0===Lu&&hu(Cr)),a!==o&&da()!==o&&(i=No())!==o?(t=e={column:u,value:i,table:(c=e)&&c[0]}):(fu=t,t=o)):(fu=t,t=o),t}function fo(){var t;return (t=function(){var t,e;t=fu,function(){var t,e,n,u;t=fu,"values"===r.substr(fu,6).toLowerCase()?(e=r.substr(fu,6),fu+=6):(e=o,0===Lu&&hu(ie));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o);return t}()!==o&&da()!==o&&(e=function(){var r,t,e,n,u,s,a,c;if(r=fu,(t=Co())!==o){for(e=[],n=fu,(u=da())!==o&&(s=ia())!==o&&(a=da())!==o&&(c=Co())!==o?n=u=[u,s,a,c]:(fu=n,n=o);n!==o;)e.push(n),n=fu,(u=da())!==o&&(s=ia())!==o&&(a=da())!==o&&(c=Co())!==o?n=u=[u,s,a,c]:(fu=n,n=o);e!==o?(t=i(t,e),r=t):(fu=r,r=o);}else fu=r,r=o;return r}())!==o?(t=e):(fu=t,t=o);return t}())===o&&(t=ju()),t}function vo(){var r,t,e,n,u,s,a,i,c;if(r=fu,fs()!==o)if(da()!==o)if((t=la())!==o)if(da()!==o)if((e=$o())!==o){for(n=[],u=fu,(s=da())!==o&&(a=ia())!==o&&(i=da())!==o&&(c=$o())!==o?u=s=[s,a,i,c]:(fu=u,u=o);u!==o;)n.push(u),u=fu,(s=da())!==o&&(a=ia())!==o&&(i=da())!==o&&(c=$o())!==o?u=s=[s,a,i,c]:(fu=u,u=o);n!==o&&(u=da())!==o&&(s=fa())!==o?(r=Fa(e,n)):(fu=r,r=o);}else fu=r,r=o;else fu=r,r=o;else fu=r,r=o;else fu=r,r=o;else fu=r,r=o;return r===o&&(r=fu,fs()!==o&&da()!==o&&(t=Co())!==o?(r=t):(fu=r,r=o)),r}function bo(){var t,e,n;return t=fu,ps()!==o&&da()!==o?("duplicate"===r.substr(fu,9).toLowerCase()?(e=r.substr(fu,9),fu+=9):(e=o,0===Lu&&hu(pr)),e!==o&&da()!==o&&ua()!==o&&da()!==o&&os()!==o&&da()!==o&&(n=co())!==o?(t={keyword:"on duplicate key update",set:n}):(fu=t,t=o)):(fu=t,t=o),t}function Lo(){var t,e;return t=fu,(e=function(){var t,e,n,u;t=fu,"insert"===r.substr(fu,6).toLowerCase()?(e=r.substr(fu,6),fu+=6):(e=o,0===Lu&&hu(Ht));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o);return t}())!==o&&(e="insert"),(t=e)===o&&(t=fu,(e=cs())!==o&&(e="replace"),t=e),t}function Co(){var r,t;return r=fu,la()!==o&&da()!==o&&(t=po())!==o&&da()!==o&&fa()!==o?(r=t):(fu=r,r=o),r}function po(){var r,t,e,n,u,s,a,i;if(r=fu,(t=Ao())!==o){for(e=[],n=fu,(u=da())!==o&&(s=ia())!==o&&(a=da())!==o&&(i=Ao())!==o?n=u=[u,s,a,i]:(fu=n,n=o);n!==o;)e.push(n),n=fu,(u=da())!==o&&(s=ia())!==o&&(a=da())!==o&&(i=Ao())!==o?n=u=[u,s,a,i]:(fu=n,n=o);e!==o?(r=t=function(r,t){const e={type:"expr_list"};return e.value=Fa(r,t),e}(t,e)):(fu=r,r=o);}else fu=r,r=o;return r}function wo(){var t,e,n;return t=fu,function(){var t,e,n,u;t=fu,"interval"===r.substr(fu,8).toLowerCase()?(e=r.substr(fu,8),fu+=8):(e=o,0===Lu&&hu(bn));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="INTERVAL"):(fu=t,t=o)):(fu=t,t=o);return t}()!==o&&da()!==o&&(e=Ao())!==o&&da()!==o&&(n=function(){var t;(t=function(){var t,e,n,u;t=fu,"year"===r.substr(fu,4).toLowerCase()?(e=r.substr(fu,4),fu+=4):(e=o,0===Lu&&hu(dn));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="YEAR"):(fu=t,t=o)):(fu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=fu,"month"===r.substr(fu,5).toLowerCase()?(e=r.substr(fu,5),fu+=5):(e=o,0===Lu&&hu(Ln));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="MONTH"):(fu=t,t=o)):(fu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=fu,"day"===r.substr(fu,3).toLowerCase()?(e=r.substr(fu,3),fu+=3):(e=o,0===Lu&&hu(Cn));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="DAY"):(fu=t,t=o)):(fu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=fu,"hour"===r.substr(fu,4).toLowerCase()?(e=r.substr(fu,4),fu+=4):(e=o,0===Lu&&hu(pn));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="HOUR"):(fu=t,t=o)):(fu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=fu,"minute"===r.substr(fu,6).toLowerCase()?(e=r.substr(fu,6),fu+=6):(e=o,0===Lu&&hu(wn));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="MINUTE"):(fu=t,t=o)):(fu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=fu,"second"===r.substr(fu,6).toLowerCase()?(e=r.substr(fu,6),fu+=6):(e=o,0===Lu&&hu(En));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="SECOND"):(fu=t,t=o)):(fu=t,t=o);return t}());return t}())!==o?(t={type:"interval",expr:e,unit:n.toLowerCase()}):(fu=t,t=o),t}function Eo(){var t,e,n,u,s,a,i,c,l;if(t=fu,Ms()!==o)if(da()!==o)if((e=Ao())===o&&(e=null),e!==o)if(da()!==o){if(n=[],(u=ho())!==o)for(;u!==o;)n.push(u),u=ho();else n=o;n!==o&&(u=da())!==o?((s=function(){var t,e;t=fu,function(){var t,e,n,u;t=fu,"else"===r.substr(fu,4).toLowerCase()?(e=r.substr(fu,4),fu+=4):(e=o,0===Lu&&hu($e));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o);return t}()!==o&&da()!==o&&(e=Ao())!==o?(t={type:"else",result:e}):(fu=t,t=o);return t}())===o&&(s=null),s!==o&&da()!==o&&function(){var t,e,n,u;t=fu,"end"===r.substr(fu,3).toLowerCase()?(e=r.substr(fu,3),fu+=3):(e=o,0===Lu&&hu(Fe));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o);return t}()!==o&&da()!==o?((a=Ms())===o&&(a=null),a!==o?(i=e,c=n,(l=s)&&c.push(l),t={type:"case",expr:i||null,args:c}):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o);}else fu=t,t=o;else fu=t,t=o;else fu=t,t=o;else fu=t,t=o;return t}function ho(){var t,e,n;return t=fu,function(){var t,e,n,u;t=fu,"when"===r.substr(fu,4).toLowerCase()?(e=r.substr(fu,4),fu+=4):(e=o,0===Lu&&hu(De));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o);return t}()!==o&&da()!==o&&(e=Ao())!==o&&da()!==o&&function(){var t,e,n,u;t=fu,"then"===r.substr(fu,4).toLowerCase()?(e=r.substr(fu,4),fu+=4):(e=o,0===Lu&&hu(ke));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o);return t}()!==o&&da()!==o&&(n=Ao())!==o?(t={type:"when",cond:e,result:n}):(fu=t,t=o),t}function Ao(){var r;return (r=function(){var r,t,e,n,u,s,a,i;if(r=fu,(t=Oo())!==o){if(e=[],n=fu,(u=da())!==o&&(s=ba())!==o&&(a=da())!==o&&(i=Oo())!==o?n=u=[u,s,a,i]:(fu=n,n=o),n!==o)for(;n!==o;)e.push(n),n=fu,(u=da())!==o&&(s=ba())!==o&&(a=da())!==o&&(i=Oo())!==o?n=u=[u,s,a,i]:(fu=n,n=o);else e=o;e!==o?(t=Pa(t,e),r=t):(fu=r,r=o);}else fu=r,r=o;return r}())===o&&(r=function(){var r,t,e,n,u,s;if(r=fu,(t=Ro())!==o){if(e=[],n=fu,(u=da())!==o&&(s=Oo())!==o?n=u=[u,s]:(fu=n,n=o),n!==o)for(;n!==o;)e.push(n),n=fu,(u=da())!==o&&(s=Oo())!==o?n=u=[u,s]:(fu=n,n=o);else e=o;e!==o?(t=Da(t,e[0][1]),r=t):(fu=r,r=o);}else fu=r,r=o;return r}())===o&&(r=function(){var r,t,e,n,u,s,a,i;if(r=fu,(t=yo())!==o){for(e=[],n=fu,(u=La())!==o&&(s=xs())!==o&&(a=da())!==o&&(i=yo())!==o?n=u=[u,s,a,i]:(fu=n,n=o);n!==o;)e.push(n),n=fu,(u=La())!==o&&(s=xs())!==o&&(a=da())!==o&&(i=yo())!==o?n=u=[u,s,a,i]:(fu=n,n=o);e!==o?(t=wr(t,e),r=t):(fu=r,r=o);}else fu=r,r=o;return r}())===o&&(r=Fu()),r}function yo(){var r,t,e,n,u,s,a,i;if(r=fu,(t=To())!==o){for(e=[],n=fu,(u=La())!==o&&(s=Us())!==o&&(a=da())!==o&&(i=To())!==o?n=u=[u,s,a,i]:(fu=n,n=o);n!==o;)e.push(n),n=fu,(u=La())!==o&&(s=Us())!==o&&(a=da())!==o&&(i=To())!==o?n=u=[u,s,a,i]:(fu=n,n=o);e!==o?(r=t=wr(t,e)):(fu=r,r=o);}else fu=r,r=o;return r}function To(){var t,e,n,u,s;return (t=mo())===o&&(t=function(){var r,t,e;r=fu,(t=function(){var r,t,e,n,u;r=fu,t=fu,(e=Os())!==o&&(n=da())!==o&&(u=gs())!==o?t=e=[e,n,u]:(fu=t,t=o);t!==o&&(t=hr(t));(r=t)===o&&(r=gs());return r}())!==o&&da()!==o&&la()!==o&&da()!==o&&(e=Su())!==o&&da()!==o&&fa()!==o?(n=t,(u=e).parentheses=!0,t=Da(n,u),r=t):(fu=r,r=o);var n,u;return r}())===o&&(t=fu,(e=Os())===o&&(e=fu,33===r.charCodeAt(fu)?(n="!",fu++):(n=o,0===Lu&&hu(Er)),n!==o?(u=fu,Lu++,61===r.charCodeAt(fu)?(s="=",fu++):(s=o,0===Lu&&hu(Cr)),Lu--,s===o?u=void 0:(fu=u,u=o),u!==o?e=n=[n,u]:(fu=e,e=o)):(fu=e,e=o)),e!==o&&(n=da())!==o&&(u=To())!==o?(t=e=Da("NOT",u)):(fu=t,t=o)),t}function mo(){var r,t,e,n,u,s,a;return r=fu,(t=No())!==o&&da()!==o?(e=fu,Lu++,n=Us(),Lu--,n===o?e=void 0:(fu=e,e=o),e!==o&&(n=da())!==o?((u=function(){var r;(r=function(){var r,t,e,n,u,s,a;r=fu,t=[],e=fu,(n=da())!==o&&(u=So())!==o&&(s=da())!==o&&(a=No())!==o?e=n=[n,u,s,a]:(fu=e,e=o);if(e!==o)for(;e!==o;)t.push(e),e=fu,(n=da())!==o&&(u=So())!==o&&(s=da())!==o&&(a=No())!==o?e=n=[n,u,s,a]:(fu=e,e=o);else t=o;t!==o&&(t={type:"arithmetic",tail:t});return r=t}())===o&&(r=function(){var r,t,e,n;r=fu,(t=Io())!==o&&da()!==o&&(e=la())!==o&&da()!==o&&(n=po())!==o&&da()!==o&&fa()!==o?(r=t={op:t,right:n}):(fu=r,r=o);r===o&&(r=fu,(t=Io())!==o&&da()!==o?((e=ga())===o&&(e=Xo()),e!==o?(t=function(r,t){return {op:r,right:t}}(t,e),r=t):(fu=r,r=o)):(fu=r,r=o));return r}())===o&&(r=function(){var r,t,e,n;r=fu,(t=function(){var r,t,e,n,u;r=fu,t=fu,(e=Os())!==o&&(n=da())!==o&&(u=Is())!==o?t=e=[e,n,u]:(fu=t,t=o);t!==o&&(t=hr(t));(r=t)===o&&(r=Is());return r}())!==o&&da()!==o&&(e=No())!==o&&da()!==o&&Us()!==o&&da()!==o&&(n=No())!==o?(r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(fu=r,r=o);return r}())===o&&(r=function(){var r,t,e,n,u;r=fu,(t=Rs())!==o&&(e=da())!==o&&(n=No())!==o?(r=t={op:"IS",right:n}):(fu=r,r=o);r===o&&(r=fu,t=fu,(e=Rs())!==o&&(n=da())!==o&&(u=Os())!==o?t=e=[e,n,u]:(fu=t,t=o),t!==o&&(e=da())!==o&&(n=No())!==o?(t=function(r){return {op:"IS NOT",right:r}}(n),r=t):(fu=r,r=o));return r}())===o&&(r=function(){var r,t,e;r=fu,(t=function(){var r,t,e,n,u;r=fu,t=fu,(e=Os())!==o&&(n=da())!==o&&(u=_s())!==o?t=e=[e,n,u]:(fu=t,t=o);t!==o&&(t=hr(t));(r=t)===o&&(r=_s());return r}())!==o&&da()!==o&&(e=mo())!==o?(r=t={op:t,right:e}):(fu=r,r=o);return r}());return r}())===o&&(u=null),u!==o?(s=t,r=t=null===(a=u)?s:"arithmetic"===a.type?Pa(s,a.tail):ka(a.op,s,a.right)):(fu=r,r=o)):(fu=r,r=o)):(fu=r,r=o),r===o&&(r=Xo())===o&&(r=Uo()),r}function So(){var t;return ">="===r.substr(fu,2)?(t=">=",fu+=2):(t=o,0===Lu&&hu(Ar)),t===o&&(62===r.charCodeAt(fu)?(t=">",fu++):(t=o,0===Lu&&hu(yr)),t===o&&("<="===r.substr(fu,2)?(t="<=",fu+=2):(t=o,0===Lu&&hu(Tr)),t===o&&("<>"===r.substr(fu,2)?(t="<>",fu+=2):(t=o,0===Lu&&hu(mr)),t===o&&(60===r.charCodeAt(fu)?(t="<",fu++):(t=o,0===Lu&&hu(Sr)),t===o&&(61===r.charCodeAt(fu)?(t="=",fu++):(t=o,0===Lu&&hu(Cr)),t===o&&("!="===r.substr(fu,2)?(t="!=",fu+=2):(t=o,0===Lu&&hu(Ir)))))))),t}function Io(){var r,t,e,n,u;return r=fu,t=fu,(e=Os())!==o&&(n=da())!==o&&(u=Ns())!==o?t=e=[e,n,u]:(fu=t,t=o),t!==o&&(t=hr(t)),(r=t)===o&&(r=Ns()),r}function No(){var r,t,e,n,u,s,a,i;if(r=fu,(t=_o())!==o){for(e=[],n=fu,(u=da())!==o&&(s=Ro())!==o&&(a=da())!==o&&(i=_o())!==o?n=u=[u,s,a,i]:(fu=n,n=o);n!==o;)e.push(n),n=fu,(u=da())!==o&&(s=Ro())!==o&&(a=da())!==o&&(i=_o())!==o?n=u=[u,s,a,i]:(fu=n,n=o);e!==o?(r=t=wr(t,e)):(fu=r,r=o);}else fu=r,r=o;return r}function Ro(){var t;return 43===r.charCodeAt(fu)?(t="+",fu++):(t=o,0===Lu&&hu(Nr)),t===o&&(45===r.charCodeAt(fu)?(t="-",fu++):(t=o,0===Lu&&hu(Rr))),t}function _o(){var r,t,e,n,u,s,a,i;if(r=fu,(t=Oo())!==o){for(e=[],n=fu,(u=da())!==o&&(s=go())!==o&&(a=da())!==o&&(i=Oo())!==o?n=u=[u,s,a,i]:(fu=n,n=o);n!==o;)e.push(n),n=fu,(u=da())!==o&&(s=go())!==o&&(a=da())!==o&&(i=Oo())!==o?n=u=[u,s,a,i]:(fu=n,n=o);e!==o?(r=t=Pa(t,e)):(fu=r,r=o);}else fu=r,r=o;return r}function go(){var t;return 42===r.charCodeAt(fu)?(t="*",fu++):(t=o,0===Lu&&hu(_r)),t===o&&(47===r.charCodeAt(fu)?(t="/",fu++):(t=o,0===Lu&&hu(gr)),t===o&&(37===r.charCodeAt(fu)?(t="%",fu++):(t=o,0===Lu&&hu(Or)))),t}function Oo(){var t,e,n,u;return (t=function(){var t,e,n,u,s,a,i;t=fu,(e=Ds())!==o&&da()!==o&&la()!==o&&da()!==o&&(n=Ao())!==o&&da()!==o&&ds()!==o&&da()!==o&&(u=Ua())!==o&&da()!==o&&(s=fa())!==o?(t=e={type:"cast",expr:n,symbol:"as",target:u}):(fu=t,t=o);t===o&&(t=fu,(e=Ds())!==o&&da()!==o&&la()!==o&&da()!==o&&(n=Ao())!==o&&da()!==o&&ds()!==o&&da()!==o&&(u=Ps())!==o&&da()!==o&&(s=la())!==o&&da()!==o&&(a=Zo())!==o&&da()!==o&&fa()!==o&&da()!==o&&(i=fa())!==o?(e=function(r,t){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+")"}}}(n,a),t=e):(fu=t,t=o),t===o&&(t=fu,(e=Ds())!==o&&da()!==o&&la()!==o&&da()!==o&&(n=Ao())!==o&&da()!==o&&ds()!==o&&da()!==o&&(u=Ps())!==o&&da()!==o&&(s=la())!==o&&da()!==o&&(a=Zo())!==o&&da()!==o&&ia()!==o&&da()!==o&&(i=Zo())!==o&&da()!==o&&fa()!==o&&da()!==o&&fa()!==o?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+", "+e+")"}}}(n,a,i),t=e):(fu=t,t=o),t===o&&(t=fu,(e=Ds())!==o&&da()!==o&&la()!==o&&da()!==o&&(n=Ao())!==o&&da()!==o&&ds()!==o&&da()!==o&&(u=function(){var t;(t=function(){var t,e,n,u;t=fu,"signed"===r.substr(fu,6).toLowerCase()?(e=r.substr(fu,6),fu+=6):(e=o,0===Lu&&hu(Be));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="SIGNED"):(fu=t,t=o)):(fu=t,t=o);return t}())===o&&(t=Hs());return t}())!==o&&da()!==o?((s=js())===o&&(s=null),s!==o&&da()!==o&&(a=fa())!==o?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:t+(e?" "+e:"")}}}(n,u,s),t=e):(fu=t,t=o)):(fu=t,t=o))));return t}())===o&&(t=Yo())===o&&(t=function(){var t;(t=function(){var t,e,n,u;t=fu,(e=function(){var t,e,n,u;t=fu,"count"===r.substr(fu,5).toLowerCase()?(e=r.substr(fu,5),fu+=5):(e=o,0===Lu&&hu(Re));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="COUNT"):(fu=t,t=o)):(fu=t,t=o);return t}())!==o&&da()!==o&&la()!==o&&da()!==o&&(n=function(){var t,e,n;t=fu,(e=function(){var t,e;t=fu,42===r.charCodeAt(fu)?(e="*",fu++):(e=o,0===Lu&&hu(_r));e!==o&&(e={type:"star",value:"*"});return t=e}())!==o&&(e={expr:e});(t=e)===o&&(t=fu,(e=Ss())===o&&(e=null),e!==o&&da()!==o&&(n=Uo())!==o?(t=e={distinct:e,expr:n}):(fu=t,t=o));return t}())!==o&&da()!==o&&fa()!==o&&da()!==o?((u=jo())===o&&(u=null),u!==o?(t=e={type:"aggr_func",name:e,args:n,over:u}):(fu=t,t=o)):(fu=t,t=o);return t}())===o&&(t=function(){var t,e,n;t=fu,(e=function(){var t;(t=function(){var t,e,n,u;t=fu,"sum"===r.substr(fu,3).toLowerCase()?(e=r.substr(fu,3),fu+=3):(e=o,0===Lu&&hu(Oe));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="SUM"):(fu=t,t=o)):(fu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=fu,"max"===r.substr(fu,3).toLowerCase()?(e=r.substr(fu,3),fu+=3):(e=o,0===Lu&&hu(_e));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="MAX"):(fu=t,t=o)):(fu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=fu,"min"===r.substr(fu,3).toLowerCase()?(e=r.substr(fu,3),fu+=3):(e=o,0===Lu&&hu(ge));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="MIN"):(fu=t,t=o)):(fu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=fu,"avg"===r.substr(fu,3).toLowerCase()?(e=r.substr(fu,3),fu+=3):(e=o,0===Lu&&hu(Ue));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="AVG"):(fu=t,t=o)):(fu=t,t=o);return t}());return t}())!==o&&da()!==o&&la()!==o&&da()!==o&&(n=No())!==o&&da()!==o&&fa()!==o?(t=e={type:"aggr_func",name:e,args:{expr:n}}):(fu=t,t=o);return t}());return t}())===o&&(t=function(){var t,e,n,u,s;t=fu,(e=Na())!==o&&da()!==o&&la()!==o&&da()!==o?((n=po())===o&&(n=null),n!==o&&da()!==o&&(u=fa())!==o&&da()!==o?((s=jo())===o&&(s=null),s!==o?(t=e={type:"function",name:e,args:n||{type:"expr_list",value:[]},over:s}):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o);t===o&&(t=fu,(e=function(){var t;(t=function(){var t,e,n,u;t=fu,"current_date"===r.substr(fu,12).toLowerCase()?(e=r.substr(fu,12),fu+=12):(e=o,0===Lu&&hu(vn));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="CURRENT_DATE"):(fu=t,t=o)):(fu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=fu,"current_time"===r.substr(fu,12).toLowerCase()?(e=r.substr(fu,12),fu+=12):(e=o,0===Lu&&hu(hn));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="CURRENT_TIME"):(fu=t,t=o)):(fu=t,t=o);return t}())===o&&(t=Js())===o&&(t=function(){var t,e,n,u;t=fu,"current_user"===r.substr(fu,12).toLowerCase()?(e=r.substr(fu,12),fu+=12):(e=o,0===Lu&&hu(yn));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="CURRENT_USER"):(fu=t,t=o)):(fu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=fu,"user"===r.substr(fu,4).toLowerCase()?(e=r.substr(fu,4),fu+=4):(e=o,0===Lu&&hu(fn));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="USER"):(fu=t,t=o)):(fu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=fu,"session_user"===r.substr(fu,12).toLowerCase()?(e=r.substr(fu,12),fu+=12):(e=o,0===Lu&&hu(Tn));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="SESSION_USER"):(fu=t,t=o)):(fu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=fu,"system_user"===r.substr(fu,11).toLowerCase()?(e=r.substr(fu,11),fu+=11):(e=o,0===Lu&&hu(mn));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="SYSTEM_USER"):(fu=t,t=o)):(fu=t,t=o);return t}());return t}())!==o&&da()!==o&&la()!==o&&da()!==o&&(n=fa())!==o&&da()!==o?((u=jo())===o&&(u=null),u!==o?(e=function(r,t){return {type:"function",name:r,args:{type:"expr_list",value:[]},over:t}}(e,u),t=e):(fu=t,t=o)):(fu=t,t=o));return t}())===o&&(t=Eo())===o&&(t=wo())===o&&(t=Uo())===o&&(t=Go())===o&&(t=fu,la()!==o&&(e=da())!==o&&(n=Ao())!==o&&da()!==o&&fa()!==o?(t=Ur(n)):(fu=t,t=o),t===o&&(t=fu,la()!==o&&(e=da())!==o&&(n=po())!==o&&da()!==o&&fa()!==o?((u=n).parentheses=!0,t=u):(fu=t,t=o),t===o&&(t=ga())===o&&(t=fu,da()!==o?(63===r.charCodeAt(fu)?(e="?",fu++):(e=o,0===Lu&&hu(xr)),e!==o?(t={type:"origin",value:e}):(fu=t,t=o)):(fu=t,t=o)))),t}function Uo(){var t,e,n,u,s,a,i,c,l,f;return t=fu,e=fu,(n=xo())!==o&&(u=da())!==o&&(s=aa())!==o&&(a=da())!==o?e=n=[n,u,s,a]:(fu=e,e=o),e===o&&(e=null),e!==o&&(n=Do())!==o&&(u=da())!==o?((s=function(){var t;"->>"===r.substr(fu,3)?(t="->>",fu+=3):(t=o,0===Lu&&hu(ru));return t}())===o&&(s=function(){var t;"->"===r.substr(fu,2)?(t="->",fu+=2):(t=o,0===Lu&&hu(Qn));return t}()),s!==o&&(a=da())!==o?((i=Xo())===o&&(i=qo()),i!==o&&da()!==o?((c=Ru())===o&&(c=null),c!==o?(t=e=function(r,t,e,n,u){const o=r&&r[0]||null;return Ba.add(`select::${o}::${t}`),{type:"column_ref",table:o,column:t,collate:u,arrow:e,property:n}}(e,n,s,i,c)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o),t===o&&(t=fu,(e=xo())!==o&&(n=da())!==o&&(u=aa())!==o&&(s=da())!==o&&(a=function(){var r,t;r=fu,(t=ko())!==o&&(t=t);(r=t)===o&&(r=Mo());return r}())!==o?(l=e,f=a,Ba.add(`select::${l}::${f}`),t=e={type:"column_ref",table:l,column:f}):(fu=t,t=o),t===o&&(t=fu,(e=Do())!==o&&(e=function(r){return Ba.add("select::null::"+r),{type:"column_ref",table:null,column:r}}(e)),t=e)),t}function xo(){var r,t;return r=fu,(t=$o())!==o?((Mr(t)?o:void 0)!==o?(r=t=t):(fu=r,r=o)):(fu=r,r=o),r===o&&(r=fu,(t=Mo())!==o&&(t=t),r=t),r}function Mo(){var t;return (t=function(){var t,e,n,u;t=fu,34===r.charCodeAt(fu)?(e='"',fu++):(e=o,0===Lu&&hu(Dr));if(e!==o){if(n=[],kr.test(r.charAt(fu))?(u=r.charAt(fu),fu++):(u=o,0===Lu&&hu($r)),u!==o)for(;u!==o;)n.push(u),kr.test(r.charAt(fu))?(u=r.charAt(fu),fu++):(u=o,0===Lu&&hu($r));else n=o;n!==o?(34===r.charCodeAt(fu)?(u='"',fu++):(u=o,0===Lu&&hu(Dr)),u!==o?(e=Fr(n),t=e):(fu=t,t=o)):(fu=t,t=o);}else fu=t,t=o;return t}())===o&&(t=function(){var t,e,n,u;t=fu,39===r.charCodeAt(fu)?(e="'",fu++):(e=o,0===Lu&&hu(rr));if(e!==o){if(n=[],Pr.test(r.charAt(fu))?(u=r.charAt(fu),fu++):(u=o,0===Lu&&hu(Hr)),u!==o)for(;u!==o;)n.push(u),Pr.test(r.charAt(fu))?(u=r.charAt(fu),fu++):(u=o,0===Lu&&hu(Hr));else n=o;n!==o?(39===r.charCodeAt(fu)?(u="'",fu++):(u=o,0===Lu&&hu(rr)),u!==o?(e=Fr(n),t=e):(fu=t,t=o)):(fu=t,t=o);}else fu=t,t=o;return t}())===o&&(t=function(){var t,e,n,u;t=fu,96===r.charCodeAt(fu)?(e="`",fu++):(e=o,0===Lu&&hu(Gr));if(e!==o){if(n=[],jr.test(r.charAt(fu))?(u=r.charAt(fu),fu++):(u=o,0===Lu&&hu(Yr)),u!==o)for(;u!==o;)n.push(u),jr.test(r.charAt(fu))?(u=r.charAt(fu),fu++):(u=o,0===Lu&&hu(Yr));else n=o;n!==o?(96===r.charCodeAt(fu)?(u="`",fu++):(u=o,0===Lu&&hu(Gr)),u!==o?(e=Fr(n),t=e):(fu=t,t=o)):(fu=t,t=o);}else fu=t,t=o;return t}()),t}function Do(){var r,t;return r=fu,(t=ko())!==o?((Mr(t)?o:void 0)!==o?(r=t=t):(fu=r,r=o)):(fu=r,r=o),r===o&&(r=Mo()),r}function ko(){var r,t,e,n;if(r=fu,(t=Fo())!==o){for(e=[],n=Ho();n!==o;)e.push(n),n=Ho();e!==o?(r=t=Br(t,e)):(fu=r,r=o);}else fu=r,r=o;return r}function $o(){var r,t,e,n;if(r=fu,(t=Fo())!==o){for(e=[],n=Po();n!==o;)e.push(n),n=Po();e!==o?(r=t=Br(t,e)):(fu=r,r=o);}else fu=r,r=o;return r}function Fo(){var t;return Xr.test(r.charAt(fu))?(t=r.charAt(fu),fu++):(t=o,0===Lu&&hu(Wr)),t}function Po(){var t;return Vr.test(r.charAt(fu))?(t=r.charAt(fu),fu++):(t=o,0===Lu&&hu(Kr)),t}function Ho(){var t;return qr.test(r.charAt(fu))?(t=r.charAt(fu),fu++):(t=o,0===Lu&&hu(Zr)),t}function Go(){var t,e,n,u;return t=fu,e=fu,58===r.charCodeAt(fu)?(n=":",fu++):(n=o,0===Lu&&hu(zr)),n!==o&&(u=$o())!==o?e=n=[n,u]:(fu=e,e=o),e!==o&&(e={type:"param",value:e[1]}),t=e}function jo(){var t,e,n;return t=fu,function(){var t,e,n,u;t=fu,"over"===r.substr(fu,4).toLowerCase()?(e=r.substr(fu,4),fu+=4):(e=o,0===Lu&&hu(se));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o);return t}()!==o&&da()!==o&&la()!==o&&da()!==o&&fs()!==o&&da()!==o&&Ts()!==o&&da()!==o&&(e=Bu())!==o&&da()!==o?((n=oo())===o&&(n=null),n!==o&&da()!==o&&fa()!==o?(t={partitionby:e,orderby:n}):(fu=t,t=o)):(fu=t,t=o),t}function Yo(){var t;return (t=Xo())===o&&(t=qo())===o&&(t=function(){var t,e;t=fu,(e=function(){var t,e,n,u;t=fu,"true"===r.substr(fu,4).toLowerCase()?(e=r.substr(fu,4),fu+=4):(e=o,0===Lu&&hu(Rt));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o);return t}())!==o&&(e={type:"bool",value:!0});(t=e)===o&&(t=fu,(e=function(){var t,e,n,u;t=fu,"false"===r.substr(fu,5).toLowerCase()?(e=r.substr(fu,5),fu+=5):(e=o,0===Lu&&hu(gt));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o);return t}())!==o&&(e={type:"bool",value:!1}),t=e);return t}())===o&&(t=Bo())===o&&(t=function(){var t,e,n,u,s,a,i;t=fu,(e=Zs())===o&&(e=Ks())===o&&(e=zs())===o&&(e=qs());if(e!==o)if(da()!==o){if(n=fu,39===r.charCodeAt(fu)?(u="'",fu++):(u=o,0===Lu&&hu(rr)),u!==o){for(s=[],a=Vo();a!==o;)s.push(a),a=Vo();s!==o?(39===r.charCodeAt(fu)?(a="'",fu++):(a=o,0===Lu&&hu(rr)),a!==o?n=u=[u,s,a]:(fu=n,n=o)):(fu=n,n=o);}else fu=n,n=o;n!==o?(c=n,e={type:e.toLowerCase(),value:c[1].join("")},t=e):(fu=t,t=o);}else fu=t,t=o;else fu=t,t=o;var c;t===o&&(t=fu,(e=Js())!==o&&da()!==o?((n=la())===o&&(n=null),n!==o&&(u=da())!==o?((s=fa())===o&&(s=null),s!==o?((a=(a=function(r,t,e){if(t&&e)return !0}(0,n,s))?o:void 0)!==o&&da()!==o?("on update current_timestamp"===r.substr(fu,27).toLowerCase()?(i=r.substr(fu,27),fu+=27):(i=o,0===Lu&&hu(Qr)),i===o&&(i=null),i!==o?(e=function(r,t,e,n){return {type:"origin",value:(n?`${r} ${n}`:r).toLowerCase()}}(e,0,0,i),t=e):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o)):(fu=t,t=o));return t}()),t}function Bo(){var t,e;return t=fu,(e=function(){var t,e,n,u;t=fu,"null"===r.substr(fu,4).toLowerCase()?(e=r.substr(fu,4),fu+=4):(e=o,0===Lu&&hu(It));e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o);return t}())!==o&&(e={type:"null",value:null}),t=e}function Xo(){var t,e,n,u,s;if(t=fu,e=fu,39===r.charCodeAt(fu)?(n="'",fu++):(n=o,0===Lu&&hu(rr)),n!==o){for(u=[],s=Vo();s!==o;)u.push(s),s=Vo();u!==o?(39===r.charCodeAt(fu)?(s="'",fu++):(s=o,0===Lu&&hu(rr)),s!==o?e=n=[n,u,s]:(fu=e,e=o)):(fu=e,e=o);}else fu=e,e=o;if(e!==o&&(e=Jr(e)),(t=e)===o){if(t=fu,e=fu,34===r.charCodeAt(fu)?(n='"',fu++):(n=o,0===Lu&&hu(Dr)),n!==o){for(u=[],s=Wo();s!==o;)u.push(s),s=Wo();u!==o?(34===r.charCodeAt(fu)?(s='"',fu++):(s=o,0===Lu&&hu(Dr)),s!==o?e=n=[n,u,s]:(fu=e,e=o)):(fu=e,e=o);}else fu=e,e=o;e!==o&&(e=Jr(e)),t=e;}return t}function Wo(){var t;return rt.test(r.charAt(fu))?(t=r.charAt(fu),fu++):(t=o,0===Lu&&hu(tt)),t===o&&(t=Ko()),t}function Vo(){var t;return et.test(r.charAt(fu))?(t=r.charAt(fu),fu++):(t=o,0===Lu&&hu(nt)),t===o&&(t=Ko()),t}function Ko(){var t,e,n,u,s,a,i,c,l,f;return t=fu,"\\'"===r.substr(fu,2)?(e="\\'",fu+=2):(e=o,0===Lu&&hu(ut)),e!==o&&(e="'"),(t=e)===o&&(t=fu,'\\"'===r.substr(fu,2)?(e='\\"',fu+=2):(e=o,0===Lu&&hu(ot)),e!==o&&(e='"'),(t=e)===o&&(t=fu,"\\\\"===r.substr(fu,2)?(e="\\\\",fu+=2):(e=o,0===Lu&&hu(st)),e!==o&&(e="\\"),(t=e)===o&&(t=fu,"\\/"===r.substr(fu,2)?(e="\\/",fu+=2):(e=o,0===Lu&&hu(at)),e!==o&&(e="/"),(t=e)===o&&(t=fu,"\\b"===r.substr(fu,2)?(e="\\b",fu+=2):(e=o,0===Lu&&hu(it)),e!==o&&(e="\b"),(t=e)===o&&(t=fu,"\\f"===r.substr(fu,2)?(e="\\f",fu+=2):(e=o,0===Lu&&hu(ct)),e!==o&&(e="\f"),(t=e)===o&&(t=fu,"\\n"===r.substr(fu,2)?(e="\\n",fu+=2):(e=o,0===Lu&&hu(lt)),e!==o&&(e="\n"),(t=e)===o&&(t=fu,"\\r"===r.substr(fu,2)?(e="\\r",fu+=2):(e=o,0===Lu&&hu(ft)),e!==o&&(e="\r"),(t=e)===o&&(t=fu,"\\t"===r.substr(fu,2)?(e="\\t",fu+=2):(e=o,0===Lu&&hu(vt)),e!==o&&(e="\t"),(t=e)===o&&(t=fu,"\\u"===r.substr(fu,2)?(e="\\u",fu+=2):(e=o,0===Lu&&hu(bt)),e!==o&&(n=ts())!==o&&(u=ts())!==o&&(s=ts())!==o&&(a=ts())!==o?(i=n,c=u,l=s,f=a,t=e=String.fromCharCode(parseInt("0x"+i+c+l+f))):(fu=t,t=o),t===o&&(t=fu,92===r.charCodeAt(fu)?(e="\\",fu++):(e=o,0===Lu&&hu(dt)),e!==o&&(e="\\"),t=e)))))))))),t}function qo(){var r,t,e;return r=fu,(t=function(){var r,t,e,n;r=fu,(t=Zo())!==o&&(e=zo())!==o&&(n=Jo())!==o?(r=t={type:"bigint",value:t+e+n}):(fu=r,r=o);r===o&&(r=fu,(t=Zo())!==o&&(e=zo())!==o?(t=function(r,t){const e=r+t;return $a(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e),r=t):(fu=r,r=o),r===o&&(r=fu,(t=Zo())!==o&&(e=Jo())!==o?(t=function(r,t){return {type:"bigint",value:r+t}}(t,e),r=t):(fu=r,r=o),r===o&&(r=fu,(t=Zo())!==o&&(t=function(r){return $a(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t)));return r}())!==o&&(t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),r=t}function Zo(){var t,e,n;return (t=Qo())===o&&(t=rs())===o&&(t=fu,45===r.charCodeAt(fu)?(e="-",fu++):(e=o,0===Lu&&hu(Rr)),e===o&&(43===r.charCodeAt(fu)?(e="+",fu++):(e=o,0===Lu&&hu(Nr))),e!==o&&(n=Qo())!==o?(t=e="-"+n):(fu=t,t=o),t===o&&(t=fu,45===r.charCodeAt(fu)?(e="-",fu++):(e=o,0===Lu&&hu(Rr)),e===o&&(43===r.charCodeAt(fu)?(e="+",fu++):(e=o,0===Lu&&hu(Nr))),e!==o&&(n=rs())!==o?(t=e="-"+n):(fu=t,t=o))),t}function zo(){var t,e,n;return t=fu,46===r.charCodeAt(fu)?(e=".",fu++):(e=o,0===Lu&&hu(pt)),e!==o&&(n=Qo())!==o?(t=e="."+n):(fu=t,t=o),t}function Jo(){var t,e,n;return t=fu,(e=function(){var t,e,n;t=fu,yt.test(r.charAt(fu))?(e=r.charAt(fu),fu++):(e=o,0===Lu&&hu(Tt));e!==o?(mt.test(r.charAt(fu))?(n=r.charAt(fu),fu++):(n=o,0===Lu&&hu(St)),n===o&&(n=null),n!==o?(t=e=e+(null!==(u=n)?u:"")):(fu=t,t=o)):(fu=t,t=o);var u;return t}())!==o&&(n=Qo())!==o?(t=e=e+n):(fu=t,t=o),t}function Qo(){var r,t,e;if(r=fu,t=[],(e=rs())!==o)for(;e!==o;)t.push(e),e=rs();else t=o;return t!==o&&(t=t.join("")),r=t}function rs(){var t;return wt.test(r.charAt(fu))?(t=r.charAt(fu),fu++):(t=o,0===Lu&&hu(Et)),t}function ts(){var t;return ht.test(r.charAt(fu))?(t=r.charAt(fu),fu++):(t=o,0===Lu&&hu(At)),t}function es(){var t,e,n,u;return t=fu,"default"===r.substr(fu,7).toLowerCase()?(e=r.substr(fu,7),fu+=7):(e=o,0===Lu&&hu(C)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o),t}function ns(){var t,e,n,u;return t=fu,"to"===r.substr(fu,2).toLowerCase()?(e=r.substr(fu,2),fu+=2):(e=o,0===Lu&&hu(_t)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o),t}function us(){var t,e,n,u;return t=fu,"drop"===r.substr(fu,4).toLowerCase()?(e=r.substr(fu,4),fu+=4):(e=o,0===Lu&&hu(Ot)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="DROP"):(fu=t,t=o)):(fu=t,t=o),t}function os(){var t,e,n,u;return t=fu,"update"===r.substr(fu,6).toLowerCase()?(e=r.substr(fu,6),fu+=6):(e=o,0===Lu&&hu(Dt)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o),t}function ss(){var t,e,n,u;return t=fu,"create"===r.substr(fu,6).toLowerCase()?(e=r.substr(fu,6),fu+=6):(e=o,0===Lu&&hu(kt)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o),t}function as(){var t,e,n,u;return t=fu,"temporary"===r.substr(fu,9).toLowerCase()?(e=r.substr(fu,9),fu+=9):(e=o,0===Lu&&hu($t)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o),t}function is(){var t,e,n,u;return t=fu,"if not exists"===r.substr(fu,13).toLowerCase()?(e=r.substr(fu,13),fu+=13):(e=o,0===Lu&&hu(Ft)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o),t}function cs(){var t,e,n,u;return t=fu,"replace"===r.substr(fu,7).toLowerCase()?(e=r.substr(fu,7),fu+=7):(e=o,0===Lu&&hu(jt)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o),t}function ls(){var t,e,n,u;return t=fu,"rename"===r.substr(fu,6).toLowerCase()?(e=r.substr(fu,6),fu+=6):(e=o,0===Lu&&hu(Yt)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o),t}function fs(){var t,e,n,u;return t=fu,"partition"===r.substr(fu,9).toLowerCase()?(e=r.substr(fu,9),fu+=9):(e=o,0===Lu&&hu(Xt)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="PARTITION"):(fu=t,t=o)):(fu=t,t=o),t}function vs(){var t,e,n,u;return t=fu,"into"===r.substr(fu,4).toLowerCase()?(e=r.substr(fu,4),fu+=4):(e=o,0===Lu&&hu(Wt)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o),t}function bs(){var t,e,n,u;return t=fu,"set"===r.substr(fu,3).toLowerCase()?(e=r.substr(fu,3),fu+=3):(e=o,0===Lu&&hu(Kt)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o),t}function ds(){var t,e,n,u;return t=fu,"as"===r.substr(fu,2).toLowerCase()?(e=r.substr(fu,2),fu+=2):(e=o,0===Lu&&hu(Zt)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o),t}function Ls(){var t,e,n,u;return t=fu,"table"===r.substr(fu,5).toLowerCase()?(e=r.substr(fu,5),fu+=5):(e=o,0===Lu&&hu(zt)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="TABLE"):(fu=t,t=o)):(fu=t,t=o),t}function Cs(){var t,e,n,u;return t=fu,"tables"===r.substr(fu,6).toLowerCase()?(e=r.substr(fu,6),fu+=6):(e=o,0===Lu&&hu(Jt)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="TABLES"):(fu=t,t=o)):(fu=t,t=o),t}function ps(){var t,e,n,u;return t=fu,"on"===r.substr(fu,2).toLowerCase()?(e=r.substr(fu,2),fu+=2):(e=o,0===Lu&&hu(Qt)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o),t}function ws(){var t,e,n,u;return t=fu,"join"===r.substr(fu,4).toLowerCase()?(e=r.substr(fu,4),fu+=4):(e=o,0===Lu&&hu(ue)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o),t}function Es(){var t,e,n,u;return t=fu,"outer"===r.substr(fu,5).toLowerCase()?(e=r.substr(fu,5),fu+=5):(e=o,0===Lu&&hu(oe)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o),t}function hs(){var t,e,n,u;return t=fu,"union"===r.substr(fu,5).toLowerCase()?(e=r.substr(fu,5),fu+=5):(e=o,0===Lu&&hu(ae)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o),t}function As(){var t,e,n,u;return t=fu,"using"===r.substr(fu,5).toLowerCase()?(e=r.substr(fu,5),fu+=5):(e=o,0===Lu&&hu(ce)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o),t}function ys(){var t,e,n,u;return t=fu,"with"===r.substr(fu,4).toLowerCase()?(e=r.substr(fu,4),fu+=4):(e=o,0===Lu&&hu(vr)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o),t}function Ts(){var t,e,n,u;return t=fu,"by"===r.substr(fu,2).toLowerCase()?(e=r.substr(fu,2),fu+=2):(e=o,0===Lu&&hu(ve)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o),t}function ms(){var t,e,n,u;return t=fu,"all"===r.substr(fu,3).toLowerCase()?(e=r.substr(fu,3),fu+=3):(e=o,0===Lu&&hu(Ee)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="ALL"):(fu=t,t=o)):(fu=t,t=o),t}function Ss(){var t,e,n,u;return t=fu,"distinct"===r.substr(fu,8).toLowerCase()?(e=r.substr(fu,8),fu+=8):(e=o,0===Lu&&hu(he)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="DISTINCT"):(fu=t,t=o)):(fu=t,t=o),t}function Is(){var t,e,n,u;return t=fu,"between"===r.substr(fu,7).toLowerCase()?(e=r.substr(fu,7),fu+=7):(e=o,0===Lu&&hu(Ae)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="BETWEEN"):(fu=t,t=o)):(fu=t,t=o),t}function Ns(){var t,e,n,u;return t=fu,"in"===r.substr(fu,2).toLowerCase()?(e=r.substr(fu,2),fu+=2):(e=o,0===Lu&&hu(ye)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="IN"):(fu=t,t=o)):(fu=t,t=o),t}function Rs(){var t,e,n,u;return t=fu,"is"===r.substr(fu,2).toLowerCase()?(e=r.substr(fu,2),fu+=2):(e=o,0===Lu&&hu(Te)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="IS"):(fu=t,t=o)):(fu=t,t=o),t}function _s(){var t,e,n,u;return t=fu,"like"===r.substr(fu,4).toLowerCase()?(e=r.substr(fu,4),fu+=4):(e=o,0===Lu&&hu(me)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="LIKE"):(fu=t,t=o)):(fu=t,t=o),t}function gs(){var t,e,n,u;return t=fu,"exists"===r.substr(fu,6).toLowerCase()?(e=r.substr(fu,6),fu+=6):(e=o,0===Lu&&hu(Se)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="EXISTS"):(fu=t,t=o)):(fu=t,t=o),t}function Os(){var t,e,n,u;return t=fu,"not"===r.substr(fu,3).toLowerCase()?(e=r.substr(fu,3),fu+=3):(e=o,0===Lu&&hu(g)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="NOT"):(fu=t,t=o)):(fu=t,t=o),t}function Us(){var t,e,n,u;return t=fu,"and"===r.substr(fu,3).toLowerCase()?(e=r.substr(fu,3),fu+=3):(e=o,0===Lu&&hu(Ie)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="AND"):(fu=t,t=o)):(fu=t,t=o),t}function xs(){var t,e,n,u;return t=fu,"or"===r.substr(fu,2).toLowerCase()?(e=r.substr(fu,2),fu+=2):(e=o,0===Lu&&hu(Ne)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="OR"):(fu=t,t=o)):(fu=t,t=o),t}function Ms(){var t,e,n,u;return t=fu,"case"===r.substr(fu,4).toLowerCase()?(e=r.substr(fu,4),fu+=4):(e=o,0===Lu&&hu(Me)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o),t}function Ds(){var t,e,n,u;return t=fu,"cast"===r.substr(fu,4).toLowerCase()?(e=r.substr(fu,4),fu+=4):(e=o,0===Lu&&hu(Pe)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?t=e=[e,n]:(fu=t,t=o)):(fu=t,t=o),t}function ks(){var t,e,n,u;return t=fu,"char"===r.substr(fu,4).toLowerCase()?(e=r.substr(fu,4),fu+=4):(e=o,0===Lu&&hu(He)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="CHAR"):(fu=t,t=o)):(fu=t,t=o),t}function $s(){var t,e,n,u;return t=fu,"varchar"===r.substr(fu,7).toLowerCase()?(e=r.substr(fu,7),fu+=7):(e=o,0===Lu&&hu(Ge)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="VARCHAR"):(fu=t,t=o)):(fu=t,t=o),t}function Fs(){var t,e,n,u;return t=fu,"numeric"===r.substr(fu,7).toLowerCase()?(e=r.substr(fu,7),fu+=7):(e=o,0===Lu&&hu(je)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="NUMERIC"):(fu=t,t=o)):(fu=t,t=o),t}function Ps(){var t,e,n,u;return t=fu,"decimal"===r.substr(fu,7).toLowerCase()?(e=r.substr(fu,7),fu+=7):(e=o,0===Lu&&hu(Ye)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="DECIMAL"):(fu=t,t=o)):(fu=t,t=o),t}function Hs(){var t,e,n,u;return t=fu,"unsigned"===r.substr(fu,8).toLowerCase()?(e=r.substr(fu,8),fu+=8):(e=o,0===Lu&&hu(Xe)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="UNSIGNED"):(fu=t,t=o)):(fu=t,t=o),t}function Gs(){var t,e,n,u;return t=fu,"int"===r.substr(fu,3).toLowerCase()?(e=r.substr(fu,3),fu+=3):(e=o,0===Lu&&hu(We)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="INT"):(fu=t,t=o)):(fu=t,t=o),t}function js(){var t,e,n,u;return t=fu,"integer"===r.substr(fu,7).toLowerCase()?(e=r.substr(fu,7),fu+=7):(e=o,0===Lu&&hu(Ke)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="INTEGER"):(fu=t,t=o)):(fu=t,t=o),t}function Ys(){var t,e,n,u;return t=fu,"smallint"===r.substr(fu,8).toLowerCase()?(e=r.substr(fu,8),fu+=8):(e=o,0===Lu&&hu(Ze)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="SMALLINT"):(fu=t,t=o)):(fu=t,t=o),t}function Bs(){var t,e,n,u;return t=fu,"tinyint"===r.substr(fu,7).toLowerCase()?(e=r.substr(fu,7),fu+=7):(e=o,0===Lu&&hu(ze)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="TINYINT"):(fu=t,t=o)):(fu=t,t=o),t}function Xs(){var t,e,n,u;return t=fu,"bigint"===r.substr(fu,6).toLowerCase()?(e=r.substr(fu,6),fu+=6):(e=o,0===Lu&&hu(en)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="BIGINT"):(fu=t,t=o)):(fu=t,t=o),t}function Ws(){var t,e,n,u;return t=fu,"float"===r.substr(fu,5).toLowerCase()?(e=r.substr(fu,5),fu+=5):(e=o,0===Lu&&hu(nn)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="FLOAT"):(fu=t,t=o)):(fu=t,t=o),t}function Vs(){var t,e,n,u;return t=fu,"double"===r.substr(fu,6).toLowerCase()?(e=r.substr(fu,6),fu+=6):(e=o,0===Lu&&hu(un)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="DOUBLE"):(fu=t,t=o)):(fu=t,t=o),t}function Ks(){var t,e,n,u;return t=fu,"date"===r.substr(fu,4).toLowerCase()?(e=r.substr(fu,4),fu+=4):(e=o,0===Lu&&hu(on)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="DATE"):(fu=t,t=o)):(fu=t,t=o),t}function qs(){var t,e,n,u;return t=fu,"datetime"===r.substr(fu,8).toLowerCase()?(e=r.substr(fu,8),fu+=8):(e=o,0===Lu&&hu(sn)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="DATETIME"):(fu=t,t=o)):(fu=t,t=o),t}function Zs(){var t,e,n,u;return t=fu,"time"===r.substr(fu,4).toLowerCase()?(e=r.substr(fu,4),fu+=4):(e=o,0===Lu&&hu(an)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="TIME"):(fu=t,t=o)):(fu=t,t=o),t}function zs(){var t,e,n,u;return t=fu,"timestamp"===r.substr(fu,9).toLowerCase()?(e=r.substr(fu,9),fu+=9):(e=o,0===Lu&&hu(cn)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="TIMESTAMP"):(fu=t,t=o)):(fu=t,t=o),t}function Js(){var t,e,n,u;return t=fu,"current_timestamp"===r.substr(fu,17).toLowerCase()?(e=r.substr(fu,17),fu+=17):(e=o,0===Lu&&hu(An)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="CURRENT_TIMESTAMP"):(fu=t,t=o)):(fu=t,t=o),t}function Qs(){var t;return (t=function(){var t;return "@@"===r.substr(fu,2)?(t="@@",fu+=2):(t=o,0===Lu&&hu(gn)),t}())===o&&(t=function(){var t;return 64===r.charCodeAt(fu)?(t="@",fu++):(t=o,0===Lu&&hu(_n)),t}())===o&&(t=function(){var t;return 36===r.charCodeAt(fu)?(t="$",fu++):(t=o,0===Lu&&hu(On)),t}()),t}function ra(){var t;return 61===r.charCodeAt(fu)?(t="=",fu++):(t=o,0===Lu&&hu(Cr)),t}function ta(){var t,e,n,u;return t=fu,"add"===r.substr(fu,3).toLowerCase()?(e=r.substr(fu,3),fu+=3):(e=o,0===Lu&&hu(Dn)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="ADD"):(fu=t,t=o)):(fu=t,t=o),t}function ea(){var t,e,n,u;return t=fu,"column"===r.substr(fu,6).toLowerCase()?(e=r.substr(fu,6),fu+=6):(e=o,0===Lu&&hu(kn)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="COLUMN"):(fu=t,t=o)):(fu=t,t=o),t}function na(){var t,e,n,u;return t=fu,"index"===r.substr(fu,5).toLowerCase()?(e=r.substr(fu,5),fu+=5):(e=o,0===Lu&&hu($n)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="INDEX"):(fu=t,t=o)):(fu=t,t=o),t}function ua(){var t,e,n,u;return t=fu,"key"===r.substr(fu,3).toLowerCase()?(e=r.substr(fu,3),fu+=3):(e=o,0===Lu&&hu(v)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="KEY"):(fu=t,t=o)):(fu=t,t=o),t}function oa(){var t,e,n,u;return t=fu,"comment"===r.substr(fu,7).toLowerCase()?(e=r.substr(fu,7),fu+=7):(e=o,0===Lu&&hu(Hn)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="COMMENT"):(fu=t,t=o)):(fu=t,t=o),t}function sa(){var t,e,n,u;return t=fu,"constraint"===r.substr(fu,10).toLowerCase()?(e=r.substr(fu,10),fu+=10):(e=o,0===Lu&&hu(Gn)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="CONSTRAINT"):(fu=t,t=o)):(fu=t,t=o),t}function aa(){var t;return 46===r.charCodeAt(fu)?(t=".",fu++):(t=o,0===Lu&&hu(pt)),t}function ia(){var t;return 44===r.charCodeAt(fu)?(t=",",fu++):(t=o,0===Lu&&hu(qn)),t}function ca(){var t;return 42===r.charCodeAt(fu)?(t="*",fu++):(t=o,0===Lu&&hu(_r)),t}function la(){var t;return 40===r.charCodeAt(fu)?(t="(",fu++):(t=o,0===Lu&&hu(ir)),t}function fa(){var t;return 41===r.charCodeAt(fu)?(t=")",fu++):(t=o,0===Lu&&hu(cr)),t}function va(){var t;return 59===r.charCodeAt(fu)?(t=";",fu++):(t=o,0===Lu&&hu(Jn)),t}function ba(){var t;return (t=function(){var t;return "||"===r.substr(fu,2)?(t="||",fu+=2):(t=o,0===Lu&&hu(tu)),t}())===o&&(t=function(){var t;return "&&"===r.substr(fu,2)?(t="&&",fu+=2):(t=o,0===Lu&&hu(eu)),t}()),t}function da(){var r,t;for(r=[],(t=Ea())===o&&(t=Ca());t!==o;)r.push(t),(t=Ea())===o&&(t=Ca());return r}function La(){var r,t;if(r=[],(t=Ea())===o&&(t=Ca()),t!==o)for(;t!==o;)r.push(t),(t=Ea())===o&&(t=Ca());else r=o;return r}function Ca(){var t;return (t=function(){var t,e,n,u,s,a;t=fu,"/*"===r.substr(fu,2)?(e="/*",fu+=2):(e=o,0===Lu&&hu(nu));if(e!==o){for(n=[],u=fu,s=fu,Lu++,"*/"===r.substr(fu,2)?(a="*/",fu+=2):(a=o,0===Lu&&hu(uu)),Lu--,a===o?s=void 0:(fu=s,s=o),s!==o&&(a=wa())!==o?u=s=[s,a]:(fu=u,u=o);u!==o;)n.push(u),u=fu,s=fu,Lu++,"*/"===r.substr(fu,2)?(a="*/",fu+=2):(a=o,0===Lu&&hu(uu)),Lu--,a===o?s=void 0:(fu=s,s=o),s!==o&&(a=wa())!==o?u=s=[s,a]:(fu=u,u=o);n!==o?("*/"===r.substr(fu,2)?(u="*/",fu+=2):(u=o,0===Lu&&hu(uu)),u!==o?t=e=[e,n,u]:(fu=t,t=o)):(fu=t,t=o);}else fu=t,t=o;return t}())===o&&(t=function(){var t,e,n,u,s,a;t=fu,"--"===r.substr(fu,2)?(e="--",fu+=2):(e=o,0===Lu&&hu(ou));if(e!==o){for(n=[],u=fu,s=fu,Lu++,a=ha(),Lu--,a===o?s=void 0:(fu=s,s=o),s!==o&&(a=wa())!==o?u=s=[s,a]:(fu=u,u=o);u!==o;)n.push(u),u=fu,s=fu,Lu++,a=ha(),Lu--,a===o?s=void 0:(fu=s,s=o),s!==o&&(a=wa())!==o?u=s=[s,a]:(fu=u,u=o);n!==o?t=e=[e,n]:(fu=t,t=o);}else fu=t,t=o;return t}())===o&&(t=function(){var t,e,n,u,s,a;t=fu,35===r.charCodeAt(fu)?(e="#",fu++):(e=o,0===Lu&&hu(su));if(e!==o){for(n=[],u=fu,s=fu,Lu++,a=ha(),Lu--,a===o?s=void 0:(fu=s,s=o),s!==o&&(a=wa())!==o?u=s=[s,a]:(fu=u,u=o);u!==o;)n.push(u),u=fu,s=fu,Lu++,a=ha(),Lu--,a===o?s=void 0:(fu=s,s=o),s!==o&&(a=wa())!==o?u=s=[s,a]:(fu=u,u=o);n!==o?t=e=[e,n]:(fu=t,t=o);}else fu=t,t=o;return t}()),t}function pa(){var r,t,e,n,u,s,a;return r=fu,(t=oa())!==o&&da()!==o?((e=ra())===o&&(e=null),e!==o&&da()!==o&&(n=Xo())!==o?(s=e,a=n,r=t={type:(u=t).toLowerCase(),keyword:u.toLowerCase(),symbol:s,value:a}):(fu=r,r=o)):(fu=r,r=o),r}function wa(){var t;return r.length>fu?(t=r.charAt(fu),fu++):(t=o,0===Lu&&hu(au)),t}function Ea(){var t;return iu.test(r.charAt(fu))?(t=r.charAt(fu),fu++):(t=o,0===Lu&&hu(cu)),t}function ha(){var t,e;if((t=function(){var t,e;t=fu,Lu++,r.length>fu?(e=r.charAt(fu),fu++):(e=o,0===Lu&&hu(au));Lu--,e===o?t=void 0:(fu=t,t=o);return t}())===o)if(t=[],Lt.test(r.charAt(fu))?(e=r.charAt(fu),fu++):(e=o,0===Lu&&hu(Ct)),e!==o)for(;e!==o;)t.push(e),Lt.test(r.charAt(fu))?(e=r.charAt(fu),fu++):(e=o,0===Lu&&hu(Ct));else t=o;return t}function Aa(){var t,e;return t=fu,ja=[],(void 0)!==o&&da()!==o?((e=ya())===o&&(e=function(){var t,e;t=fu,function(){var t;return "return"===r.substr(fu,6).toLowerCase()?(t=r.substr(fu,6),fu+=6):(t=o,0===Lu&&hu(Un)),t}()!==o&&da()!==o&&(e=Ta())!==o?(t={type:"return",expr:e}):(fu=t,t=o);return t}()),e!==o?(t={stmt:e,vars:ja}):(fu=t,t=o)):(fu=t,t=o),t}function ya(){var t,e,n,u;return t=fu,(e=ga())===o&&(e=Oa()),e!==o&&da()!==o?((n=function(){var t;return ":="===r.substr(fu,2)?(t=":=",fu+=2):(t=o,0===Lu&&hu(xn)),t}())===o&&(n=ra()),n!==o&&da()!==o&&(u=Ta())!==o?(t=e={type:"assign",left:e,symbol:n,right:u}):(fu=t,t=o)):(fu=t,t=o),t}function Ta(){var t;return (t=Fu())===o&&(t=function(){var r,t,e,n,u;r=fu,(t=ga())!==o&&da()!==o&&(e=to())!==o&&da()!==o&&(n=ga())!==o&&da()!==o&&(u=no())!==o?(r=t={type:"join",ltable:t,rtable:n,op:e,on:u}):(fu=r,r=o);return r}())===o&&(t=ma())===o&&(t=function(){var t,e;t=fu,function(){var t;return 91===r.charCodeAt(fu)?(t="[",fu++):(t=o,0===Lu&&hu(Zn)),t}()!==o&&da()!==o&&(e=_a())!==o&&da()!==o&&function(){var t;return 93===r.charCodeAt(fu)?(t="]",fu++):(t=o,0===Lu&&hu(zn)),t}()!==o?(t={type:"array",value:e}):(fu=t,t=o);return t}()),t}function ma(){var r,t,e,n,u,s,a,i;if(r=fu,(t=Sa())!==o){for(e=[],n=fu,(u=da())!==o&&(s=Ro())!==o&&(a=da())!==o&&(i=Sa())!==o?n=u=[u,s,a,i]:(fu=n,n=o);n!==o;)e.push(n),n=fu,(u=da())!==o&&(s=Ro())!==o&&(a=da())!==o&&(i=Sa())!==o?n=u=[u,s,a,i]:(fu=n,n=o);e!==o?(r=t=wr(t,e)):(fu=r,r=o);}else fu=r,r=o;return r}function Sa(){var r,t,e,n,u,s,a,i;if(r=fu,(t=Ia())!==o){for(e=[],n=fu,(u=da())!==o&&(s=go())!==o&&(a=da())!==o&&(i=Ia())!==o?n=u=[u,s,a,i]:(fu=n,n=o);n!==o;)e.push(n),n=fu,(u=da())!==o&&(s=go())!==o&&(a=da())!==o&&(i=Ia())!==o?n=u=[u,s,a,i]:(fu=n,n=o);e!==o?(r=t=wr(t,e)):(fu=r,r=o);}else fu=r,r=o;return r}function Ia(){var r,t;return (r=Yo())===o&&(r=ga())===o&&(r=Ra())===o&&(r=Go())===o&&(r=fu,la()!==o&&da()!==o&&(t=ma())!==o&&da()!==o&&fa()!==o?(r=Ur(t)):(fu=r,r=o)),r}function Na(){var r,t,e,n,u,s,a;return r=fu,(t=xo())!==o?(e=fu,(n=da())!==o&&(u=aa())!==o&&(s=da())!==o&&(a=xo())!==o?e=n=[n,u,s,a]:(fu=e,e=o),e===o&&(e=null),e!==o?(r=t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e)):(fu=r,r=o)):(fu=r,r=o),r}function Ra(){var r,t,e;return r=fu,(t=Na())!==o&&da()!==o&&la()!==o&&da()!==o?((e=_a())===o&&(e=null),e!==o&&da()!==o&&fa()!==o?(r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(fu=r,r=o)):(fu=r,r=o),r===o&&(r=fu,(t=Na())!==o&&(t=function(r){return {type:"function",name:r,args:null}}(t)),r=t),r}function _a(){var r,t,e,n,u,s,a,c;if(r=fu,(t=Ia())!==o){for(e=[],n=fu,(u=da())!==o&&(s=ia())!==o&&(a=da())!==o&&(c=Ia())!==o?n=u=[u,s,a,c]:(fu=n,n=o);n!==o;)e.push(n),n=fu,(u=da())!==o&&(s=ia())!==o&&(a=da())!==o&&(c=Ia())!==o?n=u=[u,s,a,c]:(fu=n,n=o);e!==o?(r=t=i(t,e)):(fu=r,r=o);}else fu=r,r=o;return r}function ga(){var r,t,e,n,u;return r=fu,(t=Qs())!==o&&(e=Oa())!==o?(n=t,u=e,r=t={type:"var",...u,prefix:n}):(fu=r,r=o),r}function Oa(){var t,e,n,u,s;return t=fu,(e=$o())!==o&&(n=function(){var t,e,n,u,s;t=fu,e=[],n=fu,46===r.charCodeAt(fu)?(u=".",fu++):(u=o,0===Lu&&hu(pt));u!==o&&(s=$o())!==o?n=u=[u,s]:(fu=n,n=o);for(;n!==o;)e.push(n),n=fu,46===r.charCodeAt(fu)?(u=".",fu++):(u=o,0===Lu&&hu(pt)),u!==o&&(s=$o())!==o?n=u=[u,s]:(fu=n,n=o);e!==o&&(e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return t=e}())!==o?(u=e,s=n,ja.push(u),t=e={type:"var",name:u,members:s,prefix:null}):(fu=t,t=o),t}function Ua(){var t;return (t=function(){var t,e,n,u;t=fu,(e=ks())===o&&(e=$s());if(e!==o)if(da()!==o)if(la()!==o)if(da()!==o){if(n=[],wt.test(r.charAt(fu))?(u=r.charAt(fu),fu++):(u=o,0===Lu&&hu(Et)),u!==o)for(;u!==o;)n.push(u),wt.test(r.charAt(fu))?(u=r.charAt(fu),fu++):(u=o,0===Lu&&hu(Et));else n=o;n!==o&&(u=da())!==o&&fa()!==o?(e={dataType:e,length:parseInt(n.join(""),10)},t=e):(fu=t,t=o);}else fu=t,t=o;else fu=t,t=o;else fu=t,t=o;else fu=t,t=o;t===o&&(t=fu,(e=ks())!==o&&(e=lu(e)),(t=e)===o&&(t=fu,(e=$s())!==o&&(e=lu(e)),t=e));return t}())===o&&(t=function(){var t,e,n,u,s,a,i,c,l,f,v,b;t=fu,(e=Fs())===o&&(e=Ps())===o&&(e=Gs())===o&&(e=js())===o&&(e=Ys())===o&&(e=Bs())===o&&(e=Xs())===o&&(e=Ws())===o&&(e=Vs());if(e!==o)if((n=da())!==o)if((u=la())!==o)if((s=da())!==o){if(a=[],wt.test(r.charAt(fu))?(i=r.charAt(fu),fu++):(i=o,0===Lu&&hu(Et)),i!==o)for(;i!==o;)a.push(i),wt.test(r.charAt(fu))?(i=r.charAt(fu),fu++):(i=o,0===Lu&&hu(Et));else a=o;if(a!==o)if((i=da())!==o){if(c=fu,(l=ia())!==o)if((f=da())!==o){if(v=[],wt.test(r.charAt(fu))?(b=r.charAt(fu),fu++):(b=o,0===Lu&&hu(Et)),b!==o)for(;b!==o;)v.push(b),wt.test(r.charAt(fu))?(b=r.charAt(fu),fu++):(b=o,0===Lu&&hu(Et));else v=o;v!==o?c=l=[l,f,v]:(fu=c,c=o);}else fu=c,c=o;else fu=c,c=o;c===o&&(c=null),c!==o&&(l=da())!==o&&(f=fa())!==o&&(v=da())!==o?((b=xa())===o&&(b=null),b!==o?(d=c,L=b,e={dataType:e,length:parseInt(a.join(""),10),scale:d&&parseInt(d[2].join(""),10),parentheses:!0,suffix:L},t=e):(fu=t,t=o)):(fu=t,t=o);}else fu=t,t=o;else fu=t,t=o;}else fu=t,t=o;else fu=t,t=o;else fu=t,t=o;else fu=t,t=o;var d,L;if(t===o){if(t=fu,(e=Fs())===o&&(e=Ps())===o&&(e=Gs())===o&&(e=js())===o&&(e=Ys())===o&&(e=Bs())===o&&(e=Xs())===o&&(e=Ws())===o&&(e=Vs()),e!==o){if(n=[],wt.test(r.charAt(fu))?(u=r.charAt(fu),fu++):(u=o,0===Lu&&hu(Et)),u!==o)for(;u!==o;)n.push(u),wt.test(r.charAt(fu))?(u=r.charAt(fu),fu++):(u=o,0===Lu&&hu(Et));else n=o;n!==o&&(u=da())!==o?((s=xa())===o&&(s=null),s!==o?(e=function(r,t,e){return {dataType:r,length:parseInt(t.join(""),10),suffix:e}}(e,n,s),t=e):(fu=t,t=o)):(fu=t,t=o);}else fu=t,t=o;t===o&&(t=fu,(e=Fs())===o&&(e=Ps())===o&&(e=Gs())===o&&(e=js())===o&&(e=Ys())===o&&(e=Bs())===o&&(e=Xs())===o&&(e=Ws())===o&&(e=Vs()),e!==o&&(n=da())!==o?((u=xa())===o&&(u=null),u!==o&&(s=da())!==o?(e=function(r,t){return {dataType:r,suffix:t}}(e,u),t=e):(fu=t,t=o)):(fu=t,t=o));}return t}())===o&&(t=function(){var r,t;r=fu,(t=Ks())===o&&(t=qs())===o&&(t=Zs())===o&&(t=zs());t!==o&&(t=lu(t));return r=t}())===o&&(t=function(){var t,e;t=fu,(e=function(){var t,e,n,u;return t=fu,"json"===r.substr(fu,4).toLowerCase()?(e=r.substr(fu,4),fu+=4):(e=o,0===Lu&&hu(qe)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="JSON"):(fu=t,t=o)):(fu=t,t=o),t}())!==o&&(e=lu(e));return t=e}())===o&&(t=function(){var t,e;t=fu,(e=function(){var t,e,n,u;return t=fu,"tinytext"===r.substr(fu,8).toLowerCase()?(e=r.substr(fu,8),fu+=8):(e=o,0===Lu&&hu(Je)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="TINYTEXT"):(fu=t,t=o)):(fu=t,t=o),t}())===o&&(e=function(){var t,e,n,u;return t=fu,"text"===r.substr(fu,4).toLowerCase()?(e=r.substr(fu,4),fu+=4):(e=o,0===Lu&&hu(Qe)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="TEXT"):(fu=t,t=o)):(fu=t,t=o),t}())===o&&(e=function(){var t,e,n,u;return t=fu,"mediumtext"===r.substr(fu,10).toLowerCase()?(e=r.substr(fu,10),fu+=10):(e=o,0===Lu&&hu(rn)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="MEDIUMTEXT"):(fu=t,t=o)):(fu=t,t=o),t}())===o&&(e=function(){var t,e,n,u;return t=fu,"longtext"===r.substr(fu,8).toLowerCase()?(e=r.substr(fu,8),fu+=8):(e=o,0===Lu&&hu(tn)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="LONGTEXT"):(fu=t,t=o)):(fu=t,t=o),t}());e!==o&&(e={dataType:e});return t=e}()),t}function xa(){var t,e,n;return t=fu,(e=Hs())===o&&(e=null),e!==o&&da()!==o?((n=function(){var t,e,n,u;return t=fu,"zerofill"===r.substr(fu,8).toLowerCase()?(e=r.substr(fu,8),fu+=8):(e=o,0===Lu&&hu(Ve)),e!==o?(n=fu,Lu++,u=Fo(),Lu--,u===o?n=void 0:(fu=n,n=o),n!==o?(t=e="ZEROFILL"):(fu=t,t=o)):(fu=t,t=o),t}())===o&&(n=null),n!==o?(t=e=function(r,t){const e=[];return r&&e.push(r),t&&e.push(t),e}(e,n)):(fu=t,t=o)):(fu=t,t=o),t}const Ma={ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,IS:!0,JOIN:!0,JSON:!0,KEY:!0,LEFT:!0,LIKE:!0,LIMIT:!0,LOW_PRIORITY:!0,NOT:!0,NULL:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,RECURSIVE:!0,RENAME:!0,READ:!0,RIGHT:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WITH:!0,WHEN:!0,WHERE:!0,WRITE:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0};function Da(r,t){return {type:"unary_expr",operator:r,expr:t}}function ka(r,t,e){return {type:"binary_expr",operator:r,left:t,right:e}}function $a(r){const t=n(Number.MAX_SAFE_INTEGER);return !(n(r)<t)}function Fa(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][3]);return e}function Pa(r,t){let e=r;for(let r=0;r<t.length;r++)e=ka(t[r][1],e,t[r][3]);return e}function Ha(r){const t=Xa[r];return t||(r||null)}function Ga(r){const t=[];for(let e of r.keys()){const r=e.split("::");if(!r){t.push(e);break}r&&r[1]&&(r[1]=Ha(r[1])),t.push(r.join("::"));}return t}let ja=[];const Ya=new Set,Ba=new Set,Xa={};if((e=a())!==o&&fu===r.length)return e;throw e!==o&&fu<r.length&&hu({type:"end"}),Au(du,bu<r.length?r.charAt(bu):null,bu<r.length?Eu(bu,bu+1):Eu(bu,bu))}};},function(r,t,e){var n=e(0);function u(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,u);}!function(r,t){function e(){this.constructor=r;}e.prototype=t.prototype,r.prototype=new e;}(u,Error),u.buildMessage=function(r,t){var e={literal:function(r){return '"'+u(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?o(r.parts[t][0])+"-"+o(r.parts[t][1]):o(r.parts[t]);return "["+(r.inverted?"^":"")+e+"]"},any:function(r){return "any character"},end:function(r){return "end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function u(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}function o(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}return "Expected "+function(r){var t,n,u,o=new Array(r.length);for(t=0;t<r.length;t++)o[t]=(u=r[t],e[u.type](u));if(o.sort(),o.length>0){for(t=1,n=1;t<o.length;t++)o[t-1]!==o[t]&&(o[n]=o[t],n++);o.length=n;}switch(o.length){case 1:return o[0];case 2:return o[0]+" or "+o[1];default:return o.slice(0,-1).join(", ")+", or "+o[o.length-1]}}(r)+" but "+function(r){return r?'"'+u(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:u,parse:function(r,t){t=void 0!==t?t:{};var e,o={},s={start:Cu},a=Cu,i=function(r,t){return Ra(r,t)},c=lu("AUTO_INCREMENT",!0),l=lu("UNIQUE",!0),f=lu("PRIMARY",!0),v=lu("KEY",!0),b=lu("COLUMN_FORMAT",!0),d=lu("FIXED",!0),L=lu("DYNAMIC",!0),C=lu("DEFAULT",!0),p=lu("STORAGE",!0),w=lu("DISK",!0),E=lu("MEMORY",!0),h=lu("ALGORITHM",!0),A=lu("INSTANT",!0),y=lu("INPLACE",!0),T=lu("COPY",!0),m=lu("LOCK",!0),S=lu("NONE",!0),I=lu("SHARED",!0),N=lu("EXCLUSIVE",!0),R=lu("PRIMARY KEY",!0),_=lu("FOREIGN KEY",!0),g=lu("MATCH FULL",!0),O=lu("MATCH PARTIAL",!0),U=lu("MATCH SIMPLE",!0),x=lu("ON DELETE",!0),M=lu("ON UPDATE",!0),D=lu("RESTRICT",!0),k=lu("CASCADE",!0),$=lu("SET NULL",!0),F=lu("NO ACTION",!0),P=lu("SET DEFAULT",!0),H=lu("AVG_ROW_LENGTH",!0),G=lu("KEY_BLOCK_SIZE",!0),j=lu("MAX_ROWS",!0),Y=lu("MIN_ROWS",!0),B=lu("STATS_SAMPLE_PAGES",!0),X=lu("CHARACTER SET",!0),W=lu("CHARSET",!0),V=lu("COLLATE",!0),K=lu("CONNECTION",!0),q=lu("COMPRESSION",!0),Z=lu("'",!1),z=lu("ZLIB",!0),J=lu("LZ4",!0),Q=lu("ENGINE",!0),rr=lu("READ",!0),tr=lu("LOCAL",!0),er=lu("LOW_PRIORITY",!0),nr=lu("WRITE",!0),ur=lu("(",!1),or=lu(")",!1),sr=lu("BTREE",!0),ar=lu("HASH",!0),ir=lu("WITH",!0),cr=lu("PARSER",!0),lr=lu("VISIBLE",!0),fr=lu("INVISIBLE",!0),vr=lu("=",!1),br=lu("DUPLICATE",!0),dr=function(r,t){return _a(r,t)},Lr=lu("!",!1),Cr=function(r){return r[0]+" "+r[2]},pr=lu(">=",!1),wr=lu(">",!1),Er=lu("<=",!1),hr=lu("<>",!1),Ar=lu("<",!1),yr=lu("!=",!1),Tr=lu("+",!1),mr=lu("-",!1),Sr=lu("*",!1),Ir=lu("/",!1),Nr=lu("%",!1),Rr=function(r){return r.parentheses=!0,r},_r=function(r){return !0===ma[r.toUpperCase()]},gr=lu('"',!1),Or=/^[^"]/,Ur=fu(['"'],!0,!1),xr=function(r){return r.join("")},Mr=/^[^']/,Dr=fu(["'"],!0,!1),kr=lu("`",!1),$r=/^[^`]/,Fr=fu(["`"],!0,!1),Pr=function(r,t){return r+t.join("")},Hr=/^[A-Za-z_]/,Gr=fu([["A","Z"],["a","z"],"_"],!1,!1),jr=/^[A-Za-z0-9_]/,Yr=fu([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),Br=/^[A-Za-z0-9_:]/,Xr=fu([["A","Z"],["a","z"],["0","9"],"_",":"],!1,!1),Wr=lu(":",!1),Vr=function(r){return {type:"string",value:r[1].join("")}},Kr=lu("ON UPDATE CURRENT_TIMESTAMP",!0),qr=/^[^"\\\0-\x1F\x7F]/,Zr=fu(['"',"\\",["\0",""],""],!0,!1),zr=/^[^'\\]/,Jr=fu(["'","\\"],!0,!1),Qr=lu("\\'",!1),rt=lu('\\"',!1),tt=lu("\\\\",!1),et=lu("\\/",!1),nt=lu("\\b",!1),ut=lu("\\f",!1),ot=lu("\\n",!1),st=lu("\\r",!1),at=lu("\\t",!1),it=lu("\\u",!1),ct=lu("\\",!1),lt=/^[\n\r]/,ft=fu(["\n","\r"],!1,!1),vt=lu(".",!1),bt=/^[0-9]/,dt=fu([["0","9"]],!1,!1),Lt=/^[0-9a-fA-F]/,Ct=fu([["0","9"],["a","f"],["A","F"]],!1,!1),pt=/^[eE]/,wt=fu(["e","E"],!1,!1),Et=/^[+\-]/,ht=fu(["+","-"],!1,!1),At=lu("NULL",!0),yt=lu("NOT NULL",!0),Tt=lu("TRUE",!0),mt=lu("TO",!0),St=lu("FALSE",!0),It=(lu("DROP",!0)),Nt=lu("USE",!0),Rt=lu("ALTER",!0),_t=lu("SELECT",!0),gt=lu("UPDATE",!0),Ot=lu("CREATE",!0),Ut=lu("TEMPORARY",!0),xt=lu("IF NOT EXISTS",!0),Mt=lu("DELETE",!0),Dt=lu("INSERT",!0),kt=lu("RECURSIVE",!1),$t=lu("REPLACE",!0),Ft=lu("RENAME",!0),Pt=lu("IGNORE",!0),Ht=(lu("PARTITION",!0)),Gt=lu("INTO",!0),jt=lu("FROM",!0),Yt=lu("SET",!0),Bt=lu("UNLOCK",!0),Xt=lu("AS",!0),Wt=lu("TABLE",!0),Vt=lu("TABLES",!0),Kt=lu("ON",!0),qt=lu("LEFT",!0),Zt=lu("RIGHT",!0),zt=lu("FULL",!0),Jt=lu("INNER",!0),Qt=lu("JOIN",!0),re=lu("OUTER",!0),te=lu("OVER",!0),ee=lu("UNION",!0),ne=lu("VALUES",!0),ue=lu("USING",!0),oe=lu("WHERE",!0),se=lu("GROUP",!0),ae=lu("BY",!0),ie=lu("ORDER",!0),ce=lu("HAVING",!0),le=lu("LIMIT",!0),fe=lu("OFFSET",!0),ve=lu("ASC",!0),be=lu("DESC",!0),de=lu("ALL",!0),Le=lu("DISTINCT",!0),Ce=lu("BETWEEN",!0),pe=lu("IN",!0),we=lu("IS",!0),Ee=lu("LIKE",!0),he=lu("EXISTS",!0),Ae=lu("NOT",!0),ye=lu("AND",!0),Te=lu("OR",!0),me=lu("COUNT",!0),Se=lu("MAX",!0),Ie=lu("MIN",!0),Ne=lu("SUM",!0),Re=lu("AVG",!0),_e=lu("CALL",!0),ge=lu("CASE",!0),Oe=lu("WHEN",!0),Ue=lu("THEN",!0),xe=lu("ELSE",!0),Me=lu("END",!0),De=lu("CAST",!0),ke=lu("CHAR",!0),$e=lu("VARCHAR",!0),Fe=lu("NUMERIC",!0),Pe=lu("DECIMAL",!0),He=lu("SIGNED",!0),Ge=lu("UNSIGNED",!0),je=lu("INT",!0),Ye=lu("ZEROFILL",!0),Be=lu("INTEGER",!0),Xe=lu("JSON",!0),We=lu("SMALLINT",!0),Ve=lu("TINYINT",!0),Ke=lu("TINYTEXT",!0),qe=lu("TEXT",!0),Ze=lu("MEDIUMTEXT",!0),ze=lu("LONGTEXT",!0),Je=lu("BIGINT",!0),Qe=lu("FLOAT",!0),rn=lu("DOUBLE",!0),tn=lu("DATE",!0),en=lu("DATETIME",!0),nn=lu("TIME",!0),un=lu("TIMESTAMP",!0),on=lu("TRUNCATE",!0),sn=lu("USER",!0),an=lu("CURRENT_DATE",!0),cn=(lu("INTERVAL",!0)),ln=lu("YEAR",!0),fn=lu("MONTH",!0),vn=lu("DAY",!0),bn=lu("HOUR",!0),dn=lu("MINUTE",!0),Ln=lu("SECOND",!0),Cn=lu("CURRENT_TIME",!0),pn=lu("CURRENT_TIMESTAMP",!0),wn=lu("CURRENT_USER",!0),En=lu("SESSION_USER",!0),hn=lu("SYSTEM_USER",!0),An=lu("GLOBAL",!0),yn=lu("SESSION",!0),Tn=lu("PERSIST",!0),mn=lu("PERSIST_ONLY",!0),Sn=lu("@",!1),In=lu("@@",!1),Nn=lu("$",!1),Rn=lu("return",!0),_n=lu(":=",!1),gn=lu("DUAL",!0),On=lu("ADD",!0),Un=lu("COLUMN",!0),xn=lu("INDEX",!0),Mn=lu("FULLTEXT",!0),Dn=lu("SPATIAL",!0),kn=lu("COMMENT",!0),$n=lu("CONSTRAINT",!0),Fn=lu("REFERENCES",!0),Pn=lu("SQL_CALC_FOUND_ROWS",!0),Hn=lu("SQL_CACHE",!0),Gn=lu("SQL_NO_CACHE",!0),jn=lu("SQL_SMALL_RESULT",!0),Yn=lu("SQL_BIG_RESULT",!0),Bn=lu("SQL_BUFFER_RESULT",!0),Xn=lu(",",!1),Wn=lu("[",!1),Vn=lu("]",!1),Kn=lu(";",!1),qn=lu("||",!1),Zn=lu("&&",!1),zn=lu("/*",!1),Jn=lu("*/",!1),Qn=lu("--",!1),ru=lu("#",!1),tu={type:"any"},eu=/^[ \t\n\r]/,nu=fu([" ","\t","\n","\r"],!1,!1),uu=function(r){return {dataType:r}},ou=0,su=[{line:1,column:1}],au=0,iu=[],cu=0;if("startRule"in t){if(!(t.startRule in s))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=s[t.startRule];}function lu(r,t){return {type:"literal",text:r,ignoreCase:t}}function fu(r,t,e){return {type:"class",parts:r,inverted:t,ignoreCase:e}}function vu(t){var e,n=su[t];if(n)return n;for(e=t-1;!su[e];)e--;for(n={line:(n=su[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return su[t]=n,n}function bu(r,t){var e=vu(r),n=vu(t);return {start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function du(r){ou<au||(ou>au&&(au=ou,iu=[]),iu.push(r));}function Lu(r,t,e){return new u(u.buildMessage(r,t),r,t,e)}function Cu(){var r,t;return r=ou,ua()!==o?((t=function(){var r,t,e,n,u,s,a,i;if(r=ou,(t=wu())!==o){if(e=[],n=ou,(u=ua())!==o&&(s=ea())!==o&&(a=ua())!==o&&(i=wu())!==o?n=u=[u,s,a,i]:(ou=n,n=o),n!==o)for(;n!==o;)e.push(n),n=ou,(u=ua())!==o&&(s=ea())!==o&&(a=ua())!==o&&(i=wu())!==o?n=u=[u,s,a,i]:(ou=n,n=o);else e=o;e!==o?(t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return {tableList:Array.from(xa),columnList:Oa(Ma),ast:e}}(t,e),r=t):(ou=r,r=o);}else ou=r,r=o;return r}())===o&&(t=pu())===o&&(t=wu()),t!==o?(r=t):(ou=r,r=o)):(ou=r,r=o),r}function pu(){var t;return (t=function(){var r,t,e,n;r=ou,(t=qo())!==o&&ua()!==o&&(e=ss())!==o&&ua()!==o&&(n=Bu())!==o?(u=t,s=e,(a=n)&&a.forEach(r=>xa.add(`${u}::${r.db}::${r.table}`)),t={tableList:Array.from(xa),columnList:Oa(Ma),ast:{type:u.toLowerCase(),keyword:s.toLowerCase(),name:a}},r=t):(ou=r,r=o);var u,s,a;return r}())===o&&(t=function(){var t,e,n,u,s,a,c,l,f,v;t=ou,(e=zo())!==o&&ua()!==o?((n=Jo())===o&&(n=null),n!==o&&ua()!==o&&ss()!==o&&ua()!==o?((u=Qo())===o&&(u=null),u!==o&&ua()!==o&&(s=Bu())!==o&&ua()!==o&&(a=function(){var r,t,e,n,u,s,a,c,l;if(r=ou,(t=ra())!==o)if(ua()!==o)if((e=hu())!==o){for(n=[],u=ou,(s=ua())!==o&&(a=Js())!==o&&(c=ua())!==o&&(l=hu())!==o?u=s=[s,a,c,l]:(ou=u,u=o);u!==o;)n.push(u),u=ou,(s=ua())!==o&&(a=Js())!==o&&(c=ua())!==o&&(l=hu())!==o?u=s=[s,a,c,l]:(ou=u,u=o);n!==o&&(u=ua())!==o&&(s=ta())!==o?(t=i(e,n),r=t):(ou=r,r=o);}else ou=r,r=o;else ou=r,r=o;else ou=r,r=o;return r}())!==o&&ua()!==o?((c=function(){var r,t,e,n,u,s,a,i;if(r=ou,(t=Ru())!==o){for(e=[],n=ou,(u=ua())!==o?((s=Js())===o&&(s=null),s!==o&&(a=ua())!==o&&(i=Ru())!==o?n=u=[u,s,a,i]:(ou=n,n=o)):(ou=n,n=o);n!==o;)e.push(n),n=ou,(u=ua())!==o?((s=Js())===o&&(s=null),s!==o&&(a=ua())!==o&&(i=Ru())!==o?n=u=[u,s,a,i]:(ou=n,n=o)):(ou=n,n=o);e!==o?(t=Ra(t,e),r=t):(ou=r,r=o);}else ou=r,r=o;return r}())===o&&(c=null),c!==o&&ua()!==o?((l=function(){var t,e,n,u;t=ou,"ignore"===r.substr(ou,6).toLowerCase()?(e=r.substr(ou,6),ou+=6):(e=o,0===cu&&du(Pt));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o);return t}())===o&&(l=rs()),l===o&&(l=null),l!==o&&ua()!==o?((f=os())===o&&(f=null),f!==o&&ua()!==o?((v=Eu())===o&&(v=null),v!==o?(b=e,d=n,L=u,p=a,w=c,E=l,h=f,A=v,(C=s)&&C.forEach(r=>xa.add(`create::${r.db}::${r.table}`)),e={tableList:Array.from(xa),columnList:Oa(Ma),ast:{type:b[0].toLowerCase(),keyword:"table",temporary:d&&d[0].toLowerCase(),if_not_exists:L&&L[0].toLowerCase(),table:C,ignore_replace:E&&E[0].toLowerCase(),as:h&&h[0].toLowerCase(),query_expr:A&&A.ast,create_definitions:p,table_options:w}},t=e):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o);var b,d,L,C,p,w,E,h,A;t===o&&(t=ou,(e=zo())!==o&&ua()!==o?((n=Jo())===o&&(n=null),n!==o&&ua()!==o&&ss()!==o&&ua()!==o?((u=Qo())===o&&(u=null),u!==o&&ua()!==o&&(s=Bu())!==o&&ua()!==o&&(a=function r(){var t,e;(t=function(){var r,t;r=ou,hs()!==o&&ua()!==o&&(t=Bu())!==o?(r={type:"like",table:t}):(ou=r,r=o);return r}())===o&&(t=ou,ra()!==o&&ua()!==o&&(e=r())!==o&&ua()!==o&&ta()!==o?((n=e).parentheses=!0,t=n):(ou=t,t=o));var n;return t}())!==o?(e=function(r,t,e,n,u){return n&&n.forEach(r=>xa.add(`create::${r.db}::${r.table}`)),{tableList:Array.from(xa),columnList:Oa(Ma),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t[0].toLowerCase(),if_not_exists:e&&e[0].toLowerCase(),table:n,like:u}}}(e,n,u,s,a),t=e):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o));return t}())===o&&(t=function(){var t,e,n,u;t=ou,(e=function(){var t,e,n,u;t=ou,"truncate"===r.substr(ou,8).toLowerCase()?(e=r.substr(ou,8),ou+=8):(e=o,0===cu&&du(on));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="TRUNCATE"):(ou=t,t=o)):(ou=t,t=o);return t}())!==o&&ua()!==o?((n=ss())===o&&(n=null),n!==o&&ua()!==o&&(u=Bu())!==o?(s=e,a=n,(i=u)&&i.forEach(r=>xa.add(`${s}::${r.db}::${r.table}`)),e={tableList:Array.from(xa),columnList:Oa(Ma),ast:{type:s.toLowerCase(),keyword:a&&a.toLowerCase()||"table",name:i}},t=e):(ou=t,t=o)):(ou=t,t=o);var s,a,i;return t}())===o&&(t=function(){var r,t,e;r=ou,(t=ts())!==o&&ua()!==o&&ss()!==o&&ua()!==o&&(e=function(){var r,t,e,n,u,s,a,c;if(r=ou,(t=Hu())!==o){for(e=[],n=ou,(u=ua())!==o&&(s=Js())!==o&&(a=ua())!==o&&(c=Hu())!==o?n=u=[u,s,a,c]:(ou=n,n=o);n!==o;)e.push(n),n=ou,(u=ua())!==o&&(s=Js())!==o&&(a=ua())!==o&&(c=Hu())!==o?n=u=[u,s,a,c]:(ou=n,n=o);e!==o?(t=i(t,e),r=t):(ou=r,r=o);}else ou=r,r=o;return r}())!==o?((n=e).forEach(r=>r.forEach(r=>r.table&&xa.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(xa),columnList:Oa(Ma),ast:{type:"rename",table:n}},r=t):(ou=r,r=o);var n;return r}())===o&&(t=function(){var t,e,n;t=ou,(e=function(){var t,e,n,u;t=ou,"call"===r.substr(ou,4).toLowerCase()?(e=r.substr(ou,4),ou+=4):(e=o,0===cu&&du(_e));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="CALL"):(ou=t,t=o)):(ou=t,t=o);return t}())!==o&&ua()!==o&&(n=wa())!==o?(u=n,e={tableList:Array.from(xa),columnList:Oa(Ma),ast:{type:"call",expr:u}},t=e):(ou=t,t=o);var u;return t}())===o&&(t=function(){var t,e,n;t=ou,(e=function(){var t,e,n,u;t=ou,"use"===r.substr(ou,3).toLowerCase()?(e=r.substr(ou,3),ou+=3):(e=o,0===cu&&du(Nt));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o);return t}())!==o&&ua()!==o&&(n=So())!==o?(u=n,xa.add(`use::${u}::null`),e={tableList:Array.from(xa),columnList:Oa(Ma),ast:{type:"use",db:u}},t=e):(ou=t,t=o);var u;return t}())===o&&(t=function(){var t,e,n,u;t=ou,(e=function(){var t,e,n,u;t=ou,"alter"===r.substr(ou,5).toLowerCase()?(e=r.substr(ou,5),ou+=5):(e=o,0===cu&&du(Rt));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o);return t}())!==o&&ua()!==o&&ss()!==o&&ua()!==o&&(n=Bu())!==o&&ua()!==o&&(u=function(){var r,t,e,n,u,s,a,c;if(r=ou,(t=yu())!==o){for(e=[],n=ou,(u=ua())!==o&&(s=Js())!==o&&(a=ua())!==o&&(c=yu())!==o?n=u=[u,s,a,c]:(ou=n,n=o);n!==o;)e.push(n),n=ou,(u=ua())!==o&&(s=Js())!==o&&(a=ua())!==o&&(c=yu())!==o?n=u=[u,s,a,c]:(ou=n,n=o);e!==o?(t=i(t,e),r=t):(ou=r,r=o);}else ou=r,r=o;return r}())!==o?(a=u,(s=n)&&s.length>0&&s.forEach(r=>xa.add(`alter::${r.db}::${r.table}`)),e={tableList:Array.from(xa),columnList:Oa(Ma),ast:{type:"alter",table:s,expr:a}},t=e):(ou=t,t=o);var s,a;return t}())===o&&(t=function(){var t,e,n,u;t=ou,(e=us())!==o&&ua()!==o?((n=function(){var t,e,n,u;t=ou,"global"===r.substr(ou,6).toLowerCase()?(e=r.substr(ou,6),ou+=6):(e=o,0===cu&&du(An));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="GLOBAL"):(ou=t,t=o)):(ou=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=ou,"session"===r.substr(ou,7).toLowerCase()?(e=r.substr(ou,7),ou+=7):(e=o,0===cu&&du(yn));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="SESSION"):(ou=t,t=o)):(ou=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=ou,"local"===r.substr(ou,5).toLowerCase()?(e=r.substr(ou,5),ou+=5):(e=o,0===cu&&du(tr));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="LOCAL"):(ou=t,t=o)):(ou=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=ou,"persist"===r.substr(ou,7).toLowerCase()?(e=r.substr(ou,7),ou+=7):(e=o,0===cu&&du(Tn));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="PERSIST"):(ou=t,t=o)):(ou=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=ou,"persist_only"===r.substr(ou,12).toLowerCase()?(e=r.substr(ou,12),ou+=12):(e=o,0===cu&&du(mn));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="PERSIST_ONLY"):(ou=t,t=o)):(ou=t,t=o);return t}()),n===o&&(n=null),n!==o&&ua()!==o&&(u=va())!==o?(s=n,(a=u).keyword=s,e={tableList:Array.from(xa),columnList:Oa(Ma),ast:{type:"set",expr:a}},t=e):(ou=t,t=o)):(ou=t,t=o);var s,a;return t}())===o&&(t=function(){var t,e,n;t=ou,(e=function(){var t,e,n,u;t=ou,"lock"===r.substr(ou,4).toLowerCase()?(e=r.substr(ou,4),ou+=4):(e=o,0===cu&&du(m));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o);return t}())!==o&&ua()!==o&&as()!==o&&ua()!==o&&(n=function(){var r,t,e,n,u,s,a,i;if(r=ou,(t=_u())!==o){for(e=[],n=ou,(u=ua())!==o&&(s=Js())!==o&&(a=ua())!==o&&(i=_u())!==o?n=u=[u,s,a,i]:(ou=n,n=o);n!==o;)e.push(n),n=ou,(u=ua())!==o&&(s=Js())!==o&&(a=ua())!==o&&(i=_u())!==o?n=u=[u,s,a,i]:(ou=n,n=o);e!==o?(t=Ra(t,e),r=t):(ou=r,r=o);}else ou=r,r=o;return r}())!==o?(u=n,e={tableList:Array.from(xa),columnList:Oa(Ma),ast:{type:"lock",keyword:"tables",tables:u}},t=e):(ou=t,t=o);var u;return t}())===o&&(t=function(){var t,e;t=ou,(e=function(){var t,e,n,u;t=ou,"unlock"===r.substr(ou,6).toLowerCase()?(e=r.substr(ou,6),ou+=6):(e=o,0===cu&&du(Bt));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o);return t}())!==o&&ua()!==o&&as()!==o?(e={tableList:Array.from(xa),columnList:Oa(Ma),ast:{type:"unlock",keyword:"tables"}},t=e):(ou=t,t=o);return t}()),t}function wu(){var t;return (t=Eu())===o&&(t=function(){var r,t,e,n,u;r=ou,(t=Zo())!==o&&ua()!==o&&(e=Bu())!==o&&ua()!==o&&us()!==o&&ua()!==o&&(n=to())!==o&&ua()!==o?((u=Zu())===o&&(u=null),u!==o?(a=n,i=u,(s=e)&&s.forEach(r=>{const{db:t,as:e,table:n}=r;xa.add(`update::${t}::${n}`);}),a&&a.forEach(r=>Ma.add(`update::${r.table}::${r.column}`)),t={tableList:Array.from(xa),columnList:Oa(Ma),ast:{type:"update",table:s,set:a,where:i}},r=t):(ou=r,r=o)):(ou=r,r=o);var s,a,i;return r}())===o&&(t=function(){var r,t,e,n,u,s,a,c;r=ou,(t=so())!==o&&ua()!==o?((e=ns())===o&&(e=null),e!==o&&ua()!==o&&(n=Ku())!==o&&ua()!==o?((u=uo())===o&&(u=null),u!==o&&ua()!==o&&ra()!==o&&ua()!==o&&(s=function(){var r,t,e,n,u,s,a,c;if(r=ou,(t=No())!==o){for(e=[],n=ou,(u=ua())!==o&&(s=Js())!==o&&(a=ua())!==o&&(c=No())!==o?n=u=[u,s,a,c]:(ou=n,n=o);n!==o;)e.push(n),n=ou,(u=ua())!==o&&(s=Js())!==o&&(a=ua())!==o&&(c=No())!==o?n=u=[u,s,a,c]:(ou=n,n=o);e!==o?(t=i(t,e),r=t):(ou=r,r=o);}else ou=r,r=o;return r}())!==o&&ua()!==o&&ta()!==o&&ua()!==o&&(a=no())!==o&&ua()!==o?((c=oo())===o&&(c=null),c!==o?(t=function(r,t,e,n,u,o){if(t&&(xa.add(`insert::${t.db}::${t.table}`),t.as=null),n){let r=t&&t.table||null;n.forEach(t=>Ma.add(`insert::${r}::${t}`));}return {tableList:Array.from(xa),columnList:Oa(Ma),ast:{type:r,table:[t],columns:n,values:u,partition:e,on_duplicate_update:o}}}(t,n,u,s,a,c),r=t):(ou=r,r=o)):(ou=r,r=o)):(ou=r,r=o)):(ou=r,r=o);return r}())===o&&(t=function(){var r,t,e,n,u,s;r=ou,(t=so())!==o&&ua()!==o&&ns()!==o&&ua()!==o&&(e=Ku())!==o&&ua()!==o?((n=uo())===o&&(n=null),n!==o&&ua()!==o&&(u=no())!==o&&ua()!==o?((s=oo())===o&&(s=null),s!==o?(a=t,c=n,l=u,f=s,(i=e)&&(xa.add(`insert::${i.db}::${i.table}`),Ma.add(`insert::${i.table}::(.*)`),i.as=null),t={tableList:Array.from(xa),columnList:Oa(Ma),ast:{type:a,table:[i],columns:null,values:l,partition:c,on_duplicate_update:f}},r=t):(ou=r,r=o)):(ou=r,r=o)):(ou=r,r=o);var a,i,c,l,f;return r}())===o&&(t=function(){var t,e,n,u,s;t=ou,(e=function(){var t,e,n,u;t=ou,"delete"===r.substr(ou,6).toLowerCase()?(e=r.substr(ou,6),ou+=6):(e=o,0===cu&&du(Mt));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o);return t}())!==o&&ua()!==o?((n=Bu())===o&&(n=null),n!==o&&ua()!==o&&(u=Pu())!==o&&ua()!==o?((s=Zu())===o&&(s=null),s!==o?(e=function(r,t,e){if(t&&t.forEach(r=>{r.table&&xa.add(`delete::${r.db}::${r.table}`),Ma.add(`delete::${r.table}::(.*)`);}),null===r&&1===t.length){const e=t[0];r=[{db:e.db,table:e.table,as:e.as,addition:!0}];}return {tableList:Array.from(xa),columnList:Oa(Ma),ast:{type:"delete",table:r,from:t,where:e}}}(n,u,s),t=e):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o);return t}())===o&&(t=pu())===o&&(t=function(){var r,t;r=[],t=fa();for(;t!==o;)r.push(t),t=fa();return r}()),t}function Eu(){var r,t,e,n,u,s,a,i,c,l;if(r=ou,(t=gu())!==o){for(e=[],n=ou,(u=ua())!==o&&(s=fs())!==o&&(a=ua())!==o?((i=Ls())===o&&(i=null),i!==o&&(c=ua())!==o&&(l=gu())!==o?n=u=[u,s,a,i,c,l]:(ou=n,n=o)):(ou=n,n=o);n!==o;)e.push(n),n=ou,(u=ua())!==o&&(s=fs())!==o&&(a=ua())!==o?((i=Ls())===o&&(i=null),i!==o&&(c=ua())!==o&&(l=gu())!==o?n=u=[u,s,a,i,c,l]:(ou=n,n=o)):(ou=n,n=o);e!==o&&(n=ua())!==o?((u=zu())===o&&(u=null),u!==o&&(s=ua())!==o?((a=ro())===o&&(a=null),a!==o?(r=t=function(r,t,e,n){let u=r;for(let r=0;r<t.length;r++)u._next=t[r][5],u.union=t[r][3]?"union all":"union",u=u._next;return e&&(r._orderby=e),n&&(r._limit=n),{tableList:Array.from(xa),columnList:Oa(Ma),ast:r}}(t,e,u,a)):(ou=r,r=o)):(ou=r,r=o)):(ou=r,r=o);}else ou=r,r=o;return r}function hu(){var t;return (t=Au())===o&&(t=Tu())===o&&(t=mu())===o&&(t=function(){var t;(t=function(){var t,e,n,u,s,a;t=ou,(e=Su())===o&&(e=null);e!==o&&ua()!==o?("primary key"===r.substr(ou,11).toLowerCase()?(n=r.substr(ou,11),ou+=11):(n=o,0===cu&&du(R)),n!==o&&ua()!==o?((u=Gu())===o&&(u=null),u!==o&&ua()!==o&&(s=xu())!==o&&ua()!==o?((a=ju())===o&&(a=null),a!==o?(c=n,l=u,f=s,v=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c.toLowerCase(),keyword:i&&i.keyword,index_type:l,resource:"constraint",index_options:v},t=e):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o);var i,c,l,f,v;return t}())===o&&(t=function(){var t,e,n,u,s,a,i,c;t=ou,(e=Su())===o&&(e=null);e!==o&&ua()!==o&&(n=function(){var t,e,n,u;t=ou,"unique"===r.substr(ou,6).toLowerCase()?(e=r.substr(ou,6),ou+=6):(e=o,0===cu&&du(l));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="UNIQUE"):(ou=t,t=o)):(ou=t,t=o);return t}())!==o&&ua()!==o?((u=Ks())===o&&(u=qs()),u===o&&(u=null),u!==o&&ua()!==o?((s=No())===o&&(s=null),s!==o&&ua()!==o?((a=Gu())===o&&(a=null),a!==o&&ua()!==o&&(i=xu())!==o&&ua()!==o?((c=ju())===o&&(c=null),c!==o?(v=n,b=u,d=s,L=a,C=i,p=c,e={constraint:(f=e)&&f.constraint,definition:C,constraint_type:b&&`${v.toLowerCase()} ${b.toLowerCase()}`||v.toLowerCase(),keyword:f&&f.keyword,index_type:L,index:d,resource:"constraint",index_options:p},t=e):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o);var f,v,b,d,L,C,p;return t}())===o&&(t=function(){var t,e,n,u,s,a;t=ou,(e=Su())===o&&(e=null);e!==o&&ua()!==o?("foreign key"===r.substr(ou,11).toLowerCase()?(n=r.substr(ou,11),ou+=11):(n=o,0===cu&&du(_)),n!==o&&ua()!==o?((u=No())===o&&(u=null),u!==o&&ua()!==o&&(s=xu())!==o&&ua()!==o?((a=Iu())===o&&(a=null),a!==o?(c=n,l=u,f=s,v=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c,keyword:i&&i.keyword,index:l,resource:"constraint",reference_definition:v},t=e):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o);var i,c,l,f,v;return t}());return t}()),t}function Au(){var t,e,n,u,s,a,i,h,A,y,T,m,S,I,N,R,_,g,O,U,x,M,D,k,$;return t=ou,(e=mo())!==o&&ua()!==o&&(n=ya())!==o&&ua()!==o?((u=function(){var t,e;t=ou,(e=function(){var t,e,n,u;t=ou,"not null"===r.substr(ou,8).toLowerCase()?(e=r.substr(ou,8),ou+=8):(e=o,0===cu&&du(yt));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o);return t}())!==o&&(e={type:"not null",value:"not null"});return t=e}())===o&&(u=Do()),u===o&&(u=null),u!==o&&ua()!==o?((s=function(){var r,t;r=ou,Vo()!==o&&ua()!==o?((t=Mo())===o&&(t=vo()),t!==o?(r={type:"default",value:t}):(ou=r,r=o)):(ou=r,r=o);return r}())===o&&(s=null),s!==o&&ua()!==o?("auto_increment"===r.substr(ou,14).toLowerCase()?(a=r.substr(ou,14),ou+=14):(a=o,0===cu&&du(c)),a===o&&(a=null),a!==o&&ua()!==o?(i=ou,"unique"===r.substr(ou,6).toLowerCase()?(h=r.substr(ou,6),ou+=6):(h=o,0===cu&&du(l)),h===o&&("primary"===r.substr(ou,7).toLowerCase()?(h=r.substr(ou,7),ou+=7):(h=o,0===cu&&du(f))),h===o&&(h=null),h!==o&&(A=ua())!==o?("key"===r.substr(ou,3).toLowerCase()?(y=r.substr(ou,3),ou+=3):(y=o,0===cu&&du(v)),y!==o?i=h=[h,A,y]:(ou=i,i=o)):(ou=i,i=o),i===o&&(i=null),i!==o&&(h=ua())!==o?((A=aa())===o&&(A=null),A!==o&&(y=ua())!==o?((T=function(){var t,e;t=ou,function(){var t,e,n,u;t=ou,"collate"===r.substr(ou,7).toLowerCase()?(e=r.substr(ou,7),ou+=7):(e=o,0===cu&&du(V));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="COLLATE"):(ou=t,t=o)):(ou=t,t=o);return t}()!==o&&ua()!==o&&(e=Ro())!==o?(t={type:"collate",value:e}):(ou=t,t=o);return t}())===o&&(T=null),T!==o&&ua()!==o?((m=function(){var t,e,n;t=ou,"column_format"===r.substr(ou,13).toLowerCase()?(e=r.substr(ou,13),ou+=13):(e=o,0===cu&&du(b));e!==o&&ua()!==o?("fixed"===r.substr(ou,5).toLowerCase()?(n=r.substr(ou,5),ou+=5):(n=o,0===cu&&du(d)),n===o&&("dynamic"===r.substr(ou,7).toLowerCase()?(n=r.substr(ou,7),ou+=7):(n=o,0===cu&&du(L)),n===o&&("default"===r.substr(ou,7).toLowerCase()?(n=r.substr(ou,7),ou+=7):(n=o,0===cu&&du(C)))),n!==o?(e=function(r,t){return {type:"column_format",value:t.toLowerCase()}}(0,n),t=e):(ou=t,t=o)):(ou=t,t=o);return t}())===o&&(m=null),m!==o&&ua()!==o?((S=function(){var t,e,n;t=ou,"storage"===r.substr(ou,7).toLowerCase()?(e=r.substr(ou,7),ou+=7):(e=o,0===cu&&du(p));e!==o&&ua()!==o?("disk"===r.substr(ou,4).toLowerCase()?(n=r.substr(ou,4),ou+=4):(n=o,0===cu&&du(w)),n===o&&("memory"===r.substr(ou,6).toLowerCase()?(n=r.substr(ou,6),ou+=6):(n=o,0===cu&&du(E))),n!==o?(e={type:"storage",value:n.toLowerCase()},t=e):(ou=t,t=o)):(ou=t,t=o);return t}())===o&&(S=null),S!==o&&ua()!==o?((I=Iu())===o&&(I=null),I!==o?(N=e,R=n,_=u,g=s,O=a,U=i,x=A,M=T,D=m,k=S,$=I,Ma.add(`create::${N.table}::${N.column}`),_&&!_.value&&(_.value="null"),t=e={column:N,definition:R,nullable:_,default_val:g,auto_increment:O&&O.toLowerCase(),unique_or_primary:U&&`${U[0].toLowerCase()} ${U[2].toLowerCase()}`,comment:x,collate:M,column_format:D,storage:k,reference_definition:$,resource:"column"}):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o),t}function yu(){var t;return (t=function(){var r,t,e,n,u;r=ou,(t=Ws())!==o&&ua()!==o?((e=Vs())===o&&(e=null),e!==o&&ua()!==o?((n=Qo())===o&&(n=null),n!==o&&ua()!==o&&(u=Au())!==o?(s=e,a=n,i=u,t={action:"add",...i,keyword:s,if_not_exists:a&&a[0].toLowerCase(),resource:"column",type:"alter"},r=t):(ou=r,r=o)):(ou=r,r=o)):(ou=r,r=o);var s,a,i;return r}())===o&&(t=function(){var r,t,e;r=ou,qo()!==o&&ua()!==o?((t=Vs())===o&&(t=null),t!==o&&ua()!==o&&(e=mo())!==o?(r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(ou=r,r=o)):(ou=r,r=o);return r}())===o&&(t=function(){var r,t,e;r=ou,(t=Ws())!==o&&ua()!==o&&(e=Tu())!==o?(n=e,t={action:"add",type:"alter",...n},r=t):(ou=r,r=o);var n;return r}())===o&&(t=function(){var r,t,e;r=ou,(t=Ws())!==o&&ua()!==o&&(e=mu())!==o?(n=e,t={action:"add",type:"alter",...n},r=t):(ou=r,r=o);var n;return r}())===o&&(t=function(){var r,t,e,n;r=ou,(t=ts())!==o&&ua()!==o?((e=Ko())===o&&(e=os()),e===o&&(e=null),e!==o&&ua()!==o&&(n=So())!==o?(s=n,t={action:"rename",type:"alter",resource:"table",keyword:(u=e)&&u[0].toLowerCase(),table:s},r=t):(ou=r,r=o)):(ou=r,r=o);var u,s;return r}())===o&&(t=function(){var t,e,n;t=ou,"algorithm"===r.substr(ou,9).toLowerCase()?(e=r.substr(ou,9),ou+=9):(e=o,0===cu&&du(h));e!==o&&ua()!==o&&Xs()!==o&&ua()!==o?("default"===r.substr(ou,7).toLowerCase()?(n=r.substr(ou,7),ou+=7):(n=o,0===cu&&du(C)),n===o&&("instant"===r.substr(ou,7).toLowerCase()?(n=r.substr(ou,7),ou+=7):(n=o,0===cu&&du(A)),n===o&&("inplace"===r.substr(ou,7).toLowerCase()?(n=r.substr(ou,7),ou+=7):(n=o,0===cu&&du(y)),n===o&&("copy"===r.substr(ou,4).toLowerCase()?(n=r.substr(ou,4),ou+=4):(n=o,0===cu&&du(T))))),n!==o?(t=e={type:"alter",keyword:"algorithm",resource:"algorithm",algorithm:n}):(ou=t,t=o)):(ou=t,t=o);return t}())===o&&(t=function(){var t,e,n;t=ou,"lock"===r.substr(ou,4).toLowerCase()?(e=r.substr(ou,4),ou+=4):(e=o,0===cu&&du(m));e!==o&&ua()!==o&&Xs()!==o&&ua()!==o?("default"===r.substr(ou,7).toLowerCase()?(n=r.substr(ou,7),ou+=7):(n=o,0===cu&&du(C)),n===o&&("none"===r.substr(ou,4).toLowerCase()?(n=r.substr(ou,4),ou+=4):(n=o,0===cu&&du(S)),n===o&&("shared"===r.substr(ou,6).toLowerCase()?(n=r.substr(ou,6),ou+=6):(n=o,0===cu&&du(I)),n===o&&("exclusive"===r.substr(ou,9).toLowerCase()?(n=r.substr(ou,9),ou+=9):(n=o,0===cu&&du(N))))),n!==o?(t=e={type:"alter",keyword:"lock",resource:"lock",lock:n}):(ou=t,t=o)):(ou=t,t=o);return t}()),t}function Tu(){var r,t,e,n,u,s,a,i;return r=ou,(t=Ks())===o&&(t=qs()),t!==o&&ua()!==o?((e=No())===o&&(e=null),e!==o&&ua()!==o?((n=Gu())===o&&(n=null),n!==o&&ua()!==o&&(u=xu())!==o&&ua()!==o?((s=ju())===o&&(s=null),s!==o&&ua()!==o?(a=n,i=s,r=t={index:e,definition:u,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i}):(ou=r,r=o)):(ou=r,r=o)):(ou=r,r=o)):(ou=r,r=o),r}function mu(){var t,e,n,u,s,a,i,c,l;return t=ou,(e=function(){var t,e,n,u;t=ou,"fulltext"===r.substr(ou,8).toLowerCase()?(e=r.substr(ou,8),ou+=8):(e=o,0===cu&&du(Mn));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="FULLTEXT"):(ou=t,t=o)):(ou=t,t=o);return t}())===o&&(e=function(){var t,e,n,u;t=ou,"spatial"===r.substr(ou,7).toLowerCase()?(e=r.substr(ou,7),ou+=7):(e=o,0===cu&&du(Dn));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="SPATIAL"):(ou=t,t=o)):(ou=t,t=o);return t}()),e!==o&&ua()!==o?((n=Ks())===o&&(n=qs()),n===o&&(n=null),n!==o&&ua()!==o?((u=No())===o&&(u=null),u!==o&&ua()!==o&&(s=xu())!==o&&ua()!==o?((a=ju())===o&&(a=null),a!==o&&ua()!==o?(i=e,l=a,t=e={index:u,definition:s,keyword:(c=n)&&`${i.toLowerCase()} ${c.toLowerCase()}`||i.toLowerCase(),index_options:l,resource:"index"}):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o),t}function Su(){var t,e,n,u;return t=ou,(e=function(){var t,e,n,u;t=ou,"constraint"===r.substr(ou,10).toLowerCase()?(e=r.substr(ou,10),ou+=10):(e=o,0===cu&&du($n));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="CONSTRAINT"):(ou=t,t=o)):(ou=t,t=o);return t}())!==o&&ua()!==o?((n=So())===o&&(n=null),n!==o?(u=n,t=e={keyword:e.toLowerCase(),constraint:u}):(ou=t,t=o)):(ou=t,t=o),t}function Iu(){var t,e,n,u,s,a,i,c,l,f;return t=ou,(e=function(){var t,e,n,u;t=ou,"references"===r.substr(ou,10).toLowerCase()?(e=r.substr(ou,10),ou+=10):(e=o,0===cu&&du(Fn));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="REFERENCES"):(ou=t,t=o)):(ou=t,t=o);return t}())!==o&&ua()!==o&&(n=Bu())!==o&&ua()!==o&&(u=xu())!==o&&ua()!==o?("match full"===r.substr(ou,10).toLowerCase()?(s=r.substr(ou,10),ou+=10):(s=o,0===cu&&du(g)),s===o&&("match partial"===r.substr(ou,13).toLowerCase()?(s=r.substr(ou,13),ou+=13):(s=o,0===cu&&du(O)),s===o&&("match simple"===r.substr(ou,12).toLowerCase()?(s=r.substr(ou,12),ou+=12):(s=o,0===cu&&du(U)))),s===o&&(s=null),s!==o&&ua()!==o?((a=Nu())===o&&(a=null),a!==o&&ua()!==o?((i=Nu())===o&&(i=null),i!==o?(c=s,l=a,f=i,t=e={definition:u,table:n,keyword:e.toLowerCase(),match:c&&c.toLowerCase(),on_delete:l,on_update:f}):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o),t}function Nu(){var t,e,n,u;return t=ou,"on delete"===r.substr(ou,9).toLowerCase()?(e=r.substr(ou,9),ou+=9):(e=o,0===cu&&du(x)),e===o&&("on update"===r.substr(ou,9).toLowerCase()?(e=r.substr(ou,9),ou+=9):(e=o,0===cu&&du(M))),e!==o&&ua()!==o&&(n=function(){var t,e;t=ou,"restrict"===r.substr(ou,8).toLowerCase()?(e=r.substr(ou,8),ou+=8):(e=o,0===cu&&du(D));e===o&&("cascade"===r.substr(ou,7).toLowerCase()?(e=r.substr(ou,7),ou+=7):(e=o,0===cu&&du(k)),e===o&&("set null"===r.substr(ou,8).toLowerCase()?(e=r.substr(ou,8),ou+=8):(e=o,0===cu&&du($)),e===o&&("no action"===r.substr(ou,9).toLowerCase()?(e=r.substr(ou,9),ou+=9):(e=o,0===cu&&du(F)),e===o&&("set default"===r.substr(ou,11).toLowerCase()?(e=r.substr(ou,11),ou+=11):(e=o,0===cu&&du(P))))));e!==o&&(e=e.toLowerCase());return t=e}())!==o?(u=n,t=e={type:e.toLowerCase(),value:u}):(ou=t,t=o),t}function Ru(){var t,e,n,u,s,a,i,l,f;return t=ou,"auto_increment"===r.substr(ou,14).toLowerCase()?(e=r.substr(ou,14),ou+=14):(e=o,0===cu&&du(c)),e===o&&("avg_row_length"===r.substr(ou,14).toLowerCase()?(e=r.substr(ou,14),ou+=14):(e=o,0===cu&&du(H)),e===o&&("key_block_size"===r.substr(ou,14).toLowerCase()?(e=r.substr(ou,14),ou+=14):(e=o,0===cu&&du(G)),e===o&&("max_rows"===r.substr(ou,8).toLowerCase()?(e=r.substr(ou,8),ou+=8):(e=o,0===cu&&du(j)),e===o&&("min_rows"===r.substr(ou,8).toLowerCase()?(e=r.substr(ou,8),ou+=8):(e=o,0===cu&&du(Y)),e===o&&("stats_sample_pages"===r.substr(ou,18).toLowerCase()?(e=r.substr(ou,18),ou+=18):(e=o,0===cu&&du(B))))))),e!==o&&ua()!==o?((n=Xs())===o&&(n=null),n!==o&&ua()!==o&&(u=Ho())!==o?(l=n,f=u,t=e={keyword:e.toLowerCase(),symbol:l,value:f.value}):(ou=t,t=o)):(ou=t,t=o),t===o&&(t=ou,(e=Vo())===o&&(e=null),e!==o&&ua()!==o?("character set"===r.substr(ou,13).toLowerCase()?(n=r.substr(ou,13),ou+=13):(n=o,0===cu&&du(X)),n===o&&("charset"===r.substr(ou,7).toLowerCase()?(n=r.substr(ou,7),ou+=7):(n=o,0===cu&&du(W)),n===o&&("collate"===r.substr(ou,7).toLowerCase()?(n=r.substr(ou,7),ou+=7):(n=o,0===cu&&du(V)))),n!==o&&ua()!==o?((u=Xs())===o&&(u=null),u!==o&&(s=ua())!==o&&(a=Ro())!==o?(t=e=function(r,t,e,n){return {keyword:r&&`${r[0].toLowerCase()} ${t.toLowerCase()}`||t.toLowerCase(),symbol:e,value:n}}(e,n,u,a)):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o),t===o&&(t=ou,(e=Zs())===o&&("connection"===r.substr(ou,10).toLowerCase()?(e=r.substr(ou,10),ou+=10):(e=o,0===cu&&du(K))),e!==o&&ua()!==o?((n=Xs())===o&&(n=null),n!==o&&ua()!==o&&(u=ko())!==o?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,u)):(ou=t,t=o)):(ou=t,t=o),t===o&&(t=ou,"compression"===r.substr(ou,11).toLowerCase()?(e=r.substr(ou,11),ou+=11):(e=o,0===cu&&du(q)),e!==o&&ua()!==o?((n=Xs())===o&&(n=null),n!==o&&ua()!==o?(u=ou,39===r.charCodeAt(ou)?(s="'",ou++):(s=o,0===cu&&du(Z)),s!==o?("zlib"===r.substr(ou,4).toLowerCase()?(a=r.substr(ou,4),ou+=4):(a=o,0===cu&&du(z)),a===o&&("lz4"===r.substr(ou,3).toLowerCase()?(a=r.substr(ou,3),ou+=3):(a=o,0===cu&&du(J)),a===o&&("none"===r.substr(ou,4).toLowerCase()?(a=r.substr(ou,4),ou+=4):(a=o,0===cu&&du(S)))),a!==o?(39===r.charCodeAt(ou)?(i="'",ou++):(i=o,0===cu&&du(Z)),i!==o?u=s=[s,a,i]:(ou=u,u=o)):(ou=u,u=o)):(ou=u,u=o),u!==o?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,u)):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o),t===o&&(t=ou,"engine"===r.substr(ou,6).toLowerCase()?(e=r.substr(ou,6),ou+=6):(e=o,0===cu&&du(Q)),e!==o&&ua()!==o?((n=Xs())===o&&(n=null),n!==o&&ua()!==o&&(u=Ro())!==o?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}}(e,n,u)):(ou=t,t=o)):(ou=t,t=o))))),t}function _u(){var t,e,n,u,s;return t=ou,(e=Wu())!==o&&ua()!==o&&(n=function(){var t,e,n;return t=ou,"read"===r.substr(ou,4).toLowerCase()?(e=r.substr(ou,4),ou+=4):(e=o,0===cu&&du(rr)),e!==o&&ua()!==o?("local"===r.substr(ou,5).toLowerCase()?(n=r.substr(ou,5),ou+=5):(n=o,0===cu&&du(tr)),n===o&&(n=null),n!==o?(t=e={type:"read",suffix:n&&"local"}):(ou=t,t=o)):(ou=t,t=o),t===o&&(t=ou,"low_priority"===r.substr(ou,12).toLowerCase()?(e=r.substr(ou,12),ou+=12):(e=o,0===cu&&du(er)),e===o&&(e=null),e!==o&&ua()!==o?("write"===r.substr(ou,5).toLowerCase()?(n=r.substr(ou,5),ou+=5):(n=o,0===cu&&du(nr)),n!==o?(t=e={type:"write",prefix:e&&"low_priority"}):(ou=t,t=o)):(ou=t,t=o)),t}())!==o?(u=e,s=n,xa.add(`lock::${u.db}::${u.table}`),t=e={table:u,lock_type:s}):(ou=t,t=o),t}function gu(){var t,e,n,u,s,a,i;return (t=Mu())===o&&(t=ou,e=ou,40===r.charCodeAt(ou)?(n="(",ou++):(n=o,0===cu&&du(ur)),n!==o&&(u=ua())!==o&&(s=gu())!==o&&(a=ua())!==o?(41===r.charCodeAt(ou)?(i=")",ou++):(i=o,0===cu&&du(or)),i!==o?e=n=[n,u,s,a,i]:(ou=e,e=o)):(ou=e,e=o),e!==o&&(e={...e[2],parentheses_symbol:!0}),t=e),t}function Ou(){var t,e,n,u,s,a,c,l,f;if(t=ou,bs()!==o)if(ua()!==o)if((e=Uu())!==o){for(n=[],u=ou,(s=ua())!==o&&(a=Js())!==o&&(c=ua())!==o&&(l=Uu())!==o?u=s=[s,a,c,l]:(ou=u,u=o);u!==o;)n.push(u),u=ou,(s=ua())!==o&&(a=Js())!==o&&(c=ua())!==o&&(l=Uu())!==o?u=s=[s,a,c,l]:(ou=u,u=o);n!==o?(t=i(e,n)):(ou=t,t=o);}else ou=t,t=o;else ou=t,t=o;else ou=t,t=o;return t===o&&(t=ou,ua()!==o&&bs()!==o&&(e=ua())!==o&&(n=function(){var t,e,n,u;t=ou,"RECURSIVE"===r.substr(ou,9)?(e="RECURSIVE",ou+=9):(e=o,0===cu&&du(kt));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o);return t}())!==o&&(u=ua())!==o&&(s=Uu())!==o?((f=s).recursive=!0,t=[f]):(ou=t,t=o)),t}function Uu(){var r,t,e,n;return r=ou,(t=Ro())!==o&&ua()!==o?((e=xu())===o&&(e=null),e!==o&&ua()!==o&&os()!==o&&ua()!==o&&ra()!==o&&ua()!==o&&(n=Eu())!==o&&ua()!==o&&ta()!==o?(r=t={name:t,stmt:n,columns:e}):(ou=r,r=o)):(ou=r,r=o),r}function xu(){var r,t,e,n,u,s,a,c;if(r=ou,ra()!==o)if(ua()!==o)if((t=No())!==o){for(e=[],n=ou,(u=ua())!==o&&(s=Js())!==o&&(a=ua())!==o&&(c=No())!==o?n=u=[u,s,a,c]:(ou=n,n=o);n!==o;)e.push(n),n=ou,(u=ua())!==o&&(s=Js())!==o&&(a=ua())!==o&&(c=No())!==o?n=u=[u,s,a,c]:(ou=n,n=o);e!==o&&(n=ua())!==o&&(u=ta())!==o?(r=i(t,e)):(ou=r,r=o);}else ou=r,r=o;else ou=r,r=o;else ou=r,r=o;return r}function Mu(){var t,e,n,u,s,a,i,c,l,f,v;return t=ou,ua()!==o?((e=Ou())===o&&(e=null),e!==o&&ua()!==o&&function(){var t,e,n,u;t=ou,"select"===r.substr(ou,6).toLowerCase()?(e=r.substr(ou,6),ou+=6):(e=o,0===cu&&du(_t));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o);return t}()!==o&&ua()!==o?((n=function(){var r,t,e,n,u,s;if(r=ou,(t=Du())!==o){for(e=[],n=ou,(u=ua())!==o&&(s=Du())!==o?n=u=[u,s]:(ou=n,n=o);n!==o;)e.push(n),n=ou,(u=ua())!==o&&(s=Du())!==o?n=u=[u,s]:(ou=n,n=o);e!==o?(t=function(r,t){const e=[r];for(let r=0,n=t.length;r<n;++r)e.push(t[r][1]);return e}(t,e),r=t):(ou=r,r=o);}else ou=r,r=o;return r}())===o&&(n=null),n!==o&&ua()!==o?((u=Cs())===o&&(u=null),u!==o&&ua()!==o&&(s=ku())!==o&&ua()!==o?((a=Pu())===o&&(a=null),a!==o&&ua()!==o?((i=Zu())===o&&(i=null),i!==o&&ua()!==o?((c=function(){var t,e,n;t=ou,(e=function(){var t,e,n,u;t=ou,"group"===r.substr(ou,5).toLowerCase()?(e=r.substr(ou,5),ou+=5):(e=o,0===cu&&du(se));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o);return t}())!==o&&ua()!==o&&ds()!==o&&ua()!==o&&(n=io())!==o?(e=n.value,t=e):(ou=t,t=o);return t}())===o&&(c=null),c!==o&&ua()!==o?((l=function(){var t,e;t=ou,function(){var t,e,n,u;t=ou,"having"===r.substr(ou,6).toLowerCase()?(e=r.substr(ou,6),ou+=6):(e=o,0===cu&&du(ce));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o);return t}()!==o&&ua()!==o&&(e=vo())!==o?(t=e):(ou=t,t=o);return t}())===o&&(l=null),l!==o&&ua()!==o?((f=zu())===o&&(f=null),f!==o&&ua()!==o?((v=ro())===o&&(v=null),v!==o?(t=function(r,t,e,n,u,o,s,a,i,c){return u&&u.forEach(r=>r.table&&xa.add(`select::${r.db}::${r.table}`)),{with:r,type:"select",options:t,distinct:e,columns:n,from:u,where:o,groupby:s,having:a,orderby:i,limit:c}}(e,n,u,s,a,i,c,l,f,v)):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o),t}function Du(){var t,e;return t=ou,(e=function(){var t;"sql_calc_found_rows"===r.substr(ou,19).toLowerCase()?(t=r.substr(ou,19),ou+=19):(t=o,0===cu&&du(Pn));return t}())===o&&((e=function(){var t;"sql_cache"===r.substr(ou,9).toLowerCase()?(t=r.substr(ou,9),ou+=9):(t=o,0===cu&&du(Hn));return t}())===o&&(e=function(){var t;"sql_no_cache"===r.substr(ou,12).toLowerCase()?(t=r.substr(ou,12),ou+=12):(t=o,0===cu&&du(Gn));return t}()),e===o&&(e=function(){var t;"sql_big_result"===r.substr(ou,14).toLowerCase()?(t=r.substr(ou,14),ou+=14):(t=o,0===cu&&du(Yn));return t}())===o&&(e=function(){var t;"sql_small_result"===r.substr(ou,16).toLowerCase()?(t=r.substr(ou,16),ou+=16):(t=o,0===cu&&du(jn));return t}())===o&&(e=function(){var t;"sql_buffer_result"===r.substr(ou,17).toLowerCase()?(t=r.substr(ou,17),ou+=17):(t=o,0===cu&&du(Bn));return t}())),e!==o&&(e=e),t=e}function ku(){var r,t,e,n,u,s,a,c,l,f;if(r=ou,(t=Ls())===o&&(t=ou,(e=Qs())!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o),t===o&&(t=Qs())),t!==o){for(e=[],n=ou,(u=ua())!==o&&(s=Js())!==o&&(a=ua())!==o&&(c=$u())!==o?n=u=[u,s,a,c]:(ou=n,n=o);n!==o;)e.push(n),n=ou,(u=ua())!==o&&(s=Js())!==o&&(a=ua())!==o&&(c=$u())!==o?n=u=[u,s,a,c]:(ou=n,n=o);e!==o?(l=t,f=e,Ma.add("select::null::(.*)"),r=t=f&&f.length>0?(l[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},Ra(l[0],f)):l[0]):(ou=r,r=o);}else ou=r,r=o;if(r===o)if(r=ou,(t=$u())!==o){for(e=[],n=ou,(u=ua())!==o&&(s=Js())!==o&&(a=ua())!==o&&(c=$u())!==o?n=u=[u,s,a,c]:(ou=n,n=o);n!==o;)e.push(n),n=ou,(u=ua())!==o&&(s=Js())!==o&&(a=ua())!==o&&(c=$u())!==o?n=u=[u,s,a,c]:(ou=n,n=o);e!==o?(r=t=i(t,e)):(ou=r,r=o);}else ou=r,r=o;return r}function $u(){var r,t,e,n;return r=ou,(t=So())!==o&&ua()!==o&&(e=zs())!==o&&ua()!==o&&Qs()!==o?(n=t,Ma.add(`select::${n}::(.*)`),r=t={expr:{type:"column_ref",table:n,column:"*"},as:null}):(ou=r,r=o),r===o&&(r=ou,(t=vo())!==o&&ua()!==o?((e=Fu())===o&&(e=null),e!==o?(r=t={expr:t,as:e}):(ou=r,r=o)):(ou=r,r=o)),r}function Fu(){var r,t,e;return r=ou,(t=os())!==o&&ua()!==o&&(e=function(){var r,t;r=ou,(t=Ro())!==o?((function(r){if(!0===ma[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return !1}(t)?o:void 0)!==o?(r=t=t):(ou=r,r=o)):(ou=r,r=o);r===o&&(r=ou,(t=Io())!==o&&(t=t),r=t);return r}())!==o?(r=t=e):(ou=r,r=o),r===o&&(r=ou,(t=os())===o&&(t=null),t!==o&&ua()!==o&&(e=So())!==o?(r=t=e):(ou=r,r=o)),r}function Pu(){var t,e;return t=ou,function(){var t,e,n,u;t=ou,"from"===r.substr(ou,4).toLowerCase()?(e=r.substr(ou,4),ou+=4):(e=o,0===cu&&du(jt));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o);return t}()!==o&&ua()!==o&&(e=Bu())!==o?(t=e):(ou=t,t=o),t}function Hu(){var r,t,e;return r=ou,(t=Ku())!==o&&ua()!==o&&Ko()!==o&&ua()!==o&&(e=Ku())!==o?(r=t=[t,e]):(ou=r,r=o),r}function Gu(){var t,e;return t=ou,vs()!==o&&ua()!==o?("btree"===r.substr(ou,5).toLowerCase()?(e=r.substr(ou,5),ou+=5):(e=o,0===cu&&du(sr)),e===o&&("hash"===r.substr(ou,4).toLowerCase()?(e=r.substr(ou,4),ou+=4):(e=o,0===cu&&du(ar))),e!==o?(t={keyword:"using",type:e.toLowerCase()}):(ou=t,t=o)):(ou=t,t=o),t}function ju(){var r,t,e,n,u,s;if(r=ou,(t=Yu())!==o){for(e=[],n=ou,(u=ua())!==o&&(s=Yu())!==o?n=u=[u,s]:(ou=n,n=o);n!==o;)e.push(n),n=ou,(u=ua())!==o&&(s=Yu())!==o?n=u=[u,s]:(ou=n,n=o);e!==o?(r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(ou=r,r=o);}else ou=r,r=o;return r}function Yu(){var t,e,n,u,s,a;return t=ou,(e=function(){var t,e,n,u;t=ou,"key_block_size"===r.substr(ou,14).toLowerCase()?(e=r.substr(ou,14),ou+=14):(e=o,0===cu&&du(G));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="KEY_BLOCK_SIZE"):(ou=t,t=o)):(ou=t,t=o);return t}())!==o&&ua()!==o?((n=Xs())===o&&(n=null),n!==o&&ua()!==o&&(u=Ho())!==o?(s=n,a=u,t=e={type:e.toLowerCase(),symbol:s,expr:a}):(ou=t,t=o)):(ou=t,t=o),t===o&&(t=Gu())===o&&(t=ou,"with"===r.substr(ou,4).toLowerCase()?(e=r.substr(ou,4),ou+=4):(e=o,0===cu&&du(ir)),e!==o&&ua()!==o?("parser"===r.substr(ou,6).toLowerCase()?(n=r.substr(ou,6),ou+=6):(n=o,0===cu&&du(cr)),n!==o&&ua()!==o&&(u=Ro())!==o?(t=e={type:"with parser",expr:u}):(ou=t,t=o)):(ou=t,t=o),t===o&&(t=ou,"visible"===r.substr(ou,7).toLowerCase()?(e=r.substr(ou,7),ou+=7):(e=o,0===cu&&du(lr)),e===o&&("invisible"===r.substr(ou,9).toLowerCase()?(e=r.substr(ou,9),ou+=9):(e=o,0===cu&&du(fr))),e!==o&&(e=function(r){return {type:r.toLowerCase(),expr:r.toLowerCase()}}(e)),(t=e)===o&&(t=aa()))),t}function Bu(){var r,t,e,n,u,s;if(r=ou,(t=Wu())!==o){for(e=[],n=Xu();n!==o;)e.push(n),n=Xu();e!==o?(u=t,(s=e).unshift(u),s.forEach(r=>{const{table:t,as:e}=r;Da[t]=t,e&&(Da[e]=t);}),r=t=s):(ou=r,r=o);}else ou=r,r=o;return r}function Xu(){var r,t,e;return r=ou,ua()!==o&&(t=Js())!==o&&ua()!==o&&(e=Wu())!==o?(r=e):(ou=r,r=o),r===o&&(r=ou,ua()!==o&&(t=function(){var r,t,e,n,u,s,a,i,c,l,f;if(r=ou,(t=Vu())!==o)if(ua()!==o)if((e=Wu())!==o)if(ua()!==o)if((n=vs())!==o)if(ua()!==o)if(ra()!==o)if(ua()!==o)if((u=Ro())!==o){for(s=[],a=ou,(i=ua())!==o&&(c=Js())!==o&&(l=ua())!==o&&(f=Ro())!==o?a=i=[i,c,l,f]:(ou=a,a=o);a!==o;)s.push(a),a=ou,(i=ua())!==o&&(c=Js())!==o&&(l=ua())!==o&&(f=Ro())!==o?a=i=[i,c,l,f]:(ou=a,a=o);s!==o&&(a=ua())!==o&&(i=ta())!==o?(v=t,d=u,L=s,(b=e).join=v,b.using=Ra(d,L),r=t=b):(ou=r,r=o);}else ou=r,r=o;else ou=r,r=o;else ou=r,r=o;else ou=r,r=o;else ou=r,r=o;else ou=r,r=o;else ou=r,r=o;else ou=r,r=o;else ou=r,r=o;var v,b,d,L;r===o&&(r=ou,(t=Vu())!==o&&ua()!==o&&(e=Wu())!==o&&ua()!==o?((n=qu())===o&&(n=null),n!==o?(t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(ou=r,r=o)):(ou=r,r=o),r===o&&(r=ou,(t=Vu())!==o&&ua()!==o&&(e=ra())!==o&&ua()!==o&&(n=Eu())!==o&&ua()!==o&&ta()!==o&&ua()!==o?((u=Fu())===o&&(u=null),u!==o&&(s=ua())!==o?((a=qu())===o&&(a=null),a!==o?(t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,u,a),r=t):(ou=r,r=o)):(ou=r,r=o)):(ou=r,r=o)));return r}())!==o?(r=t):(ou=r,r=o)),r}function Wu(){var t,e,n,u,s,a;return t=ou,(e=function(){var t;"dual"===r.substr(ou,4).toLowerCase()?(t=r.substr(ou,4),ou+=4):(t=o,0===cu&&du(gn));return t}())!==o&&(e={type:"dual"}),(t=e)===o&&(t=ou,(e=Ku())!==o&&ua()!==o?((n=Fu())===o&&(n=null),n!==o?(a=n,t=e="var"===(s=e).type?(s.as=a,s):{db:s.db,table:s.table,as:a}):(ou=t,t=o)):(ou=t,t=o),t===o&&(t=ou,(e=ra())!==o&&ua()!==o&&(n=Eu())!==o&&ua()!==o&&ta()!==o&&ua()!==o?((u=Fu())===o&&(u=null),u!==o?(t=e=function(r,t){return r.parentheses=!0,{expr:r,as:t}}(n,u)):(ou=t,t=o)):(ou=t,t=o))),t}function Vu(){var t,e,n,u;return t=ou,(e=function(){var t,e,n,u;t=ou,"left"===r.substr(ou,4).toLowerCase()?(e=r.substr(ou,4),ou+=4):(e=o,0===cu&&du(qt));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o);return t}())!==o&&(n=ua())!==o?((u=ls())===o&&(u=null),u!==o&&ua()!==o&&cs()!==o?(t=e="LEFT JOIN"):(ou=t,t=o)):(ou=t,t=o),t===o&&(t=ou,(e=function(){var t,e,n,u;t=ou,"right"===r.substr(ou,5).toLowerCase()?(e=r.substr(ou,5),ou+=5):(e=o,0===cu&&du(Zt));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o);return t}())!==o&&(n=ua())!==o?((u=ls())===o&&(u=null),u!==o&&ua()!==o&&cs()!==o?(t=e="RIGHT JOIN"):(ou=t,t=o)):(ou=t,t=o),t===o&&(t=ou,(e=function(){var t,e,n,u;t=ou,"full"===r.substr(ou,4).toLowerCase()?(e=r.substr(ou,4),ou+=4):(e=o,0===cu&&du(zt));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o);return t}())!==o&&(n=ua())!==o?((u=ls())===o&&(u=null),u!==o&&ua()!==o&&cs()!==o?(t=e="FULL JOIN"):(ou=t,t=o)):(ou=t,t=o),t===o&&(t=ou,e=ou,(n=function(){var t,e,n,u;t=ou,"inner"===r.substr(ou,5).toLowerCase()?(e=r.substr(ou,5),ou+=5):(e=o,0===cu&&du(Jt));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o);return t}())!==o&&(u=ua())!==o?e=n=[n,u]:(ou=e,e=o),e===o&&(e=null),e!==o&&(n=cs())!==o?(t=e="INNER JOIN"):(ou=t,t=o)))),t}function Ku(){var r,t,e,n,u,s,a,i;return r=ou,(t=So())!==o?(e=ou,(n=ua())!==o&&(u=zs())!==o&&(s=ua())!==o&&(a=So())!==o?e=n=[n,u,s,a]:(ou=e,e=o),e===o&&(e=null),e!==o?(r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(ou=r,r=o)):(ou=r,r=o),r===o&&(r=ou,(t=ha())!==o&&((i=t).db=null,i.table=i.name,t=i),r=t),r}function qu(){var r,t;return r=ou,is()!==o&&ua()!==o&&(t=vo())!==o?(r=t):(ou=r,r=o),r}function Zu(){var t,e;return t=ou,function(){var t,e,n,u;t=ou,"where"===r.substr(ou,5).toLowerCase()?(e=r.substr(ou,5),ou+=5):(e=o,0===cu&&du(oe));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o);return t}()!==o&&ua()!==o&&(e=vo())!==o?(t=e):(ou=t,t=o),t}function zu(){var t,e;return t=ou,function(){var t,e,n,u;t=ou,"order"===r.substr(ou,5).toLowerCase()?(e=r.substr(ou,5),ou+=5):(e=o,0===cu&&du(ie));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o);return t}()!==o&&ua()!==o&&ds()!==o&&ua()!==o&&(e=function(){var r,t,e,n,u,s,a,c;if(r=ou,(t=Ju())!==o){for(e=[],n=ou,(u=ua())!==o&&(s=Js())!==o&&(a=ua())!==o&&(c=Ju())!==o?n=u=[u,s,a,c]:(ou=n,n=o);n!==o;)e.push(n),n=ou,(u=ua())!==o&&(s=Js())!==o&&(a=ua())!==o&&(c=Ju())!==o?n=u=[u,s,a,c]:(ou=n,n=o);e!==o?(t=i(t,e),r=t):(ou=r,r=o);}else ou=r,r=o;return r}())!==o?(t=e):(ou=t,t=o),t}function Ju(){var t,e,n;return t=ou,(e=vo())!==o&&ua()!==o?((n=function(){var t,e,n,u;t=ou,"desc"===r.substr(ou,4).toLowerCase()?(e=r.substr(ou,4),ou+=4):(e=o,0===cu&&du(be));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="DESC"):(ou=t,t=o)):(ou=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=ou,"asc"===r.substr(ou,3).toLowerCase()?(e=r.substr(ou,3),ou+=3):(e=o,0===cu&&du(ve));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="ASC"):(ou=t,t=o)):(ou=t,t=o);return t}()),n===o&&(n=null),n!==o?(t=e=function(r,t){const e={expr:r,type:"ASC"};return "DESC"===t&&(e.type="DESC"),e}(e,n)):(ou=t,t=o)):(ou=t,t=o),t}function Qu(){var r;return (r=Ho())===o&&(r=Uo()),r}function ro(){var t,e,n,u,s,a;return t=ou,function(){var t,e,n,u;t=ou,"limit"===r.substr(ou,5).toLowerCase()?(e=r.substr(ou,5),ou+=5):(e=o,0===cu&&du(le));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o);return t}()!==o&&ua()!==o&&(e=Qu())!==o&&ua()!==o?(n=ou,(u=Js())===o&&(u=function(){var t,e,n,u;t=ou,"offset"===r.substr(ou,6).toLowerCase()?(e=r.substr(ou,6),ou+=6):(e=o,0===cu&&du(fe));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="OFFSET"):(ou=t,t=o)):(ou=t,t=o);return t}()),u!==o&&(s=ua())!==o&&(a=Qu())!==o?n=u=[u,s,a]:(ou=n,n=o),n===o&&(n=null),n!==o?(t=function(r,t){const e=[r];return t&&e.push(t[2]),{seperator:t&&t[0]&&t[0].toLowerCase()||"",value:e}}(e,n)):(ou=t,t=o)):(ou=t,t=o),t}function to(){var r,t,e,n,u,s,a,c;if(r=ou,(t=eo())!==o){for(e=[],n=ou,(u=ua())!==o&&(s=Js())!==o&&(a=ua())!==o&&(c=eo())!==o?n=u=[u,s,a,c]:(ou=n,n=o);n!==o;)e.push(n),n=ou,(u=ua())!==o&&(s=Js())!==o&&(a=ua())!==o&&(c=eo())!==o?n=u=[u,s,a,c]:(ou=n,n=o);e!==o?(r=t=i(t,e)):(ou=r,r=o);}else ou=r,r=o;return r}function eo(){var t,e,n,u,s,a,i,c;return t=ou,e=ou,(n=So())!==o&&(u=ua())!==o&&(s=zs())!==o?e=n=[n,u,s]:(ou=e,e=o),e===o&&(e=null),e!==o&&(n=ua())!==o&&(u=No())!==o&&(s=ua())!==o?(61===r.charCodeAt(ou)?(a="=",ou++):(a=o,0===cu&&du(vr)),a!==o&&ua()!==o&&(i=Eo())!==o?(t=e={column:u,value:i,table:(c=e)&&c[0]}):(ou=t,t=o)):(ou=t,t=o),t}function no(){var t;return (t=function(){var t,e;t=ou,function(){var t,e,n,u;t=ou,"values"===r.substr(ou,6).toLowerCase()?(e=r.substr(ou,6),ou+=6):(e=o,0===cu&&du(ne));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o);return t}()!==o&&ua()!==o&&(e=function(){var r,t,e,n,u,s,a,c;if(r=ou,(t=ao())!==o){for(e=[],n=ou,(u=ua())!==o&&(s=Js())!==o&&(a=ua())!==o&&(c=ao())!==o?n=u=[u,s,a,c]:(ou=n,n=o);n!==o;)e.push(n),n=ou,(u=ua())!==o&&(s=Js())!==o&&(a=ua())!==o&&(c=ao())!==o?n=u=[u,s,a,c]:(ou=n,n=o);e!==o?(t=i(t,e),r=t):(ou=r,r=o);}else ou=r,r=o;return r}())!==o?(t=e):(ou=t,t=o);return t}())===o&&(t=Mu()),t}function uo(){var r,t,e,n,u,s,a,i,c;if(r=ou,es()!==o)if(ua()!==o)if((t=ra())!==o)if(ua()!==o)if((e=Ro())!==o){for(n=[],u=ou,(s=ua())!==o&&(a=Js())!==o&&(i=ua())!==o&&(c=Ro())!==o?u=s=[s,a,i,c]:(ou=u,u=o);u!==o;)n.push(u),u=ou,(s=ua())!==o&&(a=Js())!==o&&(i=ua())!==o&&(c=Ro())!==o?u=s=[s,a,i,c]:(ou=u,u=o);n!==o&&(u=ua())!==o&&(s=ta())!==o?(r=Ra(e,n)):(ou=r,r=o);}else ou=r,r=o;else ou=r,r=o;else ou=r,r=o;else ou=r,r=o;else ou=r,r=o;return r===o&&(r=ou,es()!==o&&ua()!==o&&(t=ao())!==o?(r=t):(ou=r,r=o)),r}function oo(){var t,e,n;return t=ou,is()!==o&&ua()!==o?("duplicate"===r.substr(ou,9).toLowerCase()?(e=r.substr(ou,9),ou+=9):(e=o,0===cu&&du(br)),e!==o&&ua()!==o&&qs()!==o&&ua()!==o&&Zo()!==o&&ua()!==o&&(n=to())!==o?(t={keyword:"on duplicate key update",set:n}):(ou=t,t=o)):(ou=t,t=o),t}function so(){var t,e;return t=ou,(e=function(){var t,e,n,u;t=ou,"insert"===r.substr(ou,6).toLowerCase()?(e=r.substr(ou,6),ou+=6):(e=o,0===cu&&du(Dt));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o);return t}())!==o&&(e="insert"),(t=e)===o&&(t=ou,(e=rs())!==o&&(e="replace"),t=e),t}function ao(){var r,t;return r=ou,ra()!==o&&ua()!==o&&(t=io())!==o&&ua()!==o&&ta()!==o?(r=t):(ou=r,r=o),r}function io(){var r,t,e,n,u,s,a,i;if(r=ou,(t=vo())!==o){for(e=[],n=ou,(u=ua())!==o&&(s=Js())!==o&&(a=ua())!==o&&(i=vo())!==o?n=u=[u,s,a,i]:(ou=n,n=o);n!==o;)e.push(n),n=ou,(u=ua())!==o&&(s=Js())!==o&&(a=ua())!==o&&(i=vo())!==o?n=u=[u,s,a,i]:(ou=n,n=o);e!==o?(r=t=function(r,t){const e={type:"expr_list"};return e.value=Ra(r,t),e}(t,e)):(ou=r,r=o);}else ou=r,r=o;return r}function co(){var t,e,n;return t=ou,function(){var t,e,n,u;t=ou,"interval"===r.substr(ou,8).toLowerCase()?(e=r.substr(ou,8),ou+=8):(e=o,0===cu&&du(cn));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="INTERVAL"):(ou=t,t=o)):(ou=t,t=o);return t}()!==o&&ua()!==o&&(e=vo())!==o&&ua()!==o&&(n=function(){var t;(t=function(){var t,e,n,u;t=ou,"year"===r.substr(ou,4).toLowerCase()?(e=r.substr(ou,4),ou+=4):(e=o,0===cu&&du(ln));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="YEAR"):(ou=t,t=o)):(ou=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=ou,"month"===r.substr(ou,5).toLowerCase()?(e=r.substr(ou,5),ou+=5):(e=o,0===cu&&du(fn));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="MONTH"):(ou=t,t=o)):(ou=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=ou,"day"===r.substr(ou,3).toLowerCase()?(e=r.substr(ou,3),ou+=3):(e=o,0===cu&&du(vn));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="DAY"):(ou=t,t=o)):(ou=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=ou,"hour"===r.substr(ou,4).toLowerCase()?(e=r.substr(ou,4),ou+=4):(e=o,0===cu&&du(bn));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="HOUR"):(ou=t,t=o)):(ou=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=ou,"minute"===r.substr(ou,6).toLowerCase()?(e=r.substr(ou,6),ou+=6):(e=o,0===cu&&du(dn));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="MINUTE"):(ou=t,t=o)):(ou=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=ou,"second"===r.substr(ou,6).toLowerCase()?(e=r.substr(ou,6),ou+=6):(e=o,0===cu&&du(Ln));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="SECOND"):(ou=t,t=o)):(ou=t,t=o);return t}());return t}())!==o?(t={type:"interval",expr:e,unit:n.toLowerCase()}):(ou=t,t=o),t}function lo(){var t,e,n,u,s,a,i,c,l;if(t=ou,Ss()!==o)if(ua()!==o)if((e=vo())===o&&(e=null),e!==o)if(ua()!==o){if(n=[],(u=fo())!==o)for(;u!==o;)n.push(u),u=fo();else n=o;n!==o&&(u=ua())!==o?((s=function(){var t,e;t=ou,function(){var t,e,n,u;t=ou,"else"===r.substr(ou,4).toLowerCase()?(e=r.substr(ou,4),ou+=4):(e=o,0===cu&&du(xe));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o);return t}()!==o&&ua()!==o&&(e=vo())!==o?(t={type:"else",result:e}):(ou=t,t=o);return t}())===o&&(s=null),s!==o&&ua()!==o&&function(){var t,e,n,u;t=ou,"end"===r.substr(ou,3).toLowerCase()?(e=r.substr(ou,3),ou+=3):(e=o,0===cu&&du(Me));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o);return t}()!==o&&ua()!==o?((a=Ss())===o&&(a=null),a!==o?(i=e,c=n,(l=s)&&c.push(l),t={type:"case",expr:i||null,args:c}):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o);}else ou=t,t=o;else ou=t,t=o;else ou=t,t=o;else ou=t,t=o;return t}function fo(){var t,e,n;return t=ou,function(){var t,e,n,u;t=ou,"when"===r.substr(ou,4).toLowerCase()?(e=r.substr(ou,4),ou+=4):(e=o,0===cu&&du(Oe));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o);return t}()!==o&&ua()!==o&&(e=vo())!==o&&ua()!==o&&function(){var t,e,n,u;t=ou,"then"===r.substr(ou,4).toLowerCase()?(e=r.substr(ou,4),ou+=4):(e=o,0===cu&&du(Ue));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o);return t}()!==o&&ua()!==o&&(n=vo())!==o?(t={type:"when",cond:e,result:n}):(ou=t,t=o),t}function vo(){var r;return (r=function(){var r,t,e,n,u,s,a,i;if(r=ou,(t=To())!==o){if(e=[],n=ou,(u=ua())!==o&&(s=na())!==o&&(a=ua())!==o&&(i=To())!==o?n=u=[u,s,a,i]:(ou=n,n=o),n!==o)for(;n!==o;)e.push(n),n=ou,(u=ua())!==o&&(s=na())!==o&&(a=ua())!==o&&(i=To())!==o?n=u=[u,s,a,i]:(ou=n,n=o);else e=o;e!==o?(t=_a(t,e),r=t):(ou=r,r=o);}else ou=r,r=o;return r}())===o&&(r=function(){var r,t,e,n,u,s;if(r=ou,(t=ho())!==o){if(e=[],n=ou,(u=ua())!==o&&(s=To())!==o?n=u=[u,s]:(ou=n,n=o),n!==o)for(;n!==o;)e.push(n),n=ou,(u=ua())!==o&&(s=To())!==o?n=u=[u,s]:(ou=n,n=o);else e=o;e!==o?(t=Sa(t,e[0][1]),r=t):(ou=r,r=o);}else ou=r,r=o;return r}())===o&&(r=function(){var r,t,e,n,u,s,a,i;if(r=ou,(t=bo())!==o){for(e=[],n=ou,(u=oa())!==o&&(s=ms())!==o&&(a=ua())!==o&&(i=bo())!==o?n=u=[u,s,a,i]:(ou=n,n=o);n!==o;)e.push(n),n=ou,(u=oa())!==o&&(s=ms())!==o&&(a=ua())!==o&&(i=bo())!==o?n=u=[u,s,a,i]:(ou=n,n=o);e!==o?(t=dr(t,e),r=t):(ou=r,r=o);}else ou=r,r=o;return r}())===o&&(r=gu()),r}function bo(){var r,t,e,n,u,s,a,i;if(r=ou,(t=Lo())!==o){for(e=[],n=ou,(u=oa())!==o&&(s=Ts())!==o&&(a=ua())!==o&&(i=Lo())!==o?n=u=[u,s,a,i]:(ou=n,n=o);n!==o;)e.push(n),n=ou,(u=oa())!==o&&(s=Ts())!==o&&(a=ua())!==o&&(i=Lo())!==o?n=u=[u,s,a,i]:(ou=n,n=o);e!==o?(r=t=dr(t,e)):(ou=r,r=o);}else ou=r,r=o;return r}function Lo(){var t,e,n,u,s;return (t=Co())===o&&(t=function(){var r,t,e;r=ou,(t=function(){var r,t,e,n,u;r=ou,t=ou,(e=ys())!==o&&(n=ua())!==o&&(u=As())!==o?t=e=[e,n,u]:(ou=t,t=o);t!==o&&(t=Cr(t));(r=t)===o&&(r=As());return r}())!==o&&ua()!==o&&ra()!==o&&ua()!==o&&(e=Eu())!==o&&ua()!==o&&ta()!==o?(n=t,(u=e).parentheses=!0,t=Sa(n,u),r=t):(ou=r,r=o);var n,u;return r}())===o&&(t=ou,(e=ys())===o&&(e=ou,33===r.charCodeAt(ou)?(n="!",ou++):(n=o,0===cu&&du(Lr)),n!==o?(u=ou,cu++,61===r.charCodeAt(ou)?(s="=",ou++):(s=o,0===cu&&du(vr)),cu--,s===o?u=void 0:(ou=u,u=o),u!==o?e=n=[n,u]:(ou=e,e=o)):(ou=e,e=o)),e!==o&&(n=ua())!==o&&(u=Lo())!==o?(t=e=Sa("NOT",u)):(ou=t,t=o)),t}function Co(){var r,t,e,n,u,s,a;return r=ou,(t=Eo())!==o&&ua()!==o?(e=ou,cu++,n=Ts(),cu--,n===o?e=void 0:(ou=e,e=o),e!==o&&(n=ua())!==o?((u=function(){var r;(r=function(){var r,t,e,n,u,s,a;r=ou,t=[],e=ou,(n=ua())!==o&&(u=po())!==o&&(s=ua())!==o&&(a=Eo())!==o?e=n=[n,u,s,a]:(ou=e,e=o);if(e!==o)for(;e!==o;)t.push(e),e=ou,(n=ua())!==o&&(u=po())!==o&&(s=ua())!==o&&(a=Eo())!==o?e=n=[n,u,s,a]:(ou=e,e=o);else t=o;t!==o&&(t={type:"arithmetic",tail:t});return r=t}())===o&&(r=function(){var r,t,e,n;r=ou,(t=wo())!==o&&ua()!==o&&(e=ra())!==o&&ua()!==o&&(n=io())!==o&&ua()!==o&&ta()!==o?(r=t={op:t,right:n}):(ou=r,r=o);r===o&&(r=ou,(t=wo())!==o&&ua()!==o?((e=ha())===o&&(e=ko()),e!==o?(t=function(r,t){return {op:r,right:t}}(t,e),r=t):(ou=r,r=o)):(ou=r,r=o));return r}())===o&&(r=function(){var r,t,e,n;r=ou,(t=function(){var r,t,e,n,u;r=ou,t=ou,(e=ys())!==o&&(n=ua())!==o&&(u=ps())!==o?t=e=[e,n,u]:(ou=t,t=o);t!==o&&(t=Cr(t));(r=t)===o&&(r=ps());return r}())!==o&&ua()!==o&&(e=Eo())!==o&&ua()!==o&&Ts()!==o&&ua()!==o&&(n=Eo())!==o?(r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(ou=r,r=o);return r}())===o&&(r=function(){var r,t,e,n,u;r=ou,(t=Es())!==o&&(e=ua())!==o&&(n=Eo())!==o?(r=t={op:"IS",right:n}):(ou=r,r=o);r===o&&(r=ou,t=ou,(e=Es())!==o&&(n=ua())!==o&&(u=ys())!==o?t=e=[e,n,u]:(ou=t,t=o),t!==o&&(e=ua())!==o&&(n=Eo())!==o?(t=function(r){return {op:"IS NOT",right:r}}(n),r=t):(ou=r,r=o));return r}())===o&&(r=function(){var r,t,e;r=ou,(t=function(){var r,t,e,n,u;r=ou,t=ou,(e=ys())!==o&&(n=ua())!==o&&(u=hs())!==o?t=e=[e,n,u]:(ou=t,t=o);t!==o&&(t=Cr(t));(r=t)===o&&(r=hs());return r}())!==o&&ua()!==o&&(e=Co())!==o?(r=t={op:t,right:e}):(ou=r,r=o);return r}());return r}())===o&&(u=null),u!==o?(s=t,r=t=null===(a=u)?s:"arithmetic"===a.type?_a(s,a.tail):Ia(a.op,s,a.right)):(ou=r,r=o)):(ou=r,r=o)):(ou=r,r=o),r===o&&(r=ko())===o&&(r=mo()),r}function po(){var t;return ">="===r.substr(ou,2)?(t=">=",ou+=2):(t=o,0===cu&&du(pr)),t===o&&(62===r.charCodeAt(ou)?(t=">",ou++):(t=o,0===cu&&du(wr)),t===o&&("<="===r.substr(ou,2)?(t="<=",ou+=2):(t=o,0===cu&&du(Er)),t===o&&("<>"===r.substr(ou,2)?(t="<>",ou+=2):(t=o,0===cu&&du(hr)),t===o&&(60===r.charCodeAt(ou)?(t="<",ou++):(t=o,0===cu&&du(Ar)),t===o&&(61===r.charCodeAt(ou)?(t="=",ou++):(t=o,0===cu&&du(vr)),t===o&&("!="===r.substr(ou,2)?(t="!=",ou+=2):(t=o,0===cu&&du(yr)))))))),t}function wo(){var r,t,e,n,u;return r=ou,t=ou,(e=ys())!==o&&(n=ua())!==o&&(u=ws())!==o?t=e=[e,n,u]:(ou=t,t=o),t!==o&&(t=Cr(t)),(r=t)===o&&(r=ws()),r}function Eo(){var r,t,e,n,u,s,a,i;if(r=ou,(t=Ao())!==o){for(e=[],n=ou,(u=ua())!==o&&(s=ho())!==o&&(a=ua())!==o&&(i=Ao())!==o?n=u=[u,s,a,i]:(ou=n,n=o);n!==o;)e.push(n),n=ou,(u=ua())!==o&&(s=ho())!==o&&(a=ua())!==o&&(i=Ao())!==o?n=u=[u,s,a,i]:(ou=n,n=o);e!==o?(r=t=dr(t,e)):(ou=r,r=o);}else ou=r,r=o;return r}function ho(){var t;return 43===r.charCodeAt(ou)?(t="+",ou++):(t=o,0===cu&&du(Tr)),t===o&&(45===r.charCodeAt(ou)?(t="-",ou++):(t=o,0===cu&&du(mr))),t}function Ao(){var r,t,e,n,u,s,a,i;if(r=ou,(t=To())!==o){for(e=[],n=ou,(u=ua())!==o&&(s=yo())!==o&&(a=ua())!==o&&(i=To())!==o?n=u=[u,s,a,i]:(ou=n,n=o);n!==o;)e.push(n),n=ou,(u=ua())!==o&&(s=yo())!==o&&(a=ua())!==o&&(i=To())!==o?n=u=[u,s,a,i]:(ou=n,n=o);e!==o?(r=t=_a(t,e)):(ou=r,r=o);}else ou=r,r=o;return r}function yo(){var t;return 42===r.charCodeAt(ou)?(t="*",ou++):(t=o,0===cu&&du(Sr)),t===o&&(47===r.charCodeAt(ou)?(t="/",ou++):(t=o,0===cu&&du(Ir)),t===o&&(37===r.charCodeAt(ou)?(t="%",ou++):(t=o,0===cu&&du(Nr)))),t}function To(){var t,e,n;return (t=function(){var t,e,n,u,s,a,i;t=ou,(e=Is())!==o&&ua()!==o&&ra()!==o&&ua()!==o&&(n=vo())!==o&&ua()!==o&&os()!==o&&ua()!==o&&(u=ya())!==o&&ua()!==o&&(s=ta())!==o?(t=e={type:"cast",expr:n,target:u}):(ou=t,t=o);t===o&&(t=ou,(e=Is())!==o&&ua()!==o&&ra()!==o&&ua()!==o&&(n=vo())!==o&&ua()!==o&&os()!==o&&ua()!==o&&(u=gs())!==o&&ua()!==o&&(s=ra())!==o&&ua()!==o&&(a=Go())!==o&&ua()!==o&&ta()!==o&&ua()!==o&&(i=ta())!==o?(e=function(r,t){return {type:"cast",expr:r,target:{dataType:"DECIMAL("+t+")"}}}(n,a),t=e):(ou=t,t=o),t===o&&(t=ou,(e=Is())!==o&&ua()!==o&&ra()!==o&&ua()!==o&&(n=vo())!==o&&ua()!==o&&os()!==o&&ua()!==o&&(u=gs())!==o&&ua()!==o&&(s=ra())!==o&&ua()!==o&&(a=Go())!==o&&ua()!==o&&Js()!==o&&ua()!==o&&(i=Go())!==o&&ua()!==o&&ta()!==o&&ua()!==o&&ta()!==o?(e=function(r,t,e){return {type:"cast",expr:r,target:{dataType:"DECIMAL("+t+", "+e+")"}}}(n,a,i),t=e):(ou=t,t=o),t===o&&(t=ou,(e=Is())!==o&&ua()!==o&&ra()!==o&&ua()!==o&&(n=vo())!==o&&ua()!==o&&os()!==o&&ua()!==o&&(u=function(){var t;(t=function(){var t,e,n,u;t=ou,"signed"===r.substr(ou,6).toLowerCase()?(e=r.substr(ou,6),ou+=6):(e=o,0===cu&&du(He));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="SIGNED"):(ou=t,t=o)):(ou=t,t=o);return t}())===o&&(t=Os());return t}())!==o&&ua()!==o?((s=xs())===o&&(s=null),s!==o&&ua()!==o&&(a=ta())!==o?(e=function(r,t,e){return {type:"cast",expr:r,target:{dataType:t+(e?" "+e:"")}}}(n,u,s),t=e):(ou=t,t=o)):(ou=t,t=o))));return t}())===o&&(t=Mo())===o&&(t=function(){var t;(t=function(){var t,e,n,u;t=ou,(e=function(){var t,e,n,u;t=ou,"count"===r.substr(ou,5).toLowerCase()?(e=r.substr(ou,5),ou+=5):(e=o,0===cu&&du(me));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="COUNT"):(ou=t,t=o)):(ou=t,t=o);return t}())!==o&&ua()!==o&&ra()!==o&&ua()!==o&&(n=function(){var t,e,n;t=ou,(e=function(){var t,e;t=ou,42===r.charCodeAt(ou)?(e="*",ou++):(e=o,0===cu&&du(Sr));e!==o&&(e={type:"star",value:"*"});return t=e}())!==o&&(e={expr:e});(t=e)===o&&(t=ou,(e=Cs())===o&&(e=null),e!==o&&ua()!==o&&(n=mo())!==o?(t=e={distinct:e,expr:n}):(ou=t,t=o));return t}())!==o&&ua()!==o&&ta()!==o&&ua()!==o?((u=xo())===o&&(u=null),u!==o?(t=e={type:"aggr_func",name:e,args:n,over:u}):(ou=t,t=o)):(ou=t,t=o);return t}())===o&&(t=function(){var t,e,n;t=ou,(e=function(){var t;(t=function(){var t,e,n,u;t=ou,"sum"===r.substr(ou,3).toLowerCase()?(e=r.substr(ou,3),ou+=3):(e=o,0===cu&&du(Ne));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="SUM"):(ou=t,t=o)):(ou=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=ou,"max"===r.substr(ou,3).toLowerCase()?(e=r.substr(ou,3),ou+=3):(e=o,0===cu&&du(Se));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="MAX"):(ou=t,t=o)):(ou=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=ou,"min"===r.substr(ou,3).toLowerCase()?(e=r.substr(ou,3),ou+=3):(e=o,0===cu&&du(Ie));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="MIN"):(ou=t,t=o)):(ou=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=ou,"avg"===r.substr(ou,3).toLowerCase()?(e=r.substr(ou,3),ou+=3):(e=o,0===cu&&du(Re));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="AVG"):(ou=t,t=o)):(ou=t,t=o);return t}());return t}())!==o&&ua()!==o&&ra()!==o&&ua()!==o&&(n=Eo())!==o&&ua()!==o&&ta()!==o?(t=e={type:"aggr_func",name:e,args:{expr:n}}):(ou=t,t=o);return t}());return t}())===o&&(t=function(){var t,e,n,u,s;t=ou,(e=pa())!==o&&ua()!==o&&ra()!==o&&ua()!==o?((n=io())===o&&(n=null),n!==o&&ua()!==o&&(u=ta())!==o&&ua()!==o?((s=xo())===o&&(s=null),s!==o?(t=e={type:"function",name:e,args:n||{type:"expr_list",value:[]},over:s}):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o);t===o&&(t=ou,(e=function(){var t;(t=function(){var t,e,n,u;t=ou,"current_date"===r.substr(ou,12).toLowerCase()?(e=r.substr(ou,12),ou+=12):(e=o,0===cu&&du(an));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="CURRENT_DATE"):(ou=t,t=o)):(ou=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=ou,"current_time"===r.substr(ou,12).toLowerCase()?(e=r.substr(ou,12),ou+=12):(e=o,0===cu&&du(Cn));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="CURRENT_TIME"):(ou=t,t=o)):(ou=t,t=o);return t}())===o&&(t=Ys())===o&&(t=function(){var t,e,n,u;t=ou,"current_user"===r.substr(ou,12).toLowerCase()?(e=r.substr(ou,12),ou+=12):(e=o,0===cu&&du(wn));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="CURRENT_USER"):(ou=t,t=o)):(ou=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=ou,"user"===r.substr(ou,4).toLowerCase()?(e=r.substr(ou,4),ou+=4):(e=o,0===cu&&du(sn));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="USER"):(ou=t,t=o)):(ou=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=ou,"session_user"===r.substr(ou,12).toLowerCase()?(e=r.substr(ou,12),ou+=12):(e=o,0===cu&&du(En));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="SESSION_USER"):(ou=t,t=o)):(ou=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=ou,"system_user"===r.substr(ou,11).toLowerCase()?(e=r.substr(ou,11),ou+=11):(e=o,0===cu&&du(hn));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="SYSTEM_USER"):(ou=t,t=o)):(ou=t,t=o);return t}());return t}())!==o&&ua()!==o&&ra()!==o&&ua()!==o&&(n=ta())!==o&&ua()!==o?((u=xo())===o&&(u=null),u!==o?(e=function(r,t){return {type:"function",name:r,args:{type:"expr_list",value:[]},over:t}}(e,u),t=e):(ou=t,t=o)):(ou=t,t=o));return t}())===o&&(t=lo())===o&&(t=co())===o&&(t=mo())===o&&(t=Uo())===o&&(t=ou,ra()!==o&&ua()!==o&&(e=vo())!==o&&ua()!==o&&ta()!==o?(t=Rr(e)):(ou=t,t=o),t===o&&(t=ou,ra()!==o&&ua()!==o&&(e=io())!==o&&ua()!==o&&ta()!==o?((n=e).parentheses=!0,t=n):(ou=t,t=o),t===o&&(t=ha()))),t}function mo(){var r,t,e,n,u;return r=ou,(t=So())!==o&&ua()!==o&&zs()!==o&&ua()!==o&&(e=No())!==o?(n=t,u=e,Ma.add(`select::${n}::${u}`),r=t={type:"column_ref",table:n,column:u}):(ou=r,r=o),r===o&&(r=ou,(t=No())!==o&&(t=function(r){return Ma.add("select::null::"+r),{type:"column_ref",table:null,column:r}}(t)),r=t),r}function So(){var r,t;return r=ou,(t=Ro())!==o?((_r(t)?o:void 0)!==o?(r=t=t):(ou=r,r=o)):(ou=r,r=o),r===o&&(r=ou,(t=Io())!==o&&(t=t),r=t),r}function Io(){var t;return (t=function(){var t,e,n,u;t=ou,34===r.charCodeAt(ou)?(e='"',ou++):(e=o,0===cu&&du(gr));if(e!==o){if(n=[],Or.test(r.charAt(ou))?(u=r.charAt(ou),ou++):(u=o,0===cu&&du(Ur)),u!==o)for(;u!==o;)n.push(u),Or.test(r.charAt(ou))?(u=r.charAt(ou),ou++):(u=o,0===cu&&du(Ur));else n=o;n!==o?(34===r.charCodeAt(ou)?(u='"',ou++):(u=o,0===cu&&du(gr)),u!==o?(e=xr(n),t=e):(ou=t,t=o)):(ou=t,t=o);}else ou=t,t=o;return t}())===o&&(t=function(){var t,e,n,u;t=ou,39===r.charCodeAt(ou)?(e="'",ou++):(e=o,0===cu&&du(Z));if(e!==o){if(n=[],Mr.test(r.charAt(ou))?(u=r.charAt(ou),ou++):(u=o,0===cu&&du(Dr)),u!==o)for(;u!==o;)n.push(u),Mr.test(r.charAt(ou))?(u=r.charAt(ou),ou++):(u=o,0===cu&&du(Dr));else n=o;n!==o?(39===r.charCodeAt(ou)?(u="'",ou++):(u=o,0===cu&&du(Z)),u!==o?(e=xr(n),t=e):(ou=t,t=o)):(ou=t,t=o);}else ou=t,t=o;return t}())===o&&(t=function(){var t,e,n,u;t=ou,96===r.charCodeAt(ou)?(e="`",ou++):(e=o,0===cu&&du(kr));if(e!==o){if(n=[],$r.test(r.charAt(ou))?(u=r.charAt(ou),ou++):(u=o,0===cu&&du(Fr)),u!==o)for(;u!==o;)n.push(u),$r.test(r.charAt(ou))?(u=r.charAt(ou),ou++):(u=o,0===cu&&du(Fr));else n=o;n!==o?(96===r.charCodeAt(ou)?(u="`",ou++):(u=o,0===cu&&du(kr)),u!==o?(e=xr(n),t=e):(ou=t,t=o)):(ou=t,t=o);}else ou=t,t=o;return t}()),t}function No(){var r,t;return r=ou,(t=function(){var r,t,e,n;if(r=ou,(t=_o())!==o){for(e=[],n=Oo();n!==o;)e.push(n),n=Oo();e!==o?(t=Pr(t,e),r=t):(ou=r,r=o);}else ou=r,r=o;return r}())!==o?((_r(t)?o:void 0)!==o?(r=t=t):(ou=r,r=o)):(ou=r,r=o),r===o&&(r=Io()),r}function Ro(){var r,t,e,n;if(r=ou,(t=_o())!==o){for(e=[],n=go();n!==o;)e.push(n),n=go();e!==o?(r=t=Pr(t,e)):(ou=r,r=o);}else ou=r,r=o;return r}function _o(){var t;return Hr.test(r.charAt(ou))?(t=r.charAt(ou),ou++):(t=o,0===cu&&du(Gr)),t}function go(){var t;return jr.test(r.charAt(ou))?(t=r.charAt(ou),ou++):(t=o,0===cu&&du(Yr)),t}function Oo(){var t;return Br.test(r.charAt(ou))?(t=r.charAt(ou),ou++):(t=o,0===cu&&du(Xr)),t}function Uo(){var t,e,n,u;return t=ou,e=ou,58===r.charCodeAt(ou)?(n=":",ou++):(n=o,0===cu&&du(Wr)),n!==o&&(u=Ro())!==o?e=n=[n,u]:(ou=e,e=o),e!==o&&(e={type:"param",value:e[1]}),t=e}function xo(){var t,e,n;return t=ou,function(){var t,e,n,u;t=ou,"over"===r.substr(ou,4).toLowerCase()?(e=r.substr(ou,4),ou+=4):(e=o,0===cu&&du(te));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o);return t}()!==o&&ua()!==o&&ra()!==o&&ua()!==o&&es()!==o&&ua()!==o&&ds()!==o&&ua()!==o&&(e=ku())!==o&&ua()!==o?((n=zu())===o&&(n=null),n!==o&&ua()!==o&&ta()!==o?(t={partitionby:e,orderby:n}):(ou=t,t=o)):(ou=t,t=o),t}function Mo(){var t;return (t=ko())===o&&(t=Ho())===o&&(t=function(){var t,e;t=ou,(e=function(){var t,e,n,u;t=ou,"true"===r.substr(ou,4).toLowerCase()?(e=r.substr(ou,4),ou+=4):(e=o,0===cu&&du(Tt));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o);return t}())!==o&&(e={type:"bool",value:!0});(t=e)===o&&(t=ou,(e=function(){var t,e,n,u;t=ou,"false"===r.substr(ou,5).toLowerCase()?(e=r.substr(ou,5),ou+=5):(e=o,0===cu&&du(St));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o);return t}())!==o&&(e={type:"bool",value:!1}),t=e);return t}())===o&&(t=Do())===o&&(t=function(){var t,e,n,u,s,a,i;t=ou,(e=Gs())===o&&(e=Ps())===o&&(e=js())===o&&(e=Hs());if(e!==o)if(ua()!==o){if(n=ou,39===r.charCodeAt(ou)?(u="'",ou++):(u=o,0===cu&&du(Z)),u!==o){for(s=[],a=Fo();a!==o;)s.push(a),a=Fo();s!==o?(39===r.charCodeAt(ou)?(a="'",ou++):(a=o,0===cu&&du(Z)),a!==o?n=u=[u,s,a]:(ou=n,n=o)):(ou=n,n=o);}else ou=n,n=o;n!==o?(c=n,e={type:e.toLowerCase(),value:c[1].join("")},t=e):(ou=t,t=o);}else ou=t,t=o;else ou=t,t=o;var c;t===o&&(t=ou,(e=Ys())!==o&&ua()!==o?((n=ra())===o&&(n=null),n!==o&&(u=ua())!==o?((s=ta())===o&&(s=null),s!==o?((a=(a=function(r,t,e){if(t&&e)return !0}(0,n,s))?o:void 0)!==o&&ua()!==o?("on update current_timestamp"===r.substr(ou,27).toLowerCase()?(i=r.substr(ou,27),ou+=27):(i=o,0===cu&&du(Kr)),i===o&&(i=null),i!==o?(e=function(r,t,e,n){return {type:"origin",value:(n?`${r} ${n}`:r).toLowerCase()}}(e,0,0,i),t=e):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o)):(ou=t,t=o));return t}()),t}function Do(){var t,e;return t=ou,(e=function(){var t,e,n,u;t=ou,"null"===r.substr(ou,4).toLowerCase()?(e=r.substr(ou,4),ou+=4):(e=o,0===cu&&du(At));e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o);return t}())!==o&&(e={type:"null",value:null}),t=e}function ko(){var t,e,n,u,s;if(t=ou,e=ou,39===r.charCodeAt(ou)?(n="'",ou++):(n=o,0===cu&&du(Z)),n!==o){for(u=[],s=Fo();s!==o;)u.push(s),s=Fo();u!==o?(39===r.charCodeAt(ou)?(s="'",ou++):(s=o,0===cu&&du(Z)),s!==o?e=n=[n,u,s]:(ou=e,e=o)):(ou=e,e=o);}else ou=e,e=o;if(e!==o&&(e=Vr(e)),(t=e)===o){if(t=ou,e=ou,34===r.charCodeAt(ou)?(n='"',ou++):(n=o,0===cu&&du(gr)),n!==o){for(u=[],s=$o();s!==o;)u.push(s),s=$o();u!==o?(34===r.charCodeAt(ou)?(s='"',ou++):(s=o,0===cu&&du(gr)),s!==o?e=n=[n,u,s]:(ou=e,e=o)):(ou=e,e=o);}else ou=e,e=o;e!==o&&(e=Vr(e)),t=e;}return t}function $o(){var t;return qr.test(r.charAt(ou))?(t=r.charAt(ou),ou++):(t=o,0===cu&&du(Zr)),t===o&&(t=Po()),t}function Fo(){var t;return zr.test(r.charAt(ou))?(t=r.charAt(ou),ou++):(t=o,0===cu&&du(Jr)),t===o&&(t=Po()),t}function Po(){var t,e,n,u,s,a,i,c,l,f;return t=ou,"\\'"===r.substr(ou,2)?(e="\\'",ou+=2):(e=o,0===cu&&du(Qr)),e!==o&&(e="'"),(t=e)===o&&(t=ou,'\\"'===r.substr(ou,2)?(e='\\"',ou+=2):(e=o,0===cu&&du(rt)),e!==o&&(e='"'),(t=e)===o&&(t=ou,"\\\\"===r.substr(ou,2)?(e="\\\\",ou+=2):(e=o,0===cu&&du(tt)),e!==o&&(e="\\"),(t=e)===o&&(t=ou,"\\/"===r.substr(ou,2)?(e="\\/",ou+=2):(e=o,0===cu&&du(et)),e!==o&&(e="/"),(t=e)===o&&(t=ou,"\\b"===r.substr(ou,2)?(e="\\b",ou+=2):(e=o,0===cu&&du(nt)),e!==o&&(e="\b"),(t=e)===o&&(t=ou,"\\f"===r.substr(ou,2)?(e="\\f",ou+=2):(e=o,0===cu&&du(ut)),e!==o&&(e="\f"),(t=e)===o&&(t=ou,"\\n"===r.substr(ou,2)?(e="\\n",ou+=2):(e=o,0===cu&&du(ot)),e!==o&&(e="\n"),(t=e)===o&&(t=ou,"\\r"===r.substr(ou,2)?(e="\\r",ou+=2):(e=o,0===cu&&du(st)),e!==o&&(e="\r"),(t=e)===o&&(t=ou,"\\t"===r.substr(ou,2)?(e="\\t",ou+=2):(e=o,0===cu&&du(at)),e!==o&&(e="\t"),(t=e)===o&&(t=ou,"\\u"===r.substr(ou,2)?(e="\\u",ou+=2):(e=o,0===cu&&du(it)),e!==o&&(n=Wo())!==o&&(u=Wo())!==o&&(s=Wo())!==o&&(a=Wo())!==o?(i=n,c=u,l=s,f=a,t=e=String.fromCharCode(parseInt("0x"+i+c+l+f))):(ou=t,t=o),t===o&&(t=ou,92===r.charCodeAt(ou)?(e="\\",ou++):(e=o,0===cu&&du(ct)),e!==o&&(e="\\"),t=e)))))))))),t}function Ho(){var r,t,e;return r=ou,(t=function(){var r,t,e,n;r=ou,(t=Go())!==o&&(e=jo())!==o&&(n=Yo())!==o?(r=t={type:"bigint",value:t+e+n}):(ou=r,r=o);r===o&&(r=ou,(t=Go())!==o&&(e=jo())!==o?(t=function(r,t){const e=r+t;return Na(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e),r=t):(ou=r,r=o),r===o&&(r=ou,(t=Go())!==o&&(e=Yo())!==o?(t=function(r,t){return {type:"bigint",value:r+t}}(t,e),r=t):(ou=r,r=o),r===o&&(r=ou,(t=Go())!==o&&(t=function(r){return Na(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t)));return r}())!==o&&(t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),r=t}function Go(){var t,e,n;return (t=Bo())===o&&(t=Xo())===o&&(t=ou,45===r.charCodeAt(ou)?(e="-",ou++):(e=o,0===cu&&du(mr)),e===o&&(43===r.charCodeAt(ou)?(e="+",ou++):(e=o,0===cu&&du(Tr))),e!==o&&(n=Bo())!==o?(t=e="-"+n):(ou=t,t=o),t===o&&(t=ou,45===r.charCodeAt(ou)?(e="-",ou++):(e=o,0===cu&&du(mr)),e===o&&(43===r.charCodeAt(ou)?(e="+",ou++):(e=o,0===cu&&du(Tr))),e!==o&&(n=Xo())!==o?(t=e="-"+n):(ou=t,t=o))),t}function jo(){var t,e,n;return t=ou,46===r.charCodeAt(ou)?(e=".",ou++):(e=o,0===cu&&du(vt)),e!==o&&(n=Bo())!==o?(t=e="."+n):(ou=t,t=o),t}function Yo(){var t,e,n;return t=ou,(e=function(){var t,e,n;t=ou,pt.test(r.charAt(ou))?(e=r.charAt(ou),ou++):(e=o,0===cu&&du(wt));e!==o?(Et.test(r.charAt(ou))?(n=r.charAt(ou),ou++):(n=o,0===cu&&du(ht)),n===o&&(n=null),n!==o?(t=e=e+(null!==(u=n)?u:"")):(ou=t,t=o)):(ou=t,t=o);var u;return t}())!==o&&(n=Bo())!==o?(t=e=e+n):(ou=t,t=o),t}function Bo(){var r,t,e;if(r=ou,t=[],(e=Xo())!==o)for(;e!==o;)t.push(e),e=Xo();else t=o;return t!==o&&(t=t.join("")),r=t}function Xo(){var t;return bt.test(r.charAt(ou))?(t=r.charAt(ou),ou++):(t=o,0===cu&&du(dt)),t}function Wo(){var t;return Lt.test(r.charAt(ou))?(t=r.charAt(ou),ou++):(t=o,0===cu&&du(Ct)),t}function Vo(){var t,e,n,u;return t=ou,"default"===r.substr(ou,7).toLowerCase()?(e=r.substr(ou,7),ou+=7):(e=o,0===cu&&du(C)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o),t}function Ko(){var t,e,n,u;return t=ou,"to"===r.substr(ou,2).toLowerCase()?(e=r.substr(ou,2),ou+=2):(e=o,0===cu&&du(mt)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o),t}function qo(){var t,e,n,u;return t=ou,"drop"===r.substr(ou,4).toLowerCase()?(e=r.substr(ou,4),ou+=4):(e=o,0===cu&&du(It)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="DROP"):(ou=t,t=o)):(ou=t,t=o),t}function Zo(){var t,e,n,u;return t=ou,"update"===r.substr(ou,6).toLowerCase()?(e=r.substr(ou,6),ou+=6):(e=o,0===cu&&du(gt)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o),t}function zo(){var t,e,n,u;return t=ou,"create"===r.substr(ou,6).toLowerCase()?(e=r.substr(ou,6),ou+=6):(e=o,0===cu&&du(Ot)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o),t}function Jo(){var t,e,n,u;return t=ou,"temporary"===r.substr(ou,9).toLowerCase()?(e=r.substr(ou,9),ou+=9):(e=o,0===cu&&du(Ut)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o),t}function Qo(){var t,e,n,u;return t=ou,"if not exists"===r.substr(ou,13).toLowerCase()?(e=r.substr(ou,13),ou+=13):(e=o,0===cu&&du(xt)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o),t}function rs(){var t,e,n,u;return t=ou,"replace"===r.substr(ou,7).toLowerCase()?(e=r.substr(ou,7),ou+=7):(e=o,0===cu&&du($t)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o),t}function ts(){var t,e,n,u;return t=ou,"rename"===r.substr(ou,6).toLowerCase()?(e=r.substr(ou,6),ou+=6):(e=o,0===cu&&du(Ft)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o),t}function es(){var t,e,n,u;return t=ou,"partition"===r.substr(ou,9).toLowerCase()?(e=r.substr(ou,9),ou+=9):(e=o,0===cu&&du(Ht)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="PARTITION"):(ou=t,t=o)):(ou=t,t=o),t}function ns(){var t,e,n,u;return t=ou,"into"===r.substr(ou,4).toLowerCase()?(e=r.substr(ou,4),ou+=4):(e=o,0===cu&&du(Gt)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o),t}function us(){var t,e,n,u;return t=ou,"set"===r.substr(ou,3).toLowerCase()?(e=r.substr(ou,3),ou+=3):(e=o,0===cu&&du(Yt)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o),t}function os(){var t,e,n,u;return t=ou,"as"===r.substr(ou,2).toLowerCase()?(e=r.substr(ou,2),ou+=2):(e=o,0===cu&&du(Xt)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o),t}function ss(){var t,e,n,u;return t=ou,"table"===r.substr(ou,5).toLowerCase()?(e=r.substr(ou,5),ou+=5):(e=o,0===cu&&du(Wt)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="TABLE"):(ou=t,t=o)):(ou=t,t=o),t}function as(){var t,e,n,u;return t=ou,"tables"===r.substr(ou,6).toLowerCase()?(e=r.substr(ou,6),ou+=6):(e=o,0===cu&&du(Vt)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="TABLES"):(ou=t,t=o)):(ou=t,t=o),t}function is(){var t,e,n,u;return t=ou,"on"===r.substr(ou,2).toLowerCase()?(e=r.substr(ou,2),ou+=2):(e=o,0===cu&&du(Kt)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o),t}function cs(){var t,e,n,u;return t=ou,"join"===r.substr(ou,4).toLowerCase()?(e=r.substr(ou,4),ou+=4):(e=o,0===cu&&du(Qt)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o),t}function ls(){var t,e,n,u;return t=ou,"outer"===r.substr(ou,5).toLowerCase()?(e=r.substr(ou,5),ou+=5):(e=o,0===cu&&du(re)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o),t}function fs(){var t,e,n,u;return t=ou,"union"===r.substr(ou,5).toLowerCase()?(e=r.substr(ou,5),ou+=5):(e=o,0===cu&&du(ee)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o),t}function vs(){var t,e,n,u;return t=ou,"using"===r.substr(ou,5).toLowerCase()?(e=r.substr(ou,5),ou+=5):(e=o,0===cu&&du(ue)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o),t}function bs(){var t,e,n,u;return t=ou,"with"===r.substr(ou,4).toLowerCase()?(e=r.substr(ou,4),ou+=4):(e=o,0===cu&&du(ir)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o),t}function ds(){var t,e,n,u;return t=ou,"by"===r.substr(ou,2).toLowerCase()?(e=r.substr(ou,2),ou+=2):(e=o,0===cu&&du(ae)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o),t}function Ls(){var t,e,n,u;return t=ou,"all"===r.substr(ou,3).toLowerCase()?(e=r.substr(ou,3),ou+=3):(e=o,0===cu&&du(de)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="ALL"):(ou=t,t=o)):(ou=t,t=o),t}function Cs(){var t,e,n,u;return t=ou,"distinct"===r.substr(ou,8).toLowerCase()?(e=r.substr(ou,8),ou+=8):(e=o,0===cu&&du(Le)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="DISTINCT"):(ou=t,t=o)):(ou=t,t=o),t}function ps(){var t,e,n,u;return t=ou,"between"===r.substr(ou,7).toLowerCase()?(e=r.substr(ou,7),ou+=7):(e=o,0===cu&&du(Ce)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="BETWEEN"):(ou=t,t=o)):(ou=t,t=o),t}function ws(){var t,e,n,u;return t=ou,"in"===r.substr(ou,2).toLowerCase()?(e=r.substr(ou,2),ou+=2):(e=o,0===cu&&du(pe)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="IN"):(ou=t,t=o)):(ou=t,t=o),t}function Es(){var t,e,n,u;return t=ou,"is"===r.substr(ou,2).toLowerCase()?(e=r.substr(ou,2),ou+=2):(e=o,0===cu&&du(we)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="IS"):(ou=t,t=o)):(ou=t,t=o),t}function hs(){var t,e,n,u;return t=ou,"like"===r.substr(ou,4).toLowerCase()?(e=r.substr(ou,4),ou+=4):(e=o,0===cu&&du(Ee)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="LIKE"):(ou=t,t=o)):(ou=t,t=o),t}function As(){var t,e,n,u;return t=ou,"exists"===r.substr(ou,6).toLowerCase()?(e=r.substr(ou,6),ou+=6):(e=o,0===cu&&du(he)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="EXISTS"):(ou=t,t=o)):(ou=t,t=o),t}function ys(){var t,e,n,u;return t=ou,"not"===r.substr(ou,3).toLowerCase()?(e=r.substr(ou,3),ou+=3):(e=o,0===cu&&du(Ae)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="NOT"):(ou=t,t=o)):(ou=t,t=o),t}function Ts(){var t,e,n,u;return t=ou,"and"===r.substr(ou,3).toLowerCase()?(e=r.substr(ou,3),ou+=3):(e=o,0===cu&&du(ye)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="AND"):(ou=t,t=o)):(ou=t,t=o),t}function ms(){var t,e,n,u;return t=ou,"or"===r.substr(ou,2).toLowerCase()?(e=r.substr(ou,2),ou+=2):(e=o,0===cu&&du(Te)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="OR"):(ou=t,t=o)):(ou=t,t=o),t}function Ss(){var t,e,n,u;return t=ou,"case"===r.substr(ou,4).toLowerCase()?(e=r.substr(ou,4),ou+=4):(e=o,0===cu&&du(ge)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o),t}function Is(){var t,e,n,u;return t=ou,"cast"===r.substr(ou,4).toLowerCase()?(e=r.substr(ou,4),ou+=4):(e=o,0===cu&&du(De)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?t=e=[e,n]:(ou=t,t=o)):(ou=t,t=o),t}function Ns(){var t,e,n,u;return t=ou,"char"===r.substr(ou,4).toLowerCase()?(e=r.substr(ou,4),ou+=4):(e=o,0===cu&&du(ke)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="CHAR"):(ou=t,t=o)):(ou=t,t=o),t}function Rs(){var t,e,n,u;return t=ou,"varchar"===r.substr(ou,7).toLowerCase()?(e=r.substr(ou,7),ou+=7):(e=o,0===cu&&du($e)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="VARCHAR"):(ou=t,t=o)):(ou=t,t=o),t}function _s(){var t,e,n,u;return t=ou,"numeric"===r.substr(ou,7).toLowerCase()?(e=r.substr(ou,7),ou+=7):(e=o,0===cu&&du(Fe)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="NUMERIC"):(ou=t,t=o)):(ou=t,t=o),t}function gs(){var t,e,n,u;return t=ou,"decimal"===r.substr(ou,7).toLowerCase()?(e=r.substr(ou,7),ou+=7):(e=o,0===cu&&du(Pe)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="DECIMAL"):(ou=t,t=o)):(ou=t,t=o),t}function Os(){var t,e,n,u;return t=ou,"unsigned"===r.substr(ou,8).toLowerCase()?(e=r.substr(ou,8),ou+=8):(e=o,0===cu&&du(Ge)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="UNSIGNED"):(ou=t,t=o)):(ou=t,t=o),t}function Us(){var t,e,n,u;return t=ou,"int"===r.substr(ou,3).toLowerCase()?(e=r.substr(ou,3),ou+=3):(e=o,0===cu&&du(je)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="INT"):(ou=t,t=o)):(ou=t,t=o),t}function xs(){var t,e,n,u;return t=ou,"integer"===r.substr(ou,7).toLowerCase()?(e=r.substr(ou,7),ou+=7):(e=o,0===cu&&du(Be)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="INTEGER"):(ou=t,t=o)):(ou=t,t=o),t}function Ms(){var t,e,n,u;return t=ou,"smallint"===r.substr(ou,8).toLowerCase()?(e=r.substr(ou,8),ou+=8):(e=o,0===cu&&du(We)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="SMALLINT"):(ou=t,t=o)):(ou=t,t=o),t}function Ds(){var t,e,n,u;return t=ou,"tinyint"===r.substr(ou,7).toLowerCase()?(e=r.substr(ou,7),ou+=7):(e=o,0===cu&&du(Ve)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="TINYINT"):(ou=t,t=o)):(ou=t,t=o),t}function ks(){var t,e,n,u;return t=ou,"bigint"===r.substr(ou,6).toLowerCase()?(e=r.substr(ou,6),ou+=6):(e=o,0===cu&&du(Je)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="BIGINT"):(ou=t,t=o)):(ou=t,t=o),t}function $s(){var t,e,n,u;return t=ou,"float"===r.substr(ou,5).toLowerCase()?(e=r.substr(ou,5),ou+=5):(e=o,0===cu&&du(Qe)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="FLOAT"):(ou=t,t=o)):(ou=t,t=o),t}function Fs(){var t,e,n,u;return t=ou,"double"===r.substr(ou,6).toLowerCase()?(e=r.substr(ou,6),ou+=6):(e=o,0===cu&&du(rn)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="DOUBLE"):(ou=t,t=o)):(ou=t,t=o),t}function Ps(){var t,e,n,u;return t=ou,"date"===r.substr(ou,4).toLowerCase()?(e=r.substr(ou,4),ou+=4):(e=o,0===cu&&du(tn)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="DATE"):(ou=t,t=o)):(ou=t,t=o),t}function Hs(){var t,e,n,u;return t=ou,"datetime"===r.substr(ou,8).toLowerCase()?(e=r.substr(ou,8),ou+=8):(e=o,0===cu&&du(en)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="DATETIME"):(ou=t,t=o)):(ou=t,t=o),t}function Gs(){var t,e,n,u;return t=ou,"time"===r.substr(ou,4).toLowerCase()?(e=r.substr(ou,4),ou+=4):(e=o,0===cu&&du(nn)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="TIME"):(ou=t,t=o)):(ou=t,t=o),t}function js(){var t,e,n,u;return t=ou,"timestamp"===r.substr(ou,9).toLowerCase()?(e=r.substr(ou,9),ou+=9):(e=o,0===cu&&du(un)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="TIMESTAMP"):(ou=t,t=o)):(ou=t,t=o),t}function Ys(){var t,e,n,u;return t=ou,"current_timestamp"===r.substr(ou,17).toLowerCase()?(e=r.substr(ou,17),ou+=17):(e=o,0===cu&&du(pn)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="CURRENT_TIMESTAMP"):(ou=t,t=o)):(ou=t,t=o),t}function Bs(){var t;return (t=function(){var t;return "@@"===r.substr(ou,2)?(t="@@",ou+=2):(t=o,0===cu&&du(In)),t}())===o&&(t=function(){var t;return 64===r.charCodeAt(ou)?(t="@",ou++):(t=o,0===cu&&du(Sn)),t}())===o&&(t=function(){var t;return 36===r.charCodeAt(ou)?(t="$",ou++):(t=o,0===cu&&du(Nn)),t}()),t}function Xs(){var t;return 61===r.charCodeAt(ou)?(t="=",ou++):(t=o,0===cu&&du(vr)),t}function Ws(){var t,e,n,u;return t=ou,"add"===r.substr(ou,3).toLowerCase()?(e=r.substr(ou,3),ou+=3):(e=o,0===cu&&du(On)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="ADD"):(ou=t,t=o)):(ou=t,t=o),t}function Vs(){var t,e,n,u;return t=ou,"column"===r.substr(ou,6).toLowerCase()?(e=r.substr(ou,6),ou+=6):(e=o,0===cu&&du(Un)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="COLUMN"):(ou=t,t=o)):(ou=t,t=o),t}function Ks(){var t,e,n,u;return t=ou,"index"===r.substr(ou,5).toLowerCase()?(e=r.substr(ou,5),ou+=5):(e=o,0===cu&&du(xn)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="INDEX"):(ou=t,t=o)):(ou=t,t=o),t}function qs(){var t,e,n,u;return t=ou,"key"===r.substr(ou,3).toLowerCase()?(e=r.substr(ou,3),ou+=3):(e=o,0===cu&&du(v)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="KEY"):(ou=t,t=o)):(ou=t,t=o),t}function Zs(){var t,e,n,u;return t=ou,"comment"===r.substr(ou,7).toLowerCase()?(e=r.substr(ou,7),ou+=7):(e=o,0===cu&&du(kn)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="COMMENT"):(ou=t,t=o)):(ou=t,t=o),t}function zs(){var t;return 46===r.charCodeAt(ou)?(t=".",ou++):(t=o,0===cu&&du(vt)),t}function Js(){var t;return 44===r.charCodeAt(ou)?(t=",",ou++):(t=o,0===cu&&du(Xn)),t}function Qs(){var t;return 42===r.charCodeAt(ou)?(t="*",ou++):(t=o,0===cu&&du(Sr)),t}function ra(){var t;return 40===r.charCodeAt(ou)?(t="(",ou++):(t=o,0===cu&&du(ur)),t}function ta(){var t;return 41===r.charCodeAt(ou)?(t=")",ou++):(t=o,0===cu&&du(or)),t}function ea(){var t;return 59===r.charCodeAt(ou)?(t=";",ou++):(t=o,0===cu&&du(Kn)),t}function na(){var t;return (t=function(){var t;return "||"===r.substr(ou,2)?(t="||",ou+=2):(t=o,0===cu&&du(qn)),t}())===o&&(t=function(){var t;return "&&"===r.substr(ou,2)?(t="&&",ou+=2):(t=o,0===cu&&du(Zn)),t}()),t}function ua(){var r,t;for(r=[],(t=ca())===o&&(t=sa());t!==o;)r.push(t),(t=ca())===o&&(t=sa());return r}function oa(){var r,t;if(r=[],(t=ca())===o&&(t=sa()),t!==o)for(;t!==o;)r.push(t),(t=ca())===o&&(t=sa());else r=o;return r}function sa(){var t;return (t=function(){var t,e,n,u,s,a;t=ou,"/*"===r.substr(ou,2)?(e="/*",ou+=2):(e=o,0===cu&&du(zn));if(e!==o){for(n=[],u=ou,s=ou,cu++,"*/"===r.substr(ou,2)?(a="*/",ou+=2):(a=o,0===cu&&du(Jn)),cu--,a===o?s=void 0:(ou=s,s=o),s!==o&&(a=ia())!==o?u=s=[s,a]:(ou=u,u=o);u!==o;)n.push(u),u=ou,s=ou,cu++,"*/"===r.substr(ou,2)?(a="*/",ou+=2):(a=o,0===cu&&du(Jn)),cu--,a===o?s=void 0:(ou=s,s=o),s!==o&&(a=ia())!==o?u=s=[s,a]:(ou=u,u=o);n!==o?("*/"===r.substr(ou,2)?(u="*/",ou+=2):(u=o,0===cu&&du(Jn)),u!==o?t=e=[e,n,u]:(ou=t,t=o)):(ou=t,t=o);}else ou=t,t=o;return t}())===o&&(t=function(){var t,e,n,u,s,a;t=ou,"--"===r.substr(ou,2)?(e="--",ou+=2):(e=o,0===cu&&du(Qn));if(e!==o){for(n=[],u=ou,s=ou,cu++,a=la(),cu--,a===o?s=void 0:(ou=s,s=o),s!==o&&(a=ia())!==o?u=s=[s,a]:(ou=u,u=o);u!==o;)n.push(u),u=ou,s=ou,cu++,a=la(),cu--,a===o?s=void 0:(ou=s,s=o),s!==o&&(a=ia())!==o?u=s=[s,a]:(ou=u,u=o);n!==o?t=e=[e,n]:(ou=t,t=o);}else ou=t,t=o;return t}())===o&&(t=function(){var t,e,n,u,s,a;t=ou,35===r.charCodeAt(ou)?(e="#",ou++):(e=o,0===cu&&du(ru));if(e!==o){for(n=[],u=ou,s=ou,cu++,a=la(),cu--,a===o?s=void 0:(ou=s,s=o),s!==o&&(a=ia())!==o?u=s=[s,a]:(ou=u,u=o);u!==o;)n.push(u),u=ou,s=ou,cu++,a=la(),cu--,a===o?s=void 0:(ou=s,s=o),s!==o&&(a=ia())!==o?u=s=[s,a]:(ou=u,u=o);n!==o?t=e=[e,n]:(ou=t,t=o);}else ou=t,t=o;return t}()),t}function aa(){var r,t,e,n,u,s,a;return r=ou,(t=Zs())!==o&&ua()!==o?((e=Xs())===o&&(e=null),e!==o&&ua()!==o&&(n=ko())!==o?(s=e,a=n,r=t={type:(u=t).toLowerCase(),keyword:u.toLowerCase(),symbol:s,value:a}):(ou=r,r=o)):(ou=r,r=o),r}function ia(){var t;return r.length>ou?(t=r.charAt(ou),ou++):(t=o,0===cu&&du(tu)),t}function ca(){var t;return eu.test(r.charAt(ou))?(t=r.charAt(ou),ou++):(t=o,0===cu&&du(nu)),t}function la(){var t,e;if((t=function(){var t,e;t=ou,cu++,r.length>ou?(e=r.charAt(ou),ou++):(e=o,0===cu&&du(tu));cu--,e===o?t=void 0:(ou=t,t=o);return t}())===o)if(t=[],lt.test(r.charAt(ou))?(e=r.charAt(ou),ou++):(e=o,0===cu&&du(ft)),e!==o)for(;e!==o;)t.push(e),lt.test(r.charAt(ou))?(e=r.charAt(ou),ou++):(e=o,0===cu&&du(ft));else t=o;return t}function fa(){var t,e;return t=ou,Ua=[],(void 0)!==o&&ua()!==o?((e=va())===o&&(e=function(){var t,e;t=ou,function(){var t;return "return"===r.substr(ou,6).toLowerCase()?(t=r.substr(ou,6),ou+=6):(t=o,0===cu&&du(Rn)),t}()!==o&&ua()!==o&&(e=ba())!==o?(t={type:"return",expr:e}):(ou=t,t=o);return t}()),e!==o?(t={stmt:e,vars:Ua}):(ou=t,t=o)):(ou=t,t=o),t}function va(){var t,e,n,u;return t=ou,(e=ha())===o&&(e=Aa()),e!==o&&ua()!==o?((n=function(){var t;return ":="===r.substr(ou,2)?(t=":=",ou+=2):(t=o,0===cu&&du(_n)),t}())===o&&(n=Xs()),n!==o&&ua()!==o&&(u=ba())!==o?(t=e={type:"assign",left:e,symbol:n,right:u}):(ou=t,t=o)):(ou=t,t=o),t}function ba(){var t;return (t=gu())===o&&(t=function(){var r,t,e,n,u;r=ou,(t=ha())!==o&&ua()!==o&&(e=Vu())!==o&&ua()!==o&&(n=ha())!==o&&ua()!==o&&(u=qu())!==o?(r=t={type:"join",ltable:t,rtable:n,op:e,on:u}):(ou=r,r=o);return r}())===o&&(t=da())===o&&(t=function(){var t,e;t=ou,function(){var t;return 91===r.charCodeAt(ou)?(t="[",ou++):(t=o,0===cu&&du(Wn)),t}()!==o&&ua()!==o&&(e=Ea())!==o&&ua()!==o&&function(){var t;return 93===r.charCodeAt(ou)?(t="]",ou++):(t=o,0===cu&&du(Vn)),t}()!==o?(t={type:"array",value:e}):(ou=t,t=o);return t}()),t}function da(){var r,t,e,n,u,s,a,i;if(r=ou,(t=La())!==o){for(e=[],n=ou,(u=ua())!==o&&(s=ho())!==o&&(a=ua())!==o&&(i=La())!==o?n=u=[u,s,a,i]:(ou=n,n=o);n!==o;)e.push(n),n=ou,(u=ua())!==o&&(s=ho())!==o&&(a=ua())!==o&&(i=La())!==o?n=u=[u,s,a,i]:(ou=n,n=o);e!==o?(r=t=dr(t,e)):(ou=r,r=o);}else ou=r,r=o;return r}function La(){var r,t,e,n,u,s,a,i;if(r=ou,(t=Ca())!==o){for(e=[],n=ou,(u=ua())!==o&&(s=yo())!==o&&(a=ua())!==o&&(i=Ca())!==o?n=u=[u,s,a,i]:(ou=n,n=o);n!==o;)e.push(n),n=ou,(u=ua())!==o&&(s=yo())!==o&&(a=ua())!==o&&(i=Ca())!==o?n=u=[u,s,a,i]:(ou=n,n=o);e!==o?(r=t=dr(t,e)):(ou=r,r=o);}else ou=r,r=o;return r}function Ca(){var r,t;return (r=Mo())===o&&(r=ha())===o&&(r=wa())===o&&(r=Uo())===o&&(r=ou,ra()!==o&&ua()!==o&&(t=da())!==o&&ua()!==o&&ta()!==o?(r=Rr(t)):(ou=r,r=o)),r}function pa(){var r,t,e,n,u,s,a;return r=ou,(t=So())!==o?(e=ou,(n=ua())!==o&&(u=zs())!==o&&(s=ua())!==o&&(a=So())!==o?e=n=[n,u,s,a]:(ou=e,e=o),e===o&&(e=null),e!==o?(r=t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e)):(ou=r,r=o)):(ou=r,r=o),r}function wa(){var r,t,e;return r=ou,(t=pa())!==o&&ua()!==o&&ra()!==o&&ua()!==o?((e=Ea())===o&&(e=null),e!==o&&ua()!==o&&ta()!==o?(r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(ou=r,r=o)):(ou=r,r=o),r===o&&(r=ou,(t=pa())!==o&&(t=function(r){return {type:"function",name:r,args:null}}(t)),r=t),r}function Ea(){var r,t,e,n,u,s,a,c;if(r=ou,(t=Ca())!==o){for(e=[],n=ou,(u=ua())!==o&&(s=Js())!==o&&(a=ua())!==o&&(c=Ca())!==o?n=u=[u,s,a,c]:(ou=n,n=o);n!==o;)e.push(n),n=ou,(u=ua())!==o&&(s=Js())!==o&&(a=ua())!==o&&(c=Ca())!==o?n=u=[u,s,a,c]:(ou=n,n=o);e!==o?(r=t=i(t,e)):(ou=r,r=o);}else ou=r,r=o;return r}function ha(){var r,t,e,n,u;return r=ou,(t=Bs())!==o&&(e=Aa())!==o?(n=t,u=e,r=t={type:"var",...u,prefix:n}):(ou=r,r=o),r}function Aa(){var t,e,n,u,s;return t=ou,(e=Ro())!==o&&(n=function(){var t,e,n,u,s;t=ou,e=[],n=ou,46===r.charCodeAt(ou)?(u=".",ou++):(u=o,0===cu&&du(vt));u!==o&&(s=Ro())!==o?n=u=[u,s]:(ou=n,n=o);for(;n!==o;)e.push(n),n=ou,46===r.charCodeAt(ou)?(u=".",ou++):(u=o,0===cu&&du(vt)),u!==o&&(s=Ro())!==o?n=u=[u,s]:(ou=n,n=o);e!==o&&(e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return t=e}())!==o?(u=e,s=n,Ua.push(u),t=e={type:"var",name:u,members:s,prefix:null}):(ou=t,t=o),t}function ya(){var t;return (t=function(){var t,e,n,u;t=ou,(e=Ns())===o&&(e=Rs());if(e!==o)if(ua()!==o)if(ra()!==o)if(ua()!==o){if(n=[],bt.test(r.charAt(ou))?(u=r.charAt(ou),ou++):(u=o,0===cu&&du(dt)),u!==o)for(;u!==o;)n.push(u),bt.test(r.charAt(ou))?(u=r.charAt(ou),ou++):(u=o,0===cu&&du(dt));else n=o;n!==o&&(u=ua())!==o&&ta()!==o?(e={dataType:e,length:parseInt(n.join(""),10)},t=e):(ou=t,t=o);}else ou=t,t=o;else ou=t,t=o;else ou=t,t=o;else ou=t,t=o;t===o&&(t=ou,(e=Ns())!==o&&(e=uu(e)),(t=e)===o&&(t=ou,(e=Rs())!==o&&(e=uu(e)),t=e));return t}())===o&&(t=function(){var t,e,n,u,s,a,i,c,l,f,v,b;t=ou,(e=_s())===o&&(e=gs())===o&&(e=Us())===o&&(e=xs())===o&&(e=Ms())===o&&(e=Ds())===o&&(e=ks())===o&&(e=$s())===o&&(e=Fs());if(e!==o)if((n=ua())!==o)if((u=ra())!==o)if((s=ua())!==o){if(a=[],bt.test(r.charAt(ou))?(i=r.charAt(ou),ou++):(i=o,0===cu&&du(dt)),i!==o)for(;i!==o;)a.push(i),bt.test(r.charAt(ou))?(i=r.charAt(ou),ou++):(i=o,0===cu&&du(dt));else a=o;if(a!==o)if((i=ua())!==o){if(c=ou,(l=Js())!==o)if((f=ua())!==o){if(v=[],bt.test(r.charAt(ou))?(b=r.charAt(ou),ou++):(b=o,0===cu&&du(dt)),b!==o)for(;b!==o;)v.push(b),bt.test(r.charAt(ou))?(b=r.charAt(ou),ou++):(b=o,0===cu&&du(dt));else v=o;v!==o?c=l=[l,f,v]:(ou=c,c=o);}else ou=c,c=o;else ou=c,c=o;c===o&&(c=null),c!==o&&(l=ua())!==o&&(f=ta())!==o&&(v=ua())!==o?((b=Ta())===o&&(b=null),b!==o?(d=c,L=b,e={dataType:e,length:parseInt(a.join(""),10),scale:d&&parseInt(d[2].join(""),10),parentheses:!0,suffix:L},t=e):(ou=t,t=o)):(ou=t,t=o);}else ou=t,t=o;else ou=t,t=o;}else ou=t,t=o;else ou=t,t=o;else ou=t,t=o;else ou=t,t=o;var d,L;if(t===o){if(t=ou,(e=_s())===o&&(e=gs())===o&&(e=Us())===o&&(e=xs())===o&&(e=Ms())===o&&(e=Ds())===o&&(e=ks())===o&&(e=$s())===o&&(e=Fs()),e!==o){if(n=[],bt.test(r.charAt(ou))?(u=r.charAt(ou),ou++):(u=o,0===cu&&du(dt)),u!==o)for(;u!==o;)n.push(u),bt.test(r.charAt(ou))?(u=r.charAt(ou),ou++):(u=o,0===cu&&du(dt));else n=o;n!==o&&(u=ua())!==o?((s=Ta())===o&&(s=null),s!==o?(e=function(r,t,e){return {dataType:r,length:parseInt(t.join(""),10),suffix:e}}(e,n,s),t=e):(ou=t,t=o)):(ou=t,t=o);}else ou=t,t=o;t===o&&(t=ou,(e=_s())===o&&(e=gs())===o&&(e=Us())===o&&(e=xs())===o&&(e=Ms())===o&&(e=Ds())===o&&(e=ks())===o&&(e=$s())===o&&(e=Fs()),e!==o&&(n=ua())!==o?((u=Ta())===o&&(u=null),u!==o&&(s=ua())!==o?(e=function(r,t){return {dataType:r,suffix:t}}(e,u),t=e):(ou=t,t=o)):(ou=t,t=o));}return t}())===o&&(t=function(){var r,t;r=ou,(t=Ps())===o&&(t=Hs())===o&&(t=Gs())===o&&(t=js());t!==o&&(t=uu(t));return r=t}())===o&&(t=function(){var t,e;t=ou,(e=function(){var t,e,n,u;return t=ou,"json"===r.substr(ou,4).toLowerCase()?(e=r.substr(ou,4),ou+=4):(e=o,0===cu&&du(Xe)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="JSON"):(ou=t,t=o)):(ou=t,t=o),t}())!==o&&(e=uu(e));return t=e}())===o&&(t=function(){var t,e;t=ou,(e=function(){var t,e,n,u;return t=ou,"tinytext"===r.substr(ou,8).toLowerCase()?(e=r.substr(ou,8),ou+=8):(e=o,0===cu&&du(Ke)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="TINYTEXT"):(ou=t,t=o)):(ou=t,t=o),t}())===o&&(e=function(){var t,e,n,u;return t=ou,"text"===r.substr(ou,4).toLowerCase()?(e=r.substr(ou,4),ou+=4):(e=o,0===cu&&du(qe)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="TEXT"):(ou=t,t=o)):(ou=t,t=o),t}())===o&&(e=function(){var t,e,n,u;return t=ou,"mediumtext"===r.substr(ou,10).toLowerCase()?(e=r.substr(ou,10),ou+=10):(e=o,0===cu&&du(Ze)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="MEDIUMTEXT"):(ou=t,t=o)):(ou=t,t=o),t}())===o&&(e=function(){var t,e,n,u;return t=ou,"longtext"===r.substr(ou,8).toLowerCase()?(e=r.substr(ou,8),ou+=8):(e=o,0===cu&&du(ze)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="LONGTEXT"):(ou=t,t=o)):(ou=t,t=o),t}());e!==o&&(e={dataType:e});return t=e}()),t}function Ta(){var t,e,n;return t=ou,(e=Os())===o&&(e=null),e!==o&&ua()!==o?((n=function(){var t,e,n,u;return t=ou,"zerofill"===r.substr(ou,8).toLowerCase()?(e=r.substr(ou,8),ou+=8):(e=o,0===cu&&du(Ye)),e!==o?(n=ou,cu++,u=_o(),cu--,u===o?n=void 0:(ou=n,n=o),n!==o?(t=e="ZEROFILL"):(ou=t,t=o)):(ou=t,t=o),t}())===o&&(n=null),n!==o?(t=e=function(r,t){const e=[];return r&&e.push(r),t&&e.push(t),e}(e,n)):(ou=t,t=o)):(ou=t,t=o),t}const ma={ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,IS:!0,JOIN:!0,JSON:!0,KEY:!0,LEFT:!0,LIKE:!0,LIMIT:!0,LOW_PRIORITY:!0,NOT:!0,NULL:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,RECURSIVE:!0,RENAME:!0,RIGHT:!0,READ:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,STATUS:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,TYPE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WITH:!0,WHEN:!0,WHERE:!0,WRITE:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0};function Sa(r,t){return {type:"unary_expr",operator:r,expr:t}}function Ia(r,t,e){return {type:"binary_expr",operator:r,left:t,right:e}}function Na(r){const t=n(Number.MAX_SAFE_INTEGER);return !(n(r)<t)}function Ra(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][3]);return e}function _a(r,t){let e=r;for(let r=0;r<t.length;r++)e=Ia(t[r][1],e,t[r][3]);return e}function ga(r){const t=Da[r];return t||(r||null)}function Oa(r){const t=[];for(let e of r.keys()){const r=e.split("::");if(!r){t.push(e);break}r&&r[1]&&(r[1]=ga(r[1])),t.push(r.join("::"));}return t}let Ua=[];const xa=new Set,Ma=new Set,Da={};if((e=a())!==o&&ou===r.length)return e;throw e!==o&&ou<r.length&&du({type:"end"}),Lu(iu,au<r.length?r.charAt(au):null,au<r.length?bu(au,au+1):bu(au,au))}};},function(r,t,e){var n=e(0);function u(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,u);}!function(r,t){function e(){this.constructor=r;}e.prototype=t.prototype,r.prototype=new e;}(u,Error),u.buildMessage=function(r,t){var e={literal:function(r){return '"'+u(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?o(r.parts[t][0])+"-"+o(r.parts[t][1]):o(r.parts[t]);return "["+(r.inverted?"^":"")+e+"]"},any:function(r){return "any character"},end:function(r){return "end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function u(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}function o(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}return "Expected "+function(r){var t,n,u,o=new Array(r.length);for(t=0;t<r.length;t++)o[t]=(u=r[t],e[u.type](u));if(o.sort(),o.length>0){for(t=1,n=1;t<o.length;t++)o[t-1]!==o[t]&&(o[n]=o[t],n++);o.length=n;}switch(o.length){case 1:return o[0];case 2:return o[0]+" or "+o[1];default:return o.slice(0,-1).join(", ")+", or "+o[o.length-1]}}(r)+" but "+function(r){return r?'"'+u(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:u,parse:function(r,t){t=void 0!==t?t:{};var e,o={},s={start:ho},a=ho,i=bo("EXTENSION",!0),c=bo("SCHEMA",!0),l=bo("VERSION",!0),v=bo("NULLS",!0),b=bo("FIRST",!0),d=bo("LAST",!0),L=bo("AUTO_INCREMENT",!0),C=bo("UNIQUE",!0),p=bo("PRIMARY",!0),w=bo("KEY",!0),E=bo("COLUMN_FORMAT",!0),h=bo("FIXED",!0),A=bo("DYNAMIC",!0),y=bo("DEFAULT",!0),T=bo("STORAGE",!0),m=bo("DISK",!0),S=bo("MEMORY",!0),I=bo("ALGORITHM",!0),N=bo("INSTANT",!0),R=bo("INPLACE",!0),_=bo("COPY",!0),g=bo("LOCK",!0),O=bo("NONE",!0),U=bo("SHARED",!0),x=bo("EXCLUSIVE",!0),M=bo("PRIMARY KEY",!0),D=bo("FOREIGN KEY",!0),k=bo("MATCH FULL",!0),$=bo("MATCH PARTIAL",!0),F=bo("MATCH SIMPLE",!0),P=bo("ON DELETE",!0),H=bo("ON UPDATE",!0),G=bo("RESTRICT",!0),j=bo("CASCADE",!0),Y=bo("SET NULL",!0),B=bo("NO ACTION",!0),X=bo("SET DEFAULT",!0),W=bo("TRIGGER",!0),V=bo("BEFORE",!0),K=bo("AFTER",!0),q=bo("INSTEAD OF",!0),Z=bo("ON",!0),z=bo("EXECUTE",!0),J=bo("PROCEDURE",!0),Q=bo("OF",!0),rr=bo("NOT",!0),tr=bo("DEFERRABLE",!0),er=bo("INITIALLY IMMEDIATE",!0),nr=bo("INITIALLY DEFERRED",!0),ur=bo("FOR",!0),or=bo("EACH",!0),sr=bo("ROW",!0),ar=bo("STATEMENT",!0),ir=bo("AVG_ROW_LENGTH",!0),cr=bo("KEY_BLOCK_SIZE",!0),lr=bo("MAX_ROWS",!0),fr=bo("MIN_ROWS",!0),vr=bo("STATS_SAMPLE_PAGES",!0),br=bo("CHARACTER SET",!0),dr=bo("CHARSET",!0),Lr=bo("COLLATE",!0),Cr=bo("CONNECTION",!0),pr=bo("COMPRESSION",!0),wr=bo("'",!1),Er=bo("ZLIB",!0),hr=bo("LZ4",!0),Ar=bo("ENGINE",!0),yr=bo("IN",!0),Tr=bo("ACCESS SHARE",!0),mr=bo("ROW SHARE",!0),Sr=bo("ROW EXCLUSIVE",!0),Ir=bo("SHARE UPDATE EXCLUSIVE",!0),Nr=bo("SHARE ROW EXCLUSIVE",!0),Rr=bo("ACCESS EXCLUSIVE",!0),_r=bo("SHARE",!0),gr=bo("MODE",!0),Or=bo("NOWAIT",!0),Ur=bo("(",!1),xr=bo(")",!1),Mr=function(r,t){return Ki(r,t)},Dr=bo("BTREE",!0),kr=bo("HASH",!0),$r=bo("GIST",!0),Fr=bo("GIN",!0),Pr=bo("WITH",!0),Hr=bo("PARSER",!0),Gr=bo("VISIBLE",!0),jr=bo("INVISIBLE",!0),Yr=bo("=",!1),Br=function(r,t){return qi(r,t)},Xr=bo("!",!1),Wr=bo(">=",!1),Vr=bo(">",!1),Kr=bo("<=",!1),qr=bo("<>",!1),Zr=bo("<",!1),zr=bo("!=",!1),Jr=bo("@>",!1),Qr=bo("<@",!1),rt=bo("?",!1),tt=bo("?|",!1),et=bo("?&",!1),nt=bo("#-",!1),ut=bo("+",!1),ot=bo("-",!1),st=bo("*",!1),at=bo("/",!1),it=bo("%",!1),ct=bo("$",!1),lt=function(r){return !0===Bi[r.toUpperCase()]},ft=bo('"',!1),vt=/^[^"]/,bt=Lo(['"'],!0,!1),dt=function(r){return r.join("")},Lt=/^[^']/,Ct=Lo(["'"],!0,!1),pt=bo("`",!1),wt=/^[^`]/,Et=Lo(["`"],!0,!1),ht=/^[A-Za-z_]/,At=Lo([["A","Z"],["a","z"],"_"],!1,!1),yt=/^[A-Za-z0-9_\-]/,Tt=Lo([["A","Z"],["a","z"],["0","9"],"_","-"],!1,!1),mt=/^[A-Za-z0-9_]/,St=Lo([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),It=bo(":",!1),Nt=bo("CENTURY",!0),Rt=bo("DAY",!0),_t=bo("DECADE",!0),gt=bo("DOW",!0),Ot=bo("DOY",!0),Ut=bo("EPOCH",!0),xt=bo("HOUR",!0),Mt=bo("ISODOW",!0),Dt=bo("ISOYEAR",!0),kt=bo("MICROSECONDS",!0),$t=bo("MILLENNIUM",!0),Ft=bo("MILLISECONDS",!0),Pt=bo("MINUTE",!0),Ht=bo("MONTH",!0),Gt=bo("QUARTER",!0),jt=bo("SECOND",!0),Yt=bo("TIMEZONE",!0),Bt=bo("TIMEZONE_HOUR",!0),Xt=bo("TIMEZONE_MINUTE",!0),Wt=bo("WEEK",!0),Vt=bo("YEAR",!0),Kt=bo("ON UPDATE CURRENT_TIMESTAMP",!0),qt=/^[^"\\\0-\x1F\x7F]/,Zt=Lo(['"',"\\",["\0",""],""],!0,!1),zt=/^[^'\\]/,Jt=Lo(["'","\\"],!0,!1),Qt=bo("\\'",!1),re=bo('\\"',!1),te=bo("\\\\",!1),ee=bo("\\/",!1),ne=bo("\\b",!1),ue=bo("\\f",!1),oe=bo("\\n",!1),se=bo("\\r",!1),ae=bo("\\t",!1),ie=bo("\\u",!1),ce=bo("\\",!1),le=/^[\n\r]/,fe=Lo(["\n","\r"],!1,!1),ve=bo(".",!1),be=/^[0-9]/,de=Lo([["0","9"]],!1,!1),Le=/^[0-9a-fA-F]/,Ce=Lo([["0","9"],["a","f"],["A","F"]],!1,!1),pe=/^[eE]/,we=Lo(["e","E"],!1,!1),Ee=/^[+\-]/,he=Lo(["+","-"],!1,!1),Ae=bo("NULL",!0),ye=bo("NOT NULL",!0),Te=bo("TRUE",!0),me=bo("TO",!0),Se=bo("FALSE",!0),Ie=(bo("DROP",!0)),Ne=bo("USE",!0),Re=bo("ALTER",!0),_e=bo("SELECT",!0),ge=bo("UPDATE",!0),Oe=bo("CREATE",!0),Ue=bo("TEMPORARY",!0),xe=bo("IF NOT EXISTS",!0),Me=bo("DELETE",!0),De=bo("INSERT",!0),ke=bo("RECURSIVE",!1),$e=bo("REPLACE",!0),Fe=bo("RETURNING",!0),Pe=bo("RENAME",!0),He=bo("IGNORE",!0),Ge=(bo("PARTITION",!0)),je=bo("INTO",!0),Ye=bo("FROM",!0),Be=bo("SET",!0),Xe=bo("AS",!0),We=bo("TABLE",!0),Ve=bo("TABLESPACE",!0),Ke=bo("LEFT",!0),qe=bo("RIGHT",!0),Ze=bo("FULL",!0),ze=bo("INNER",!0),Je=bo("JOIN",!0),Qe=bo("OUTER",!0),rn=bo("UNION",!0),tn=bo("VALUES",!0),en=bo("USING",!0),nn=bo("WHERE",!0),un=bo("GROUP",!0),on=bo("BY",!0),sn=bo("ORDER",!0),an=bo("HAVING",!0),cn=bo("LIMIT",!0),ln=bo("OFFSET",!0),fn=bo("ASC",!0),vn=bo("DESC",!0),bn=bo("ALL",!0),dn=bo("DISTINCT",!0),Ln=bo("BETWEEN",!0),Cn=bo("IS",!0),pn=bo("LIKE",!0),wn=bo("ILIKE",!0),En=bo("EXISTS",!0),hn=bo("AND",!0),An=bo("OR",!0),yn=bo("ARRAY_AGG",!0),Tn=bo("COUNT",!0),mn=bo("MAX",!0),Sn=bo("MIN",!0),In=bo("SUM",!0),Nn=bo("AVG",!0),Rn=bo("EXTRACT",!0),_n=bo("CALL",!0),gn=bo("CASE",!0),On=bo("WHEN",!0),Un=bo("THEN",!0),xn=bo("ELSE",!0),Mn=bo("END",!0),Dn=bo("CAST",!0),kn=bo("BOOL",!0),$n=bo("BOOLEAN",!0),Fn=bo("CHAR",!0),Pn=bo("VARCHAR",!0),Hn=bo("NUMERIC",!0),Gn=bo("DECIMAL",!0),jn=bo("SIGNED",!0),Yn=bo("UNSIGNED",!0),Bn=bo("INT",!0),Xn=bo("ZEROFILL",!0),Wn=bo("INTEGER",!0),Vn=bo("JSON",!0),Kn=bo("JSONB",!0),qn=bo("GEOMETRY",!0),Zn=bo("SMALLINT",!0),zn=bo("TINYINT",!0),Jn=bo("TINYTEXT",!0),Qn=bo("TEXT",!0),ru=bo("MEDIUMTEXT",!0),tu=bo("LONGTEXT",!0),eu=bo("BIGINT",!0),nu=bo("FLOAT",!0),uu=bo("DOUBLE",!0),ou=bo("DATE",!0),su=bo("DATETIME",!0),au=bo("TIME",!0),iu=bo("TIMESTAMP",!0),cu=bo("TRUNCATE",!0),lu=bo("USER",!0),fu=bo("UUID",!0),vu=bo("CURRENT_DATE",!0),bu=(bo("INTERVAL",!0)),du=bo("CURRENT_TIME",!0),Lu=bo("CURRENT_TIMESTAMP",!0),Cu=bo("CURRENT_USER",!0),pu=bo("SESSION_USER",!0),wu=bo("SYSTEM_USER",!0),Eu=bo("GLOBAL",!0),hu=bo("SESSION",!0),Au=bo("LOCAL",!0),yu=bo("PERSIST",!0),Tu=bo("PERSIST_ONLY",!0),mu=bo("@",!1),Su=bo("@@",!1),Iu=bo("return",!0),Nu=bo(":=",!1),Ru=bo("::",!1),_u=bo("DUAL",!0),gu=bo("ADD",!0),Ou=bo("COLUMN",!0),Uu=bo("INDEX",!0),xu=bo("FULLTEXT",!0),Mu=bo("SPATIAL",!0),Du=bo("COMMENT",!0),ku=bo("CONSTRAINT",!0),$u=bo("CONCURRENTLY",!0),Fu=bo("REFERENCES",!0),Pu=bo("SQL_CALC_FOUND_ROWS",!0),Hu=bo("SQL_CACHE",!0),Gu=bo("SQL_NO_CACHE",!0),ju=bo("SQL_SMALL_RESULT",!0),Yu=bo("SQL_BIG_RESULT",!0),Bu=bo("SQL_BUFFER_RESULT",!0),Xu=bo(",",!1),Wu=bo("[",!1),Vu=bo("]",!1),Ku=bo(";",!1),qu=bo("->",!1),Zu=bo("->>",!1),zu=bo("#>",!1),Ju=bo("#>>",!1),Qu=bo("||",!1),ro=bo("&&",!1),to=bo("/*",!1),eo=bo("*/",!1),no=bo("--",!1),uo=({type:"any"}),oo=/^[ \t\n\r]/,so=Lo([" ","\t","\n","\r"],!1,!1),ao=function(r){return {dataType:r}},io=0,co=[{line:1,column:1}],lo=0,fo=[],vo=0;if("startRule"in t){if(!(t.startRule in s))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=s[t.startRule];}function bo(r,t){return {type:"literal",text:r,ignoreCase:t}}function Lo(r,t,e){return {type:"class",parts:r,inverted:t,ignoreCase:e}}function Co(t){var e,n=co[t];if(n)return n;for(e=t-1;!co[e];)e--;for(n={line:(n=co[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return co[t]=n,n}function po(r,t){var e=Co(r),n=Co(t);return {start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function wo(r){io<lo||(io>lo&&(lo=io,fo=[]),fo.push(r));}function Eo(r,t,e){return new u(u.buildMessage(r,t),r,t,e)}function ho(){var r,t;return r=io,mi()!==o?((t=function(){var r,t,e,n,u,s,a,i;if(r=io,(t=yo())!==o){if(e=[],n=io,(u=mi())!==o&&(s=Ai())!==o&&(a=mi())!==o&&(i=yo())!==o?n=u=[u,s,a,i]:(io=n,n=o),n!==o)for(;n!==o;)e.push(n),n=io,(u=mi())!==o&&(s=Ai())!==o&&(a=mi())!==o&&(i=yo())!==o?n=u=[u,s,a,i]:(io=n,n=o);else e=o;e!==o?(t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return {tableList:Array.from(rc),columnList:zi(tc),ast:e}}(t,e),r=t):(io=r,r=o);}else io=r,r=o;return r}())===o&&(t=Ao())===o&&(t=yo()),t!==o?(r=t):(io=r,r=o)):(io=r,r=o),r}function Ao(){var t;return (t=function(){var r,t,e,n;r=io,(t=na())!==o&&mi()!==o&&(e=pa())!==o&&mi()!==o&&(n=Zo())!==o?(u=t,s=e,(a=n)&&a.forEach(r=>rc.add(`${u}::${r.db}::${r.table}`)),t={tableList:Array.from(rc),columnList:zi(tc),ast:{type:u.toLowerCase(),keyword:s.toLowerCase(),name:a}},r=t):(io=r,r=o);var u,s,a;return r}())===o&&(t=function(){var t;(t=function(){var t,e,n,u,s,a,i,c,l,f;t=io,(e=oa())!==o&&mi()!==o?((n=sa())===o&&(n=null),n!==o&&mi()!==o&&pa()!==o&&mi()!==o?((u=aa())===o&&(u=null),u!==o&&mi()!==o&&(s=Zo())!==o&&mi()!==o&&(a=function(){var r,t,e,n,u,s,a,i,c;if(r=io,(t=Ei())!==o)if(mi()!==o)if((e=So())!==o){for(n=[],u=io,(s=mi())!==o&&(a=pi())!==o&&(i=mi())!==o&&(c=So())!==o?u=s=[s,a,i,c]:(io=u,u=o);u!==o;)n.push(u),u=io,(s=mi())!==o&&(a=pi())!==o&&(i=mi())!==o&&(c=So())!==o?u=s=[s,a,i,c]:(io=u,u=o);n!==o&&(u=mi())!==o&&(s=hi())!==o?(t=Ki(e,n),r=t):(io=r,r=o);}else io=r,r=o;else io=r,r=o;else io=r,r=o;return r}())!==o&&mi()!==o?((i=function(){var r,t,e,n,u,s,a,i;if(r=io,(t=ko())!==o){for(e=[],n=io,(u=mi())!==o?((s=pi())===o&&(s=null),s!==o&&(a=mi())!==o&&(i=ko())!==o?n=u=[u,s,a,i]:(io=n,n=o)):(io=n,n=o);n!==o;)e.push(n),n=io,(u=mi())!==o?((s=pi())===o&&(s=null),s!==o&&(a=mi())!==o&&(i=ko())!==o?n=u=[u,s,a,i]:(io=n,n=o)):(io=n,n=o);e!==o?(t=Ki(t,e),r=t):(io=r,r=o);}else io=r,r=o;return r}())===o&&(i=null),i!==o&&mi()!==o?((c=function(){var t,e,n,u;t=io,"ignore"===r.substr(io,6).toLowerCase()?(e=r.substr(io,6),io+=6):(e=o,0===vo&&wo(He));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o);return t}())===o&&(c=la()),c===o&&(c=null),c!==o&&mi()!==o?((l=Ca())===o&&(l=null),l!==o&&mi()!==o?((f=To())===o&&(f=null),f!==o?(v=e,b=n,d=u,C=a,p=i,w=c,E=l,h=f,(L=s)&&L.forEach(r=>rc.add(`create::${r.db}::${r.table}`)),e={tableList:Array.from(rc),columnList:zi(tc),ast:{type:v[0].toLowerCase(),keyword:"table",temporary:b&&b[0].toLowerCase(),if_not_exists:d&&d[0].toLowerCase(),table:L,ignore_replace:w&&w[0].toLowerCase(),as:E&&E[0].toLowerCase(),query_expr:h&&h.ast,create_definitions:C,table_options:p}},t=e):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o);var v,b,d,L,C,p,w,E,h;t===o&&(t=io,(e=oa())!==o&&mi()!==o?((n=sa())===o&&(n=null),n!==o&&mi()!==o&&pa()!==o&&mi()!==o?((u=aa())===o&&(u=null),u!==o&&mi()!==o&&(s=Zo())!==o&&mi()!==o&&(a=function r(){var t,e;(t=function(){var r,t;r=io,Ua()!==o&&mi()!==o&&(t=Zo())!==o?(r={type:"like",table:t}):(io=r,r=o);return r}())===o&&(t=io,Ei()!==o&&mi()!==o&&(e=r())!==o&&mi()!==o&&hi()!==o?((n=e).parentheses=!0,t=n):(io=t,t=o));var n;return t}())!==o?(e=function(r,t,e,n,u){return n&&n.forEach(r=>rc.add(`create::${r.db}::${r.table}`)),{tableList:Array.from(rc),columnList:zi(tc),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t[0].toLowerCase(),if_not_exists:e&&e[0].toLowerCase(),table:n,like:u}}}(e,n,u,s,a),t=e):(io=t,t=o)):(io=t,t=o)):(io=t,t=o));return t}())===o&&(t=function(){var t,e,n,u,s,a,i,c,l,f,v,b,d,L,C,p,w,E;t=io,(e=oa())!==o&&mi()!==o?((n=Li())===o&&(n=null),n!==o&&mi()!==o?("trigger"===r.substr(io,7).toLowerCase()?(u=r.substr(io,7),io+=7):(u=o,0===vo&&wo(W)),u!==o&&mi()!==o&&(s=xs())!==o&&mi()!==o?("before"===r.substr(io,6).toLowerCase()?(a=r.substr(io,6),io+=6):(a=o,0===vo&&wo(V)),a===o&&("after"===r.substr(io,5).toLowerCase()?(a=r.substr(io,5),io+=5):(a=o,0===vo&&wo(K)),a===o&&("instead of"===r.substr(io,10).toLowerCase()?(a=r.substr(io,10),io+=10):(a=o,0===vo&&wo(q)))),a!==o&&mi()!==o&&(i=function(){var r,t,e,n,u,s,a,i;if(r=io,(t=Do())!==o){for(e=[],n=io,(u=mi())!==o&&(s=$a())!==o&&(a=mi())!==o&&(i=Do())!==o?n=u=[u,s,a,i]:(io=n,n=o);n!==o;)e.push(n),n=io,(u=mi())!==o&&(s=$a())!==o&&(a=mi())!==o&&(i=Do())!==o?n=u=[u,s,a,i]:(io=n,n=o);e!==o?(t=Ki(t,e),r=t):(io=r,r=o);}else io=r,r=o;return r}())!==o&&mi()!==o?("on"===r.substr(io,2).toLowerCase()?(c=r.substr(io,2),io+=2):(c=o,0===vo&&wo(Z)),c!==o&&mi()!==o&&(l=rs())!==o&&mi()!==o?(f=io,(v=da())!==o&&(b=mi())!==o&&(d=rs())!==o?f=v=[v,b,d]:(io=f,f=o),f===o&&(f=null),f!==o&&(v=mi())!==o?((b=function(){var t,e,n,u,s;t=io,e=io,"not"===r.substr(io,3).toLowerCase()?(n=r.substr(io,3),io+=3):(n=o,0===vo&&wo(rr));n===o&&(n=null);n!==o&&(u=mi())!==o?("deferrable"===r.substr(io,10).toLowerCase()?(s=r.substr(io,10),io+=10):(s=o,0===vo&&wo(tr)),s!==o?e=n=[n,u,s]:(io=e,e=o)):(io=e,e=o);e!==o&&(n=mi())!==o?("initially immediate"===r.substr(io,19).toLowerCase()?(u=r.substr(io,19),io+=19):(u=o,0===vo&&wo(er)),u===o&&("initially deferred"===r.substr(io,18).toLowerCase()?(u=r.substr(io,18),io+=18):(u=o,0===vo&&wo(nr))),u!==o?(i=u,e={keyword:(a=e)&&a[0]?a[0].toLowerCase()+" deferrable":"deferrable",args:i&&i.toLowerCase()},t=e):(io=t,t=o)):(io=t,t=o);var a,i;return t}())===o&&(b=null),b!==o&&(d=mi())!==o?((L=function(){var t,e,n,u;t=io,"for"===r.substr(io,3).toLowerCase()?(e=r.substr(io,3),io+=3):(e=o,0===vo&&wo(ur));e!==o&&mi()!==o?("each"===r.substr(io,4).toLowerCase()?(n=r.substr(io,4),io+=4):(n=o,0===vo&&wo(or)),n===o&&(n=null),n!==o&&mi()!==o?("row"===r.substr(io,3).toLowerCase()?(u=r.substr(io,3),io+=3):(u=o,0===vo&&wo(sr)),u===o&&("statement"===r.substr(io,9).toLowerCase()?(u=r.substr(io,9),io+=9):(u=o,0===vo&&wo(ar))),u!==o?(s=e,i=u,e={keyword:(a=n)?`${s.toLowerCase()} ${a.toLowerCase()}`:s.toLowerCase(),args:i.toLowerCase()},t=e):(io=t,t=o)):(io=t,t=o)):(io=t,t=o);var s,a,i;return t}())===o&&(L=null),L!==o&&mi()!==o?((C=function(){var r,t;r=io,Pa()!==o&&mi()!==o&&Ei()!==o&&mi()!==o&&(t=ws())!==o&&mi()!==o&&hi()!==o?(r={type:"when",cond:t,parentheses:!0}):(io=r,r=o);return r}())===o&&(C=null),C!==o&&mi()!==o?("execute"===r.substr(io,7).toLowerCase()?(p=r.substr(io,7),io+=7):(p=o,0===vo&&wo(z)),p!==o&&mi()!==o?("procedure"===r.substr(io,9).toLowerCase()?(w=r.substr(io,9),io+=9):(w=o,0===vo&&wo(J)),w!==o&&mi()!==o&&(E=Fi())!==o?(h=n,A=u,T=i,m=l,S=f,I=b,N=L,R=C,_=E,e={type:"create",constraint:s,location:(y=a)&&y.toLowerCase(),events:T,table:m,from:S&&S[2],deferrable:I,for_each:N,when:R,execute:{keyword:"execute procedure",expr:_},constraint_type:A&&A.toLowerCase(),keyword:A&&A.toLowerCase(),constraint_kw:h&&h.toLowerCase(),resource:"constraint"},t=e):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o);var h,A,y,T,m,S,I,N,R,_;return t}())===o&&(t=function(){var t,e,n,u,s,a,f,v,b,d,L,C,p,w;t=io,(e=oa())!==o&&mi()!==o?("extension"===r.substr(io,9).toLowerCase()?(n=r.substr(io,9),io+=9):(n=o,0===vo&&wo(i)),n!==o&&mi()!==o?((u=aa())===o&&(u=null),u!==o&&mi()!==o?((s=xs())===o&&(s=Bs()),s!==o&&mi()!==o?((a=Ta())===o&&(a=null),a!==o&&mi()!==o?(f=io,"schema"===r.substr(io,6).toLowerCase()?(v=r.substr(io,6),io+=6):(v=o,0===vo&&wo(c)),v!==o&&(b=mi())!==o&&(d=xs())!==o?f=v=[v,b,d]:(io=f,f=o),f===o&&(f=Bs()),f===o&&(f=null),f!==o&&(v=mi())!==o?(b=io,"version"===r.substr(io,7).toLowerCase()?(d=r.substr(io,7),io+=7):(d=o,0===vo&&wo(l)),d!==o&&(L=mi())!==o?((C=xs())===o&&(C=Bs()),C!==o?b=d=[d,L,C]:(io=b,b=o)):(io=b,b=o),b===o&&(b=null),b!==o&&(d=mi())!==o?(L=io,(C=da())!==o&&(p=mi())!==o?((w=xs())===o&&(w=Bs()),w!==o?L=C=[C,p,w]:(io=L,L=o)):(io=L,L=o),L===o&&(L=null),L!==o?(e=function(r,t,e,n,u,o,s,a){return {type:"create",keyword:t.toLowerCase(),if_not_exists:e&&e[0].toLowerCase(),extension:Ji(n),with:u&&u[0].toLowerCase(),schema:Ji(o&&o[2].toLowerCase()),version:Ji(s&&s[2]),from:Ji(a&&a[2])}}(0,n,u,s,a,f,b,L),t=e):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o);return t}())===o&&(t=function(){var t,e,n,u,s,a,i,c,l,f,v,b,d,L,C,p,w,E;t=io,(e=oa())!==o&&mi()!==o?((n=bi())===o&&(n=null),n!==o&&mi()!==o&&(u=fi())!==o&&mi()!==o?((s=function(){var t,e,n,u;t=io,"concurrently"===r.substr(io,12).toLowerCase()?(e=r.substr(io,12),io+=12):(e=o,0===vo&&wo($u));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="CONCURRENTLY"):(io=t,t=o)):(io=t,t=o);return t}())===o&&(s=null),s!==o&&mi()!==o?((a=gs())===o&&(a=null),a!==o&&mi()!==o&&(i=wa())!==o&&mi()!==o&&(c=rs())!==o&&mi()!==o?((l=Vo())===o&&(l=null),l!==o&&mi()!==o&&Ei()!==o&&mi()!==o&&(f=function(){var r,t,e,n,u,s,a,i;if(r=io,(t=mo())!==o){for(e=[],n=io,(u=mi())!==o&&(s=pi())!==o&&(a=mi())!==o&&(i=mo())!==o?n=u=[u,s,a,i]:(io=n,n=o);n!==o;)e.push(n),n=io,(u=mi())!==o&&(s=pi())!==o&&(a=mi())!==o&&(i=mo())!==o?n=u=[u,s,a,i]:(io=n,n=o);e!==o?(t=Ki(t,e),r=t):(io=r,r=o);}else io=r,r=o;return r}())!==o&&mi()!==o&&hi()!==o&&mi()!==o?(v=io,(b=Ta())!==o&&(d=mi())!==o&&(L=Ei())!==o&&(C=mi())!==o&&(p=function(){var r,t,e,n,u,s,a,i;if(r=io,(t=qo())!==o){for(e=[],n=io,(u=mi())!==o&&(s=pi())!==o&&(a=mi())!==o&&(i=qo())!==o?n=u=[u,s,a,i]:(io=n,n=o);n!==o;)e.push(n),n=io,(u=mi())!==o&&(s=pi())!==o&&(a=mi())!==o&&(i=qo())!==o?n=u=[u,s,a,i]:(io=n,n=o);e!==o?(t=Ki(t,e),r=t):(io=r,r=o);}else io=r,r=o;return r}())!==o&&(w=mi())!==o&&(E=hi())!==o?v=b=[b,d,L,C,p,w,E]:(io=v,v=o),v===o&&(v=null),v!==o&&(b=mi())!==o?(d=io,(L=function(){var t,e,n,u;t=io,"tablespace"===r.substr(io,10).toLowerCase()?(e=r.substr(io,10),io+=10):(e=o,0===vo&&wo(Ve));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="TABLESPACE"):(io=t,t=o)):(io=t,t=o);return t}())!==o&&(C=mi())!==o&&(p=xs())!==o?d=L=[L,C,p]:(io=d,d=o),d===o&&(d=null),d!==o&&(L=mi())!==o?((C=es())===o&&(C=null),C!==o&&(p=mi())!==o?(h=e,A=n,y=u,T=s,m=a,S=i,I=c,N=l,R=f,_=v,g=d,O=C,e={tableList:Array.from(rc),columnList:zi(tc),ast:{type:h[0].toLowerCase(),index_type:A&&A.toLowerCase(),keyword:y.toLowerCase(),concurrently:T&&T.toLowerCase(),index:m,on_kw:S[0].toLowerCase(),table:I,index_using:N,index_columns:R,with:_&&_[4],with_before_where:!0,tablespace:g&&{type:"origin",value:g[2]},where:O}},t=e):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o);var h,A,y,T,m,S,I,N,R,_,g,O;return t}());return t}())===o&&(t=function(){var r,t,e,n;r=io,(t=ni())!==o&&mi()!==o?((e=pa())===o&&(e=null),e!==o&&mi()!==o&&(n=Zo())!==o?(u=t,s=e,(a=n)&&a.forEach(r=>rc.add(`${u}::${r.db}::${r.table}`)),t={tableList:Array.from(rc),columnList:zi(tc),ast:{type:u.toLowerCase(),keyword:s&&s.toLowerCase()||"table",name:a}},r=t):(io=r,r=o)):(io=r,r=o);var u,s,a;return r}())===o&&(t=function(){var r,t,e;r=io,(t=fa())!==o&&mi()!==o&&pa()!==o&&mi()!==o&&(e=function(){var r,t,e,n,u,s,a,i;if(r=io,(t=Wo())!==o){for(e=[],n=io,(u=mi())!==o&&(s=pi())!==o&&(a=mi())!==o&&(i=Wo())!==o?n=u=[u,s,a,i]:(io=n,n=o);n!==o;)e.push(n),n=io,(u=mi())!==o&&(s=pi())!==o&&(a=mi())!==o&&(i=Wo())!==o?n=u=[u,s,a,i]:(io=n,n=o);e!==o?(t=Ki(t,e),r=t):(io=r,r=o);}else io=r,r=o;return r}())!==o?((n=e).forEach(r=>r.forEach(r=>r.table&&rc.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(rc),columnList:zi(tc),ast:{type:"rename",table:n}},r=t):(io=r,r=o);var n;return r}())===o&&(t=function(){var t,e,n;t=io,(e=function(){var t,e,n,u;t=io,"call"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(_n));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="CALL"):(io=t,t=o)):(io=t,t=o);return t}())!==o&&mi()!==o&&(n=Fi())!==o?(u=n,e={tableList:Array.from(rc),columnList:zi(tc),ast:{type:"call",expr:u}},t=e):(io=t,t=o);var u;return t}())===o&&(t=function(){var t,e,n;t=io,(e=function(){var t,e,n,u;t=io,"use"===r.substr(io,3).toLowerCase()?(e=r.substr(io,3),io+=3):(e=o,0===vo&&wo(Ne));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o);return t}())!==o&&mi()!==o&&(n=gs())!==o?(u=n,rc.add(`use::${u}::null`),e={tableList:Array.from(rc),columnList:zi(tc),ast:{type:"use",db:u}},t=e):(io=t,t=o);var u;return t}())===o&&(t=function(){var t,e,n,u;t=io,(e=function(){var t,e,n,u;t=io,"alter"===r.substr(io,5).toLowerCase()?(e=r.substr(io,5),io+=5):(e=o,0===vo&&wo(Re));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o);return t}())!==o&&mi()!==o&&pa()!==o&&mi()!==o&&(n=Zo())!==o&&mi()!==o&&(u=function(){var r,t,e,n,u,s,a,i;if(r=io,(t=_o())!==o){for(e=[],n=io,(u=mi())!==o&&(s=pi())!==o&&(a=mi())!==o&&(i=_o())!==o?n=u=[u,s,a,i]:(io=n,n=o);n!==o;)e.push(n),n=io,(u=mi())!==o&&(s=pi())!==o&&(a=mi())!==o&&(i=_o())!==o?n=u=[u,s,a,i]:(io=n,n=o);e!==o?(t=Ki(t,e),r=t):(io=r,r=o);}else io=r,r=o;return r}())!==o?(a=u,(s=n)&&s.length>0&&s.forEach(r=>rc.add(`alter::${r.db}::${r.table}`)),e={tableList:Array.from(rc),columnList:zi(tc),ast:{type:"alter",table:s,expr:a}},t=e):(io=t,t=o);var s,a;return t}())===o&&(t=function(){var t,e,n,u;t=io,(e=La())!==o&&mi()!==o?((n=function(){var t,e,n,u;t=io,"global"===r.substr(io,6).toLowerCase()?(e=r.substr(io,6),io+=6):(e=o,0===vo&&wo(Eu));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="GLOBAL"):(io=t,t=o)):(io=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=io,"session"===r.substr(io,7).toLowerCase()?(e=r.substr(io,7),io+=7):(e=o,0===vo&&wo(hu));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="SESSION"):(io=t,t=o)):(io=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=io,"local"===r.substr(io,5).toLowerCase()?(e=r.substr(io,5),io+=5):(e=o,0===vo&&wo(Au));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="LOCAL"):(io=t,t=o)):(io=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=io,"persist"===r.substr(io,7).toLowerCase()?(e=r.substr(io,7),io+=7):(e=o,0===vo&&wo(yu));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="PERSIST"):(io=t,t=o)):(io=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=io,"persist_only"===r.substr(io,12).toLowerCase()?(e=r.substr(io,12),io+=12):(e=o,0===vo&&wo(Tu));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="PERSIST_ONLY"):(io=t,t=o)):(io=t,t=o);return t}()),n===o&&(n=null),n!==o&&mi()!==o&&(u=Ui())!==o?(s=n,(a=u).keyword=s,e={tableList:Array.from(rc),columnList:zi(tc),ast:{type:"set",expr:a}},t=e):(io=t,t=o)):(io=t,t=o);var s,a;return t}())===o&&(t=function(){var t,e,n,u,s,a;t=io,(e=function(){var t,e,n,u;t=io,"lock"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(g));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o);return t}())!==o&&mi()!==o?((n=pa())===o&&(n=null),n!==o&&mi()!==o&&(u=Zo())!==o&&mi()!==o?((s=function(){var t,e,n,u;t=io,"in"===r.substr(io,2).toLowerCase()?(e=r.substr(io,2),io+=2):(e=o,0===vo&&wo(yr));e!==o&&mi()!==o?("access share"===r.substr(io,12).toLowerCase()?(n=r.substr(io,12),io+=12):(n=o,0===vo&&wo(Tr)),n===o&&("row share"===r.substr(io,9).toLowerCase()?(n=r.substr(io,9),io+=9):(n=o,0===vo&&wo(mr)),n===o&&("row exclusive"===r.substr(io,13).toLowerCase()?(n=r.substr(io,13),io+=13):(n=o,0===vo&&wo(Sr)),n===o&&("share update exclusive"===r.substr(io,22).toLowerCase()?(n=r.substr(io,22),io+=22):(n=o,0===vo&&wo(Ir)),n===o&&("share row exclusive"===r.substr(io,19).toLowerCase()?(n=r.substr(io,19),io+=19):(n=o,0===vo&&wo(Nr)),n===o&&("exclusive"===r.substr(io,9).toLowerCase()?(n=r.substr(io,9),io+=9):(n=o,0===vo&&wo(x)),n===o&&("access exclusive"===r.substr(io,16).toLowerCase()?(n=r.substr(io,16),io+=16):(n=o,0===vo&&wo(Rr)),n===o&&("share"===r.substr(io,5).toLowerCase()?(n=r.substr(io,5),io+=5):(n=o,0===vo&&wo(_r))))))))),n!==o&&mi()!==o?("mode"===r.substr(io,4).toLowerCase()?(u=r.substr(io,4),io+=4):(u=o,0===vo&&wo(gr)),u!==o?(e={mode:`in ${n.toLowerCase()} mode`},t=e):(io=t,t=o)):(io=t,t=o)):(io=t,t=o);return t}())===o&&(s=null),s!==o&&mi()!==o?("nowait"===r.substr(io,6).toLowerCase()?(a=r.substr(io,6),io+=6):(a=o,0===vo&&wo(Or)),a===o&&(a=null),a!==o?(i=n,l=s,f=a,(c=u)&&c.forEach(r=>rc.add(`lock::${r.db}::${r.table}`)),e={tableList:Array.from(rc),columnList:zi(tc),ast:{type:"lock",keyword:i&&i.toLowerCase(),tables:c.map(r=>({table:r})),lock_mode:l,nowait:f}},t=e):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o);var i,c,l,f;return t}()),t}function yo(){var r;return (r=To())===o&&(r=function(){var r,t,e,n,u,s;r=io,(t=ua())!==o&&mi()!==o&&(e=Zo())!==o&&mi()!==o&&La()!==o&&mi()!==o&&(n=function(){var r,t,e,n,u,s,a,i;if(r=io,(t=is())!==o){for(e=[],n=io,(u=mi())!==o&&(s=pi())!==o&&(a=mi())!==o&&(i=is())!==o?n=u=[u,s,a,i]:(io=n,n=o);n!==o;)e.push(n),n=io,(u=mi())!==o&&(s=pi())!==o&&(a=mi())!==o&&(i=is())!==o?n=u=[u,s,a,i]:(io=n,n=o);e!==o?(t=Ki(t,e),r=t):(io=r,r=o);}else io=r,r=o;return r}())!==o&&mi()!==o?((u=es())===o&&(u=null),u!==o&&mi()!==o?((s=cs())===o&&(s=null),s!==o?(i=n,c=u,l=s,(a=e)&&a.forEach(r=>{const{db:t,as:e,table:n}=r;rc.add(`update::${t}::${n}`);}),i&&i.forEach(r=>tc.add(`update::${r.table}::${r.column}`)),t={tableList:Array.from(rc),columnList:zi(tc),ast:{type:"update",table:a,set:i,where:c,returning:l}},r=t):(io=r,r=o)):(io=r,r=o)):(io=r,r=o);var a,i,c,l;return r}())===o&&(r=function(){var r,t,e,n,u,s,a,i;r=io,(t=vs())!==o&&mi()!==o?((e=ba())===o&&(e=null),e!==o&&mi()!==o&&(n=rs())!==o&&mi()!==o?((u=fs())===o&&(u=null),u!==o&&mi()!==o&&Ei()!==o&&mi()!==o&&(s=function(){var r,t,e,n,u,s,a,i;if(r=io,(t=Us())!==o){for(e=[],n=io,(u=mi())!==o&&(s=pi())!==o&&(a=mi())!==o&&(i=Us())!==o?n=u=[u,s,a,i]:(io=n,n=o);n!==o;)e.push(n),n=io,(u=mi())!==o&&(s=pi())!==o&&(a=mi())!==o&&(i=Us())!==o?n=u=[u,s,a,i]:(io=n,n=o);e!==o?(t=Mr(t,e),r=t):(io=r,r=o);}else io=r,r=o;return r}())!==o&&mi()!==o&&hi()!==o&&mi()!==o&&(a=ls())!==o&&mi()!==o?((i=cs())===o&&(i=null),i!==o?(t=function(r,t,e,n,u,o){if(t&&(rc.add(`insert::${t.db}::${t.table}`),t.as=null),n){let r=t&&t.table||null;n.forEach(t=>tc.add(`insert::${r}::${t}`));}return {tableList:Array.from(rc),columnList:zi(tc),ast:{type:r,table:[t],columns:n,values:u,partition:e,returning:o}}}(t,n,u,s,a,i),r=t):(io=r,r=o)):(io=r,r=o)):(io=r,r=o)):(io=r,r=o);return r}())===o&&(r=function(){var r,t,e,n,u,s;r=io,(t=vs())!==o&&mi()!==o&&ba()!==o&&mi()!==o&&(e=rs())!==o&&mi()!==o?((n=fs())===o&&(n=null),n!==o&&mi()!==o&&(u=ls())!==o&&mi()!==o?((s=cs())===o&&(s=null),s!==o?(a=t,c=n,l=u,f=s,(i=e)&&(rc.add(`insert::${i.db}::${i.table}`),tc.add(`insert::${i.table}::(.*)`),i.as=null),t={tableList:Array.from(rc),columnList:zi(tc),ast:{type:a,table:[i],columns:null,values:l,partition:c,returning:f}},r=t):(io=r,r=o)):(io=r,r=o)):(io=r,r=o);var a,i,c,l,f;return r}())===o&&(r=function(){var r,t,e,n,u;r=io,(t=ia())!==o&&mi()!==o?((e=Zo())===o&&(e=null),e!==o&&mi()!==o&&(n=Xo())!==o&&mi()!==o?((u=es())===o&&(u=null),u!==o?(t=function(r,t,e){if(t&&t.forEach(r=>{r.table&&rc.add(`delete::${r.db}::${r.table}`),tc.add(`delete::${r.table}::(.*)`);}),null===r&&1===t.length){const e=t[0];r=[{db:e.db,table:e.table,as:e.as,addition:!0}];}return {tableList:Array.from(rc),columnList:zi(tc),ast:{type:"delete",table:r,from:t,where:e}}}(e,n,u),r=t):(io=r,r=o)):(io=r,r=o)):(io=r,r=o);return r}())===o&&(r=Ao())===o&&(r=function(){var r,t;r=[],t=Oi();for(;t!==o;)r.push(t),t=Oi();return r}()),r}function To(){var r,t,e,n,u,s,a,i,c,l;if(r=io,(t=$o())!==o){for(e=[],n=io,(u=mi())!==o&&(s=Aa())!==o&&(a=mi())!==o?((i=Na())===o&&(i=null),i!==o&&(c=mi())!==o&&(l=$o())!==o?n=u=[u,s,a,i,c,l]:(io=n,n=o)):(io=n,n=o);n!==o;)e.push(n),n=io,(u=mi())!==o&&(s=Aa())!==o&&(a=mi())!==o?((i=Na())===o&&(i=null),i!==o&&(c=mi())!==o&&(l=$o())!==o?n=u=[u,s,a,i,c,l]:(io=n,n=o)):(io=n,n=o);e!==o&&(n=mi())!==o?((u=us())===o&&(u=null),u!==o&&(s=mi())!==o?((a=as())===o&&(a=null),a!==o?(r=t=function(r,t,e,n){let u=r;for(let r=0;r<t.length;r++)u._next=t[r][5],u.union=t[r][3]?"union all":"union",u=u._next;return e&&(r._orderby=e),n&&(r._limit=n),{tableList:Array.from(rc),columnList:zi(tc),ast:r}}(t,e,u,a)):(io=r,r=o)):(io=r,r=o)):(io=r,r=o);}else io=r,r=o;return r}function mo(){var t,e,n,u,s,a,i,c,l,f,L;return t=io,(e=ws())!==o&&mi()!==o?((n=No())===o&&(n=null),n!==o&&mi()!==o?((u=gs())===o&&(u=null),u!==o&&mi()!==o?((s=Sa())===o&&(s=Ia()),s===o&&(s=null),s!==o&&mi()!==o?(a=io,"nulls"===r.substr(io,5).toLowerCase()?(i=r.substr(io,5),io+=5):(i=o,0===vo&&wo(v)),i!==o&&(c=mi())!==o?("first"===r.substr(io,5).toLowerCase()?(l=r.substr(io,5),io+=5):(l=o,0===vo&&wo(b)),l===o&&("last"===r.substr(io,4).toLowerCase()?(l=r.substr(io,4),io+=4):(l=o,0===vo&&wo(d))),l!==o?a=i=[i,c,l]:(io=a,a=o)):(io=a,a=o),a===o&&(a=null),a!==o?(L=a,t=e={column:e,collate:n,opclass:u,order:(f=s)&&f.toLowerCase()||"asc",nulls:L&&`${L[0].toLowerCase()} ${L[2].toLowerCase()}`}):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o),t}function So(){var t;return (t=Io())===o&&(t=go())===o&&(t=Oo())===o&&(t=function(){var t;(t=function(){var t,e,n,u,s,a;t=io,(e=Uo())===o&&(e=null);e!==o&&mi()!==o?("primary key"===r.substr(io,11).toLowerCase()?(n=r.substr(io,11),io+=11):(n=o,0===vo&&wo(M)),n!==o&&mi()!==o?((u=Vo())===o&&(u=null),u!==o&&mi()!==o&&(s=Ho())!==o&&mi()!==o?((a=Ko())===o&&(a=null),a!==o?(c=n,l=u,f=s,v=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c.toLowerCase(),keyword:i&&i.keyword,index_type:l,resource:"constraint",index_options:v},t=e):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o);var i,c,l,f,v;return t}())===o&&(t=function(){var r,t,e,n,u,s,a,i;r=io,(t=Uo())===o&&(t=null);t!==o&&mi()!==o&&(e=bi())!==o&&mi()!==o?((n=fi())===o&&(n=vi()),n===o&&(n=null),n!==o&&mi()!==o?((u=Us())===o&&(u=null),u!==o&&mi()!==o?((s=Vo())===o&&(s=null),s!==o&&mi()!==o&&(a=Ho())!==o&&mi()!==o?((i=Ko())===o&&(i=null),i!==o?(l=e,f=n,v=u,b=s,d=a,L=i,t={constraint:(c=t)&&c.constraint,definition:d,constraint_type:f&&`${l.toLowerCase()} ${f.toLowerCase()}`||l.toLowerCase(),keyword:c&&c.keyword,index_type:b,index:v,resource:"constraint",index_options:L},r=t):(io=r,r=o)):(io=r,r=o)):(io=r,r=o)):(io=r,r=o)):(io=r,r=o);var c,l,f,v,b,d,L;return r}())===o&&(t=function(){var t,e,n,u,s,a;t=io,(e=Uo())===o&&(e=null);e!==o&&mi()!==o?("foreign key"===r.substr(io,11).toLowerCase()?(n=r.substr(io,11),io+=11):(n=o,0===vo&&wo(D)),n!==o&&mi()!==o?((u=Us())===o&&(u=null),u!==o&&mi()!==o&&(s=Ho())!==o&&mi()!==o?((a=xo())===o&&(a=null),a!==o?(c=n,l=u,f=s,v=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c,keyword:i&&i.keyword,index:l,resource:"constraint",reference_definition:v},t=e):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o);var i,c,l,f,v;return t}());return t}()),t}function Io(){var t,e,n,u,s,a,i,c,l,f,v,b,d,I,N,R,_,g,O,U,x,M,D;return t=io,(e=_s())!==o&&mi()!==o&&(n=ji())!==o&&mi()!==o?((u=function(){var r,t,e;r=io,(t=Ys())===o&&(t=js());t!==o&&mi()!==o?((e=Ro())===o&&(e=null),e!==o?(u=e,(n=t)&&!n.value&&(n.value="null"),r=t={default_val:u,nullable:n}):(io=r,r=o)):(io=r,r=o);var n,u;r===o&&(r=io,(t=Ro())!==o&&mi()!==o?((e=Ys())===o&&(e=js()),e===o&&(e=null),e!==o?(t=function(r,t){return t&&!t.value&&(t.value="null"),{default_val:r,nullable:t}}(t,e),r=t):(io=r,r=o)):(io=r,r=o));return r}())===o&&(u=null),u!==o&&mi()!==o?("auto_increment"===r.substr(io,14).toLowerCase()?(s=r.substr(io,14),io+=14):(s=o,0===vo&&wo(L)),s===o&&(s=null),s!==o&&mi()!==o?("unique"===r.substr(io,6).toLowerCase()?(a=r.substr(io,6),io+=6):(a=o,0===vo&&wo(C)),a===o&&(a=io,"primary"===r.substr(io,7).toLowerCase()?(i=r.substr(io,7),io+=7):(i=o,0===vo&&wo(p)),i!==o&&(c=mi())!==o?("key"===r.substr(io,3).toLowerCase()?(l=r.substr(io,3),io+=3):(l=o,0===vo&&wo(w)),l!==o?a=i=[i,c,l]:(io=a,a=o)):(io=a,a=o)),a===o&&(a=null),a!==o&&(i=mi())!==o?((c=Ni())===o&&(c=null),c!==o&&(l=mi())!==o?((f=No())===o&&(f=null),f!==o&&mi()!==o?((v=function(){var t,e,n;t=io,"column_format"===r.substr(io,13).toLowerCase()?(e=r.substr(io,13),io+=13):(e=o,0===vo&&wo(E));e!==o&&mi()!==o?("fixed"===r.substr(io,5).toLowerCase()?(n=r.substr(io,5),io+=5):(n=o,0===vo&&wo(h)),n===o&&("dynamic"===r.substr(io,7).toLowerCase()?(n=r.substr(io,7),io+=7):(n=o,0===vo&&wo(A)),n===o&&("default"===r.substr(io,7).toLowerCase()?(n=r.substr(io,7),io+=7):(n=o,0===vo&&wo(y)))),n!==o?(e=function(r,t){return {type:"column_format",value:t.toLowerCase()}}(0,n),t=e):(io=t,t=o)):(io=t,t=o);return t}())===o&&(v=null),v!==o&&mi()!==o?((b=function(){var t,e,n;t=io,"storage"===r.substr(io,7).toLowerCase()?(e=r.substr(io,7),io+=7):(e=o,0===vo&&wo(T));e!==o&&mi()!==o?("disk"===r.substr(io,4).toLowerCase()?(n=r.substr(io,4),io+=4):(n=o,0===vo&&wo(m)),n===o&&("memory"===r.substr(io,6).toLowerCase()?(n=r.substr(io,6),io+=6):(n=o,0===vo&&wo(S))),n!==o?(e={type:"storage",value:n.toLowerCase()},t=e):(io=t,t=o)):(io=t,t=o);return t}())===o&&(b=null),b!==o&&mi()!==o?((d=xo())===o&&(d=null),d!==o?(I=e,N=n,R=u,_=s,g=a,O=c,U=f,x=v,M=b,D=d,tc.add(`create::${I.table}::${I.column}`),t=e={column:I,definition:N,nullable:R&&R.nullable,default_val:R&&R.default_val,auto_increment:_&&_.toLowerCase(),unique_or_primary:Array.isArray(g)?`${g[0].toLowerCase()} ${g[2].toLowerCase()}`:g,comment:O,collate:U,column_format:x,storage:M,reference_definition:D,resource:"column"}):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o),t}function No(){var t,e;return t=io,function(){var t,e,n,u;t=io,"collate"===r.substr(io,7).toLowerCase()?(e=r.substr(io,7),io+=7):(e=o,0===vo&&wo(Lr));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="COLLATE"):(io=t,t=o)):(io=t,t=o);return t}()!==o&&mi()!==o&&(e=gs())!==o?(t={type:"collate",value:e}):(io=t,t=o),t}function Ro(){var r,t;return r=io,ta()!==o&&mi()!==o?((t=Gs())===o&&(t=ws()),t!==o?(r={type:"default",value:t}):(io=r,r=o)):(io=r,r=o),r}function _o(){var t;return (t=function(){var r,t,e,n;r=io,(t=ci())!==o&&mi()!==o?((e=li())===o&&(e=null),e!==o&&mi()!==o&&(n=Io())!==o?(u=e,s=n,t={action:"add",...s,keyword:u,resource:"column",type:"alter"},r=t):(io=r,r=o)):(io=r,r=o);var u,s;return r}())===o&&(t=function(){var r,t,e;r=io,na()!==o&&mi()!==o?((t=li())===o&&(t=null),t!==o&&mi()!==o&&(e=_s())!==o?(r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(io=r,r=o)):(io=r,r=o);return r}())===o&&(t=function(){var r,t,e;r=io,(t=ci())!==o&&mi()!==o&&(e=go())!==o?(n=e,t={action:"add",type:"alter",...n},r=t):(io=r,r=o);var n;return r}())===o&&(t=function(){var r,t,e;r=io,(t=ci())!==o&&mi()!==o&&(e=Oo())!==o?(n=e,t={action:"add",type:"alter",...n},r=t):(io=r,r=o);var n;return r}())===o&&(t=function(){var r,t,e,n;r=io,(t=fa())!==o&&mi()!==o?((e=ea())===o&&(e=Ca()),e===o&&(e=null),e!==o&&mi()!==o&&(n=gs())!==o?(s=n,t={action:"rename",type:"alter",resource:"table",keyword:(u=e)&&u[0].toLowerCase(),table:s},r=t):(io=r,r=o)):(io=r,r=o);var u,s;return r}())===o&&(t=function(){var t,e,n;t=io,"algorithm"===r.substr(io,9).toLowerCase()?(e=r.substr(io,9),io+=9):(e=o,0===vo&&wo(I));e!==o&&mi()!==o&&ii()!==o&&mi()!==o?("default"===r.substr(io,7).toLowerCase()?(n=r.substr(io,7),io+=7):(n=o,0===vo&&wo(y)),n===o&&("instant"===r.substr(io,7).toLowerCase()?(n=r.substr(io,7),io+=7):(n=o,0===vo&&wo(N)),n===o&&("inplace"===r.substr(io,7).toLowerCase()?(n=r.substr(io,7),io+=7):(n=o,0===vo&&wo(R)),n===o&&("copy"===r.substr(io,4).toLowerCase()?(n=r.substr(io,4),io+=4):(n=o,0===vo&&wo(_))))),n!==o?(t=e={type:"alter",keyword:"algorithm",resource:"algorithm",algorithm:n}):(io=t,t=o)):(io=t,t=o);return t}())===o&&(t=function(){var t,e,n;t=io,"lock"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(g));e!==o&&mi()!==o&&ii()!==o&&mi()!==o?("default"===r.substr(io,7).toLowerCase()?(n=r.substr(io,7),io+=7):(n=o,0===vo&&wo(y)),n===o&&("none"===r.substr(io,4).toLowerCase()?(n=r.substr(io,4),io+=4):(n=o,0===vo&&wo(O)),n===o&&("shared"===r.substr(io,6).toLowerCase()?(n=r.substr(io,6),io+=6):(n=o,0===vo&&wo(U)),n===o&&("exclusive"===r.substr(io,9).toLowerCase()?(n=r.substr(io,9),io+=9):(n=o,0===vo&&wo(x))))),n!==o?(t=e={type:"alter",keyword:"lock",resource:"lock",lock:n}):(io=t,t=o)):(io=t,t=o);return t}()),t}function go(){var r,t,e,n,u,s,a,i;return r=io,(t=fi())===o&&(t=vi()),t!==o&&mi()!==o?((e=Us())===o&&(e=null),e!==o&&mi()!==o?((n=Vo())===o&&(n=null),n!==o&&mi()!==o&&(u=Ho())!==o&&mi()!==o?((s=Ko())===o&&(s=null),s!==o&&mi()!==o?(a=n,i=s,r=t={index:e,definition:u,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i}):(io=r,r=o)):(io=r,r=o)):(io=r,r=o)):(io=r,r=o),r}function Oo(){var t,e,n,u,s,a,i,c,l;return t=io,(e=function(){var t,e,n,u;t=io,"fulltext"===r.substr(io,8).toLowerCase()?(e=r.substr(io,8),io+=8):(e=o,0===vo&&wo(xu));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="FULLTEXT"):(io=t,t=o)):(io=t,t=o);return t}())===o&&(e=function(){var t,e,n,u;t=io,"spatial"===r.substr(io,7).toLowerCase()?(e=r.substr(io,7),io+=7):(e=o,0===vo&&wo(Mu));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="SPATIAL"):(io=t,t=o)):(io=t,t=o);return t}()),e!==o&&mi()!==o?((n=fi())===o&&(n=vi()),n===o&&(n=null),n!==o&&mi()!==o?((u=Us())===o&&(u=null),u!==o&&mi()!==o&&(s=Ho())!==o&&mi()!==o?((a=Ko())===o&&(a=null),a!==o&&mi()!==o?(i=e,l=a,t=e={index:u,definition:s,keyword:(c=n)&&`${i.toLowerCase()} ${c.toLowerCase()}`||i.toLowerCase(),index_options:l,resource:"index"}):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o),t}function Uo(){var r,t,e,n;return r=io,(t=Li())!==o&&mi()!==o?((e=gs())===o&&(e=null),e!==o?(n=e,r=t={keyword:t.toLowerCase(),constraint:n}):(io=r,r=o)):(io=r,r=o),r}function xo(){var t,e,n,u,s,a,i,c,l,f;return t=io,(e=function(){var t,e,n,u;t=io,"references"===r.substr(io,10).toLowerCase()?(e=r.substr(io,10),io+=10):(e=o,0===vo&&wo(Fu));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="REFERENCES"):(io=t,t=o)):(io=t,t=o);return t}())!==o&&mi()!==o&&(n=Zo())!==o&&mi()!==o&&(u=Ho())!==o&&mi()!==o?("match full"===r.substr(io,10).toLowerCase()?(s=r.substr(io,10),io+=10):(s=o,0===vo&&wo(k)),s===o&&("match partial"===r.substr(io,13).toLowerCase()?(s=r.substr(io,13),io+=13):(s=o,0===vo&&wo($)),s===o&&("match simple"===r.substr(io,12).toLowerCase()?(s=r.substr(io,12),io+=12):(s=o,0===vo&&wo(F)))),s===o&&(s=null),s!==o&&mi()!==o?((a=Mo())===o&&(a=null),a!==o&&mi()!==o?((i=Mo())===o&&(i=null),i!==o?(c=s,l=a,f=i,t=e={definition:u,table:n,keyword:e.toLowerCase(),match:c&&c.toLowerCase(),on_delete:l,on_update:f}):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o),t}function Mo(){var t,e,n,u;return t=io,"on delete"===r.substr(io,9).toLowerCase()?(e=r.substr(io,9),io+=9):(e=o,0===vo&&wo(P)),e===o&&("on update"===r.substr(io,9).toLowerCase()?(e=r.substr(io,9),io+=9):(e=o,0===vo&&wo(H))),e!==o&&mi()!==o&&(n=function(){var t,e;t=io,"restrict"===r.substr(io,8).toLowerCase()?(e=r.substr(io,8),io+=8):(e=o,0===vo&&wo(G));e===o&&("cascade"===r.substr(io,7).toLowerCase()?(e=r.substr(io,7),io+=7):(e=o,0===vo&&wo(j)),e===o&&("set null"===r.substr(io,8).toLowerCase()?(e=r.substr(io,8),io+=8):(e=o,0===vo&&wo(Y)),e===o&&("no action"===r.substr(io,9).toLowerCase()?(e=r.substr(io,9),io+=9):(e=o,0===vo&&wo(B)),e===o&&("set default"===r.substr(io,11).toLowerCase()?(e=r.substr(io,11),io+=11):(e=o,0===vo&&wo(X))))));e!==o&&(e=e.toLowerCase());return t=e}())!==o?(u=n,t=e={type:e.toLowerCase(),value:u}):(io=t,t=o),t}function Do(){var t,e,n,u,s,a,i;return t=io,(e=ca())===o&&(e=ia())===o&&(e=ni()),e!==o&&(i=e,e={keyword:Array.isArray(i)?i[0].toLowerCase():i.toLowerCase()}),(t=e)===o&&(t=io,(e=ua())!==o&&mi()!==o?(n=io,"of"===r.substr(io,2).toLowerCase()?(u=r.substr(io,2),io+=2):(u=o,0===vo&&wo(Q)),u!==o&&(s=mi())!==o&&(a=ns())!==o?n=u=[u,s,a]:(io=n,n=o),n===o&&(n=null),n!==o?(t=e=function(r,t){return {keyword:r&&r[0]&&r[0].toLowerCase(),args:t&&{keyword:t[0],columns:t[2]}||null}}(e,n)):(io=t,t=o)):(io=t,t=o)),t}function ko(){var t,e,n,u,s,a,i,c,l;return t=io,"auto_increment"===r.substr(io,14).toLowerCase()?(e=r.substr(io,14),io+=14):(e=o,0===vo&&wo(L)),e===o&&("avg_row_length"===r.substr(io,14).toLowerCase()?(e=r.substr(io,14),io+=14):(e=o,0===vo&&wo(ir)),e===o&&("key_block_size"===r.substr(io,14).toLowerCase()?(e=r.substr(io,14),io+=14):(e=o,0===vo&&wo(cr)),e===o&&("max_rows"===r.substr(io,8).toLowerCase()?(e=r.substr(io,8),io+=8):(e=o,0===vo&&wo(lr)),e===o&&("min_rows"===r.substr(io,8).toLowerCase()?(e=r.substr(io,8),io+=8):(e=o,0===vo&&wo(fr)),e===o&&("stats_sample_pages"===r.substr(io,18).toLowerCase()?(e=r.substr(io,18),io+=18):(e=o,0===vo&&wo(vr))))))),e!==o&&mi()!==o?((n=ii())===o&&(n=null),n!==o&&mi()!==o&&(u=Ks())!==o?(c=n,l=u,t=e={keyword:e.toLowerCase(),symbol:c,value:l.value}):(io=t,t=o)):(io=t,t=o),t===o&&(t=io,(e=ta())===o&&(e=null),e!==o&&mi()!==o?("character set"===r.substr(io,13).toLowerCase()?(n=r.substr(io,13),io+=13):(n=o,0===vo&&wo(br)),n===o&&("charset"===r.substr(io,7).toLowerCase()?(n=r.substr(io,7),io+=7):(n=o,0===vo&&wo(dr)),n===o&&("collate"===r.substr(io,7).toLowerCase()?(n=r.substr(io,7),io+=7):(n=o,0===vo&&wo(Lr)))),n!==o&&mi()!==o?((u=ii())===o&&(u=null),u!==o&&(s=mi())!==o&&(a=xs())!==o?(t=e=function(r,t,e,n){return {keyword:r&&`${r[0].toLowerCase()} ${t.toLowerCase()}`||t.toLowerCase(),symbol:e,value:n}}(e,n,u,a)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o),t===o&&(t=io,(e=di())===o&&("connection"===r.substr(io,10).toLowerCase()?(e=r.substr(io,10),io+=10):(e=o,0===vo&&wo(Cr))),e!==o&&mi()!==o?((n=ii())===o&&(n=null),n!==o&&mi()!==o&&(u=Bs())!==o?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,u)):(io=t,t=o)):(io=t,t=o),t===o&&(t=io,"compression"===r.substr(io,11).toLowerCase()?(e=r.substr(io,11),io+=11):(e=o,0===vo&&wo(pr)),e!==o&&mi()!==o?((n=ii())===o&&(n=null),n!==o&&mi()!==o?(u=io,39===r.charCodeAt(io)?(s="'",io++):(s=o,0===vo&&wo(wr)),s!==o?("zlib"===r.substr(io,4).toLowerCase()?(a=r.substr(io,4),io+=4):(a=o,0===vo&&wo(Er)),a===o&&("lz4"===r.substr(io,3).toLowerCase()?(a=r.substr(io,3),io+=3):(a=o,0===vo&&wo(hr)),a===o&&("none"===r.substr(io,4).toLowerCase()?(a=r.substr(io,4),io+=4):(a=o,0===vo&&wo(O)))),a!==o?(39===r.charCodeAt(io)?(i="'",io++):(i=o,0===vo&&wo(wr)),i!==o?u=s=[s,a,i]:(io=u,u=o)):(io=u,u=o)):(io=u,u=o),u!==o?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,u)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o),t===o&&(t=io,"engine"===r.substr(io,6).toLowerCase()?(e=r.substr(io,6),io+=6):(e=o,0===vo&&wo(Ar)),e!==o&&mi()!==o?((n=ii())===o&&(n=null),n!==o&&mi()!==o&&(u=xs())!==o?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}}(e,n,u)):(io=t,t=o)):(io=t,t=o))))),t}function $o(){var t,e,n,u,s,a,i;return (t=Go())===o&&(t=io,e=io,40===r.charCodeAt(io)?(n="(",io++):(n=o,0===vo&&wo(Ur)),n!==o&&(u=mi())!==o&&(s=$o())!==o&&(a=mi())!==o?(41===r.charCodeAt(io)?(i=")",io++):(i=o,0===vo&&wo(xr)),i!==o?e=n=[n,u,s,a,i]:(io=e,e=o)):(io=e,e=o),e!==o&&(e={...e[2],parentheses_symbol:!0}),t=e),t}function Fo(){var t,e,n,u,s,a,i,c,l;if(t=io,Ta()!==o)if(mi()!==o)if((e=Po())!==o){for(n=[],u=io,(s=mi())!==o&&(a=pi())!==o&&(i=mi())!==o&&(c=Po())!==o?u=s=[s,a,i,c]:(io=u,u=o);u!==o;)n.push(u),u=io,(s=mi())!==o&&(a=pi())!==o&&(i=mi())!==o&&(c=Po())!==o?u=s=[s,a,i,c]:(io=u,u=o);n!==o?(t=Ki(e,n)):(io=t,t=o);}else io=t,t=o;else io=t,t=o;else io=t,t=o;return t===o&&(t=io,mi()!==o&&Ta()!==o&&(e=mi())!==o&&(n=function(){var t,e,n,u;t=io,"RECURSIVE"===r.substr(io,9)?(e="RECURSIVE",io+=9):(e=o,0===vo&&wo(ke));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o);return t}())!==o&&(u=mi())!==o&&(s=Po())!==o?((l=s).recursive=!0,t=[l]):(io=t,t=o)),t}function Po(){var r,t,e,n;return r=io,(t=xs())!==o&&mi()!==o?((e=Ho())===o&&(e=null),e!==o&&mi()!==o&&Ca()!==o&&mi()!==o&&Ei()!==o&&mi()!==o&&(n=To())!==o&&mi()!==o&&hi()!==o?(r=t={name:t,stmt:n,columns:e}):(io=r,r=o)):(io=r,r=o),r}function Ho(){var r,t,e,n,u,s,a,i;if(r=io,Ei()!==o)if(mi()!==o)if((t=Us())!==o){for(e=[],n=io,(u=mi())!==o&&(s=pi())!==o&&(a=mi())!==o&&(i=Us())!==o?n=u=[u,s,a,i]:(io=n,n=o);n!==o;)e.push(n),n=io,(u=mi())!==o&&(s=pi())!==o&&(a=mi())!==o&&(i=Us())!==o?n=u=[u,s,a,i]:(io=n,n=o);e!==o&&(n=mi())!==o&&(u=hi())!==o?(r=Mr(t,e)):(io=r,r=o);}else io=r,r=o;else io=r,r=o;else io=r,r=o;return r}function Go(){var t,e,n,u,s,a,i,c,l,f,v;return t=io,mi()!==o?((e=Fo())===o&&(e=null),e!==o&&mi()!==o&&function(){var t,e,n,u;t=io,"select"===r.substr(io,6).toLowerCase()?(e=r.substr(io,6),io+=6):(e=o,0===vo&&wo(_e));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o);return t}()!==o&&mi()!==o?((n=function(){var r,t,e,n,u,s;if(r=io,(t=jo())!==o){for(e=[],n=io,(u=mi())!==o&&(s=jo())!==o?n=u=[u,s]:(io=n,n=o);n!==o;)e.push(n),n=io,(u=mi())!==o&&(s=jo())!==o?n=u=[u,s]:(io=n,n=o);e!==o?(t=function(r,t){const e=[r];for(let r=0,n=t.length;r<n;++r)e.push(t[r][1]);return e}(t,e),r=t):(io=r,r=o);}else io=r,r=o;return r}())===o&&(n=null),n!==o&&mi()!==o?((u=Ra())===o&&(u=null),u!==o&&mi()!==o&&(s=function(){var r,t,e,n,u,s,a,i;r=io,(t=Na())===o&&(t=io,(e=wi())!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o),t===o&&(t=wi()));if(t!==o){for(e=[],n=io,(u=mi())!==o&&(s=pi())!==o&&(a=mi())!==o&&(i=Yo())!==o?n=u=[u,s,a,i]:(io=n,n=o);n!==o;)e.push(n),n=io,(u=mi())!==o&&(s=pi())!==o&&(a=mi())!==o&&(i=Yo())!==o?n=u=[u,s,a,i]:(io=n,n=o);e!==o?(c=t,l=e,tc.add("select::null::(.*)"),t=l&&l.length>0?(c[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},Ki(c[0],l)):c[0],r=t):(io=r,r=o);}else io=r,r=o;var c,l;if(r===o)if(r=io,(t=Yo())!==o){for(e=[],n=io,(u=mi())!==o&&(s=pi())!==o&&(a=mi())!==o&&(i=Yo())!==o?n=u=[u,s,a,i]:(io=n,n=o);n!==o;)e.push(n),n=io,(u=mi())!==o&&(s=pi())!==o&&(a=mi())!==o&&(i=Yo())!==o?n=u=[u,s,a,i]:(io=n,n=o);e!==o?(t=function(r,t){return Ki(r,t)}(t,e),r=t):(io=r,r=o);}else io=r,r=o;return r}())!==o&&mi()!==o?((a=Xo())===o&&(a=null),a!==o&&mi()!==o?((i=es())===o&&(i=null),i!==o&&mi()!==o?((c=function(){var t,e,n;t=io,(e=function(){var t,e,n,u;t=io,"group"===r.substr(io,5).toLowerCase()?(e=r.substr(io,5),io+=5):(e=o,0===vo&&wo(un));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o);return t}())!==o&&mi()!==o&&ma()!==o&&mi()!==o&&(n=ds())!==o?(e=n.value,t=e):(io=t,t=o);return t}())===o&&(c=null),c!==o&&mi()!==o?((l=function(){var t,e;t=io,function(){var t,e,n,u;t=io,"having"===r.substr(io,6).toLowerCase()?(e=r.substr(io,6),io+=6):(e=o,0===vo&&wo(an));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o);return t}()!==o&&mi()!==o&&(e=ws())!==o?(t=e):(io=t,t=o);return t}())===o&&(l=null),l!==o&&mi()!==o?((f=us())===o&&(f=null),f!==o&&mi()!==o?((v=as())===o&&(v=null),v!==o?(t=function(r,t,e,n,u,o,s,a,i,c){return u&&u.forEach(r=>r.table&&rc.add(`select::${r.db}::${r.table}`)),{with:r,type:"select",options:t,distinct:e,columns:n,from:u,where:o,groupby:s,having:a,orderby:i,limit:c}}(e,n,u,s,a,i,c,l,f,v)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o),t}function jo(){var t,e;return t=io,(e=function(){var t;"sql_calc_found_rows"===r.substr(io,19).toLowerCase()?(t=r.substr(io,19),io+=19):(t=o,0===vo&&wo(Pu));return t}())===o&&((e=function(){var t;"sql_cache"===r.substr(io,9).toLowerCase()?(t=r.substr(io,9),io+=9):(t=o,0===vo&&wo(Hu));return t}())===o&&(e=function(){var t;"sql_no_cache"===r.substr(io,12).toLowerCase()?(t=r.substr(io,12),io+=12):(t=o,0===vo&&wo(Gu));return t}()),e===o&&(e=function(){var t;"sql_big_result"===r.substr(io,14).toLowerCase()?(t=r.substr(io,14),io+=14):(t=o,0===vo&&wo(Yu));return t}())===o&&(e=function(){var t;"sql_small_result"===r.substr(io,16).toLowerCase()?(t=r.substr(io,16),io+=16):(t=o,0===vo&&wo(ju));return t}())===o&&(e=function(){var t;"sql_buffer_result"===r.substr(io,17).toLowerCase()?(t=r.substr(io,17),io+=17):(t=o,0===vo&&wo(Bu));return t}())),e!==o&&(e=e),t=e}function Yo(){var r,t,e,n;return r=io,(t=ws())!==o&&ai()!==o&&(e=ji())!==o?(r=t={type:"cast",expr:t,symbol:"::",target:e}):(io=r,r=o),r===o&&(r=io,(t=gs())!==o&&mi()!==o&&(e=Ci())!==o&&mi()!==o&&wi()!==o?(n=t,tc.add(`select::${n}::(.*)`),r=t={type:"star_ref",expr:{type:"column_ref",table:n,column:"*"},as:null}):(io=r,r=o),r===o&&(r=io,(t=ws())!==o&&mi()!==o?((e=Bo())===o&&(e=null),e!==o?(r=t=function(r,t){return {type:"expr",expr:r,as:t}}(t,e)):(io=r,r=o)):(io=r,r=o))),r}function Bo(){var r,t,e;return r=io,(t=Ca())!==o&&mi()!==o&&(e=function(){var r,t;r=io,(t=xs())!==o?((function(r){if(!0===Bi[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return !1}(t)?o:void 0)!==o?(r=t=t):(io=r,r=o)):(io=r,r=o);r===o&&(r=io,(t=Os())!==o&&(t=t),r=t);return r}())!==o?(r=t=e):(io=r,r=o),r===o&&(r=io,(t=Ca())===o&&(t=null),t!==o&&mi()!==o&&(e=gs())!==o?(r=t=e):(io=r,r=o)),r}function Xo(){var r,t;return r=io,da()!==o&&mi()!==o&&(t=Zo())!==o?(r=t):(io=r,r=o),r}function Wo(){var r,t,e;return r=io,(t=rs())!==o&&mi()!==o&&ea()!==o&&mi()!==o&&(e=rs())!==o?(r=t=[t,e]):(io=r,r=o),r}function Vo(){var t,e;return t=io,ya()!==o&&mi()!==o?("btree"===r.substr(io,5).toLowerCase()?(e=r.substr(io,5),io+=5):(e=o,0===vo&&wo(Dr)),e===o&&("hash"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(kr)),e===o&&("gist"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo($r)),e===o&&("gin"===r.substr(io,3).toLowerCase()?(e=r.substr(io,3),io+=3):(e=o,0===vo&&wo(Fr))))),e!==o?(t={keyword:"using",type:e.toLowerCase()}):(io=t,t=o)):(io=t,t=o),t}function Ko(){var r,t,e,n,u,s;if(r=io,(t=qo())!==o){for(e=[],n=io,(u=mi())!==o&&(s=qo())!==o?n=u=[u,s]:(io=n,n=o);n!==o;)e.push(n),n=io,(u=mi())!==o&&(s=qo())!==o?n=u=[u,s]:(io=n,n=o);e!==o?(r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(io=r,r=o);}else io=r,r=o;return r}function qo(){var t,e,n,u,s,a;return t=io,(e=function(){var t,e,n,u;t=io,"key_block_size"===r.substr(io,14).toLowerCase()?(e=r.substr(io,14),io+=14):(e=o,0===vo&&wo(cr));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="KEY_BLOCK_SIZE"):(io=t,t=o)):(io=t,t=o);return t}())!==o&&mi()!==o?((n=ii())===o&&(n=null),n!==o&&mi()!==o&&(u=Ks())!==o?(s=n,a=u,t=e={type:e.toLowerCase(),symbol:s,expr:a}):(io=t,t=o)):(io=t,t=o),t===o&&(t=io,(e=xs())!==o&&mi()!==o&&(n=ii())!==o&&mi()!==o?((u=Ks())===o&&(u=gs()),u!==o?(t=e=function(r,t,e){return {type:r.toLowerCase(),symbol:t,expr:"string"==typeof e&&{type:"origin",value:e}||e}}(e,n,u)):(io=t,t=o)):(io=t,t=o),t===o&&(t=Vo())===o&&(t=io,"with"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(Pr)),e!==o&&mi()!==o?("parser"===r.substr(io,6).toLowerCase()?(n=r.substr(io,6),io+=6):(n=o,0===vo&&wo(Hr)),n!==o&&mi()!==o&&(u=xs())!==o?(t=e={type:"with parser",expr:u}):(io=t,t=o)):(io=t,t=o),t===o&&(t=io,"visible"===r.substr(io,7).toLowerCase()?(e=r.substr(io,7),io+=7):(e=o,0===vo&&wo(Gr)),e===o&&("invisible"===r.substr(io,9).toLowerCase()?(e=r.substr(io,9),io+=9):(e=o,0===vo&&wo(jr))),e!==o&&(e=function(r){return {type:r.toLowerCase(),expr:r.toLowerCase()}}(e)),(t=e)===o&&(t=Ni())))),t}function Zo(){var r,t,e,n,u,s;if(r=io,(t=Jo())!==o){for(e=[],n=zo();n!==o;)e.push(n),n=zo();e!==o?(u=t,(s=e).unshift(u),s.forEach(r=>{const{table:t,as:e}=r;ec[t]=t,e&&(ec[e]=t);}),r=t=s):(io=r,r=o);}else io=r,r=o;return r}function zo(){var r,t,e;return r=io,mi()!==o&&(t=pi())!==o&&mi()!==o&&(e=Jo())!==o?(r=e):(io=r,r=o),r===o&&(r=io,mi()!==o&&(t=function(){var r,t,e,n,u,s,a,i,c,l,f;if(r=io,(t=Qo())!==o)if(mi()!==o)if((e=Jo())!==o)if(mi()!==o)if((n=ya())!==o)if(mi()!==o)if(Ei()!==o)if(mi()!==o)if((u=xs())!==o){for(s=[],a=io,(i=mi())!==o&&(c=pi())!==o&&(l=mi())!==o&&(f=xs())!==o?a=i=[i,c,l,f]:(io=a,a=o);a!==o;)s.push(a),a=io,(i=mi())!==o&&(c=pi())!==o&&(l=mi())!==o&&(f=xs())!==o?a=i=[i,c,l,f]:(io=a,a=o);s!==o&&(a=mi())!==o&&(i=hi())!==o?(v=t,d=u,L=s,(b=e).join=v,b.using=Ki(d,L),r=t=b):(io=r,r=o);}else io=r,r=o;else io=r,r=o;else io=r,r=o;else io=r,r=o;else io=r,r=o;else io=r,r=o;else io=r,r=o;else io=r,r=o;else io=r,r=o;var v,b,d,L;r===o&&(r=io,(t=Qo())!==o&&mi()!==o&&(e=Jo())!==o&&mi()!==o?((n=ts())===o&&(n=null),n!==o?(t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(io=r,r=o)):(io=r,r=o),r===o&&(r=io,(t=Qo())!==o&&mi()!==o&&(e=Ei())!==o&&mi()!==o&&(n=To())!==o&&mi()!==o&&hi()!==o&&mi()!==o?((u=Bo())===o&&(u=null),u!==o&&(s=mi())!==o?((a=ts())===o&&(a=null),a!==o?(t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,u,a),r=t):(io=r,r=o)):(io=r,r=o)):(io=r,r=o)));return r}())!==o?(r=t):(io=r,r=o)),r}function Jo(){var t,e,n,u,s,a;return t=io,(e=function(){var t;"dual"===r.substr(io,4).toLowerCase()?(t=r.substr(io,4),io+=4):(t=o,0===vo&&wo(_u));return t}())!==o&&(e={type:"dual"}),(t=e)===o&&(t=io,(e=rs())!==o&&mi()!==o?((n=Bo())===o&&(n=null),n!==o?(a=n,t=e="var"===(s=e).type?(s.as=a,s):{db:s.db,table:s.table,as:a}):(io=t,t=o)):(io=t,t=o),t===o&&(t=io,(e=Ei())!==o&&mi()!==o&&(n=To())!==o&&mi()!==o&&hi()!==o&&mi()!==o?((u=Bo())===o&&(u=null),u!==o?(t=e=function(r,t){return r.parentheses=!0,{expr:r,as:t}}(n,u)):(io=t,t=o)):(io=t,t=o))),t}function Qo(){var t,e,n,u;return t=io,(e=function(){var t,e,n,u;t=io,"left"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(Ke));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o);return t}())!==o&&(n=mi())!==o?((u=ha())===o&&(u=null),u!==o&&mi()!==o&&Ea()!==o?(t=e="LEFT JOIN"):(io=t,t=o)):(io=t,t=o),t===o&&(t=io,(e=function(){var t,e,n,u;t=io,"right"===r.substr(io,5).toLowerCase()?(e=r.substr(io,5),io+=5):(e=o,0===vo&&wo(qe));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o);return t}())!==o&&(n=mi())!==o?((u=ha())===o&&(u=null),u!==o&&mi()!==o&&Ea()!==o?(t=e="RIGHT JOIN"):(io=t,t=o)):(io=t,t=o),t===o&&(t=io,(e=function(){var t,e,n,u;t=io,"full"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(Ze));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o);return t}())!==o&&(n=mi())!==o?((u=ha())===o&&(u=null),u!==o&&mi()!==o&&Ea()!==o?(t=e="FULL JOIN"):(io=t,t=o)):(io=t,t=o),t===o&&(t=io,e=io,(n=function(){var t,e,n,u;t=io,"inner"===r.substr(io,5).toLowerCase()?(e=r.substr(io,5),io+=5):(e=o,0===vo&&wo(ze));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o);return t}())!==o&&(u=mi())!==o?e=n=[n,u]:(io=e,e=o),e===o&&(e=null),e!==o&&(n=Ea())!==o?(t=e="INNER JOIN"):(io=t,t=o)))),t}function rs(){var r,t,e,n,u,s,a,i,c,l;return r=io,(t=gs())!==o?(e=io,(n=mi())!==o&&(u=Ci())!==o&&(s=mi())!==o&&(a=gs())!==o?e=n=[n,u,s,a]:(io=e,e=o),e!==o?(n=io,(u=mi())!==o&&(s=Ci())!==o&&(a=mi())!==o&&(i=gs())!==o?n=u=[u,s,a,i]:(io=n,n=o),n!==o?(r=t=function(r,t,e){const n={db:null,table:r};return null!==e&&(n.db=`${r}.${t[3]}`,n.table=e[3]),n}(t,e,n)):(io=r,r=o)):(io=r,r=o)):(io=r,r=o),r===o&&(r=io,(t=gs())!==o&&(e=mi())!==o&&(n=Ci())!==o&&(u=mi())!==o&&(s=wi())!==o?(l=t,rc.add(`select::${l}::(.*)`),r=t={db:l,table:"*"}):(io=r,r=o),r===o&&(r=io,(t=gs())!==o?(e=io,(n=mi())!==o&&(u=Ci())!==o&&(s=mi())!==o&&(a=gs())!==o?e=n=[n,u,s,a]:(io=e,e=o),e===o&&(e=null),e!==o?(r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(io=r,r=o)):(io=r,r=o),r===o&&(r=io,(t=Hi())!==o&&((c=t).db=null,c.table=c.name,t=c),r=t))),r}function ts(){var r,t;return r=io,wa()!==o&&mi()!==o&&(t=ws())!==o?(r=t):(io=r,r=o),r}function es(){var t,e;return t=io,function(){var t,e,n,u;t=io,"where"===r.substr(io,5).toLowerCase()?(e=r.substr(io,5),io+=5):(e=o,0===vo&&wo(nn));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o);return t}()!==o&&mi()!==o&&(e=ws())!==o?(t=e):(io=t,t=o),t}function ns(){var r,t,e,n,u,s,a,i;if(r=io,(t=_s())!==o){for(e=[],n=io,(u=mi())!==o&&(s=pi())!==o&&(a=mi())!==o&&(i=_s())!==o?n=u=[u,s,a,i]:(io=n,n=o);n!==o;)e.push(n),n=io,(u=mi())!==o&&(s=pi())!==o&&(a=mi())!==o&&(i=_s())!==o?n=u=[u,s,a,i]:(io=n,n=o);e!==o?(r=t=Ki(t,e)):(io=r,r=o);}else io=r,r=o;return r}function us(){var t,e;return t=io,function(){var t,e,n,u;t=io,"order"===r.substr(io,5).toLowerCase()?(e=r.substr(io,5),io+=5):(e=o,0===vo&&wo(sn));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o);return t}()!==o&&mi()!==o&&ma()!==o&&mi()!==o&&(e=function(){var r,t,e,n,u,s,a,i;if(r=io,(t=os())!==o){for(e=[],n=io,(u=mi())!==o&&(s=pi())!==o&&(a=mi())!==o&&(i=os())!==o?n=u=[u,s,a,i]:(io=n,n=o);n!==o;)e.push(n),n=io,(u=mi())!==o&&(s=pi())!==o&&(a=mi())!==o&&(i=os())!==o?n=u=[u,s,a,i]:(io=n,n=o);e!==o?(t=Ki(t,e),r=t):(io=r,r=o);}else io=r,r=o;return r}())!==o?(t=e):(io=t,t=o),t}function os(){var r,t,e;return r=io,(t=ws())!==o&&mi()!==o?((e=Ia())===o&&(e=Sa()),e===o&&(e=null),e!==o?(r=t=function(r,t){const e={expr:r,type:"ASC"};return "DESC"===t&&(e.type="DESC"),e}(t,e)):(io=r,r=o)):(io=r,r=o),r}function ss(){var r;return (r=Ks())===o&&(r=$s()),r}function as(){var t,e,n,u,s,a;return t=io,function(){var t,e,n,u;t=io,"limit"===r.substr(io,5).toLowerCase()?(e=r.substr(io,5),io+=5):(e=o,0===vo&&wo(cn));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o);return t}()!==o&&mi()!==o?((e=ss())===o&&(e=Na()),e!==o&&mi()!==o?(n=io,(u=function(){var t,e,n,u;t=io,"offset"===r.substr(io,6).toLowerCase()?(e=r.substr(io,6),io+=6):(e=o,0===vo&&wo(ln));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="OFFSET"):(io=t,t=o)):(io=t,t=o);return t}())!==o&&(s=mi())!==o&&(a=ss())!==o?n=u=[u,s,a]:(io=n,n=o),n===o&&(n=null),n!==o?(t=function(r,t){const e=[];return "string"==typeof r?e.push({type:"origin",value:"all"}):e.push(r),t&&e.push(t[2]),{seperator:t&&t[0]&&t[0].toLowerCase()||"",value:e}}(e,n)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o),t}function is(){var t,e,n,u,s,a,i,c;return t=io,e=io,(n=gs())!==o&&(u=mi())!==o&&(s=Ci())!==o?e=n=[n,u,s]:(io=e,e=o),e===o&&(e=null),e!==o&&(n=mi())!==o&&(u=Us())!==o&&(s=mi())!==o?(61===r.charCodeAt(io)?(a="=",io++):(a=o,0===vo&&wo(Yr)),a!==o&&mi()!==o&&(i=ms())!==o?(t=e={column:u,value:i,table:(c=e)&&c[0]}):(io=t,t=o)):(io=t,t=o),t}function cs(){var t,e,n,u,s;return t=io,(e=function(){var t,e,n,u;t=io,"returning"===r.substr(io,9).toLowerCase()?(e=r.substr(io,9),io+=9):(e=o,0===vo&&wo(Fe));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="RETURNING"):(io=t,t=o)):(io=t,t=o);return t}())!==o&&mi()!==o&&(n=ns())!==o?(s=n,t=e={type:(u=e)&&u.toLowerCase()||"returning",columns:s}):(io=t,t=o),t}function ls(){var t;return (t=function(){var t,e;t=io,function(){var t,e,n,u;t=io,"values"===r.substr(io,6).toLowerCase()?(e=r.substr(io,6),io+=6):(e=o,0===vo&&wo(tn));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o);return t}()!==o&&mi()!==o&&(e=function(){var r,t,e,n,u,s,a,i;if(r=io,(t=bs())!==o){for(e=[],n=io,(u=mi())!==o&&(s=pi())!==o&&(a=mi())!==o&&(i=bs())!==o?n=u=[u,s,a,i]:(io=n,n=o);n!==o;)e.push(n),n=io,(u=mi())!==o&&(s=pi())!==o&&(a=mi())!==o&&(i=bs())!==o?n=u=[u,s,a,i]:(io=n,n=o);e!==o?(t=Ki(t,e),r=t):(io=r,r=o);}else io=r,r=o;return r}())!==o?(t=e):(io=t,t=o);return t}())===o&&(t=Go()),t}function fs(){var r,t,e,n,u,s,a,i,c;if(r=io,va()!==o)if(mi()!==o)if((t=Ei())!==o)if(mi()!==o)if((e=xs())!==o){for(n=[],u=io,(s=mi())!==o&&(a=pi())!==o&&(i=mi())!==o&&(c=xs())!==o?u=s=[s,a,i,c]:(io=u,u=o);u!==o;)n.push(u),u=io,(s=mi())!==o&&(a=pi())!==o&&(i=mi())!==o&&(c=xs())!==o?u=s=[s,a,i,c]:(io=u,u=o);n!==o&&(u=mi())!==o&&(s=hi())!==o?(r=Ki(e,n)):(io=r,r=o);}else io=r,r=o;else io=r,r=o;else io=r,r=o;else io=r,r=o;else io=r,r=o;return r===o&&(r=io,va()!==o&&mi()!==o&&(t=bs())!==o?(r=t):(io=r,r=o)),r}function vs(){var r,t;return r=io,(t=ca())!==o&&(t="insert"),(r=t)===o&&(r=io,(t=la())!==o&&(t="replace"),r=t),r}function bs(){var r,t;return r=io,Ei()!==o&&mi()!==o&&(t=ds())!==o&&mi()!==o&&hi()!==o?(r=t):(io=r,r=o),r}function ds(){var r,t,e,n,u,s,a,i;if(r=io,(t=ws())!==o){for(e=[],n=io,(u=mi())!==o&&(s=pi())!==o&&(a=mi())!==o&&(i=ws())!==o?n=u=[u,s,a,i]:(io=n,n=o);n!==o;)e.push(n),n=io,(u=mi())!==o&&(s=pi())!==o&&(a=mi())!==o&&(i=ws())!==o?n=u=[u,s,a,i]:(io=n,n=o);e!==o?(r=t=function(r,t){const e={type:"expr_list"};return e.value=Ki(r,t),e}(t,e)):(io=r,r=o);}else io=r,r=o;return r}function Ls(){var t,e,n;return t=io,ui()!==o&&mi()!==o&&(e=ws())!==o&&mi()!==o&&(n=function(){var t;(t=function(){var t,e,n,u;t=io,"year"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(Vt));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="YEAR"):(io=t,t=o)):(io=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=io,"month"===r.substr(io,5).toLowerCase()?(e=r.substr(io,5),io+=5):(e=o,0===vo&&wo(Ht));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="MONTH"):(io=t,t=o)):(io=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=io,"day"===r.substr(io,3).toLowerCase()?(e=r.substr(io,3),io+=3):(e=o,0===vo&&wo(Rt));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="DAY"):(io=t,t=o)):(io=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=io,"hour"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(xt));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="HOUR"):(io=t,t=o)):(io=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=io,"minute"===r.substr(io,6).toLowerCase()?(e=r.substr(io,6),io+=6):(e=o,0===vo&&wo(Pt));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="MINUTE"):(io=t,t=o)):(io=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=io,"second"===r.substr(io,6).toLowerCase()?(e=r.substr(io,6),io+=6):(e=o,0===vo&&wo(jt));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="SECOND"):(io=t,t=o)):(io=t,t=o);return t}());return t}())!==o?(t={type:"interval",expr:e,unit:n.toLowerCase()}):(io=t,t=o),t===o&&(t=io,ui()!==o&&mi()!==o&&(e=Bs())!==o?(t=function(r){return {type:"interval",expr:r,unit:""}}(e)):(io=t,t=o)),t}function Cs(){var t,e,n,u,s,a,i,c,l;if(t=io,Fa()!==o)if(mi()!==o)if((e=ws())===o&&(e=null),e!==o)if(mi()!==o){if(n=[],(u=ps())!==o)for(;u!==o;)n.push(u),u=ps();else n=o;n!==o&&(u=mi())!==o?((s=function(){var t,e;t=io,function(){var t,e,n,u;t=io,"else"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(xn));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o);return t}()!==o&&mi()!==o&&(e=ws())!==o?(t={type:"else",result:e}):(io=t,t=o);return t}())===o&&(s=null),s!==o&&mi()!==o&&function(){var t,e,n,u;t=io,"end"===r.substr(io,3).toLowerCase()?(e=r.substr(io,3),io+=3):(e=o,0===vo&&wo(Mn));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o);return t}()!==o&&mi()!==o?((a=Fa())===o&&(a=null),a!==o?(i=e,c=n,(l=s)&&c.push(l),t={type:"case",expr:i||null,args:c}):(io=t,t=o)):(io=t,t=o)):(io=t,t=o);}else io=t,t=o;else io=t,t=o;else io=t,t=o;else io=t,t=o;return t}function ps(){var t,e,n;return t=io,Pa()!==o&&mi()!==o&&(e=ws())!==o&&mi()!==o&&function(){var t,e,n,u;t=io,"then"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(Un));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o);return t}()!==o&&mi()!==o&&(n=ws())!==o?(t={type:"when",cond:e,result:n}):(io=t,t=o),t}function ws(){var r;return (r=function(){var r,t,e,n,u,s,a,i;if(r=io,(t=Rs())!==o){if(e=[],n=io,(u=mi())!==o&&(s=Ti())!==o&&(a=mi())!==o&&(i=Rs())!==o?n=u=[u,s,a,i]:(io=n,n=o),n!==o)for(;n!==o;)e.push(n),n=io,(u=mi())!==o&&(s=Ti())!==o&&(a=mi())!==o&&(i=Rs())!==o?n=u=[u,s,a,i]:(io=n,n=o);else e=o;e!==o?(t=qi(t,e),r=t):(io=r,r=o);}else io=r,r=o;return r}())===o&&(r=function(){var r,t,e,n,u,s;if(r=io,(t=Ss())!==o){if(e=[],n=io,(u=mi())!==o&&(s=Rs())!==o?n=u=[u,s]:(io=n,n=o),n!==o)for(;n!==o;)e.push(n),n=io,(u=mi())!==o&&(s=Rs())!==o?n=u=[u,s]:(io=n,n=o);else e=o;e!==o?(t=Xi(t,e[0][1]),r=t):(io=r,r=o);}else io=r,r=o;return r}())===o&&(r=function(){var r,t,e,n,u,s,a,i;if(r=io,(t=Es())!==o){for(e=[],n=io,(u=Si())!==o&&(s=$a())!==o&&(a=mi())!==o&&(i=Es())!==o?n=u=[u,s,a,i]:(io=n,n=o);n!==o;)e.push(n),n=io,(u=Si())!==o&&(s=$a())!==o&&(a=mi())!==o&&(i=Es())!==o?n=u=[u,s,a,i]:(io=n,n=o);e!==o?(t=Br(t,e),r=t):(io=r,r=o);}else io=r,r=o;return r}())===o&&(r=$o()),r}function Es(){var r,t,e,n,u,s,a,i;if(r=io,(t=hs())!==o){for(e=[],n=io,(u=Si())!==o&&(s=ka())!==o&&(a=mi())!==o&&(i=hs())!==o?n=u=[u,s,a,i]:(io=n,n=o);n!==o;)e.push(n),n=io,(u=Si())!==o&&(s=ka())!==o&&(a=mi())!==o&&(i=hs())!==o?n=u=[u,s,a,i]:(io=n,n=o);e!==o?(r=t=Br(t,e)):(io=r,r=o);}else io=r,r=o;return r}function hs(){var t,e,n,u,s;return (t=As())===o&&(t=function(){var r,t,e;r=io,(t=function(){var r,t,e,n,u;r=io,t=io,(e=Da())!==o&&(n=mi())!==o&&(u=Ma())!==o?t=e=[e,n,u]:(io=t,t=o);t!==o&&(t=(s=t)[0]+" "+s[2]);var s;(r=t)===o&&(r=Ma());return r}())!==o&&mi()!==o&&Ei()!==o&&mi()!==o&&(e=To())!==o&&mi()!==o&&hi()!==o?(n=t,(u=e).parentheses=!0,t=Xi(n,u),r=t):(io=r,r=o);var n,u;return r}())===o&&(t=io,(e=Da())===o&&(e=io,33===r.charCodeAt(io)?(n="!",io++):(n=o,0===vo&&wo(Xr)),n!==o?(u=io,vo++,61===r.charCodeAt(io)?(s="=",io++):(s=o,0===vo&&wo(Yr)),vo--,s===o?u=void 0:(io=u,u=o),u!==o?e=n=[n,u]:(io=e,e=o)):(io=e,e=o)),e!==o&&(n=mi())!==o&&(u=hs())!==o?(t=e=Xi("NOT",u)):(io=t,t=o)),t}function As(){var t,e,n,u,s,a,i;return t=io,(e=ms())!==o&&mi()!==o?(n=io,vo++,u=ka(),vo--,u===o?n=void 0:(io=n,n=o),n!==o&&(u=mi())!==o?((s=function(){var t;(t=function(){var r,t,e,n,u,s,a;r=io,t=[],e=io,(n=mi())!==o&&(u=ys())!==o&&(s=mi())!==o&&(a=ms())!==o?e=n=[n,u,s,a]:(io=e,e=o);if(e!==o)for(;e!==o;)t.push(e),e=io,(n=mi())!==o&&(u=ys())!==o&&(s=mi())!==o&&(a=ms())!==o?e=n=[n,u,s,a]:(io=e,e=o);else t=o;t!==o&&(t={type:"arithmetic",tail:t});return r=t}())===o&&(t=function(){var r,t,e,n;r=io,(t=Ts())!==o&&mi()!==o&&(e=Ei())!==o&&mi()!==o&&(n=ds())!==o&&mi()!==o&&hi()!==o?(r=t={op:t,right:n}):(io=r,r=o);r===o&&(r=io,(t=Ts())!==o&&mi()!==o?((e=Hi())===o&&(e=Bs()),e!==o?(t=function(r,t){return {op:r,right:t}}(t,e),r=t):(io=r,r=o)):(io=r,r=o));return r}())===o&&(t=function(){var r,t,e,n;r=io,(t=function(){var r,t,e,n,u;r=io,t=io,(e=Da())!==o&&(n=mi())!==o&&(u=_a())!==o?t=e=[e,n,u]:(io=t,t=o);t!==o&&(t=(s=t)[0]+" "+s[2]);var s;(r=t)===o&&(r=_a());return r}())!==o&&mi()!==o&&(e=ms())!==o&&mi()!==o&&ka()!==o&&mi()!==o&&(n=ms())!==o?(r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(io=r,r=o);return r}())===o&&(t=function(){var r,t,e,n,u,s,a,i,c;r=io,(t=Oa())!==o&&(e=mi())!==o&&(n=ms())!==o?(r=t={op:"IS",right:n}):(io=r,r=o);r===o&&(r=io,(t=Oa())!==o&&(e=mi())!==o?(n=io,(u=Ra())!==o&&(s=mi())!==o&&(a=da())!==o&&(i=mi())!==o&&(c=rs())!==o?n=u=[u,s,a,i,c]:(io=n,n=o),n!==o?(t=function(r){const{db:t,table:e}=r.pop(),n="*"===e?"*":`"${e}"`;return {op:"IS",right:{type:"origin",value:"DISTINCT FROM "+(t?`"${t}".${n}`:n)}}}(n),r=t):(io=r,r=o)):(io=r,r=o),r===o&&(r=io,t=io,(e=Oa())!==o&&(n=mi())!==o&&(u=Da())!==o?t=e=[e,n,u]:(io=t,t=o),t!==o&&(e=mi())!==o&&(n=ms())!==o?(t=function(r){return {op:"IS NOT",right:r}}(n),r=t):(io=r,r=o)));return r}())===o&&(t=function(){var r,t,e;r=io,(t=function(){var r,t,e,n,u;r=io,t=io,(e=Da())!==o&&(n=mi())!==o?((u=Ua())===o&&(u=xa()),u!==o?t=e=[e,n,u]:(io=t,t=o)):(io=t,t=o);t!==o&&(t=(s=t)[0]+" "+s[2]);var s;(r=t)===o&&(r=Ua())===o&&(r=xa());return r}())!==o&&mi()!==o&&(e=As())!==o?(r=t={op:t,right:e}):(io=r,r=o);return r}())===o&&(t=function(){var t,e,n;t=io,"@>"===r.substr(io,2)?(e="@>",io+=2):(e=o,0===vo&&wo(Jr));e===o&&("<@"===r.substr(io,2)?(e="<@",io+=2):(e=o,0===vo&&wo(Qr)),e===o&&(e=yi())===o&&(e=function(){var t;"#>>"===r.substr(io,3)?(t="#>>",io+=3):(t=o,0===vo&&wo(Ju));return t}())===o&&(e=function(){var t;"#>"===r.substr(io,2)?(t="#>",io+=2):(t=o,0===vo&&wo(zu));return t}())===o&&(63===r.charCodeAt(io)?(e="?",io++):(e=o,0===vo&&wo(rt)),e===o&&("?|"===r.substr(io,2)?(e="?|",io+=2):(e=o,0===vo&&wo(tt)),e===o&&("?&"===r.substr(io,2)?(e="?&",io+=2):(e=o,0===vo&&wo(et)),e===o&&("#-"===r.substr(io,2)?(e="#-",io+=2):(e=o,0===vo&&wo(nt)))))));e!==o&&mi()!==o&&(n=Yo())!==o?(e={op:e,right:(u=n)&&u.expr||u},t=e):(io=t,t=o);var u;return t}());return t}())===o&&(s=null),s!==o?(a=e,t=e=null===(i=s)?a:"arithmetic"===i.type?qi(a,i.tail):Wi(i.op,a,i.right)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o),t===o&&(t=Bs())===o&&(t=_s()),t}function ys(){var t;return ">="===r.substr(io,2)?(t=">=",io+=2):(t=o,0===vo&&wo(Wr)),t===o&&(62===r.charCodeAt(io)?(t=">",io++):(t=o,0===vo&&wo(Vr)),t===o&&("<="===r.substr(io,2)?(t="<=",io+=2):(t=o,0===vo&&wo(Kr)),t===o&&("<>"===r.substr(io,2)?(t="<>",io+=2):(t=o,0===vo&&wo(qr)),t===o&&(60===r.charCodeAt(io)?(t="<",io++):(t=o,0===vo&&wo(Zr)),t===o&&(61===r.charCodeAt(io)?(t="=",io++):(t=o,0===vo&&wo(Yr)),t===o&&("!="===r.substr(io,2)?(t="!=",io+=2):(t=o,0===vo&&wo(zr)))))))),t}function Ts(){var r,t,e,n,u,s;return r=io,t=io,(e=Da())!==o&&(n=mi())!==o&&(u=ga())!==o?t=e=[e,n,u]:(io=t,t=o),t!==o&&(t=(s=t)[0]+" "+s[2]),(r=t)===o&&(r=ga()),r}function ms(){var r,t,e,n,u,s,a,i;if(r=io,(t=Is())!==o){for(e=[],n=io,(u=mi())!==o&&(s=Ss())!==o&&(a=mi())!==o&&(i=Is())!==o?n=u=[u,s,a,i]:(io=n,n=o);n!==o;)e.push(n),n=io,(u=mi())!==o&&(s=Ss())!==o&&(a=mi())!==o&&(i=Is())!==o?n=u=[u,s,a,i]:(io=n,n=o);e!==o?(r=t=Br(t,e)):(io=r,r=o);}else io=r,r=o;return r}function Ss(){var t;return 43===r.charCodeAt(io)?(t="+",io++):(t=o,0===vo&&wo(ut)),t===o&&(45===r.charCodeAt(io)?(t="-",io++):(t=o,0===vo&&wo(ot))),t}function Is(){var r,t,e,n,u,s,a,i;if(r=io,(t=Rs())!==o){for(e=[],n=io,(u=mi())!==o&&(s=Ns())!==o&&(a=mi())!==o&&(i=Rs())!==o?n=u=[u,s,a,i]:(io=n,n=o);n!==o;)e.push(n),n=io,(u=mi())!==o&&(s=Ns())!==o&&(a=mi())!==o&&(i=Rs())!==o?n=u=[u,s,a,i]:(io=n,n=o);e!==o?(r=t=qi(t,e)):(io=r,r=o);}else io=r,r=o;return r}function Ns(){var t;return 42===r.charCodeAt(io)?(t="*",io++):(t=o,0===vo&&wo(st)),t===o&&(47===r.charCodeAt(io)?(t="/",io++):(t=o,0===vo&&wo(at)),t===o&&(37===r.charCodeAt(io)?(t="%",io++):(t=o,0===vo&&wo(it)))),t}function Rs(){var t,e,n,u,s;return (t=function(){var t,e,n,u,s,a,i,c;t=io,(e=Gs())===o&&(e=Fs())===o&&(e=Hs())===o&&(e=Cs())===o&&(e=Ls())===o&&(e=_s())===o&&(e=$s());e!==o&&ai()!==o&&(n=ji())!==o?(t=e={type:"cast",expr:e,symbol:"::",target:n}):(io=t,t=o);t===o&&(t=io,(e=Ha())!==o&&mi()!==o&&(n=Ei())!==o&&mi()!==o&&(u=ws())!==o&&mi()!==o&&Ca()!==o&&mi()!==o&&(s=ji())!==o&&mi()!==o&&(a=hi())!==o?(e=function(r,t){return {type:"cast",expr:r,symbol:"as",target:t}}(u,s),t=e):(io=t,t=o),t===o&&(t=io,(e=Ha())!==o&&mi()!==o&&(n=Ei())!==o&&mi()!==o&&(u=ws())!==o&&mi()!==o&&Ca()!==o&&mi()!==o&&(s=Ba())!==o&&mi()!==o&&(a=Ei())!==o&&mi()!==o&&(i=qs())!==o&&mi()!==o&&hi()!==o&&mi()!==o&&(c=hi())!==o?(e=function(r,t){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+")"}}}(u,i),t=e):(io=t,t=o),t===o&&(t=io,(e=Ha())!==o&&mi()!==o&&(n=Ei())!==o&&mi()!==o&&(u=ws())!==o&&mi()!==o&&Ca()!==o&&mi()!==o&&(s=Ba())!==o&&mi()!==o&&(a=Ei())!==o&&mi()!==o&&(i=qs())!==o&&mi()!==o&&pi()!==o&&mi()!==o&&(c=qs())!==o&&mi()!==o&&hi()!==o&&mi()!==o&&hi()!==o?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+", "+e+")"}}}(u,i,c),t=e):(io=t,t=o),t===o&&(t=io,(e=Ha())!==o&&mi()!==o&&(n=Ei())!==o&&mi()!==o&&(u=ws())!==o&&mi()!==o&&Ca()!==o&&mi()!==o&&(s=function(){var t;(t=function(){var t,e,n,u;t=io,"signed"===r.substr(io,6).toLowerCase()?(e=r.substr(io,6),io+=6):(e=o,0===vo&&wo(jn));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="SIGNED"):(io=t,t=o)):(io=t,t=o);return t}())===o&&(t=Xa());return t}())!==o&&mi()!==o?((a=Va())===o&&(a=null),a!==o&&mi()!==o&&(i=hi())!==o?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:t+(e?" "+e:"")}}}(u,s,a),t=e):(io=t,t=o)):(io=t,t=o)))));return t}())===o&&(t=Gs())===o&&(t=Fs())===o&&(t=Hs())===o&&(t=Cs())===o&&(t=Ls())===o&&(t=_s())===o&&(t=$s())===o&&(t=io,Ei()!==o&&(e=mi())!==o&&(n=ws())!==o&&mi()!==o&&hi()!==o?((s=n).parentheses=!0,t=s):(io=t,t=o),t===o&&(t=io,Ei()!==o&&(e=mi())!==o&&(n=ds())!==o&&mi()!==o&&hi()!==o?((u=n).parentheses=!0,t=u):(io=t,t=o),t===o&&(t=Hi())===o&&(t=io,mi()!==o?(36===r.charCodeAt(io)?(e="$",io++):(e=o,0===vo&&wo(ct)),e!==o&&(n=Ks())!==o?(t={type:"origin",value:"$"+n.value}):(io=t,t=o)):(io=t,t=o)))),t}function _s(){var t,e,n,u,s,a;return t=io,(e=gs())!==o&&mi()!==o&&(n=Ci())!==o&&mi()!==o&&(u=Us())!==o?(s=e,a=u,tc.add(`select::${s}::${a}`),t=e={type:"column_ref",table:s,column:a}):(io=t,t=o),t===o&&(t=io,(e=gs())!==o&&mi()!==o&&(n=Ci())!==o&&mi()!==o&&(u=wi())!==o?(t=e=function(r){return tc.add(`select::${r}::(.*)`),{type:"column_ref",table:r,column:"*"}}(e)):(io=t,t=o),t===o&&(t=io,(e=Us())!==o&&mi()!==o?((n=function(){var t;"->>"===r.substr(io,3)?(t="->>",io+=3):(t=o,0===vo&&wo(Zu));return t}())===o&&(n=function(){var t;"->"===r.substr(io,2)?(t="->",io+=2):(t=o,0===vo&&wo(qu));return t}()),n!==o&&mi()!==o?((u=Bs())===o&&(u=Ks()),u!==o?(t=e=function(r,t,e){return tc.add("select::null::"+r),{type:"column_ref",table:null,column:r,arrow:t,property:e}}(e,n,u)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o),t===o&&(t=io,(e=Us())!==o&&(e=function(r){return tc.add("select::null::"+r),{type:"column_ref",table:null,column:r}}(e)),t=e))),t}function gs(){var r,t;return r=io,(t=xs())!==o?((lt(t)?o:void 0)!==o?(r=t=t):(io=r,r=o)):(io=r,r=o),r===o&&(r=io,(t=Os())!==o&&(t=t),r=t),r}function Os(){var t;return (t=function(){var t,e,n,u;t=io,34===r.charCodeAt(io)?(e='"',io++):(e=o,0===vo&&wo(ft));if(e!==o){if(n=[],vt.test(r.charAt(io))?(u=r.charAt(io),io++):(u=o,0===vo&&wo(bt)),u!==o)for(;u!==o;)n.push(u),vt.test(r.charAt(io))?(u=r.charAt(io),io++):(u=o,0===vo&&wo(bt));else n=o;n!==o?(34===r.charCodeAt(io)?(u='"',io++):(u=o,0===vo&&wo(ft)),u!==o?(e=dt(n),t=e):(io=t,t=o)):(io=t,t=o);}else io=t,t=o;return t}())===o&&(t=function(){var t,e,n,u;t=io,39===r.charCodeAt(io)?(e="'",io++):(e=o,0===vo&&wo(wr));if(e!==o){if(n=[],Lt.test(r.charAt(io))?(u=r.charAt(io),io++):(u=o,0===vo&&wo(Ct)),u!==o)for(;u!==o;)n.push(u),Lt.test(r.charAt(io))?(u=r.charAt(io),io++):(u=o,0===vo&&wo(Ct));else n=o;n!==o?(39===r.charCodeAt(io)?(u="'",io++):(u=o,0===vo&&wo(wr)),u!==o?(e=dt(n),t=e):(io=t,t=o)):(io=t,t=o);}else io=t,t=o;return t}())===o&&(t=function(){var t,e,n,u;t=io,96===r.charCodeAt(io)?(e="`",io++):(e=o,0===vo&&wo(pt));if(e!==o){if(n=[],wt.test(r.charAt(io))?(u=r.charAt(io),io++):(u=o,0===vo&&wo(Et)),u!==o)for(;u!==o;)n.push(u),wt.test(r.charAt(io))?(u=r.charAt(io),io++):(u=o,0===vo&&wo(Et));else n=o;n!==o?(96===r.charCodeAt(io)?(u="`",io++):(u=o,0===vo&&wo(pt)),u!==o?(e=dt(n),t=e):(io=t,t=o)):(io=t,t=o);}else io=t,t=o;return t}()),t}function Us(){var r,t;return r=io,(t=function(){var r,t,e,n;if(r=io,(t=Ms())!==o){for(e=[],n=ks();n!==o;)e.push(n),n=ks();e!==o?(t=t+e.join(""),r=t):(io=r,r=o);}else io=r,r=o;return r}())!==o?((lt(t)?o:void 0)!==o?(r=t=t):(io=r,r=o)):(io=r,r=o),r===o&&(r=Os()),r}function xs(){var r,t,e,n;if(r=io,(t=Ms())!==o){for(e=[],n=Ds();n!==o;)e.push(n),n=Ds();e!==o?(r=t=t+e.join("")):(io=r,r=o);}else io=r,r=o;return r}function Ms(){var t;return ht.test(r.charAt(io))?(t=r.charAt(io),io++):(t=o,0===vo&&wo(At)),t}function Ds(){var t;return yt.test(r.charAt(io))?(t=r.charAt(io),io++):(t=o,0===vo&&wo(Tt)),t}function ks(){var t;return mt.test(r.charAt(io))?(t=r.charAt(io),io++):(t=o,0===vo&&wo(St)),t}function $s(){var t,e,n,u;return t=io,e=io,58===r.charCodeAt(io)?(n=":",io++):(n=o,0===vo&&wo(It)),n!==o&&(u=xs())!==o?e=n=[n,u]:(io=e,e=o),e!==o&&(e={type:"param",value:e[1]}),t=e}function Fs(){var t;return (t=function(){var t,e,n;t=io,(e=function(){var t,e,n,u;t=io,"count"===r.substr(io,5).toLowerCase()?(e=r.substr(io,5),io+=5):(e=o,0===vo&&wo(Tn));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="COUNT"):(io=t,t=o)):(io=t,t=o);return t}())!==o&&mi()!==o&&Ei()!==o&&mi()!==o&&(n=function(){var t,e;t=io,(e=function(){var t,e;t=io,42===r.charCodeAt(io)?(e="*",io++):(e=o,0===vo&&wo(st));e!==o&&(e={type:"star",value:"*"});return t=e}())!==o&&(e={expr:e});(t=e)===o&&(t=Ps());return t}())!==o&&mi()!==o&&hi()!==o?(t=e={type:"aggr_func",name:e,args:n}):(io=t,t=o);return t}())===o&&(t=function(){var t,e,n;t=io,(e=function(){var t;(t=function(){var t,e,n,u;t=io,"sum"===r.substr(io,3).toLowerCase()?(e=r.substr(io,3),io+=3):(e=o,0===vo&&wo(In));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="SUM"):(io=t,t=o)):(io=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=io,"max"===r.substr(io,3).toLowerCase()?(e=r.substr(io,3),io+=3):(e=o,0===vo&&wo(mn));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="MAX"):(io=t,t=o)):(io=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=io,"min"===r.substr(io,3).toLowerCase()?(e=r.substr(io,3),io+=3):(e=o,0===vo&&wo(Sn));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="MIN"):(io=t,t=o)):(io=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=io,"avg"===r.substr(io,3).toLowerCase()?(e=r.substr(io,3),io+=3):(e=o,0===vo&&wo(Nn));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="AVG"):(io=t,t=o)):(io=t,t=o);return t}());return t}())!==o&&mi()!==o&&Ei()!==o&&mi()!==o&&(n=ms())!==o&&mi()!==o&&hi()!==o?(t=e={type:"aggr_func",name:e,args:{expr:n}}):(io=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=io,(e=function(){var t,e,n,u;t=io,"array_agg"===r.substr(io,9).toLowerCase()?(e=r.substr(io,9),io+=9):(e=o,0===vo&&wo(yn));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="ARRAY_AGG"):(io=t,t=o)):(io=t,t=o);return t}())!==o&&mi()!==o&&Ei()!==o&&mi()!==o&&(n=Ps())!==o&&mi()!==o?((u=us())===o&&(u=null),u!==o&&mi()!==o&&hi()!==o?(t=e={type:"aggr_func",name:e,args:n,orderby:u}):(io=t,t=o)):(io=t,t=o);return t}()),t}function Ps(){var r,t,e;return r=io,(t=Ra())===o&&(t=null),t!==o&&mi()!==o&&(e=_s())!==o?(r=t={distinct:t,expr:e}):(io=r,r=o),r}function Hs(){var t,e,n;return t=io,(e=$i())!==o&&mi()!==o&&Ei()!==o&&mi()!==o?((n=ds())===o&&(n=null),n!==o&&mi()!==o&&hi()!==o?(t=e={type:"function",name:e,args:n||{type:"expr_list",value:[]}}):(io=t,t=o)):(io=t,t=o),t===o&&(t=io,(e=function(){var t;(t=function(){var t,e,n,u;t=io,"current_date"===r.substr(io,12).toLowerCase()?(e=r.substr(io,12),io+=12):(e=o,0===vo&&wo(vu));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="CURRENT_DATE"):(io=t,t=o)):(io=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=io,"current_time"===r.substr(io,12).toLowerCase()?(e=r.substr(io,12),io+=12):(e=o,0===vo&&wo(du));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="CURRENT_TIME"):(io=t,t=o)):(io=t,t=o);return t}())===o&&(t=oi())===o&&(t=function(){var t,e,n,u;t=io,"current_user"===r.substr(io,12).toLowerCase()?(e=r.substr(io,12),io+=12):(e=o,0===vo&&wo(Cu));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="CURRENT_USER"):(io=t,t=o)):(io=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=io,"user"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(lu));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="USER"):(io=t,t=o)):(io=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=io,"session_user"===r.substr(io,12).toLowerCase()?(e=r.substr(io,12),io+=12):(e=o,0===vo&&wo(pu));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="SESSION_USER"):(io=t,t=o)):(io=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=io,"system_user"===r.substr(io,11).toLowerCase()?(e=r.substr(io,11),io+=11):(e=o,0===vo&&wo(wu));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="SYSTEM_USER"):(io=t,t=o)):(io=t,t=o);return t}());return t}())!==o&&mi()!==o&&Ei()!==o&&mi()!==o&&(n=hi())!==o?(t=e=function(r){return {type:"function",name:r,args:{type:"expr_list",value:[]}}}(e)):(io=t,t=o),t===o&&(t=function(){var t,e,n,u,s;t=io,(e=function(){var t,e,n,u;t=io,"extract"===r.substr(io,7).toLowerCase()?(e=r.substr(io,7),io+=7):(e=o,0===vo&&wo(Rn));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="EXTRACT"):(io=t,t=o)):(io=t,t=o);return t}())!==o&&mi()!==o&&Ei()!==o&&mi()!==o&&(n=function(){var t,e;"century"===r.substr(io,7).toLowerCase()?(t=r.substr(io,7),io+=7):(t=o,0===vo&&wo(Nt));t===o&&("day"===r.substr(io,3).toLowerCase()?(t=r.substr(io,3),io+=3):(t=o,0===vo&&wo(Rt)),t===o&&("decade"===r.substr(io,6).toLowerCase()?(t=r.substr(io,6),io+=6):(t=o,0===vo&&wo(_t)),t===o&&("dow"===r.substr(io,3).toLowerCase()?(t=r.substr(io,3),io+=3):(t=o,0===vo&&wo(gt)),t===o&&("doy"===r.substr(io,3).toLowerCase()?(t=r.substr(io,3),io+=3):(t=o,0===vo&&wo(Ot)),t===o&&("epoch"===r.substr(io,5).toLowerCase()?(t=r.substr(io,5),io+=5):(t=o,0===vo&&wo(Ut)),t===o&&("hour"===r.substr(io,4).toLowerCase()?(t=r.substr(io,4),io+=4):(t=o,0===vo&&wo(xt)),t===o&&("isodow"===r.substr(io,6).toLowerCase()?(t=r.substr(io,6),io+=6):(t=o,0===vo&&wo(Mt)),t===o&&("isoyear"===r.substr(io,7).toLowerCase()?(t=r.substr(io,7),io+=7):(t=o,0===vo&&wo(Dt)),t===o&&("microseconds"===r.substr(io,12).toLowerCase()?(t=r.substr(io,12),io+=12):(t=o,0===vo&&wo(kt)),t===o&&("millennium"===r.substr(io,10).toLowerCase()?(t=r.substr(io,10),io+=10):(t=o,0===vo&&wo($t)),t===o&&("milliseconds"===r.substr(io,12).toLowerCase()?(t=r.substr(io,12),io+=12):(t=o,0===vo&&wo(Ft)),t===o&&("minute"===r.substr(io,6).toLowerCase()?(t=r.substr(io,6),io+=6):(t=o,0===vo&&wo(Pt)),t===o&&("month"===r.substr(io,5).toLowerCase()?(t=r.substr(io,5),io+=5):(t=o,0===vo&&wo(Ht)),t===o&&("quarter"===r.substr(io,7).toLowerCase()?(t=r.substr(io,7),io+=7):(t=o,0===vo&&wo(Gt)),t===o&&("second"===r.substr(io,6).toLowerCase()?(t=r.substr(io,6),io+=6):(t=o,0===vo&&wo(jt)),t===o&&("timezone"===r.substr(io,8).toLowerCase()?(t=r.substr(io,8),io+=8):(t=o,0===vo&&wo(Yt)),t===o&&("timezone_hour"===r.substr(io,13).toLowerCase()?(t=r.substr(io,13),io+=13):(t=o,0===vo&&wo(Bt)),t===o&&("timezone_minute"===r.substr(io,15).toLowerCase()?(t=r.substr(io,15),io+=15):(t=o,0===vo&&wo(Xt)),t===o&&("week"===r.substr(io,4).toLowerCase()?(t=r.substr(io,4),io+=4):(t=o,0===vo&&wo(Wt)),t===o&&(t=io,"year"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(Vt)),e!==o&&(e=f),t=e))))))))))))))))))));return t}())!==o&&mi()!==o&&da()!==o&&mi()!==o?((u=ei())===o&&(u=ui())===o&&(u=ti()),u===o&&(u=null),u!==o&&mi()!==o&&(s=ws())!==o&&mi()!==o&&hi()!==o?(e=function(r,t,e,n){return {type:r.toLowerCase(),args:{field:t,cast_type:e,source:n}}}(e,n,u,s),t=e):(io=t,t=o)):(io=t,t=o);return t}())),t}function Gs(){var t;return (t=Bs())===o&&(t=Ks())===o&&(t=function(){var t,e;t=io,(e=function(){var t,e,n,u;t=io,"true"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(Te));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o);return t}())!==o&&(e={type:"bool",value:!0});(t=e)===o&&(t=io,(e=function(){var t,e,n,u;t=io,"false"===r.substr(io,5).toLowerCase()?(e=r.substr(io,5),io+=5):(e=o,0===vo&&wo(Se));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o);return t}())!==o&&(e={type:"bool",value:!1}),t=e);return t}())===o&&(t=js())===o&&(t=function(){var t,e,n,u,s,a,i;t=io,(e=ti())===o&&(e=Qa())===o&&(e=ei())===o&&(e=ri());if(e!==o)if(mi()!==o){if(n=io,39===r.charCodeAt(io)?(u="'",io++):(u=o,0===vo&&wo(wr)),u!==o){for(s=[],a=Ws();a!==o;)s.push(a),a=Ws();s!==o?(39===r.charCodeAt(io)?(a="'",io++):(a=o,0===vo&&wo(wr)),a!==o?n=u=[u,s,a]:(io=n,n=o)):(io=n,n=o);}else io=n,n=o;n!==o?(c=n,e={type:e.toLowerCase(),value:c[1].join("")},t=e):(io=t,t=o);}else io=t,t=o;else io=t,t=o;var c;t===o&&(t=io,(e=oi())!==o&&mi()!==o?((n=Ei())===o&&(n=null),n!==o&&(u=mi())!==o?((s=hi())===o&&(s=null),s!==o?((a=(a=function(r,t,e){if(t&&e)return !0}(0,n,s))?o:void 0)!==o&&mi()!==o?("on update current_timestamp"===r.substr(io,27).toLowerCase()?(i=r.substr(io,27),io+=27):(i=o,0===vo&&wo(Kt)),i===o&&(i=null),i!==o?(e=function(r,t,e,n){return {type:"origin",value:(n?`${r} ${n}`:r).toLowerCase()}}(e,0,0,i),t=e):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o)):(io=t,t=o));return t}()),t}function js(){var t,e;return t=io,(e=function(){var t,e,n,u;t=io,"null"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(Ae));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o);return t}())!==o&&(e={type:"null",value:null}),t=e}function Ys(){var t,e;return t=io,(e=function(){var t,e,n,u;t=io,"not null"===r.substr(io,8).toLowerCase()?(e=r.substr(io,8),io+=8):(e=o,0===vo&&wo(ye));e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o);return t}())!==o&&(e={type:"not null",value:"not null"}),t=e}function Bs(){var t,e,n,u,s;if(t=io,e=io,39===r.charCodeAt(io)?(n="'",io++):(n=o,0===vo&&wo(wr)),n!==o){for(u=[],s=Ws();s!==o;)u.push(s),s=Ws();u!==o?(39===r.charCodeAt(io)?(s="'",io++):(s=o,0===vo&&wo(wr)),s!==o?e=n=[n,u,s]:(io=e,e=o)):(io=e,e=o);}else io=e,e=o;if(e!==o&&(e={type:"single_quote_string",value:e[1].join("")}),(t=e)===o){if(t=io,e=io,34===r.charCodeAt(io)?(n='"',io++):(n=o,0===vo&&wo(ft)),n!==o){for(u=[],s=Xs();s!==o;)u.push(s),s=Xs();u!==o?(34===r.charCodeAt(io)?(s='"',io++):(s=o,0===vo&&wo(ft)),s!==o?e=n=[n,u,s]:(io=e,e=o)):(io=e,e=o);}else io=e,e=o;e!==o?(n=io,vo++,u=Ci(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e=function(r){return {type:"double_quote_string",value:r[1].join("")}}(e)):(io=t,t=o)):(io=t,t=o);}return t}function Xs(){var t;return qt.test(r.charAt(io))?(t=r.charAt(io),io++):(t=o,0===vo&&wo(Zt)),t===o&&(t=Vs()),t}function Ws(){var t;return zt.test(r.charAt(io))?(t=r.charAt(io),io++):(t=o,0===vo&&wo(Jt)),t===o&&(t=Vs()),t}function Vs(){var t,e,n,u,s,a,i,c,l,f;return t=io,"\\'"===r.substr(io,2)?(e="\\'",io+=2):(e=o,0===vo&&wo(Qt)),e!==o&&(e="'"),(t=e)===o&&(t=io,'\\"'===r.substr(io,2)?(e='\\"',io+=2):(e=o,0===vo&&wo(re)),e!==o&&(e='"'),(t=e)===o&&(t=io,"\\\\"===r.substr(io,2)?(e="\\\\",io+=2):(e=o,0===vo&&wo(te)),e!==o&&(e="\\"),(t=e)===o&&(t=io,"\\/"===r.substr(io,2)?(e="\\/",io+=2):(e=o,0===vo&&wo(ee)),e!==o&&(e="/"),(t=e)===o&&(t=io,"\\b"===r.substr(io,2)?(e="\\b",io+=2):(e=o,0===vo&&wo(ne)),e!==o&&(e="\b"),(t=e)===o&&(t=io,"\\f"===r.substr(io,2)?(e="\\f",io+=2):(e=o,0===vo&&wo(ue)),e!==o&&(e="\f"),(t=e)===o&&(t=io,"\\n"===r.substr(io,2)?(e="\\n",io+=2):(e=o,0===vo&&wo(oe)),e!==o&&(e="\n"),(t=e)===o&&(t=io,"\\r"===r.substr(io,2)?(e="\\r",io+=2):(e=o,0===vo&&wo(se)),e!==o&&(e="\r"),(t=e)===o&&(t=io,"\\t"===r.substr(io,2)?(e="\\t",io+=2):(e=o,0===vo&&wo(ae)),e!==o&&(e="\t"),(t=e)===o&&(t=io,"\\u"===r.substr(io,2)?(e="\\u",io+=2):(e=o,0===vo&&wo(ie)),e!==o&&(n=ra())!==o&&(u=ra())!==o&&(s=ra())!==o&&(a=ra())!==o?(i=n,c=u,l=s,f=a,t=e=String.fromCharCode(parseInt("0x"+i+c+l+f))):(io=t,t=o),t===o&&(t=io,92===r.charCodeAt(io)?(e="\\",io++):(e=o,0===vo&&wo(ce)),e!==o&&(e="\\"),t=e)))))))))),t}function Ks(){var r,t,e;return r=io,(t=function(){var r,t,e,n;r=io,(t=qs())!==o&&(e=Zs())!==o&&(n=zs())!==o?(r=t={type:"bigint",value:t+e+n}):(io=r,r=o);r===o&&(r=io,(t=qs())!==o&&(e=Zs())!==o?(t=function(r,t){const e=r+t;return Vi(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e),r=t):(io=r,r=o),r===o&&(r=io,(t=qs())!==o&&(e=zs())!==o?(t=function(r,t){return {type:"bigint",value:r+t}}(t,e),r=t):(io=r,r=o),r===o&&(r=io,(t=qs())!==o&&(t=function(r){return Vi(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t)));return r}())!==o&&(t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),r=t}function qs(){var t,e,n;return (t=Js())===o&&(t=Qs())===o&&(t=io,45===r.charCodeAt(io)?(e="-",io++):(e=o,0===vo&&wo(ot)),e===o&&(43===r.charCodeAt(io)?(e="+",io++):(e=o,0===vo&&wo(ut))),e!==o&&(n=Js())!==o?(t=e="-"+n):(io=t,t=o),t===o&&(t=io,45===r.charCodeAt(io)?(e="-",io++):(e=o,0===vo&&wo(ot)),e===o&&(43===r.charCodeAt(io)?(e="+",io++):(e=o,0===vo&&wo(ut))),e!==o&&(n=Qs())!==o?(t=e="-"+n):(io=t,t=o))),t}function Zs(){var t,e,n;return t=io,46===r.charCodeAt(io)?(e=".",io++):(e=o,0===vo&&wo(ve)),e!==o&&(n=Js())!==o?(t=e="."+n):(io=t,t=o),t}function zs(){var t,e,n;return t=io,(e=function(){var t,e,n;t=io,pe.test(r.charAt(io))?(e=r.charAt(io),io++):(e=o,0===vo&&wo(we));e!==o?(Ee.test(r.charAt(io))?(n=r.charAt(io),io++):(n=o,0===vo&&wo(he)),n===o&&(n=null),n!==o?(t=e=e+(null!==(u=n)?u:"")):(io=t,t=o)):(io=t,t=o);var u;return t}())!==o&&(n=Js())!==o?(t=e=e+n):(io=t,t=o),t}function Js(){var r,t,e;if(r=io,t=[],(e=Qs())!==o)for(;e!==o;)t.push(e),e=Qs();else t=o;return t!==o&&(t=t.join("")),r=t}function Qs(){var t;return be.test(r.charAt(io))?(t=r.charAt(io),io++):(t=o,0===vo&&wo(de)),t}function ra(){var t;return Le.test(r.charAt(io))?(t=r.charAt(io),io++):(t=o,0===vo&&wo(Ce)),t}function ta(){var t,e,n,u;return t=io,"default"===r.substr(io,7).toLowerCase()?(e=r.substr(io,7),io+=7):(e=o,0===vo&&wo(y)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o),t}function ea(){var t,e,n,u;return t=io,"to"===r.substr(io,2).toLowerCase()?(e=r.substr(io,2),io+=2):(e=o,0===vo&&wo(me)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o),t}function na(){var t,e,n,u;return t=io,"drop"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(Ie)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="DROP"):(io=t,t=o)):(io=t,t=o),t}function ua(){var t,e,n,u;return t=io,"update"===r.substr(io,6).toLowerCase()?(e=r.substr(io,6),io+=6):(e=o,0===vo&&wo(ge)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o),t}function oa(){var t,e,n,u;return t=io,"create"===r.substr(io,6).toLowerCase()?(e=r.substr(io,6),io+=6):(e=o,0===vo&&wo(Oe)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o),t}function sa(){var t,e,n,u;return t=io,"temporary"===r.substr(io,9).toLowerCase()?(e=r.substr(io,9),io+=9):(e=o,0===vo&&wo(Ue)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o),t}function aa(){var t,e,n,u;return t=io,"if not exists"===r.substr(io,13).toLowerCase()?(e=r.substr(io,13),io+=13):(e=o,0===vo&&wo(xe)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o),t}function ia(){var t,e,n,u;return t=io,"delete"===r.substr(io,6).toLowerCase()?(e=r.substr(io,6),io+=6):(e=o,0===vo&&wo(Me)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o),t}function ca(){var t,e,n,u;return t=io,"insert"===r.substr(io,6).toLowerCase()?(e=r.substr(io,6),io+=6):(e=o,0===vo&&wo(De)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o),t}function la(){var t,e,n,u;return t=io,"replace"===r.substr(io,7).toLowerCase()?(e=r.substr(io,7),io+=7):(e=o,0===vo&&wo($e)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o),t}function fa(){var t,e,n,u;return t=io,"rename"===r.substr(io,6).toLowerCase()?(e=r.substr(io,6),io+=6):(e=o,0===vo&&wo(Pe)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o),t}function va(){var t,e,n,u;return t=io,"partition"===r.substr(io,9).toLowerCase()?(e=r.substr(io,9),io+=9):(e=o,0===vo&&wo(Ge)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="PARTITION"):(io=t,t=o)):(io=t,t=o),t}function ba(){var t,e,n,u;return t=io,"into"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(je)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o),t}function da(){var t,e,n,u;return t=io,"from"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(Ye)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o),t}function La(){var t,e,n,u;return t=io,"set"===r.substr(io,3).toLowerCase()?(e=r.substr(io,3),io+=3):(e=o,0===vo&&wo(Be)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o),t}function Ca(){var t,e,n,u;return t=io,"as"===r.substr(io,2).toLowerCase()?(e=r.substr(io,2),io+=2):(e=o,0===vo&&wo(Xe)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o),t}function pa(){var t,e,n,u;return t=io,"table"===r.substr(io,5).toLowerCase()?(e=r.substr(io,5),io+=5):(e=o,0===vo&&wo(We)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="TABLE"):(io=t,t=o)):(io=t,t=o),t}function wa(){var t,e,n,u;return t=io,"on"===r.substr(io,2).toLowerCase()?(e=r.substr(io,2),io+=2):(e=o,0===vo&&wo(Z)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o),t}function Ea(){var t,e,n,u;return t=io,"join"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(Je)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o),t}function ha(){var t,e,n,u;return t=io,"outer"===r.substr(io,5).toLowerCase()?(e=r.substr(io,5),io+=5):(e=o,0===vo&&wo(Qe)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o),t}function Aa(){var t,e,n,u;return t=io,"union"===r.substr(io,5).toLowerCase()?(e=r.substr(io,5),io+=5):(e=o,0===vo&&wo(rn)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o),t}function ya(){var t,e,n,u;return t=io,"using"===r.substr(io,5).toLowerCase()?(e=r.substr(io,5),io+=5):(e=o,0===vo&&wo(en)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o),t}function Ta(){var t,e,n,u;return t=io,"with"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(Pr)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o),t}function ma(){var t,e,n,u;return t=io,"by"===r.substr(io,2).toLowerCase()?(e=r.substr(io,2),io+=2):(e=o,0===vo&&wo(on)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o),t}function Sa(){var t,e,n,u;return t=io,"asc"===r.substr(io,3).toLowerCase()?(e=r.substr(io,3),io+=3):(e=o,0===vo&&wo(fn)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="ASC"):(io=t,t=o)):(io=t,t=o),t}function Ia(){var t,e,n,u;return t=io,"desc"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(vn)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="DESC"):(io=t,t=o)):(io=t,t=o),t}function Na(){var t,e,n,u;return t=io,"all"===r.substr(io,3).toLowerCase()?(e=r.substr(io,3),io+=3):(e=o,0===vo&&wo(bn)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="ALL"):(io=t,t=o)):(io=t,t=o),t}function Ra(){var t,e,n,u;return t=io,"distinct"===r.substr(io,8).toLowerCase()?(e=r.substr(io,8),io+=8):(e=o,0===vo&&wo(dn)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="DISTINCT"):(io=t,t=o)):(io=t,t=o),t}function _a(){var t,e,n,u;return t=io,"between"===r.substr(io,7).toLowerCase()?(e=r.substr(io,7),io+=7):(e=o,0===vo&&wo(Ln)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="BETWEEN"):(io=t,t=o)):(io=t,t=o),t}function ga(){var t,e,n,u;return t=io,"in"===r.substr(io,2).toLowerCase()?(e=r.substr(io,2),io+=2):(e=o,0===vo&&wo(yr)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="IN"):(io=t,t=o)):(io=t,t=o),t}function Oa(){var t,e,n,u;return t=io,"is"===r.substr(io,2).toLowerCase()?(e=r.substr(io,2),io+=2):(e=o,0===vo&&wo(Cn)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="IS"):(io=t,t=o)):(io=t,t=o),t}function Ua(){var t,e,n,u;return t=io,"like"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(pn)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="LIKE"):(io=t,t=o)):(io=t,t=o),t}function xa(){var t,e,n,u;return t=io,"ilike"===r.substr(io,5).toLowerCase()?(e=r.substr(io,5),io+=5):(e=o,0===vo&&wo(wn)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="ILIKE"):(io=t,t=o)):(io=t,t=o),t}function Ma(){var t,e,n,u;return t=io,"exists"===r.substr(io,6).toLowerCase()?(e=r.substr(io,6),io+=6):(e=o,0===vo&&wo(En)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="EXISTS"):(io=t,t=o)):(io=t,t=o),t}function Da(){var t,e,n,u;return t=io,"not"===r.substr(io,3).toLowerCase()?(e=r.substr(io,3),io+=3):(e=o,0===vo&&wo(rr)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="NOT"):(io=t,t=o)):(io=t,t=o),t}function ka(){var t,e,n,u;return t=io,"and"===r.substr(io,3).toLowerCase()?(e=r.substr(io,3),io+=3):(e=o,0===vo&&wo(hn)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="AND"):(io=t,t=o)):(io=t,t=o),t}function $a(){var t,e,n,u;return t=io,"or"===r.substr(io,2).toLowerCase()?(e=r.substr(io,2),io+=2):(e=o,0===vo&&wo(An)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="OR"):(io=t,t=o)):(io=t,t=o),t}function Fa(){var t,e,n,u;return t=io,"case"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(gn)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o),t}function Pa(){var t,e,n,u;return t=io,"when"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(On)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o),t}function Ha(){var t,e,n,u;return t=io,"cast"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(Dn)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?t=e=[e,n]:(io=t,t=o)):(io=t,t=o),t}function Ga(){var t,e,n,u;return t=io,"char"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(Fn)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="CHAR"):(io=t,t=o)):(io=t,t=o),t}function ja(){var t,e,n,u;return t=io,"varchar"===r.substr(io,7).toLowerCase()?(e=r.substr(io,7),io+=7):(e=o,0===vo&&wo(Pn)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="VARCHAR"):(io=t,t=o)):(io=t,t=o),t}function Ya(){var t,e,n,u;return t=io,"numeric"===r.substr(io,7).toLowerCase()?(e=r.substr(io,7),io+=7):(e=o,0===vo&&wo(Hn)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="NUMERIC"):(io=t,t=o)):(io=t,t=o),t}function Ba(){var t,e,n,u;return t=io,"decimal"===r.substr(io,7).toLowerCase()?(e=r.substr(io,7),io+=7):(e=o,0===vo&&wo(Gn)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="DECIMAL"):(io=t,t=o)):(io=t,t=o),t}function Xa(){var t,e,n,u;return t=io,"unsigned"===r.substr(io,8).toLowerCase()?(e=r.substr(io,8),io+=8):(e=o,0===vo&&wo(Yn)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="UNSIGNED"):(io=t,t=o)):(io=t,t=o),t}function Wa(){var t,e,n,u;return t=io,"int"===r.substr(io,3).toLowerCase()?(e=r.substr(io,3),io+=3):(e=o,0===vo&&wo(Bn)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="INT"):(io=t,t=o)):(io=t,t=o),t}function Va(){var t,e,n,u;return t=io,"integer"===r.substr(io,7).toLowerCase()?(e=r.substr(io,7),io+=7):(e=o,0===vo&&wo(Wn)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="INTEGER"):(io=t,t=o)):(io=t,t=o),t}function Ka(){var t,e,n,u;return t=io,"smallint"===r.substr(io,8).toLowerCase()?(e=r.substr(io,8),io+=8):(e=o,0===vo&&wo(Zn)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="SMALLINT"):(io=t,t=o)):(io=t,t=o),t}function qa(){var t,e,n,u;return t=io,"tinyint"===r.substr(io,7).toLowerCase()?(e=r.substr(io,7),io+=7):(e=o,0===vo&&wo(zn)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="TINYINT"):(io=t,t=o)):(io=t,t=o),t}function Za(){var t,e,n,u;return t=io,"bigint"===r.substr(io,6).toLowerCase()?(e=r.substr(io,6),io+=6):(e=o,0===vo&&wo(eu)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="BIGINT"):(io=t,t=o)):(io=t,t=o),t}function za(){var t,e,n,u;return t=io,"float"===r.substr(io,5).toLowerCase()?(e=r.substr(io,5),io+=5):(e=o,0===vo&&wo(nu)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="FLOAT"):(io=t,t=o)):(io=t,t=o),t}function Ja(){var t,e,n,u;return t=io,"double"===r.substr(io,6).toLowerCase()?(e=r.substr(io,6),io+=6):(e=o,0===vo&&wo(uu)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="DOUBLE"):(io=t,t=o)):(io=t,t=o),t}function Qa(){var t,e,n,u;return t=io,"date"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(ou)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="DATE"):(io=t,t=o)):(io=t,t=o),t}function ri(){var t,e,n,u;return t=io,"datetime"===r.substr(io,8).toLowerCase()?(e=r.substr(io,8),io+=8):(e=o,0===vo&&wo(su)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="DATETIME"):(io=t,t=o)):(io=t,t=o),t}function ti(){var t,e,n,u;return t=io,"time"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(au)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="TIME"):(io=t,t=o)):(io=t,t=o),t}function ei(){var t,e,n,u;return t=io,"timestamp"===r.substr(io,9).toLowerCase()?(e=r.substr(io,9),io+=9):(e=o,0===vo&&wo(iu)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="TIMESTAMP"):(io=t,t=o)):(io=t,t=o),t}function ni(){var t,e,n,u;return t=io,"truncate"===r.substr(io,8).toLowerCase()?(e=r.substr(io,8),io+=8):(e=o,0===vo&&wo(cu)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="TRUNCATE"):(io=t,t=o)):(io=t,t=o),t}function ui(){var t,e,n,u;return t=io,"interval"===r.substr(io,8).toLowerCase()?(e=r.substr(io,8),io+=8):(e=o,0===vo&&wo(bu)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="INTERVAL"):(io=t,t=o)):(io=t,t=o),t}function oi(){var t,e,n,u;return t=io,"current_timestamp"===r.substr(io,17).toLowerCase()?(e=r.substr(io,17),io+=17):(e=o,0===vo&&wo(Lu)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="CURRENT_TIMESTAMP"):(io=t,t=o)):(io=t,t=o),t}function si(){var t;return (t=function(){var t;return "@@"===r.substr(io,2)?(t="@@",io+=2):(t=o,0===vo&&wo(Su)),t}())===o&&(t=function(){var t;return 64===r.charCodeAt(io)?(t="@",io++):(t=o,0===vo&&wo(mu)),t}())===o&&(t=function(){var t;return 36===r.charCodeAt(io)?(t="$",io++):(t=o,0===vo&&wo(ct)),t}()),t}function ai(){var t;return "::"===r.substr(io,2)?(t="::",io+=2):(t=o,0===vo&&wo(Ru)),t}function ii(){var t;return 61===r.charCodeAt(io)?(t="=",io++):(t=o,0===vo&&wo(Yr)),t}function ci(){var t,e,n,u;return t=io,"add"===r.substr(io,3).toLowerCase()?(e=r.substr(io,3),io+=3):(e=o,0===vo&&wo(gu)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="ADD"):(io=t,t=o)):(io=t,t=o),t}function li(){var t,e,n,u;return t=io,"column"===r.substr(io,6).toLowerCase()?(e=r.substr(io,6),io+=6):(e=o,0===vo&&wo(Ou)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="COLUMN"):(io=t,t=o)):(io=t,t=o),t}function fi(){var t,e,n,u;return t=io,"index"===r.substr(io,5).toLowerCase()?(e=r.substr(io,5),io+=5):(e=o,0===vo&&wo(Uu)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="INDEX"):(io=t,t=o)):(io=t,t=o),t}function vi(){var t,e,n,u;return t=io,"key"===r.substr(io,3).toLowerCase()?(e=r.substr(io,3),io+=3):(e=o,0===vo&&wo(w)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="KEY"):(io=t,t=o)):(io=t,t=o),t}function bi(){var t,e,n,u;return t=io,"unique"===r.substr(io,6).toLowerCase()?(e=r.substr(io,6),io+=6):(e=o,0===vo&&wo(C)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="UNIQUE"):(io=t,t=o)):(io=t,t=o),t}function di(){var t,e,n,u;return t=io,"comment"===r.substr(io,7).toLowerCase()?(e=r.substr(io,7),io+=7):(e=o,0===vo&&wo(Du)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="COMMENT"):(io=t,t=o)):(io=t,t=o),t}function Li(){var t,e,n,u;return t=io,"constraint"===r.substr(io,10).toLowerCase()?(e=r.substr(io,10),io+=10):(e=o,0===vo&&wo(ku)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="CONSTRAINT"):(io=t,t=o)):(io=t,t=o),t}function Ci(){var t;return 46===r.charCodeAt(io)?(t=".",io++):(t=o,0===vo&&wo(ve)),t}function pi(){var t;return 44===r.charCodeAt(io)?(t=",",io++):(t=o,0===vo&&wo(Xu)),t}function wi(){var t;return 42===r.charCodeAt(io)?(t="*",io++):(t=o,0===vo&&wo(st)),t}function Ei(){var t;return 40===r.charCodeAt(io)?(t="(",io++):(t=o,0===vo&&wo(Ur)),t}function hi(){var t;return 41===r.charCodeAt(io)?(t=")",io++):(t=o,0===vo&&wo(xr)),t}function Ai(){var t;return 59===r.charCodeAt(io)?(t=";",io++):(t=o,0===vo&&wo(Ku)),t}function yi(){var t;return "||"===r.substr(io,2)?(t="||",io+=2):(t=o,0===vo&&wo(Qu)),t}function Ti(){var t;return (t=yi())===o&&(t=function(){var t;return "&&"===r.substr(io,2)?(t="&&",io+=2):(t=o,0===vo&&wo(ro)),t}()),t}function mi(){var r,t;for(r=[],(t=_i())===o&&(t=Ii());t!==o;)r.push(t),(t=_i())===o&&(t=Ii());return r}function Si(){var r,t;if(r=[],(t=_i())===o&&(t=Ii()),t!==o)for(;t!==o;)r.push(t),(t=_i())===o&&(t=Ii());else r=o;return r}function Ii(){var t;return (t=function(){var t,e,n,u,s,a;t=io,"/*"===r.substr(io,2)?(e="/*",io+=2):(e=o,0===vo&&wo(to));if(e!==o){for(n=[],u=io,s=io,vo++,"*/"===r.substr(io,2)?(a="*/",io+=2):(a=o,0===vo&&wo(eo)),vo--,a===o?s=void 0:(io=s,s=o),s!==o&&(a=Ri())!==o?u=s=[s,a]:(io=u,u=o);u!==o;)n.push(u),u=io,s=io,vo++,"*/"===r.substr(io,2)?(a="*/",io+=2):(a=o,0===vo&&wo(eo)),vo--,a===o?s=void 0:(io=s,s=o),s!==o&&(a=Ri())!==o?u=s=[s,a]:(io=u,u=o);n!==o?("*/"===r.substr(io,2)?(u="*/",io+=2):(u=o,0===vo&&wo(eo)),u!==o?t=e=[e,n,u]:(io=t,t=o)):(io=t,t=o);}else io=t,t=o;return t}())===o&&(t=function(){var t,e,n,u,s,a;t=io,"--"===r.substr(io,2)?(e="--",io+=2):(e=o,0===vo&&wo(no));if(e!==o){for(n=[],u=io,s=io,vo++,a=gi(),vo--,a===o?s=void 0:(io=s,s=o),s!==o&&(a=Ri())!==o?u=s=[s,a]:(io=u,u=o);u!==o;)n.push(u),u=io,s=io,vo++,a=gi(),vo--,a===o?s=void 0:(io=s,s=o),s!==o&&(a=Ri())!==o?u=s=[s,a]:(io=u,u=o);n!==o?t=e=[e,n]:(io=t,t=o);}else io=t,t=o;return t}()),t}function Ni(){var r,t,e,n,u,s,a;return r=io,(t=di())!==o&&mi()!==o?((e=ii())===o&&(e=null),e!==o&&mi()!==o&&(n=Bs())!==o?(s=e,a=n,r=t={type:(u=t).toLowerCase(),keyword:u.toLowerCase(),symbol:s,value:a}):(io=r,r=o)):(io=r,r=o),r}function Ri(){var t;return r.length>io?(t=r.charAt(io),io++):(t=o,0===vo&&wo(uo)),t}function _i(){var t;return oo.test(r.charAt(io))?(t=r.charAt(io),io++):(t=o,0===vo&&wo(so)),t}function gi(){var t,e;if((t=function(){var t,e;t=io,vo++,r.length>io?(e=r.charAt(io),io++):(e=o,0===vo&&wo(uo));vo--,e===o?t=void 0:(io=t,t=o);return t}())===o)if(t=[],le.test(r.charAt(io))?(e=r.charAt(io),io++):(e=o,0===vo&&wo(fe)),e!==o)for(;e!==o;)t.push(e),le.test(r.charAt(io))?(e=r.charAt(io),io++):(e=o,0===vo&&wo(fe));else t=o;return t}function Oi(){var t,e;return t=io,Qi=[],(void 0)!==o&&mi()!==o?((e=Ui())===o&&(e=function(){var t,e;t=io,function(){var t;return "return"===r.substr(io,6).toLowerCase()?(t=r.substr(io,6),io+=6):(t=o,0===vo&&wo(Iu)),t}()!==o&&mi()!==o&&(e=xi())!==o?(t={type:"return",expr:e}):(io=t,t=o);return t}()),e!==o?(t={type:"proc",stmt:e,vars:Qi}):(io=t,t=o)):(io=t,t=o),t}function Ui(){var t,e,n,u;return t=io,(e=Hi())===o&&(e=Gi()),e!==o&&mi()!==o?((n=function(){var t;return ":="===r.substr(io,2)?(t=":=",io+=2):(t=o,0===vo&&wo(Nu)),t}())===o&&(n=ii()),n!==o&&mi()!==o&&(u=xi())!==o?(t=e={type:"assign",left:e,symbol:n,right:u}):(io=t,t=o)):(io=t,t=o),t}function xi(){var t;return (t=$o())===o&&(t=function(){var r,t,e,n,u;r=io,(t=Hi())!==o&&mi()!==o&&(e=Qo())!==o&&mi()!==o&&(n=Hi())!==o&&mi()!==o&&(u=ts())!==o?(r=t={type:"join",ltable:t,rtable:n,op:e,on:u}):(io=r,r=o);return r}())===o&&(t=Mi())===o&&(t=function(){var t,e;t=io,function(){var t;return 91===r.charCodeAt(io)?(t="[",io++):(t=o,0===vo&&wo(Wu)),t}()!==o&&mi()!==o&&(e=Pi())!==o&&mi()!==o&&function(){var t;return 93===r.charCodeAt(io)?(t="]",io++):(t=o,0===vo&&wo(Vu)),t}()!==o?(t={type:"array",value:e}):(io=t,t=o);return t}()),t}function Mi(){var r,t,e,n,u,s,a,i;if(r=io,(t=Di())!==o){for(e=[],n=io,(u=mi())!==o&&(s=Ss())!==o&&(a=mi())!==o&&(i=Di())!==o?n=u=[u,s,a,i]:(io=n,n=o);n!==o;)e.push(n),n=io,(u=mi())!==o&&(s=Ss())!==o&&(a=mi())!==o&&(i=Di())!==o?n=u=[u,s,a,i]:(io=n,n=o);e!==o?(r=t=Br(t,e)):(io=r,r=o);}else io=r,r=o;return r}function Di(){var r,t,e,n,u,s,a,i;if(r=io,(t=ki())!==o){for(e=[],n=io,(u=mi())!==o&&(s=Ns())!==o&&(a=mi())!==o&&(i=ki())!==o?n=u=[u,s,a,i]:(io=n,n=o);n!==o;)e.push(n),n=io,(u=mi())!==o&&(s=Ns())!==o&&(a=mi())!==o&&(i=ki())!==o?n=u=[u,s,a,i]:(io=n,n=o);e!==o?(r=t=Br(t,e)):(io=r,r=o);}else io=r,r=o;return r}function ki(){var r,t,e;return (r=Gs())===o&&(r=Hi())===o&&(r=Fi())===o&&(r=$s())===o&&(r=io,Ei()!==o&&mi()!==o&&(t=Mi())!==o&&mi()!==o&&hi()!==o?((e=t).parentheses=!0,r=e):(io=r,r=o)),r}function $i(){var r,t,e,n,u,s,a;return r=io,(t=gs())!==o?(e=io,(n=mi())!==o&&(u=Ci())!==o&&(s=mi())!==o&&(a=gs())!==o?e=n=[n,u,s,a]:(io=e,e=o),e===o&&(e=null),e!==o?(r=t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e)):(io=r,r=o)):(io=r,r=o),r}function Fi(){var r,t,e;return r=io,(t=$i())!==o&&mi()!==o&&Ei()!==o&&mi()!==o?((e=Pi())===o&&(e=null),e!==o&&mi()!==o&&hi()!==o?(r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(io=r,r=o)):(io=r,r=o),r===o&&(r=io,(t=$i())!==o&&(t=function(r){return {type:"function",name:r,args:null}}(t)),r=t),r}function Pi(){var r,t,e,n,u,s,a,i;if(r=io,(t=ki())!==o){for(e=[],n=io,(u=mi())!==o&&(s=pi())!==o&&(a=mi())!==o&&(i=ki())!==o?n=u=[u,s,a,i]:(io=n,n=o);n!==o;)e.push(n),n=io,(u=mi())!==o&&(s=pi())!==o&&(a=mi())!==o&&(i=ki())!==o?n=u=[u,s,a,i]:(io=n,n=o);e!==o?(r=t=Ki(t,e)):(io=r,r=o);}else io=r,r=o;return r}function Hi(){var r,t,e,n,u;return r=io,(t=si())!==o&&(e=Gi())!==o?(n=t,u=e,r=t={type:"var",...u,prefix:n}):(io=r,r=o),r}function Gi(){var t,e,n,u,s;return t=io,(e=xs())!==o&&(n=function(){var t,e,n,u,s;t=io,e=[],n=io,46===r.charCodeAt(io)?(u=".",io++):(u=o,0===vo&&wo(ve));u!==o&&(s=xs())!==o?n=u=[u,s]:(io=n,n=o);for(;n!==o;)e.push(n),n=io,46===r.charCodeAt(io)?(u=".",io++):(u=o,0===vo&&wo(ve)),u!==o&&(s=xs())!==o?n=u=[u,s]:(io=n,n=o);e!==o&&(e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return t=e}())!==o?(u=e,s=n,Qi.push(u),t=e={type:"var",name:u,members:s,prefix:null}):(io=t,t=o),t}function ji(){var t;return (t=function(){var t,e,n,u;t=io,(e=Ga())===o&&(e=ja());if(e!==o)if(mi()!==o)if(Ei()!==o)if(mi()!==o){if(n=[],be.test(r.charAt(io))?(u=r.charAt(io),io++):(u=o,0===vo&&wo(de)),u!==o)for(;u!==o;)n.push(u),be.test(r.charAt(io))?(u=r.charAt(io),io++):(u=o,0===vo&&wo(de));else n=o;n!==o&&(u=mi())!==o&&hi()!==o?(e={dataType:e,length:parseInt(n.join(""),10)},t=e):(io=t,t=o);}else io=t,t=o;else io=t,t=o;else io=t,t=o;else io=t,t=o;t===o&&(t=io,(e=Ga())!==o&&(e=function(r){return {dataType:r}}(e)),(t=e)===o&&(t=io,(e=ja())!==o&&(e=ao(e)),t=e));return t}())===o&&(t=function(){var t,e,n,u,s,a,i,c,l,f,v,b;t=io,(e=Ya())===o&&(e=Ba())===o&&(e=Wa())===o&&(e=Va())===o&&(e=Ka())===o&&(e=qa())===o&&(e=Za())===o&&(e=za())===o&&(e=Ja());if(e!==o)if((n=mi())!==o)if((u=Ei())!==o)if((s=mi())!==o){if(a=[],be.test(r.charAt(io))?(i=r.charAt(io),io++):(i=o,0===vo&&wo(de)),i!==o)for(;i!==o;)a.push(i),be.test(r.charAt(io))?(i=r.charAt(io),io++):(i=o,0===vo&&wo(de));else a=o;if(a!==o)if((i=mi())!==o){if(c=io,(l=pi())!==o)if((f=mi())!==o){if(v=[],be.test(r.charAt(io))?(b=r.charAt(io),io++):(b=o,0===vo&&wo(de)),b!==o)for(;b!==o;)v.push(b),be.test(r.charAt(io))?(b=r.charAt(io),io++):(b=o,0===vo&&wo(de));else v=o;v!==o?c=l=[l,f,v]:(io=c,c=o);}else io=c,c=o;else io=c,c=o;c===o&&(c=null),c!==o&&(l=mi())!==o&&(f=hi())!==o&&(v=mi())!==o?((b=Yi())===o&&(b=null),b!==o?(d=c,L=b,e={dataType:e,length:parseInt(a.join(""),10),scale:d&&parseInt(d[2].join(""),10),parentheses:!0,suffix:L},t=e):(io=t,t=o)):(io=t,t=o);}else io=t,t=o;else io=t,t=o;}else io=t,t=o;else io=t,t=o;else io=t,t=o;else io=t,t=o;var d,L;if(t===o){if(t=io,(e=Ya())===o&&(e=Ba())===o&&(e=Wa())===o&&(e=Va())===o&&(e=Ka())===o&&(e=qa())===o&&(e=Za())===o&&(e=za())===o&&(e=Ja()),e!==o){if(n=[],be.test(r.charAt(io))?(u=r.charAt(io),io++):(u=o,0===vo&&wo(de)),u!==o)for(;u!==o;)n.push(u),be.test(r.charAt(io))?(u=r.charAt(io),io++):(u=o,0===vo&&wo(de));else n=o;n!==o&&(u=mi())!==o?((s=Yi())===o&&(s=null),s!==o?(e=function(r,t,e){return {dataType:r,length:parseInt(t.join(""),10),suffix:e}}(e,n,s),t=e):(io=t,t=o)):(io=t,t=o);}else io=t,t=o;t===o&&(t=io,(e=Ya())===o&&(e=Ba())===o&&(e=Wa())===o&&(e=Va())===o&&(e=Ka())===o&&(e=qa())===o&&(e=Za())===o&&(e=za())===o&&(e=Ja()),e!==o&&(n=mi())!==o?((u=Yi())===o&&(u=null),u!==o&&(s=mi())!==o?(e=function(r,t){return {dataType:r,suffix:t}}(e,u),t=e):(io=t,t=o)):(io=t,t=o));}return t}())===o&&(t=function(){var t,e,n,u;t=io,(e=Qa())===o&&(e=ri())===o&&(e=ti())===o&&(e=ei());if(e!==o)if(mi()!==o)if(Ei()!==o)if(mi()!==o){if(n=[],be.test(r.charAt(io))?(u=r.charAt(io),io++):(u=o,0===vo&&wo(de)),u!==o)for(;u!==o;)n.push(u),be.test(r.charAt(io))?(u=r.charAt(io),io++):(u=o,0===vo&&wo(de));else n=o;n!==o&&(u=mi())!==o&&hi()!==o?(e={dataType:e,length:parseInt(n.join(""),10)},t=e):(io=t,t=o);}else io=t,t=o;else io=t,t=o;else io=t,t=o;else io=t,t=o;t===o&&(t=io,(e=Qa())===o&&(e=ri())===o&&(e=ti())===o&&(e=ei()),e!==o&&(e=ao(e)),t=e);return t}())===o&&(t=function(){var t,e;t=io,(e=function(){var t,e,n,u;return t=io,"json"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(Vn)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="JSON"):(io=t,t=o)):(io=t,t=o),t}())===o&&(e=function(){var t,e,n,u;return t=io,"jsonb"===r.substr(io,5).toLowerCase()?(e=r.substr(io,5),io+=5):(e=o,0===vo&&wo(Kn)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="JSONB"):(io=t,t=o)):(io=t,t=o),t}());e!==o&&(e=ao(e));return t=e}())===o&&(t=function(){var t,e;t=io,(e=function(){var t,e,n,u;return t=io,"geometry"===r.substr(io,8).toLowerCase()?(e=r.substr(io,8),io+=8):(e=o,0===vo&&wo(qn)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="GEOMETRY"):(io=t,t=o)):(io=t,t=o),t}())!==o&&(e={dataType:e});return t=e}())===o&&(t=function(){var t,e;t=io,(e=function(){var t,e,n,u;return t=io,"tinytext"===r.substr(io,8).toLowerCase()?(e=r.substr(io,8),io+=8):(e=o,0===vo&&wo(Jn)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="TINYTEXT"):(io=t,t=o)):(io=t,t=o),t}())===o&&(e=function(){var t,e,n,u;return t=io,"text"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(Qn)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="TEXT"):(io=t,t=o)):(io=t,t=o),t}())===o&&(e=function(){var t,e,n,u;return t=io,"mediumtext"===r.substr(io,10).toLowerCase()?(e=r.substr(io,10),io+=10):(e=o,0===vo&&wo(ru)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="MEDIUMTEXT"):(io=t,t=o)):(io=t,t=o),t}())===o&&(e=function(){var t,e,n,u;return t=io,"longtext"===r.substr(io,8).toLowerCase()?(e=r.substr(io,8),io+=8):(e=o,0===vo&&wo(tu)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="LONGTEXT"):(io=t,t=o)):(io=t,t=o),t}());e!==o&&(e={dataType:e});return t=e}())===o&&(t=function(){var t,e;t=io,(e=function(){var t,e,n,u;return t=io,"uuid"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(fu)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="UUID"):(io=t,t=o)):(io=t,t=o),t}())!==o&&(e={dataType:e});return t=e}())===o&&(t=function(){var t,e;t=io,(e=function(){var t,e,n,u;return t=io,"bool"===r.substr(io,4).toLowerCase()?(e=r.substr(io,4),io+=4):(e=o,0===vo&&wo(kn)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="BOOL"):(io=t,t=o)):(io=t,t=o),t}())===o&&(e=function(){var t,e,n,u;return t=io,"boolean"===r.substr(io,7).toLowerCase()?(e=r.substr(io,7),io+=7):(e=o,0===vo&&wo($n)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="BOOLEAN"):(io=t,t=o)):(io=t,t=o),t}());e!==o&&(e={dataType:e});return t=e}()),t}function Yi(){var t,e,n;return t=io,(e=Xa())===o&&(e=null),e!==o&&mi()!==o?((n=function(){var t,e,n,u;return t=io,"zerofill"===r.substr(io,8).toLowerCase()?(e=r.substr(io,8),io+=8):(e=o,0===vo&&wo(Xn)),e!==o?(n=io,vo++,u=Ms(),vo--,u===o?n=void 0:(io=n,n=o),n!==o?(t=e="ZEROFILL"):(io=t,t=o)):(io=t,t=o),t}())===o&&(n=null),n!==o?(t=e=function(r,t){const e=[];return r&&e.push(r),t&&e.push(t),e}(e,n)):(io=t,t=o)):(io=t,t=o),t}const Bi={ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,INTERVAL:!0,IS:!0,JOIN:!0,JSON:!0,KEY:!0,LIKE:!0,LIMIT:!0,NOT:!0,NULL:!0,NULLS:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,RECURSIVE:!0,RENAME:!0,RIGHT:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,STATUS:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,TYPE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WITH:!0,WHEN:!0,WHERE:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0};function Xi(r,t){return {type:"unary_expr",operator:r,expr:t}}function Wi(r,t,e){return {type:"binary_expr",operator:r,left:t,right:e}}function Vi(r){const t=n(Number.MAX_SAFE_INTEGER);return !(n(r)<t)}function Ki(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][3]);return e}function qi(r,t){let e=r;for(let r=0;r<t.length;r++)e=Wi(t[r][1],e,t[r][3]);return e}function Zi(r){const t=ec[r];return t||(r||null)}function zi(r){const t=[];for(let e of r.keys()){const r=e.split("::");if(!r){t.push(e);break}r&&r[1]&&(r[1]=Zi(r[1])),t.push(r.join("::"));}return t}function Ji(r){return "string"==typeof r?{type:"same",value:r}:r}let Qi=[];const rc=new Set,tc=new Set,ec={};if((e=a())!==o&&io===r.length)return e;throw e!==o&&io<r.length&&wo({type:"end"}),Eo(fo,lo<r.length?r.charAt(lo):null,lo<r.length?po(lo,lo+1):po(lo,lo))}};},function(r,t,e){var n=e(0);function u(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,u);}!function(r,t){function e(){this.constructor=r;}e.prototype=t.prototype,r.prototype=new e;}(u,Error),u.buildMessage=function(r,t){var e={literal:function(r){return '"'+u(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?o(r.parts[t][0])+"-"+o(r.parts[t][1]):o(r.parts[t]);return "["+(r.inverted?"^":"")+e+"]"},any:function(r){return "any character"},end:function(r){return "end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function u(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}function o(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}return "Expected "+function(r){var t,n,u,o=new Array(r.length);for(t=0;t<r.length;t++)o[t]=(u=r[t],e[u.type](u));if(o.sort(),o.length>0){for(t=1,n=1;t<o.length;t++)o[t-1]!==o[t]&&(o[n]=o[t],n++);o.length=n;}switch(o.length){case 1:return o[0];case 2:return o[0]+" or "+o[1];default:return o.slice(0,-1).join(", ")+", or "+o[o.length-1]}}(r)+" but "+function(r){return r?'"'+u(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:u,parse:function(r,t){t=void 0!==t?t:{};var e,o={},s={start:lo},a=lo,i=function(r,t){return Gi(r,t)},c=uo("INCLUDE",!0),l=uo("FILESTREAM_ON",!0),f=function(r,t){return Gi(r,t)},v=uo("IDENTITY",!0),b=uo("UNIQUE",!0),d=uo("PRIMARY",!0),L=uo("KEY",!0),C=uo("COLUMN_FORMAT",!0),p=uo("FIXED",!0),w=uo("DYNAMIC",!0),E=uo("DEFAULT",!0),h=uo("STORAGE",!0),A=uo("DISK",!0),y=uo("MEMORY",!0),T=uo("CURSOR",!0),m=uo("PROCEDURE",!0),S=uo("ALGORITHM",!0),I=uo("INSTANT",!0),N=uo("INPLACE",!0),R=uo("COPY",!0),_=uo("LOCK",!0),g=uo("NONE",!0),O=uo("SHARED",!0),U=uo("EXCLUSIVE",!0),x=uo("CHECK",!0),M=uo("NOCHECK",!0),D=uo("PRIMARY KEY",!0),k=uo("NOT",!0),$=uo("FOR",!0),F=uo("REPLICATION",!0),P=uo("FOREIGN KEY",!0),H=uo("MATCH FULL",!0),G=uo("MATCH PARTIAL",!0),j=uo("MATCH SIMPLE",!0),Y=uo("ON DELETE",!0),B=uo("ON UPDATE",!0),X=uo("RESTRICT",!0),W=uo("CASCADE",!0),V=uo("SET NULL",!0),K=uo("NO ACTION",!0),q=uo("SET DEFAULT",!0),Z=uo("AUTO_INCREMENT",!0),z=uo("AVG_ROW_LENGTH",!0),J=uo("KEY_BLOCK_SIZE",!0),Q=uo("MAX_ROWS",!0),rr=uo("MIN_ROWS",!0),tr=uo("STATS_SAMPLE_PAGES",!0),er=uo("CHARACTER SET",!0),nr=uo("CHARSET",!0),ur=uo("COLLATE",!0),or=uo("CONNECTION",!0),sr=uo("COMPRESSION",!0),ar=uo("'",!1),ir=uo("ZLIB",!0),cr=uo("LZ4",!0),lr=uo("ENGINE",!0),fr=uo("READ",!0),vr=uo("LOCAL",!0),br=uo("LOW_PRIORITY",!0),dr=uo("WRITE",!0),Lr=uo("(",!1),Cr=uo(")",!1),pr=uo("PERCENT",!0),wr=uo("BTREE",!0),Er=uo("HASH",!0),hr=uo("NONCLUSTERED",!0),Ar=uo("PARTITIONS",!0),yr=function(r,t,e){return {type:r.toLowerCase(),symbol:t,expr:e}},Tr=uo("FILLFACTOR",!0),mr=uo("MAX_DURATION",!0),Sr=uo("MAXDOP",!0),Ir=uo("WITH",!0),Nr=uo("PARSER",!0),Rr=uo("VISIBLE",!0),_r=uo("INVISIBLE",!0),gr=uo("PAD_INDEX",!0),Or=uo("SORT_IN_TEMPDB",!0),Ur=uo("IGNORE_DUP_KEY",!0),xr=uo("STATISTICS_NORECOMPUTE",!0),Mr=uo("STATISTICS_INCREMENTAL",!0),Dr=uo("DROP_EXISTING",!0),kr=uo("ONLINE",!0),$r=uo("RESUMABLE",!0),Fr=uo("ALLOW_ROW_LOCKS",!0),Pr=uo("ALLOW_PAGE_LOCKS",!0),Hr=uo("OPTIMIZE_FOR_SEQUENTIAL_KEY",!0),Gr=uo("DATA_COMPRESSION",!0),jr=uo("ROW",!0),Yr=uo("PAGE",!1),Br=uo("=",!1),Xr=function(r,t){return ji(r,t)},Wr=uo("!",!1),Vr=function(r){return r[0]+" "+r[2]},Kr=uo(">=",!1),qr=uo(">",!1),Zr=uo("<=",!1),zr=uo("<>",!1),Jr=uo("<",!1),Qr=uo("!=",!1),rt=uo("+",!1),tt=uo("-",!1),et=uo("*",!1),nt=uo("/",!1),ut=uo("%",!1),ot=function(r){return r.parentheses=!0,r},st=function(r){return !0===$i[r.toUpperCase()]},at=uo('"',!1),it=/^[^"]/,ct=oo(['"'],!0,!1),lt=function(r){return r.join("")},ft=/^[^']/,vt=oo(["'"],!0,!1),bt=uo("`",!1),dt=/^[^`]/,Lt=oo(["`"],!0,!1),Ct=uo("[",!1),pt=/^[^\]]/,wt=oo(["]"],!0,!1),Et=uo("]",!1),ht=function(r,t){return r+t.join("")},At=/^[A-Za-z_]/,yt=oo([["A","Z"],["a","z"],"_"],!1,!1),Tt=/^[A-Za-z0-9_]/,mt=oo([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),St=/^[A-Za-z0-9_:]/,It=oo([["A","Z"],["a","z"],["0","9"],"_",":"],!1,!1),Nt=uo(":",!1),Rt=function(r){return {type:"string",value:r[1].join("")}},_t=uo("ON UPDATE CURRENT_TIMESTAMP",!0),gt=/^[^"\\\0-\x1F\x7F]/,Ot=oo(['"',"\\",["\0",""],""],!0,!1),Ut=/^[^'\\]/,xt=oo(["'","\\"],!0,!1),Mt=uo("\\'",!1),Dt=uo('\\"',!1),kt=uo("\\\\",!1),$t=uo("\\/",!1),Ft=uo("\\b",!1),Pt=uo("\\f",!1),Ht=uo("\\n",!1),Gt=uo("\\r",!1),jt=uo("\\t",!1),Yt=uo("\\u",!1),Bt=uo("\\",!1),Xt=/^[\n\r]/,Wt=oo(["\n","\r"],!1,!1),Vt=uo(".",!1),Kt=/^[0-9]/,qt=oo([["0","9"]],!1,!1),Zt=/^[0-9a-fA-F]/,zt=oo([["0","9"],["a","f"],["A","F"]],!1,!1),Jt=/^[eE]/,Qt=oo(["e","E"],!1,!1),re=/^[+\-]/,te=oo(["+","-"],!1,!1),ee=uo("NULL",!0),ne=uo("NOT NULL",!0),ue=uo("TRUE",!0),oe=uo("TO",!0),se=uo("TOP",!0),ae=uo("FALSE",!0),ie=(uo("DROP",!0)),ce=uo("DECLARE",!0),le=uo("USE",!0),fe=uo("ALTER",!0),ve=uo("SELECT",!0),be=uo("UPDATE",!0),de=uo("CREATE",!0),Le=uo("TEMPORARY",!0),Ce=uo("IF NOT EXISTS",!0),pe=uo("DELETE",!0),we=uo("INSERT",!0),Ee=uo("RECURSIVE",!1),he=uo("REPLACE",!0),Ae=uo("RENAME",!0),ye=uo("IGNORE",!0),Te=(uo("PARTITION",!0)),me=uo("INTO",!0),Se=uo("FROM",!0),Ie=uo("SET",!0),Ne=uo("UNLOCK",!0),Re=uo("AS",!0),_e=uo("TABLE",!0),ge=uo("TABLES",!0),Oe=uo("ON",!0),Ue=uo("OFF",!0),xe=uo("LEFT",!0),Me=uo("RIGHT",!0),De=uo("FULL",!0),ke=uo("INNER",!0),$e=uo("JOIN",!0),Fe=uo("OUTER",!0),Pe=uo("OVER",!0),He=uo("UNION",!0),Ge=uo("VALUES",!0),je=uo("USING",!0),Ye=uo("WHERE",!0),Be=uo("GROUP",!0),Xe=uo("BY",!0),We=uo("ORDER",!0),Ve=uo("HAVING",!0),Ke=uo("LIMIT",!0),qe=uo("OFFSET",!0),Ze=uo("ASC",!0),ze=uo("DESC",!0),Je=uo("ALL",!0),Qe=uo("DISTINCT",!0),rn=uo("BETWEEN",!0),tn=uo("IN",!0),en=uo("IS",!0),nn=uo("LIKE",!0),un=uo("EXISTS",!0),on=uo("AND",!0),sn=uo("OR",!0),an=uo("COUNT",!0),cn=uo("MAX",!0),ln=uo("MIN",!0),fn=uo("SUM",!0),vn=uo("AVG",!0),bn=uo("CALL",!0),dn=uo("CASE",!0),Ln=uo("WHEN",!0),Cn=uo("THEN",!0),pn=uo("ELSE",!0),wn=uo("END",!0),En=uo("CAST",!0),hn=uo("BIT",!0),An=uo("MONEY",!0),yn=uo("SMALLMONEY",!0),Tn=uo("CHAR",!0),mn=uo("VARCHAR",!0),Sn=uo("NCHAR",!0),In=uo("NVARCHAR",!0),Nn=uo("NUMERIC",!0),Rn=uo("DECIMAL",!0),_n=uo("SIGNED",!0),gn=uo("UNSIGNED",!0),On=uo("INT",!0),Un=uo("ZEROFILL",!0),xn=uo("INTEGER",!0),Mn=uo("JSON",!0),Dn=uo("SMALLINT",!0),kn=uo("TINYINT",!0),$n=uo("TINYTEXT",!0),Fn=uo("TEXT",!0),Pn=uo("MEDIUMTEXT",!0),Hn=uo("LONGTEXT",!0),Gn=uo("BIGINT",!0),jn=uo("FLOAT",!0),Yn=uo("REAL",!0),Bn=uo("DOUBLE",!0),Xn=uo("DATE",!0),Wn=uo("SMALLDATETIME",!0),Vn=uo("DATETIME",!0),Kn=uo("DATETIME2",!0),qn=uo("DATETIMEOFFSET",!0),Zn=uo("TIME",!0),zn=uo("TIMESTAMP",!0),Jn=uo("TRUNCATE",!0),Qn=uo("UNIQUEIDENTIFIER",!0),ru=uo("USER",!0),tu=uo("CURRENT_DATE",!0),eu=(uo("INTERVAL",!0)),nu=uo("YEAR",!0),uu=uo("MONTH",!0),ou=uo("DAY",!0),su=uo("HOUR",!0),au=uo("MINUTE",!0),iu=uo("SECOND",!0),cu=uo("CURRENT_TIME",!0),lu=uo("CURRENT_TIMESTAMP",!0),fu=uo("CURRENT_USER",!0),vu=uo("SESSION_USER",!0),bu=uo("SYSTEM_USER",!0),du=uo("GLOBAL",!0),Lu=uo("SESSION",!0),Cu=uo("PERSIST",!0),pu=uo("PERSIST_ONLY",!0),wu=uo("@",!1),Eu=uo("@@",!1),hu=uo("$",!1),Au=uo("return",!0),yu=uo(":=",!1),Tu=uo("DUAL",!0),mu=uo("ADD",!0),Su=uo("COLUMN",!0),Iu=uo("INDEX",!0),Nu=uo("FULLTEXT",!0),Ru=uo("SPATIAL",!0),_u=uo("CLUSTERED",!0),gu=uo("COMMENT",!0),Ou=uo("CONSTRAINT",!0),Uu=uo("REFERENCES",!0),xu=uo("SQL_CALC_FOUND_ROWS",!0),Mu=uo("SQL_CACHE",!0),Du=uo("SQL_NO_CACHE",!0),ku=uo("SQL_SMALL_RESULT",!0),$u=uo("SQL_BIG_RESULT",!0),Fu=uo("SQL_BUFFER_RESULT",!0),Pu=uo(",",!1),Hu=uo(";",!1),Gu=uo("||",!1),ju=uo("&&",!1),Yu=uo("/*",!1),Bu=uo("*/",!1),Xu=uo("--",!1),Wu=uo("#",!1),Vu={type:"any"},Ku=/^[ \t\n\r]/,qu=oo([" ","\t","\n","\r"],!1,!1),Zu=function(r,t,e){return r&&!e||!r&&e},zu=function(r,t,e){return {dataType:t}},Ju=function(r,t,e){return {dataType:t}},Qu=0,ro=[{line:1,column:1}],to=0,eo=[],no=0;if("startRule"in t){if(!(t.startRule in s))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=s[t.startRule];}function uo(r,t){return {type:"literal",text:r,ignoreCase:t}}function oo(r,t,e){return {type:"class",parts:r,inverted:t,ignoreCase:e}}function so(t){var e,n=ro[t];if(n)return n;for(e=t-1;!ro[e];)e--;for(n={line:(n=ro[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return ro[t]=n,n}function ao(r,t){var e=so(r),n=so(t);return {start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function io(r){Qu<to||(Qu>to&&(to=Qu,eo=[]),eo.push(r));}function co(r,t,e){return new u(u.buildMessage(r,t),r,t,e)}function lo(){var r,t;return r=Qu,pi()!==o?((t=function(){var r,t,e,n,u,s,a,i;if(r=Qu,(t=vo())!==o){if(e=[],n=Qu,(u=pi())!==o&&(s=Li())!==o&&(a=pi())!==o&&(i=vo())!==o?n=u=[u,s,a,i]:(Qu=n,n=o),n!==o)for(;n!==o;)e.push(n),n=Qu,(u=pi())!==o&&(s=Li())!==o&&(a=pi())!==o&&(i=vo())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);else e=o;e!==o?(t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return {tableList:Array.from(Wi),columnList:Bi(Vi),ast:e}}(t,e),r=t):(Qu=r,r=o);}else Qu=r,r=o;return r}())===o&&(t=fo())===o&&(t=vo()),t!==o?(r=t):(Qu=r,r=o)):(Qu=r,r=o),r}function fo(){var t;return (t=function(){var t,e,n,u;t=Qu,(e=Zs())!==o&&pi()!==o&&(n=ia())!==o&&pi()!==o&&(u=Wo())!==o?(s=e,a=n,(i=u)&&i.forEach(r=>Wi.add(`${s}::${r.db}::${r.table}`)),e={tableList:Array.from(Wi),columnList:Bi(Vi),ast:{type:s.toLowerCase(),keyword:a.toLowerCase(),name:i}},t=e):(Qu=t,t=o);var s,a,i;t===o&&(t=Qu,(e=Zs())!==o&&pi()!==o?("procedure"===r.substr(Qu,9).toLowerCase()?(n=r.substr(Qu,9),Qu+=9):(n=o,0===no&&io(m)),n!==o&&pi()!==o&&(u=Ss())!==o?(e=function(r,t,e){return {tableList:Array.from(Wi),columnList:Bi(Vi),ast:{type:r.toLowerCase(),keyword:t.toLowerCase(),name:e}}}(e,n,u),t=e):(Qu=t,t=o)):(Qu=t,t=o));return t}())===o&&(t=function(){var t;(t=function(){var t,e,n,u,s,a,c,l,f,v;t=Qu,(e=Qs())!==o&&pi()!==o?((n=ra())===o&&(n=null),n!==o&&pi()!==o&&ia()!==o&&pi()!==o?((u=ta())===o&&(u=null),u!==o&&pi()!==o&&(s=Wo())!==o&&pi()!==o&&(a=po())!==o&&pi()!==o?((c=function(){var r,t,e,n,u,s,a,c;if(r=Qu,(t=Ro())!==o){for(e=[],n=Qu,(u=pi())!==o?((s=ci())===o&&(s=null),s!==o&&(a=pi())!==o&&(c=Ro())!==o?n=u=[u,s,a,c]:(Qu=n,n=o)):(Qu=n,n=o);n!==o;)e.push(n),n=Qu,(u=pi())!==o?((s=ci())===o&&(s=null),s!==o&&(a=pi())!==o&&(c=Ro())!==o?n=u=[u,s,a,c]:(Qu=n,n=o)):(Qu=n,n=o);e!==o?(t=i(t,e),r=t):(Qu=r,r=o);}else Qu=r,r=o;return r}())===o&&(c=null),c!==o&&pi()!==o?((l=function(){var t,e,n,u;t=Qu,"ignore"===r.substr(Qu,6).toLowerCase()?(e=r.substr(Qu,6),Qu+=6):(e=o,0===no&&io(ye));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o);return t}())===o&&(l=ea()),l===o&&(l=null),l!==o&&pi()!==o?((f=aa())===o&&(f=null),f!==o&&pi()!==o?((v=bo())===o&&(v=null),v!==o?(b=e,d=n,L=u,p=a,w=c,E=l,h=f,A=v,(C=s)&&C.forEach(r=>Wi.add(`create::${r.db}::${r.table}`)),e={tableList:Array.from(Wi),columnList:Bi(Vi),ast:{type:b[0].toLowerCase(),keyword:"table",temporary:d&&d[0].toLowerCase(),if_not_exists:L&&L[0].toLowerCase(),table:C,ignore_replace:E&&E[0].toLowerCase(),as:h&&h[0].toLowerCase(),query_expr:A&&A.ast,create_definitions:p,table_options:w}},t=e):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o);var b,d,L,C,p,w,E,h,A;t===o&&(t=Qu,(e=Qs())!==o&&pi()!==o?((n=ra())===o&&(n=null),n!==o&&pi()!==o&&ia()!==o&&pi()!==o?((u=ta())===o&&(u=null),u!==o&&pi()!==o&&(s=Wo())!==o&&pi()!==o&&(a=function r(){var t,e;(t=function(){var r,t,e;r=Qu,(t=ma())!==o&&pi()!==o&&(e=Wo())!==o?(t=function(r){return {type:"like",table:r}}(e),r=t):(Qu=r,r=o);return r}())===o&&(t=Qu,fi()!==o&&pi()!==o&&(e=r())!==o&&pi()!==o&&vi()!==o?((n=e).parentheses=!0,t=n):(Qu=t,t=o));var n;return t}())!==o?(e=function(r,t,e,n,u){return n&&n.forEach(r=>Wi.add(`create::${r.db}::${r.table}`)),{tableList:Array.from(Wi),columnList:Bi(Vi),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t[0].toLowerCase(),if_not_exists:e&&e[0].toLowerCase(),table:n,like:u}}}(e,n,u,s,a),t=e):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o));return t}())===o&&(t=function(){var t,e,n,u,s,a,f,v,b,d,L,C,p,w,E,h,A,y;t=Qu,(e=Qs())!==o&&pi()!==o?((n=oi())===o&&(n=function(){var t,e,n,u;t=Qu,"clustered"===r.substr(Qu,9).toLowerCase()?(e=r.substr(Qu,9),Qu+=9):(e=o,0===no&&io(_u));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="CLUSTERED"):(Qu=t,t=o)):(Qu=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=Qu,"nonclustered"===r.substr(Qu,12).toLowerCase()?(e=r.substr(Qu,12),Qu+=12):(e=o,0===no&&io(hr));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="NONCLUSTERED"):(Qu=t,t=o)):(Qu=t,t=o);return t}()),n===o&&(n=null),n!==o&&pi()!==o&&(u=ni())!==o&&pi()!==o&&(s=Ss())!==o&&pi()!==o&&(a=la())!==o&&pi()!==o&&(f=Zo())!==o&&pi()!==o&&fi()!==o&&pi()!==o&&(v=function(){var r,t;r=Qu,bi()!==o&&pi()!==o&&(t=Lo())!==o&&pi()!==o&&di()!==o?(r=t):(Qu=r,r=o);r===o&&(r=Lo());return r}())!==o&&pi()!==o&&vi()!==o&&pi()!==o?((b=function(){var t,e,n;t=Qu,"include"===r.substr(Qu,7).toLowerCase()?(e=r.substr(Qu,7),Qu+=7):(e=o,0===no&&io(c));e!==o&&pi()!==o&&fi()!==o&&pi()!==o&&(n=ms())!==o&&pi()!==o&&vi()!==o?(s=n,e={type:(u=e).toLowerCase(),keyword:u.toLowerCase(),columns:s},t=e):(Qu=t,t=o);var u,s;return t}())===o&&(b=null),b!==o&&pi()!==o?((d=Jo())===o&&(d=null),d!==o&&pi()!==o?(L=Qu,(C=La())!==o&&(p=pi())!==o&&(w=fi())!==o&&(E=pi())!==o&&(h=function(){var r,t,e,n,u,s,a,c;if(r=Qu,(t=Xo())!==o){for(e=[],n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(c=Xo())!==o?n=u=[u,s,a,c]:(Qu=n,n=o);n!==o;)e.push(n),n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(c=Xo())!==o?n=u=[u,s,a,c]:(Qu=n,n=o);e!==o?(t=i(t,e),r=t):(Qu=r,r=o);}else Qu=r,r=o;return r}())!==o&&(A=pi())!==o&&(y=vi())!==o?L=C=[C,p,w,E,h,A,y]:(Qu=L,L=o),L===o&&(L=null),L!==o&&(C=pi())!==o?((p=zo())===o&&(p=null),p!==o&&(w=pi())!==o?(E=Qu,"filestream_on"===r.substr(Qu,13).toLowerCase()?(h=r.substr(Qu,13),Qu+=13):(h=o,0===no&&io(l)),h!==o&&(A=pi())!==o&&(y=Ss())!==o?E=h=[h,A,y]:(Qu=E,E=o),E===o&&(E=null),E!==o?(T=e,m=n,S=u,I=s,N=a,R=f,_=v,g=b,O=d,U=L,x=p,M=E,e={tableList:Array.from(Wi),columnList:Bi(Vi),ast:{type:T[0].toLowerCase(),index_type:m&&m.toLowerCase(),keyword:S.toLowerCase(),index:I,on_kw:N[0].toLowerCase(),table:R,index_columns:_,include:g,where:O,with:U&&U[4],on:x,filestream_on:M&&{value:M[2]}}},t=e):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o);var T,m,S,I,N,R,_,g,O,U,x,M;return t}());return t}())===o&&(t=function(){var t,e,n,u;t=Qu,(e=function(){var t,e,n,u;t=Qu,"truncate"===r.substr(Qu,8).toLowerCase()?(e=r.substr(Qu,8),Qu+=8):(e=o,0===no&&io(Jn));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="TRUNCATE"):(Qu=t,t=o)):(Qu=t,t=o);return t}())!==o&&pi()!==o?((n=ia())===o&&(n=null),n!==o&&pi()!==o&&(u=Wo())!==o?(s=e,a=n,(i=u)&&i.forEach(r=>Wi.add(`${s}::${r.db}::${r.table}`)),e={tableList:Array.from(Wi),columnList:Bi(Vi),ast:{type:s.toLowerCase(),keyword:a&&a.toLowerCase()||"table",name:i}},t=e):(Qu=t,t=o)):(Qu=t,t=o);var s,a,i;return t}())===o&&(t=function(){var r,t,e;r=Qu,(t=na())!==o&&pi()!==o&&ia()!==o&&pi()!==o&&(e=function(){var r,t,e,n,u,s,a,i;if(r=Qu,(t=Ho())!==o){for(e=[],n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(i=Ho())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);n!==o;)e.push(n),n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(i=Ho())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);e!==o?(t=f(t,e),r=t):(Qu=r,r=o);}else Qu=r,r=o;return r}())!==o?((n=e).forEach(r=>r.forEach(r=>r.table&&Wi.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(Wi),columnList:Bi(Vi),ast:{type:"rename",table:n}},r=t):(Qu=r,r=o);var n;return r}())===o&&(t=function(){var t,e,n;t=Qu,(e=function(){var t,e,n,u;t=Qu,"call"===r.substr(Qu,4).toLowerCase()?(e=r.substr(Qu,4),Qu+=4):(e=o,0===no&&io(bn));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="CALL"):(Qu=t,t=o)):(Qu=t,t=o);return t}())!==o&&pi()!==o&&(n=Oi())!==o?(u=n,e={tableList:Array.from(Wi),columnList:Bi(Vi),ast:{type:"call",expr:u}},t=e):(Qu=t,t=o);var u;return t}())===o&&(t=function(){var t,e,n;t=Qu,(e=function(){var t,e,n,u;t=Qu,"use"===r.substr(Qu,3).toLowerCase()?(e=r.substr(Qu,3),Qu+=3):(e=o,0===no&&io(le));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o);return t}())!==o&&pi()!==o&&(n=Ss())!==o?(u=n,Wi.add(`use::${u}::null`),e={tableList:Array.from(Wi),columnList:Bi(Vi),ast:{type:"use",db:u}},t=e):(Qu=t,t=o);var u;return t}())===o&&(t=function(){var r,t,e,n;r=Qu,(t=Js())!==o&&pi()!==o&&ia()!==o&&pi()!==o&&(e=Wo())!==o&&pi()!==o&&(n=function(){var r,t,e,n,u,s,a,i;if(r=Qu,(t=Ao())!==o){for(e=[],n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(i=Ao())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);n!==o;)e.push(n),n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(i=Ao())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);e!==o?(t=f(t,e),r=t):(Qu=r,r=o);}else Qu=r,r=o;return r}())!==o?(s=n,(u=e)&&u.length>0&&u.forEach(r=>Wi.add(`alter::${r.db}::${r.table}`)),t={tableList:Array.from(Wi),columnList:Bi(Vi),ast:{type:"alter",table:u,expr:s}},r=t):(Qu=r,r=o);var u,s;return r}())===o&&(t=function(){var t,e,n,u;t=Qu,(e=sa())!==o&&pi()!==o?((n=function(){var t,e,n,u;t=Qu,"global"===r.substr(Qu,6).toLowerCase()?(e=r.substr(Qu,6),Qu+=6):(e=o,0===no&&io(du));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="GLOBAL"):(Qu=t,t=o)):(Qu=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=Qu,"session"===r.substr(Qu,7).toLowerCase()?(e=r.substr(Qu,7),Qu+=7):(e=o,0===no&&io(Lu));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="SESSION"):(Qu=t,t=o)):(Qu=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=Qu,"local"===r.substr(Qu,5).toLowerCase()?(e=r.substr(Qu,5),Qu+=5):(e=o,0===no&&io(vr));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="LOCAL"):(Qu=t,t=o)):(Qu=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=Qu,"persist"===r.substr(Qu,7).toLowerCase()?(e=r.substr(Qu,7),Qu+=7):(e=o,0===no&&io(Cu));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="PERSIST"):(Qu=t,t=o)):(Qu=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=Qu,"persist_only"===r.substr(Qu,12).toLowerCase()?(e=r.substr(Qu,12),Qu+=12):(e=o,0===no&&io(pu));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="PERSIST_ONLY"):(Qu=t,t=o)):(Qu=t,t=o);return t}()),n===o&&(n=null),n!==o&&pi()!==o&&(u=Si())!==o?(s=n,(a=u).keyword=s,e={tableList:Array.from(Wi),columnList:Bi(Vi),ast:{type:"set",expr:a}},t=e):(Qu=t,t=o)):(Qu=t,t=o);var s,a;return t}())===o&&(t=function(){var t,e,n;t=Qu,(e=function(){var t,e,n,u;t=Qu,"lock"===r.substr(Qu,4).toLowerCase()?(e=r.substr(Qu,4),Qu+=4):(e=o,0===no&&io(_));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o);return t}())!==o&&pi()!==o&&ca()!==o&&pi()!==o&&(n=function(){var r,t,e,n,u,s,a,i;if(r=Qu,(t=_o())!==o){for(e=[],n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(i=_o())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);n!==o;)e.push(n),n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(i=_o())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);e!==o?(t=Gi(t,e),r=t):(Qu=r,r=o);}else Qu=r,r=o;return r}())!==o?(u=n,e={tableList:Array.from(Wi),columnList:Bi(Vi),ast:{type:"lock",keyword:"tables",tables:u}},t=e):(Qu=t,t=o);var u;return t}())===o&&(t=function(){var t,e;t=Qu,(e=function(){var t,e,n,u;t=Qu,"unlock"===r.substr(Qu,6).toLowerCase()?(e=r.substr(Qu,6),Qu+=6):(e=o,0===no&&io(Ne));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o);return t}())!==o&&pi()!==o&&ca()!==o?(e={tableList:Array.from(Wi),columnList:Bi(Vi),ast:{type:"unlock",keyword:"tables"}},t=e):(Qu=t,t=o);return t}())===o&&(t=function(){var r,t,e,n,u,s;r=Qu,(t=zs())!==o&&pi()!==o&&(e=function(){var r,t,e,n,u,s,a,i;if(r=Qu,(t=ho())!==o){for(e=[],n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(i=ho())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);n!==o;)e.push(n),n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(i=ho())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);e!==o?(t=f(t,e),r=t):(Qu=r,r=o);}else Qu=r,r=o;return r}())!==o?(a=e,t={tableList:Array.from(Wi),columnList:Bi(Vi),ast:{type:"declare",declare:a}},r=t):(Qu=r,r=o);var a;r===o&&(r=Qu,(t=zs())!==o&&pi()!==o&&(e=Ja())!==o&&pi()!==o&&(n=Rs())!==o&&pi()!==o?((u=aa())===o&&(u=null),u!==o&&pi()!==o&&ia()!==o&&pi()!==o&&(s=po())!==o?(i=n,c=u,l=s,t={tableList:Array.from(Wi),columnList:Bi(Vi),ast:{type:"declare",declare:[{at:"@",name:i,as:c&&c[0].toLowerCase(),keyword:"table",prefix:"table",definition:l}]}},r=t):(Qu=r,r=o)):(Qu=r,r=o));var i,c,l;return r}()),t}function vo(){var t;return (t=bo())===o&&(t=function(){var t,e,n,u,s;t=Qu,(e=function(){var t,e,n,u;t=Qu,"update"===r.substr(Qu,6).toLowerCase()?(e=r.substr(Qu,6),Qu+=6):(e=o,0===no&&io(be));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o);return t}())!==o&&pi()!==o&&(n=Wo())!==o&&pi()!==o&&sa()!==o&&pi()!==o&&(u=function(){var r,t,e,n,u,s,a,i;if(r=Qu,(t=ns())!==o){for(e=[],n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(i=ns())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);n!==o;)e.push(n),n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(i=ns())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);e!==o?(t=f(t,e),r=t):(Qu=r,r=o);}else Qu=r,r=o;return r}())!==o&&pi()!==o?((s=Jo())===o&&(s=null),s!==o?(i=u,c=s,(a=n)&&a.forEach(r=>{const{db:t,as:e,table:n}=r;Wi.add(`update::${t}::${n}`);}),i&&i.forEach(r=>Vi.add(`update::${r.table}::${r.column}`)),e={tableList:Array.from(Wi),columnList:Bi(Vi),ast:{type:"update",table:a,set:i,where:c}},t=e):(Qu=t,t=o)):(Qu=t,t=o);var a,i,c;return t}())===o&&(t=function(){var r,t,e,n,u,s,a;r=Qu,(t=ss())!==o&&pi()!==o?((e=oa())===o&&(e=null),e!==o&&pi()!==o&&(n=Zo())!==o&&pi()!==o?((u=os())===o&&(u=null),u!==o&&pi()!==o&&fi()!==o&&pi()!==o&&(s=ms())!==o&&pi()!==o&&vi()!==o&&pi()!==o&&(a=us())!==o?(t=function(r,t,e,n,u){if(t&&(Wi.add(`insert::${t.db}::${t.table}`),t.as=null),n){let r=t&&t.table||null;n.forEach(t=>Vi.add(`insert::${r}::${t}`));}return {tableList:Array.from(Wi),columnList:Bi(Vi),ast:{type:r,table:[t],columns:n,values:u,partition:e}}}(t,n,u,s,a),r=t):(Qu=r,r=o)):(Qu=r,r=o)):(Qu=r,r=o);return r}())===o&&(t=function(){var r,t,e,n,u;r=Qu,(t=ss())!==o&&pi()!==o&&oa()!==o&&pi()!==o&&(e=Zo())!==o&&pi()!==o?((n=os())===o&&(n=null),n!==o&&pi()!==o&&(u=us())!==o?(s=t,i=n,c=u,(a=e)&&(Wi.add(`insert::${a.db}::${a.table}`),Vi.add(`insert::${a.table}::(.*)`),a.as=null),t={tableList:Array.from(Wi),columnList:Bi(Vi),ast:{type:s,table:[a],columns:null,values:c,partition:i}},r=t):(Qu=r,r=o)):(Qu=r,r=o);var s,a,i,c;return r}())===o&&(t=function(){var t,e,n,u,s;t=Qu,(e=function(){var t,e,n,u;t=Qu,"delete"===r.substr(Qu,6).toLowerCase()?(e=r.substr(Qu,6),Qu+=6):(e=o,0===no&&io(pe));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o);return t}())!==o&&pi()!==o?((n=Wo())===o&&(n=null),n!==o&&pi()!==o&&(u=Po())!==o&&pi()!==o?((s=Jo())===o&&(s=null),s!==o?(e=function(r,t,e){if(t&&t.forEach(r=>{r.table&&Wi.add(`delete::${r.db}::${r.table}`),Vi.add(`delete::${r.table}::(.*)`);}),null===r&&1===t.length){const e=t[0];r=[{db:e.db,table:e.table,as:e.as,addition:!0}];}return {tableList:Array.from(Wi),columnList:Bi(Vi),ast:{type:"delete",table:r,from:t,where:e}}}(n,u,s),t=e):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o);return t}())===o&&(t=fo())===o&&(t=function(){var r,t;r=[],t=mi();for(;t!==o;)r.push(t),t=mi();return r}()),t}function bo(){var r,t,e,n,u,s,a,i,c,l;if(r=Qu,(t=go())!==o){for(e=[],n=Qu,(u=pi())!==o&&(s=ba())!==o&&(a=pi())!==o?((i=Ea())===o&&(i=null),i!==o&&(c=pi())!==o&&(l=go())!==o?n=u=[u,s,a,i,c,l]:(Qu=n,n=o)):(Qu=n,n=o);n!==o;)e.push(n),n=Qu,(u=pi())!==o&&(s=ba())!==o&&(a=pi())!==o?((i=Ea())===o&&(i=null),i!==o&&(c=pi())!==o&&(l=go())!==o?n=u=[u,s,a,i,c,l]:(Qu=n,n=o)):(Qu=n,n=o);e!==o&&(n=pi())!==o?((u=Qo())===o&&(u=null),u!==o&&(s=pi())!==o?((a=es())===o&&(a=null),a!==o?(r=t=function(r,t,e,n){let u=r;for(let r=0;r<t.length;r++)u._next=t[r][5],u.union=t[r][3]?"union all":"union",u=u._next;return e&&(r._orderby=e),n&&(r._limit=n),{tableList:Array.from(Wi),columnList:Bi(Vi),ast:r}}(t,e,u,a)):(Qu=r,r=o)):(Qu=r,r=o)):(Qu=r,r=o);}else Qu=r,r=o;return r}function Lo(){var r,t,e,n,u,s,a,c;if(r=Qu,(t=Co())!==o){for(e=[],n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(c=Co())!==o?n=u=[u,s,a,c]:(Qu=n,n=o);n!==o;)e.push(n),n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(c=Co())!==o?n=u=[u,s,a,c]:(Qu=n,n=o);e!==o?(r=t=i(t,e)):(Qu=r,r=o);}else Qu=r,r=o;return r}function Co(){var r,t,e,n;return r=Qu,(t=Ts())!==o&&pi()!==o?((e=pa())===o&&(e=wa()),e===o&&(e=null),e!==o?(r=t={column:t,order:(n=e)&&n.toLowerCase()||"asc"}):(Qu=r,r=o)):(Qu=r,r=o),r}function po(){var r,t,e,n,u,s,a,i;if(r=Qu,fi()!==o)if(pi()!==o)if((t=wo())!==o){for(e=[],n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(i=wo())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);n!==o;)e.push(n),n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(i=wo())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);e!==o&&(n=pi())!==o?((u=ci())===o&&(u=null),u!==o&&(s=pi())!==o&&(a=vi())!==o?(r=f(t,e)):(Qu=r,r=o)):(Qu=r,r=o);}else Qu=r,r=o;else Qu=r,r=o;else Qu=r,r=o;return r}function wo(){var t;return (t=function(){var t;(t=function(){var t,e,n,u,s,a;t=Qu,(e=mo())===o&&(e=null);e!==o&&pi()!==o?("primary key"===r.substr(Qu,11).toLowerCase()?(n=r.substr(Qu,11),Qu+=11):(n=o,0===no&&io(D)),n!==o&&pi()!==o?((u=Go())===o&&(u=null),u!==o&&pi()!==o&&(s=xo())!==o&&pi()!==o?((a=jo())===o&&(a=null),a!==o?(c=n,l=u,f=s,v=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c.toLowerCase(),keyword:i&&i.keyword,index_type:l,resource:"constraint",index_options:v},t=e):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o);var i,c,l,f,v;return t}())===o&&(t=function(){var r,t,e,n,u,s,a,i;r=Qu,(t=mo())===o&&(t=null);t!==o&&pi()!==o&&(e=oi())!==o&&pi()!==o?((n=ni())===o&&(n=ui()),n===o&&(n=null),n!==o&&pi()!==o?((u=Ns())===o&&(u=null),u!==o&&pi()!==o?((s=Go())===o&&(s=null),s!==o&&pi()!==o&&(a=xo())!==o&&pi()!==o?((i=jo())===o&&(i=null),i!==o?(l=e,f=n,v=u,b=s,d=a,L=i,t={constraint:(c=t)&&c.constraint,definition:d,constraint_type:f&&`${l.toLowerCase()} ${f.toLowerCase()}`||l.toLowerCase(),keyword:c&&c.keyword,index_type:b,index:v,resource:"constraint",index_options:L},r=t):(Qu=r,r=o)):(Qu=r,r=o)):(Qu=r,r=o)):(Qu=r,r=o)):(Qu=r,r=o);var c,l,f,v,b,d,L;return r}())===o&&(t=function(){var t,e,n,u,s,a;t=Qu,(e=mo())===o&&(e=null);e!==o&&pi()!==o?("foreign key"===r.substr(Qu,11).toLowerCase()?(n=r.substr(Qu,11),Qu+=11):(n=o,0===no&&io(P)),n!==o&&pi()!==o?((u=Ns())===o&&(u=null),u!==o&&pi()!==o&&(s=xo())!==o&&pi()!==o?((a=Io())===o&&(a=null),a!==o?(c=n,l=u,f=s,v=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c,keyword:i&&i.keyword,index:l,resource:"constraint",reference_definition:v},t=e):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o);var i,c,l,f,v;return t}())===o&&(t=So());return t}())===o&&(t=Eo())===o&&(t=yo())===o&&(t=To()),t}function Eo(){var t,e,n,u,s,a,i,c,l,f,T,m,S,I,N,R,_,g,O,U,x,M,D,k,$;return t=Qu,(e=Ts())!==o&&pi()!==o&&(n=Di())!==o&&(u=pi())!==o?((s=function(){var t,e;t=Qu,(e=function(){var t,e,n,u;t=Qu,"not null"===r.substr(Qu,8).toLowerCase()?(e=r.substr(Qu,8),Qu+=8):(e=o,0===no&&io(ne));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o);return t}())!==o&&(e={type:"not null",value:"not null"});return t=e}())===o&&(s=Ds()),s===o&&(s=null),s!==o&&(a=pi())!==o?((i=function(){var r,t;r=Qu,Ks()!==o&&pi()!==o?((t=Ms())===o&&(t=vs()),t!==o?(r={type:"default",value:t}):(Qu=r,r=o)):(Qu=r,r=o);return r}())===o&&(i=null),i!==o&&pi()!==o?((c=So())===o&&(c=null),c!==o?((l=function(){var t,e,n,u,s,a,i,c,l;t=Qu,"unique"===r.substr(Qu,6).toLowerCase()?(e=r.substr(Qu,6),Qu+=6):(e=o,0===no&&io(b));e===o&&(e=Qu,"primary"===r.substr(Qu,7).toLowerCase()?(n=r.substr(Qu,7),Qu+=7):(n=o,0===no&&io(d)),n!==o&&(u=pi())!==o?("key"===r.substr(Qu,3).toLowerCase()?(s=r.substr(Qu,3),Qu+=3):(s=o,0===no&&io(L)),s!==o?e=n=[n,u,s]:(Qu=e,e=o)):(Qu=e,e=o));e===o&&(e=null);e!==o&&(n=pi())!==o?((u=function(){var t,e,n,u,s,a,i,c,l,f,b,d;t=Qu,"identity"===r.substr(Qu,8).toLowerCase()?(e=r.substr(Qu,8),Qu+=8):(e=o,0===no&&io(v));e!==o&&pi()!==o?(n=Qu,(u=fi())!==o&&(s=pi())!==o&&(a=Hs())!==o&&(i=pi())!==o&&(c=ci())!==o&&(l=pi())!==o&&(f=Hs())!==o&&(b=pi())!==o&&(d=vi())!==o?n=u=[u,s,a,i,c,l,f,b,d]:(Qu=n,n=o),n===o&&(n=null),n!==o?(e={keyword:"identity",seed:(L=n)&&L[2],increment:L&&L[6],parentheses:!!L},t=e):(Qu=t,t=o)):(Qu=t,t=o);var L;return t}())===o&&(u=null),u!==o&&(s=pi())!==o?("unique"===r.substr(Qu,6).toLowerCase()?(a=r.substr(Qu,6),Qu+=6):(a=o,0===no&&io(b)),a===o&&(a=Qu,"primary"===r.substr(Qu,7).toLowerCase()?(i=r.substr(Qu,7),Qu+=7):(i=o,0===no&&io(d)),i!==o&&(c=pi())!==o?("key"===r.substr(Qu,3).toLowerCase()?(l=r.substr(Qu,3),Qu+=3):(l=o,0===no&&io(L)),l!==o?a=i=[i,c,l]:(Qu=a,a=o)):(Qu=a,a=o)),a===o&&(a=null),a!==o?(e=function(r,t,e){let n=r||e;return n&&Array.isArray(n)&&(n=`${n[0].toLowerCase()} ${n[2].toLowerCase()}`),{identity:t,unique_or_primary:n}}(e,u,a),t=e):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o);return t}())===o&&(l=null),l!==o&&pi()!==o?((f=hi())===o&&(f=null),f!==o&&pi()!==o?((T=function(){var t,e;t=Qu,function(){var t,e,n,u;t=Qu,"collate"===r.substr(Qu,7).toLowerCase()?(e=r.substr(Qu,7),Qu+=7):(e=o,0===no&&io(ur));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="COLLATE"):(Qu=t,t=o)):(Qu=t,t=o);return t}()!==o&&pi()!==o&&(e=Rs())!==o?(t={type:"collate",value:e}):(Qu=t,t=o);return t}())===o&&(T=null),T!==o&&pi()!==o?((m=function(){var t,e,n;t=Qu,"column_format"===r.substr(Qu,13).toLowerCase()?(e=r.substr(Qu,13),Qu+=13):(e=o,0===no&&io(C));e!==o&&pi()!==o?("fixed"===r.substr(Qu,5).toLowerCase()?(n=r.substr(Qu,5),Qu+=5):(n=o,0===no&&io(p)),n===o&&("dynamic"===r.substr(Qu,7).toLowerCase()?(n=r.substr(Qu,7),Qu+=7):(n=o,0===no&&io(w)),n===o&&("default"===r.substr(Qu,7).toLowerCase()?(n=r.substr(Qu,7),Qu+=7):(n=o,0===no&&io(E)))),n!==o?(e=function(r,t){return {type:"column_format",value:t.toLowerCase()}}(0,n),t=e):(Qu=t,t=o)):(Qu=t,t=o);return t}())===o&&(m=null),m!==o&&pi()!==o?((S=function(){var t,e,n;t=Qu,"storage"===r.substr(Qu,7).toLowerCase()?(e=r.substr(Qu,7),Qu+=7):(e=o,0===no&&io(h));e!==o&&pi()!==o?("disk"===r.substr(Qu,4).toLowerCase()?(n=r.substr(Qu,4),Qu+=4):(n=o,0===no&&io(A)),n===o&&("memory"===r.substr(Qu,6).toLowerCase()?(n=r.substr(Qu,6),Qu+=6):(n=o,0===no&&io(y))),n!==o?(e={type:"storage",value:n.toLowerCase()},t=e):(Qu=t,t=o)):(Qu=t,t=o);return t}())===o&&(S=null),S!==o&&pi()!==o?((I=Io())===o&&(I=null),I!==o?(N=e,R=n,_=s,g=i,O=c,U=l,x=f,M=T,D=m,k=S,$=I,Vi.add(`create::${N.table}::${N.column}`),_&&!_.value&&(_.value="null"),t=e={column:N,definition:R,nullable:_,default_val:g,auto_increment:U&&U.identity,unique_or_primary:U&&U.unique_or_primary,check:O,comment:x,collate:M,column_format:D,storage:k,reference_definition:$,resource:"column"}):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o),t===o&&(t=Qu,(e=Ts())!==o&&pi()!==o?(n=Qu,(u=aa())!==o&&(s=pi())!==o&&(a=vs())!==o?n=u=[u,s,a]:(Qu=n,n=o),n===o&&(n=null),n!==o?(t=e=function(r,t){return t&&(r.as=t[2]),{column:r,resource:"column"}}(e,n)):(Qu=t,t=o)):(Qu=t,t=o)),t}function ho(){var t,e,n,u,s,a,i,c,l,f,v;return t=Qu,Ja()!==o&&pi()!==o&&(e=Rs())!==o&&pi()!==o?((n=aa())===o&&(n=null),n!==o&&pi()!==o&&(u=Di())!==o&&pi()!==o?(s=Qu,(a=ri())!==o&&(i=pi())!==o&&(c=vs())!==o?s=a=[a,i,c]:(Qu=s,s=o),s===o&&(s=null),s!==o?(f=u,v=s,t={at:"@",name:e,as:(l=n)&&l[0].toLowerCase(),prefix:f,keyword:"variable",definition:v&&v[2]}):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o),t===o&&(t=Qu,Ja()!==o&&pi()!==o&&(e=Rs())!==o&&pi()!==o?("cursor"===r.substr(Qu,6).toLowerCase()?(n=r.substr(Qu,6),Qu+=6):(n=o,0===no&&io(T)),n!==o?(t=function(r,t){return {at:"@",name:t,keyword:"cursor",prefix:"cursor"}}(0,e)):(Qu=t,t=o)):(Qu=t,t=o)),t}function Ao(){var t;return (t=function(){var r,t,e;r=Qu,(t=ti())!==o&&pi()!==o&&(e=So())!==o?(n=e,t={action:"add",...n,type:"alter"},r=t):(Qu=r,r=o);var n;return r}())===o&&(t=function(){var r,t,e,n;r=Qu,(t=Zs())!==o&&pi()!==o&&(e=ai())!==o&&pi()!==o&&(n=Rs())!==o?(t={action:"drop",constraint:n,keyword:e.toLowerCase(),resource:"constraint",type:"alter"},r=t):(Qu=r,r=o);return r}())===o&&(t=function(){var t,e,n,u;t=Qu,La()!==o&&pi()!==o?("check"===r.substr(Qu,5).toLowerCase()?(e=r.substr(Qu,5),Qu+=5):(e=o,0===no&&io(x)),e!==o&&pi()!==o?("check"===r.substr(Qu,5).toLowerCase()?(n=r.substr(Qu,5),Qu+=5):(n=o,0===no&&io(x)),n!==o&&pi()!==o&&ai()!==o&&pi()!==o&&(u=Rs())!==o?(t={action:"with",constraint:u,keyword:"check check constraint",resource:"constraint",type:"alter"}):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o);return t}())===o&&(t=function(){var t,e,n;t=Qu,"nocheck"===r.substr(Qu,7).toLowerCase()?(e=r.substr(Qu,7),Qu+=7):(e=o,0===no&&io(M));e!==o&&pi()!==o&&ai()!==o&&pi()!==o&&(n=Rs())!==o?(t=e={action:"nocheck",keyword:"constraint",constraint:n,resource:"constraint",type:"alter"}):(Qu=t,t=o);return t}())===o&&(t=function(){var r,t,e,n;r=Qu,(t=ti())===o&&(t=Js());t!==o&&pi()!==o?((e=ei())===o&&(e=null),e!==o&&pi()!==o&&(n=Eo())!==o?(u=e,s=n,t={action:t.toLowerCase(),...s,keyword:u,resource:"column",type:"alter"},r=t):(Qu=r,r=o)):(Qu=r,r=o);var u,s;return r}())===o&&(t=function(){var r,t,e;r=Qu,Zs()!==o&&pi()!==o?((t=ei())===o&&(t=null),t!==o&&pi()!==o&&(e=Ts())!==o?(r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(Qu=r,r=o)):(Qu=r,r=o);return r}())===o&&(t=function(){var r,t,e;r=Qu,(t=ti())!==o&&pi()!==o&&(e=yo())!==o?(n=e,t={action:"add",type:"alter",...n},r=t):(Qu=r,r=o);var n;return r}())===o&&(t=function(){var r,t,e;r=Qu,(t=ti())!==o&&pi()!==o&&(e=To())!==o?(n=e,t={action:"add",type:"alter",...n},r=t):(Qu=r,r=o);var n;return r}())===o&&(t=function(){var r,t,e,n;r=Qu,(t=na())!==o&&pi()!==o?((e=qs())===o&&(e=aa()),e===o&&(e=null),e!==o&&pi()!==o&&(n=Ss())!==o?(s=n,t={action:"rename",type:"alter",resource:"table",keyword:(u=e)&&u[0].toLowerCase(),table:s},r=t):(Qu=r,r=o)):(Qu=r,r=o);var u,s;return r}())===o&&(t=function(){var t,e,n;t=Qu,"algorithm"===r.substr(Qu,9).toLowerCase()?(e=r.substr(Qu,9),Qu+=9):(e=o,0===no&&io(S));e!==o&&pi()!==o&&ri()!==o&&pi()!==o?("default"===r.substr(Qu,7).toLowerCase()?(n=r.substr(Qu,7),Qu+=7):(n=o,0===no&&io(E)),n===o&&("instant"===r.substr(Qu,7).toLowerCase()?(n=r.substr(Qu,7),Qu+=7):(n=o,0===no&&io(I)),n===o&&("inplace"===r.substr(Qu,7).toLowerCase()?(n=r.substr(Qu,7),Qu+=7):(n=o,0===no&&io(N)),n===o&&("copy"===r.substr(Qu,4).toLowerCase()?(n=r.substr(Qu,4),Qu+=4):(n=o,0===no&&io(R))))),n!==o?(t=e={type:"alter",keyword:"algorithm",resource:"algorithm",algorithm:n}):(Qu=t,t=o)):(Qu=t,t=o);return t}())===o&&(t=function(){var t,e,n;t=Qu,"lock"===r.substr(Qu,4).toLowerCase()?(e=r.substr(Qu,4),Qu+=4):(e=o,0===no&&io(_));e!==o&&pi()!==o&&ri()!==o&&pi()!==o?("default"===r.substr(Qu,7).toLowerCase()?(n=r.substr(Qu,7),Qu+=7):(n=o,0===no&&io(E)),n===o&&("none"===r.substr(Qu,4).toLowerCase()?(n=r.substr(Qu,4),Qu+=4):(n=o,0===no&&io(g)),n===o&&("shared"===r.substr(Qu,6).toLowerCase()?(n=r.substr(Qu,6),Qu+=6):(n=o,0===no&&io(O)),n===o&&("exclusive"===r.substr(Qu,9).toLowerCase()?(n=r.substr(Qu,9),Qu+=9):(n=o,0===no&&io(U))))),n!==o?(t=e={type:"alter",keyword:"lock",resource:"lock",lock:n}):(Qu=t,t=o)):(Qu=t,t=o);return t}()),t}function yo(){var r,t,e,n,u,s,a,i;return r=Qu,(t=ni())===o&&(t=ui()),t!==o&&pi()!==o?((e=Ns())===o&&(e=null),e!==o&&pi()!==o?((n=Go())===o&&(n=null),n!==o&&pi()!==o&&(u=xo())!==o&&pi()!==o?((s=jo())===o&&(s=null),s!==o&&pi()!==o?(a=n,i=s,r=t={index:e,definition:u,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i}):(Qu=r,r=o)):(Qu=r,r=o)):(Qu=r,r=o)):(Qu=r,r=o),r}function To(){var t,e,n,u,s,a,i,c,l;return t=Qu,(e=function(){var t,e,n,u;t=Qu,"fulltext"===r.substr(Qu,8).toLowerCase()?(e=r.substr(Qu,8),Qu+=8):(e=o,0===no&&io(Nu));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="FULLTEXT"):(Qu=t,t=o)):(Qu=t,t=o);return t}())===o&&(e=function(){var t,e,n,u;t=Qu,"spatial"===r.substr(Qu,7).toLowerCase()?(e=r.substr(Qu,7),Qu+=7):(e=o,0===no&&io(Ru));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="SPATIAL"):(Qu=t,t=o)):(Qu=t,t=o);return t}()),e!==o&&pi()!==o?((n=ni())===o&&(n=ui()),n===o&&(n=null),n!==o&&pi()!==o?((u=Ns())===o&&(u=null),u!==o&&pi()!==o&&(s=xo())!==o&&pi()!==o?((a=jo())===o&&(a=null),a!==o&&pi()!==o?(i=e,l=a,t=e={index:u,definition:s,keyword:(c=n)&&`${i.toLowerCase()} ${c.toLowerCase()}`||i.toLowerCase(),index_options:l,resource:"index"}):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o),t}function mo(){var r,t,e,n;return r=Qu,(t=ai())!==o&&pi()!==o?((e=Ss())===o&&(e=null),e!==o?(n=e,r=t={keyword:t.toLowerCase(),constraint:n}):(Qu=r,r=o)):(Qu=r,r=o),r}function So(){var t,e,n,u,s,a,i,c,l,f,v,b,d;return t=Qu,(e=mo())===o&&(e=null),e!==o&&pi()!==o?("check"===r.substr(Qu,5).toLowerCase()?(n=r.substr(Qu,5),Qu+=5):(n=o,0===no&&io(x)),n!==o&&pi()!==o?(u=Qu,"not"===r.substr(Qu,3).toLowerCase()?(s=r.substr(Qu,3),Qu+=3):(s=o,0===no&&io(k)),s!==o&&(a=pi())!==o?("for"===r.substr(Qu,3).toLowerCase()?(i=r.substr(Qu,3),Qu+=3):(i=o,0===no&&io($)),i!==o&&(c=pi())!==o?("replication"===r.substr(Qu,11).toLowerCase()?(l=r.substr(Qu,11),Qu+=11):(l=o,0===no&&io(F)),l!==o&&(f=pi())!==o?u=s=[s,a,i,c,l,f]:(Qu=u,u=o)):(Qu=u,u=o)):(Qu=u,u=o),u===o&&(u=null),u!==o&&(s=fi())!==o&&(a=pi())!==o&&(i=vs())!==o&&(c=pi())!==o&&(l=vi())!==o?(v=e,b=u,d=i,t=e={constraint_type:n.toLowerCase(),keyword:v&&v.keyword,constraint:v&&v.constraint,index_type:b&&{keyword:"not for replication",type:""},definition:[d],resource:"constraint"}):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o),t}function Io(){var t,e,n,u,s,a,i,c,l,f;return t=Qu,(e=function(){var t,e,n,u;t=Qu,"references"===r.substr(Qu,10).toLowerCase()?(e=r.substr(Qu,10),Qu+=10):(e=o,0===no&&io(Uu));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="REFERENCES"):(Qu=t,t=o)):(Qu=t,t=o);return t}())!==o&&pi()!==o&&(n=Wo())!==o&&pi()!==o&&(u=xo())!==o&&pi()!==o?("match full"===r.substr(Qu,10).toLowerCase()?(s=r.substr(Qu,10),Qu+=10):(s=o,0===no&&io(H)),s===o&&("match partial"===r.substr(Qu,13).toLowerCase()?(s=r.substr(Qu,13),Qu+=13):(s=o,0===no&&io(G)),s===o&&("match simple"===r.substr(Qu,12).toLowerCase()?(s=r.substr(Qu,12),Qu+=12):(s=o,0===no&&io(j)))),s===o&&(s=null),s!==o&&pi()!==o?((a=No())===o&&(a=null),a!==o&&pi()!==o?((i=No())===o&&(i=null),i!==o?(c=s,l=a,f=i,t=e={definition:u,table:n,keyword:e.toLowerCase(),match:c&&c.toLowerCase(),on_delete:l,on_update:f}):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o),t}function No(){var t,e,n,u;return t=Qu,"on delete"===r.substr(Qu,9).toLowerCase()?(e=r.substr(Qu,9),Qu+=9):(e=o,0===no&&io(Y)),e===o&&("on update"===r.substr(Qu,9).toLowerCase()?(e=r.substr(Qu,9),Qu+=9):(e=o,0===no&&io(B))),e!==o&&pi()!==o&&(n=function(){var t,e;t=Qu,"restrict"===r.substr(Qu,8).toLowerCase()?(e=r.substr(Qu,8),Qu+=8):(e=o,0===no&&io(X));e===o&&("cascade"===r.substr(Qu,7).toLowerCase()?(e=r.substr(Qu,7),Qu+=7):(e=o,0===no&&io(W)),e===o&&("set null"===r.substr(Qu,8).toLowerCase()?(e=r.substr(Qu,8),Qu+=8):(e=o,0===no&&io(V)),e===o&&("no action"===r.substr(Qu,9).toLowerCase()?(e=r.substr(Qu,9),Qu+=9):(e=o,0===no&&io(K)),e===o&&("set default"===r.substr(Qu,11).toLowerCase()?(e=r.substr(Qu,11),Qu+=11):(e=o,0===no&&io(q))))));e!==o&&(e=e.toLowerCase());return t=e}())!==o?(u=n,t=e={type:e.toLowerCase(),value:u}):(Qu=t,t=o),t}function Ro(){var t,e,n,u,s,a,i,c,l;return t=Qu,"auto_increment"===r.substr(Qu,14).toLowerCase()?(e=r.substr(Qu,14),Qu+=14):(e=o,0===no&&io(Z)),e===o&&("avg_row_length"===r.substr(Qu,14).toLowerCase()?(e=r.substr(Qu,14),Qu+=14):(e=o,0===no&&io(z)),e===o&&("key_block_size"===r.substr(Qu,14).toLowerCase()?(e=r.substr(Qu,14),Qu+=14):(e=o,0===no&&io(J)),e===o&&("max_rows"===r.substr(Qu,8).toLowerCase()?(e=r.substr(Qu,8),Qu+=8):(e=o,0===no&&io(Q)),e===o&&("min_rows"===r.substr(Qu,8).toLowerCase()?(e=r.substr(Qu,8),Qu+=8):(e=o,0===no&&io(rr)),e===o&&("stats_sample_pages"===r.substr(Qu,18).toLowerCase()?(e=r.substr(Qu,18),Qu+=18):(e=o,0===no&&io(tr))))))),e!==o&&pi()!==o?((n=ri())===o&&(n=null),n!==o&&pi()!==o&&(u=Hs())!==o?(c=n,l=u,t=e={keyword:e.toLowerCase(),symbol:c,value:l.value}):(Qu=t,t=o)):(Qu=t,t=o),t===o&&(t=Qu,(e=Ks())===o&&(e=null),e!==o&&pi()!==o?("character set"===r.substr(Qu,13).toLowerCase()?(n=r.substr(Qu,13),Qu+=13):(n=o,0===no&&io(er)),n===o&&("charset"===r.substr(Qu,7).toLowerCase()?(n=r.substr(Qu,7),Qu+=7):(n=o,0===no&&io(nr)),n===o&&("collate"===r.substr(Qu,7).toLowerCase()?(n=r.substr(Qu,7),Qu+=7):(n=o,0===no&&io(ur)))),n!==o&&pi()!==o?((u=ri())===o&&(u=null),u!==o&&(s=pi())!==o&&(a=Rs())!==o?(t=e=function(r,t,e,n){return {keyword:r&&`${r[0].toLowerCase()} ${t.toLowerCase()}`||t.toLowerCase(),symbol:e,value:n}}(e,n,u,a)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o),t===o&&(t=Qu,(e=si())===o&&("connection"===r.substr(Qu,10).toLowerCase()?(e=r.substr(Qu,10),Qu+=10):(e=o,0===no&&io(or))),e!==o&&pi()!==o?((n=ri())===o&&(n=null),n!==o&&pi()!==o&&(u=ks())!==o?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,u)):(Qu=t,t=o)):(Qu=t,t=o),t===o&&(t=Qu,"compression"===r.substr(Qu,11).toLowerCase()?(e=r.substr(Qu,11),Qu+=11):(e=o,0===no&&io(sr)),e!==o&&pi()!==o?((n=ri())===o&&(n=null),n!==o&&pi()!==o?(u=Qu,39===r.charCodeAt(Qu)?(s="'",Qu++):(s=o,0===no&&io(ar)),s!==o?("zlib"===r.substr(Qu,4).toLowerCase()?(a=r.substr(Qu,4),Qu+=4):(a=o,0===no&&io(ir)),a===o&&("lz4"===r.substr(Qu,3).toLowerCase()?(a=r.substr(Qu,3),Qu+=3):(a=o,0===no&&io(cr)),a===o&&("none"===r.substr(Qu,4).toLowerCase()?(a=r.substr(Qu,4),Qu+=4):(a=o,0===no&&io(g)))),a!==o?(39===r.charCodeAt(Qu)?(i="'",Qu++):(i=o,0===no&&io(ar)),i!==o?u=s=[s,a,i]:(Qu=u,u=o)):(Qu=u,u=o)):(Qu=u,u=o),u!==o?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,u)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o),t===o&&(t=Qu,"engine"===r.substr(Qu,6).toLowerCase()?(e=r.substr(Qu,6),Qu+=6):(e=o,0===no&&io(lr)),e!==o&&pi()!==o?((n=ri())===o&&(n=null),n!==o&&pi()!==o&&(u=Rs())!==o?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}}(e,n,u)):(Qu=t,t=o)):(Qu=t,t=o))))),t}function _o(){var t,e,n,u,s;return t=Qu,(e=Ko())!==o&&pi()!==o&&(n=function(){var t,e,n;return t=Qu,"read"===r.substr(Qu,4).toLowerCase()?(e=r.substr(Qu,4),Qu+=4):(e=o,0===no&&io(fr)),e!==o&&pi()!==o?("local"===r.substr(Qu,5).toLowerCase()?(n=r.substr(Qu,5),Qu+=5):(n=o,0===no&&io(vr)),n===o&&(n=null),n!==o?(t=e={type:"read",suffix:n&&"local"}):(Qu=t,t=o)):(Qu=t,t=o),t===o&&(t=Qu,"low_priority"===r.substr(Qu,12).toLowerCase()?(e=r.substr(Qu,12),Qu+=12):(e=o,0===no&&io(br)),e===o&&(e=null),e!==o&&pi()!==o?("write"===r.substr(Qu,5).toLowerCase()?(n=r.substr(Qu,5),Qu+=5):(n=o,0===no&&io(dr)),n!==o?(t=e={type:"write",prefix:e&&"low_priority"}):(Qu=t,t=o)):(Qu=t,t=o)),t}())!==o?(u=e,s=n,Wi.add(`lock::${u.db}::${u.table}`),t=e={table:u,lock_type:s}):(Qu=t,t=o),t}function go(){var t,e,n,u,s,a,i;return (t=Mo())===o&&(t=Qu,e=Qu,40===r.charCodeAt(Qu)?(n="(",Qu++):(n=o,0===no&&io(Lr)),n!==o&&(u=pi())!==o&&(s=go())!==o&&(a=pi())!==o?(41===r.charCodeAt(Qu)?(i=")",Qu++):(i=o,0===no&&io(Cr)),i!==o?e=n=[n,u,s,a,i]:(Qu=e,e=o)):(Qu=e,e=o),e!==o&&(e={...e[2],parentheses_symbol:!0}),t=e),t}function Oo(){var t,e,n,u,s,a,i,c,l;if(t=Qu,La()!==o)if(pi()!==o)if((e=Uo())!==o){for(n=[],u=Qu,(s=pi())!==o&&(a=ci())!==o&&(i=pi())!==o&&(c=Uo())!==o?u=s=[s,a,i,c]:(Qu=u,u=o);u!==o;)n.push(u),u=Qu,(s=pi())!==o&&(a=ci())!==o&&(i=pi())!==o&&(c=Uo())!==o?u=s=[s,a,i,c]:(Qu=u,u=o);n!==o?(t=f(e,n)):(Qu=t,t=o);}else Qu=t,t=o;else Qu=t,t=o;else Qu=t,t=o;return t===o&&(t=Qu,pi()!==o&&La()!==o&&(e=pi())!==o&&(n=function(){var t,e,n,u;t=Qu,"RECURSIVE"===r.substr(Qu,9)?(e="RECURSIVE",Qu+=9):(e=o,0===no&&io(Ee));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o);return t}())!==o&&(u=pi())!==o&&(s=Uo())!==o?((l=s).recursive=!0,t=[l]):(Qu=t,t=o)),t}function Uo(){var r,t,e,n;return r=Qu,(t=Rs())!==o&&pi()!==o?((e=xo())===o&&(e=null),e!==o&&pi()!==o&&aa()!==o&&pi()!==o&&fi()!==o&&pi()!==o&&(n=bo())!==o&&pi()!==o&&vi()!==o?(r=t={name:t,stmt:n,columns:e}):(Qu=r,r=o)):(Qu=r,r=o),r}function xo(){var r,t,e,n,u,s,a,i;if(r=Qu,fi()!==o)if(pi()!==o)if((t=Ns())!==o){for(e=[],n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(i=Ns())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);n!==o;)e.push(n),n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(i=Ns())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);e!==o&&(n=pi())!==o&&(u=vi())!==o?(r=f(t,e)):(Qu=r,r=o);}else Qu=r,r=o;else Qu=r,r=o;else Qu=r,r=o;return r}function Mo(){var t,e,n,u,s,a,i,c,l,f,v,b;return t=Qu,pi()!==o?((e=Oo())===o&&(e=null),e!==o&&pi()!==o&&function(){var t,e,n,u;t=Qu,"select"===r.substr(Qu,6).toLowerCase()?(e=r.substr(Qu,6),Qu+=6):(e=o,0===no&&io(ve));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o);return t}()!==o&&pi()!==o?((n=function(){var r,t,e,n,u,s;if(r=Qu,(t=Do())!==o){for(e=[],n=Qu,(u=pi())!==o&&(s=Do())!==o?n=u=[u,s]:(Qu=n,n=o);n!==o;)e.push(n),n=Qu,(u=pi())!==o&&(s=Do())!==o?n=u=[u,s]:(Qu=n,n=o);e!==o?(t=function(r,t){const e=[r];for(let r=0,n=t.length;r<n;++r)e.push(t[r][1]);return e}(t,e),r=t):(Qu=r,r=o);}else Qu=r,r=o;return r}())===o&&(n=null),n!==o&&pi()!==o?((u=function(){var t,e,n,u;t=Qu,(e=function(){var t,e,n,u;t=Qu,"top"===r.substr(Qu,3).toLowerCase()?(e=r.substr(Qu,3),Qu+=3):(e=o,0===no&&io(se));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o);return t}())!==o&&pi()!==o&&(n=Gs())!==o&&pi()!==o?("percent"===r.substr(Qu,7).toLowerCase()?(u=r.substr(Qu,7),Qu+=7):(u=o,0===no&&io(pr)),u===o&&(u=null),u!==o?(e={value:n,percent:(s=u)&&s.toLowerCase()},t=e):(Qu=t,t=o)):(Qu=t,t=o);var s;return t}())===o&&(u=null),u!==o&&pi()!==o?((s=ha())===o&&(s=null),s!==o&&pi()!==o&&(a=ko())!==o&&pi()!==o?((i=Po())===o&&(i=null),i!==o&&pi()!==o?((c=Jo())===o&&(c=null),c!==o&&pi()!==o?((l=function(){var t,e,n;t=Qu,(e=function(){var t,e,n,u;t=Qu,"group"===r.substr(Qu,5).toLowerCase()?(e=r.substr(Qu,5),Qu+=5):(e=o,0===no&&io(Be));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o);return t}())!==o&&pi()!==o&&Ca()!==o&&pi()!==o&&(n=is())!==o?(e=n.value,t=e):(Qu=t,t=o);return t}())===o&&(l=null),l!==o&&pi()!==o?((f=function(){var t,e;t=Qu,function(){var t,e,n,u;t=Qu,"having"===r.substr(Qu,6).toLowerCase()?(e=r.substr(Qu,6),Qu+=6):(e=o,0===no&&io(Ve));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o);return t}()!==o&&pi()!==o&&(e=vs())!==o?(t=e):(Qu=t,t=o);return t}())===o&&(f=null),f!==o&&pi()!==o?((v=Qo())===o&&(v=null),v!==o&&pi()!==o?((b=es())===o&&(b=null),b!==o?(t=function(r,t,e,n,u,o,s,a,i,c,l){return o&&o.forEach(r=>r.table&&Wi.add(`select::${r.db}::${r.table}`)),{with:r,type:"select",options:t,distinct:n,columns:u,from:o,where:s,groupby:a,having:i,top:e,orderby:c,limit:l}}(e,n,u,s,a,i,c,l,f,v,b)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o),t}function Do(){var t,e;return t=Qu,(e=function(){var t;"sql_calc_found_rows"===r.substr(Qu,19).toLowerCase()?(t=r.substr(Qu,19),Qu+=19):(t=o,0===no&&io(xu));return t}())===o&&((e=function(){var t;"sql_cache"===r.substr(Qu,9).toLowerCase()?(t=r.substr(Qu,9),Qu+=9):(t=o,0===no&&io(Mu));return t}())===o&&(e=function(){var t;"sql_no_cache"===r.substr(Qu,12).toLowerCase()?(t=r.substr(Qu,12),Qu+=12):(t=o,0===no&&io(Du));return t}()),e===o&&(e=function(){var t;"sql_big_result"===r.substr(Qu,14).toLowerCase()?(t=r.substr(Qu,14),Qu+=14):(t=o,0===no&&io($u));return t}())===o&&(e=function(){var t;"sql_small_result"===r.substr(Qu,16).toLowerCase()?(t=r.substr(Qu,16),Qu+=16):(t=o,0===no&&io(ku));return t}())===o&&(e=function(){var t;"sql_buffer_result"===r.substr(Qu,17).toLowerCase()?(t=r.substr(Qu,17),Qu+=17):(t=o,0===no&&io(Fu));return t}())),e!==o&&(e=e),t=e}function ko(){var r,t,e,n,u,s,a,i,c,l;if(r=Qu,(t=Ea())===o&&(t=Qu,(e=li())!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o),t===o&&(t=li())),t!==o){for(e=[],n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(i=$o())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);n!==o;)e.push(n),n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(i=$o())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);e!==o?(c=t,l=e,Vi.add("select::null::(.*)"),r=t=l&&l.length>0?(c[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},Gi(c[0],l)):c[0]):(Qu=r,r=o);}else Qu=r,r=o;if(r===o)if(r=Qu,(t=$o())!==o){for(e=[],n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(i=$o())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);n!==o;)e.push(n),n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(i=$o())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);e!==o?(r=t=f(t,e)):(Qu=r,r=o);}else Qu=r,r=o;return r}function $o(){var r,t,e,n;return r=Qu,(t=Ss())!==o&&pi()!==o&&(e=ii())!==o&&pi()!==o&&li()!==o?(n=t,Vi.add(`select::${n}::(.*)`),r=t={expr:{type:"column_ref",table:n,column:"*"},as:null}):(Qu=r,r=o),r===o&&(r=Qu,(t=vs())!==o&&pi()!==o?((e=Fo())===o&&(e=null),e!==o?(r=t={expr:t,as:e}):(Qu=r,r=o)):(Qu=r,r=o)),r}function Fo(){var r,t,e;return r=Qu,(t=aa())!==o&&pi()!==o&&(e=function(){var r,t;r=Qu,(t=Rs())!==o?((function(r){if(!0===$i[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return !1}(t)?o:void 0)!==o?(r=t=t):(Qu=r,r=o)):(Qu=r,r=o);r===o&&(r=Qu,(t=Is())!==o&&(t=t),r=t);return r}())!==o?(r=t=e):(Qu=r,r=o),r===o&&(r=Qu,(t=aa())===o&&(t=null),t!==o&&pi()!==o&&(e=Ss())!==o?(r=t=e):(Qu=r,r=o)),r}function Po(){var t,e;return t=Qu,function(){var t,e,n,u;t=Qu,"from"===r.substr(Qu,4).toLowerCase()?(e=r.substr(Qu,4),Qu+=4):(e=o,0===no&&io(Se));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o);return t}()!==o&&pi()!==o&&(e=Wo())!==o?(t=e):(Qu=t,t=o),t}function Ho(){var r,t,e;return r=Qu,(t=Zo())!==o&&pi()!==o&&qs()!==o&&pi()!==o&&(e=Zo())!==o?(r=t=[t,e]):(Qu=r,r=o),r}function Go(){var t,e,n;return t=Qu,(e=da())!==o&&pi()!==o?("btree"===r.substr(Qu,5).toLowerCase()?(n=r.substr(Qu,5),Qu+=5):(n=o,0===no&&io(wr)),n===o&&("hash"===r.substr(Qu,4).toLowerCase()?(n=r.substr(Qu,4),Qu+=4):(n=o,0===no&&io(Er))),n!==o?(t=e={keyword:"using",type:n.toLowerCase()}):(Qu=t,t=o)):(Qu=t,t=o),t===o&&(t=Qu,"nonclustered"===r.substr(Qu,12).toLowerCase()?(e=r.substr(Qu,12),Qu+=12):(e=o,0===no&&io(hr)),e!==o&&(e={keyword:e.toLowerCase()}),t=e),t}function jo(){var r,t,e,n,u,s;if(r=Qu,(t=Xo())!==o){for(e=[],n=Qu,(u=pi())!==o&&(s=Xo())!==o?n=u=[u,s]:(Qu=n,n=o);n!==o;)e.push(n),n=Qu,(u=pi())!==o&&(s=Xo())!==o?n=u=[u,s]:(Qu=n,n=o);e!==o?(r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(Qu=r,r=o);}else Qu=r,r=o;return r}function Yo(){var r,t,e,n;return r=Qu,(t=Hs())!==o&&pi()!==o&&(e=qs())!==o&&pi()!==o&&Hs()!==o?(n=t,r=t={type:"range",symbol:e[0],start:n,end:n}):(Qu=r,r=o),r===o&&(r=Hs()),r}function Bo(){var t,e,n;return t=Qu,la()!==o&&pi()!==o?("partitions"===r.substr(Qu,10).toLowerCase()?(e=r.substr(Qu,10),Qu+=10):(e=o,0===no&&io(Ar)),e!==o&&pi()!==o&&fi()!==o&&pi()!==o&&(n=function(){var r,t,e,n,u,s,a,c;if(r=Qu,(t=Yo())!==o){for(e=[],n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(c=Yo())!==o?n=u=[u,s,a,c]:(Qu=n,n=o);n!==o;)e.push(n),n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(c=Yo())!==o?n=u=[u,s,a,c]:(Qu=n,n=o);e!==o?(r=t=i(t,e)):(Qu=r,r=o);}else Qu=r,r=o;return r}())!==o&&pi()!==o&&vi()!==o?(t={type:"on partitions",partitions:n}):(Qu=t,t=o)):(Qu=t,t=o),t}function Xo(){var t,e,n,u,s,a;return t=Qu,(e=function(){var t,e,n,u;t=Qu,"key_block_size"===r.substr(Qu,14).toLowerCase()?(e=r.substr(Qu,14),Qu+=14):(e=o,0===no&&io(J));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="KEY_BLOCK_SIZE"):(Qu=t,t=o)):(Qu=t,t=o);return t}())!==o&&pi()!==o?((n=ri())===o&&(n=null),n!==o&&pi()!==o&&(u=Hs())!==o?(t=e=yr(e,n,u)):(Qu=t,t=o)):(Qu=t,t=o),t===o&&(t=Qu,"fillfactor"===r.substr(Qu,10).toLowerCase()?(e=r.substr(Qu,10),Qu+=10):(e=o,0===no&&io(Tr)),e===o&&("max_duration"===r.substr(Qu,12).toLowerCase()?(e=r.substr(Qu,12),Qu+=12):(e=o,0===no&&io(mr)),e===o&&("maxdop"===r.substr(Qu,6).toLowerCase()?(e=r.substr(Qu,6),Qu+=6):(e=o,0===no&&io(Sr)))),e!==o&&pi()!==o&&(n=ri())!==o&&pi()!==o&&(u=Hs())!==o?(t=e=yr(e,n,u)):(Qu=t,t=o),t===o&&(t=Go())===o&&(t=Qu,"with"===r.substr(Qu,4).toLowerCase()?(e=r.substr(Qu,4),Qu+=4):(e=o,0===no&&io(Ir)),e!==o&&pi()!==o?("parser"===r.substr(Qu,6).toLowerCase()?(n=r.substr(Qu,6),Qu+=6):(n=o,0===no&&io(Nr)),n!==o&&pi()!==o&&(u=Rs())!==o?(t=e={type:"with parser",expr:u}):(Qu=t,t=o)):(Qu=t,t=o),t===o&&(t=Qu,"visible"===r.substr(Qu,7).toLowerCase()?(e=r.substr(Qu,7),Qu+=7):(e=o,0===no&&io(Rr)),e===o&&("invisible"===r.substr(Qu,9).toLowerCase()?(e=r.substr(Qu,9),Qu+=9):(e=o,0===no&&io(_r))),e!==o&&(e={type:(a=e).toLowerCase(),expr:a.toLowerCase()}),(t=e)===o&&(t=Qu,"pad_index"===r.substr(Qu,9).toLowerCase()?(e=r.substr(Qu,9),Qu+=9):(e=o,0===no&&io(gr)),e===o&&("sort_in_tempdb"===r.substr(Qu,14).toLowerCase()?(e=r.substr(Qu,14),Qu+=14):(e=o,0===no&&io(Or)),e===o&&("ignore_dup_key"===r.substr(Qu,14).toLowerCase()?(e=r.substr(Qu,14),Qu+=14):(e=o,0===no&&io(Ur)),e===o&&("statistics_norecompute"===r.substr(Qu,22).toLowerCase()?(e=r.substr(Qu,22),Qu+=22):(e=o,0===no&&io(xr)),e===o&&("statistics_incremental"===r.substr(Qu,22).toLowerCase()?(e=r.substr(Qu,22),Qu+=22):(e=o,0===no&&io(Mr)),e===o&&("drop_existing"===r.substr(Qu,13).toLowerCase()?(e=r.substr(Qu,13),Qu+=13):(e=o,0===no&&io(Dr)),e===o&&("online"===r.substr(Qu,6).toLowerCase()?(e=r.substr(Qu,6),Qu+=6):(e=o,0===no&&io(kr)),e===o&&("resumable"===r.substr(Qu,9).toLowerCase()?(e=r.substr(Qu,9),Qu+=9):(e=o,0===no&&io($r)),e===o&&("allow_row_locks"===r.substr(Qu,15).toLowerCase()?(e=r.substr(Qu,15),Qu+=15):(e=o,0===no&&io(Fr)),e===o&&("allow_page_locks"===r.substr(Qu,16).toLowerCase()?(e=r.substr(Qu,16),Qu+=16):(e=o,0===no&&io(Pr)),e===o&&("optimize_for_sequential_key"===r.substr(Qu,27).toLowerCase()?(e=r.substr(Qu,27),Qu+=27):(e=o,0===no&&io(Hr)))))))))))),e!==o&&pi()!==o&&(n=ri())!==o&&pi()!==o?((u=la())===o&&(u=function(){var t,e,n,u;t=Qu,"off"===r.substr(Qu,3).toLowerCase()?(e=r.substr(Qu,3),Qu+=3):(e=o,0===no&&io(Ue));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o);return t}()),u!==o?(t=e=function(r,t,e){return {type:r.toLowerCase(),symbol:t,expr:{type:"origin",value:e[0]}}}(e,n,u)):(Qu=t,t=o)):(Qu=t,t=o),t===o&&(t=Qu,"data_compression"===r.substr(Qu,16).toLowerCase()?(e=r.substr(Qu,16),Qu+=16):(e=o,0===no&&io(Gr)),e!==o&&pi()!==o&&(n=ri())!==o&&pi()!==o?("none"===r.substr(Qu,4).toLowerCase()?(u=r.substr(Qu,4),Qu+=4):(u=o,0===no&&io(g)),u===o&&("row"===r.substr(Qu,3).toLowerCase()?(u=r.substr(Qu,3),Qu+=3):(u=o,0===no&&io(jr)),u===o&&("PAGE"===r.substr(Qu,4)?(u="PAGE",Qu+=4):(u=o,0===no&&io(Yr)))),u!==o&&pi()!==o?((s=Bo())===o&&(s=null),s!==o?(t=e=function(r,t,e,n){return {type:r.toLowerCase(),symbol:t,expr:{value:e,on:n}}}(e,n,u,s)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o),t===o&&(t=hi())))))),t}function Wo(){var r,t,e,n,u,s;if(r=Qu,(t=Ko())!==o){for(e=[],n=Vo();n!==o;)e.push(n),n=Vo();e!==o?(u=t,(s=e).unshift(u),s.forEach(r=>{const{table:t,as:e}=r;Ki[t]=t,e&&(Ki[e]=t);}),r=t=s):(Qu=r,r=o);}else Qu=r,r=o;return r}function Vo(){var r,t,e;return r=Qu,pi()!==o&&(t=ci())!==o&&pi()!==o&&(e=Ko())!==o?(r=e):(Qu=r,r=o),r===o&&(r=Qu,pi()!==o&&(t=function(){var r,t,e,n,u,s,a,i,c,l,f;if(r=Qu,(t=qo())!==o)if(pi()!==o)if((e=Ko())!==o)if(pi()!==o)if((n=da())!==o)if(pi()!==o)if(fi()!==o)if(pi()!==o)if((u=Rs())!==o){for(s=[],a=Qu,(i=pi())!==o&&(c=ci())!==o&&(l=pi())!==o&&(f=Rs())!==o?a=i=[i,c,l,f]:(Qu=a,a=o);a!==o;)s.push(a),a=Qu,(i=pi())!==o&&(c=ci())!==o&&(l=pi())!==o&&(f=Rs())!==o?a=i=[i,c,l,f]:(Qu=a,a=o);s!==o&&(a=pi())!==o&&(i=vi())!==o?(v=t,d=u,L=s,(b=e).join=v,b.using=Gi(d,L),r=t=b):(Qu=r,r=o);}else Qu=r,r=o;else Qu=r,r=o;else Qu=r,r=o;else Qu=r,r=o;else Qu=r,r=o;else Qu=r,r=o;else Qu=r,r=o;else Qu=r,r=o;else Qu=r,r=o;var v,b,d,L;r===o&&(r=Qu,(t=qo())!==o&&pi()!==o&&(e=Ko())!==o&&pi()!==o?((n=zo())===o&&(n=null),n!==o?(t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(Qu=r,r=o)):(Qu=r,r=o),r===o&&(r=Qu,(t=qo())!==o&&pi()!==o&&(e=fi())!==o&&pi()!==o&&(n=bo())!==o&&pi()!==o&&vi()!==o&&pi()!==o?((u=Fo())===o&&(u=null),u!==o&&(s=pi())!==o?((a=zo())===o&&(a=null),a!==o?(t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,u,a),r=t):(Qu=r,r=o)):(Qu=r,r=o)):(Qu=r,r=o)));return r}())!==o?(r=t):(Qu=r,r=o)),r}function Ko(){var t,e,n,u,s,a;return t=Qu,(e=function(){var t;"dual"===r.substr(Qu,4).toLowerCase()?(t=r.substr(Qu,4),Qu+=4):(t=o,0===no&&io(Tu));return t}())!==o&&(e={type:"dual"}),(t=e)===o&&(t=Qu,(e=Zo())!==o&&pi()!==o?((n=Fo())===o&&(n=null),n!==o?(a=n,t=e="var"===(s=e).type?(s.as=a,s):{db:s.db,table:s.table,as:a}):(Qu=t,t=o)):(Qu=t,t=o),t===o&&(t=Qu,(e=fi())!==o&&pi()!==o&&(n=bo())!==o&&pi()!==o&&vi()!==o&&pi()!==o?((u=Fo())===o&&(u=null),u!==o?(t=e=function(r,t){return r.parentheses=!0,{expr:r,as:t}}(n,u)):(Qu=t,t=o)):(Qu=t,t=o))),t}function qo(){var t,e,n,u;return t=Qu,(e=function(){var t,e,n,u;t=Qu,"left"===r.substr(Qu,4).toLowerCase()?(e=r.substr(Qu,4),Qu+=4):(e=o,0===no&&io(xe));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o);return t}())!==o&&(n=pi())!==o?((u=va())===o&&(u=null),u!==o&&pi()!==o&&fa()!==o?(t=e="LEFT JOIN"):(Qu=t,t=o)):(Qu=t,t=o),t===o&&(t=Qu,(e=function(){var t,e,n,u;t=Qu,"right"===r.substr(Qu,5).toLowerCase()?(e=r.substr(Qu,5),Qu+=5):(e=o,0===no&&io(Me));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o);return t}())!==o&&(n=pi())!==o?((u=va())===o&&(u=null),u!==o&&pi()!==o&&fa()!==o?(t=e="RIGHT JOIN"):(Qu=t,t=o)):(Qu=t,t=o),t===o&&(t=Qu,(e=function(){var t,e,n,u;t=Qu,"full"===r.substr(Qu,4).toLowerCase()?(e=r.substr(Qu,4),Qu+=4):(e=o,0===no&&io(De));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o);return t}())!==o&&(n=pi())!==o?((u=va())===o&&(u=null),u!==o&&pi()!==o&&fa()!==o?(t=e="FULL JOIN"):(Qu=t,t=o)):(Qu=t,t=o),t===o&&(t=Qu,e=Qu,(n=function(){var t,e,n,u;t=Qu,"inner"===r.substr(Qu,5).toLowerCase()?(e=r.substr(Qu,5),Qu+=5):(e=o,0===no&&io(ke));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o);return t}())!==o&&(u=pi())!==o?e=n=[n,u]:(Qu=e,e=o),e===o&&(e=null),e!==o&&(n=fa())!==o?(t=e="INNER JOIN"):(Qu=t,t=o)))),t}function Zo(){var r,t,e,n,u,s,a,i,c;return r=Qu,(t=Ss())!==o?(e=Qu,(n=pi())!==o&&(u=ii())!==o&&(s=pi())!==o&&(a=Ss())!==o?e=n=[n,u,s,a]:(Qu=e,e=o),e!==o?(n=Qu,(u=pi())!==o&&(s=ii())!==o&&(a=pi())!==o&&(i=Ss())!==o?n=u=[u,s,a,i]:(Qu=n,n=o),n!==o?(r=t=function(r,t,e){const n={db:null,table:r};return null!==e&&(n.db=`${r}.${t[3]}`,n.table=e[3]),n}(t,e,n)):(Qu=r,r=o)):(Qu=r,r=o)):(Qu=r,r=o),r===o&&(r=Qu,(t=Ss())!==o?(e=Qu,(n=pi())!==o&&(u=ii())!==o&&(s=pi())!==o&&(a=Ss())!==o?e=n=[n,u,s,a]:(Qu=e,e=o),e===o&&(e=null),e!==o?(r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(Qu=r,r=o)):(Qu=r,r=o),r===o&&(r=Qu,(t=xi())!==o&&((c=t).db=null,c.table=c.name,t=c),r=t)),r}function zo(){var r,t;return r=Qu,la()!==o&&pi()!==o&&(t=vs())!==o?(r=t):(Qu=r,r=o),r}function Jo(){var t,e;return t=Qu,function(){var t,e,n,u;t=Qu,"where"===r.substr(Qu,5).toLowerCase()?(e=r.substr(Qu,5),Qu+=5):(e=o,0===no&&io(Ye));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o);return t}()!==o&&pi()!==o&&(e=vs())!==o?(t=e):(Qu=t,t=o),t}function Qo(){var t,e;return t=Qu,function(){var t,e,n,u;t=Qu,"order"===r.substr(Qu,5).toLowerCase()?(e=r.substr(Qu,5),Qu+=5):(e=o,0===no&&io(We));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o);return t}()!==o&&pi()!==o&&Ca()!==o&&pi()!==o&&(e=function(){var r,t,e,n,u,s,a,i;if(r=Qu,(t=rs())!==o){for(e=[],n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(i=rs())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);n!==o;)e.push(n),n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(i=rs())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);e!==o?(t=f(t,e),r=t):(Qu=r,r=o);}else Qu=r,r=o;return r}())!==o?(t=e):(Qu=t,t=o),t}function rs(){var r,t,e;return r=Qu,(t=vs())!==o&&pi()!==o?((e=wa())===o&&(e=pa()),e===o&&(e=null),e!==o?(r=t=function(r,t){const e={expr:r,type:"ASC"};return "DESC"===t&&(e.type="DESC"),e}(t,e)):(Qu=r,r=o)):(Qu=r,r=o),r}function ts(){var r;return (r=Hs())===o&&(r=Us()),r}function es(){var t,e,n,u,s,a;return t=Qu,function(){var t,e,n,u;t=Qu,"limit"===r.substr(Qu,5).toLowerCase()?(e=r.substr(Qu,5),Qu+=5):(e=o,0===no&&io(Ke));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o);return t}()!==o&&pi()!==o&&(e=ts())!==o&&pi()!==o?(n=Qu,(u=ci())===o&&(u=function(){var t,e,n,u;t=Qu,"offset"===r.substr(Qu,6).toLowerCase()?(e=r.substr(Qu,6),Qu+=6):(e=o,0===no&&io(qe));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="OFFSET"):(Qu=t,t=o)):(Qu=t,t=o);return t}()),u!==o&&(s=pi())!==o&&(a=ts())!==o?n=u=[u,s,a]:(Qu=n,n=o),n===o&&(n=null),n!==o?(t=function(r,t){const e=[r];return t&&e.push(t[2]),{seperator:t&&t[0]&&t[0].toLowerCase()||"",value:e}}(e,n)):(Qu=t,t=o)):(Qu=t,t=o),t}function ns(){var t,e,n,u,s,a,i,c;return t=Qu,e=Qu,(n=Ss())!==o&&(u=pi())!==o&&(s=ii())!==o?e=n=[n,u,s]:(Qu=e,e=o),e===o&&(e=null),e!==o&&(n=pi())!==o&&(u=Ns())!==o&&(s=pi())!==o?(61===r.charCodeAt(Qu)?(a="=",Qu++):(a=o,0===no&&io(Br)),a!==o&&pi()!==o&&(i=ws())!==o?(t=e={column:u,value:i,table:(c=e)&&c[0]}):(Qu=t,t=o)):(Qu=t,t=o),t}function us(){var t;return (t=function(){var t,e;t=Qu,function(){var t,e,n,u;t=Qu,"values"===r.substr(Qu,6).toLowerCase()?(e=r.substr(Qu,6),Qu+=6):(e=o,0===no&&io(Ge));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o);return t}()!==o&&pi()!==o&&(e=function(){var r,t,e,n,u,s,a,i;if(r=Qu,(t=as())!==o){for(e=[],n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(i=as())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);n!==o;)e.push(n),n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(i=as())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);e!==o?(t=f(t,e),r=t):(Qu=r,r=o);}else Qu=r,r=o;return r}())!==o?(t=e):(Qu=t,t=o);return t}())===o&&(t=Mo()),t}function os(){var r,t,e,n,u,s,a,i,c;if(r=Qu,ua()!==o)if(pi()!==o)if((t=fi())!==o)if(pi()!==o)if((e=Rs())!==o){for(n=[],u=Qu,(s=pi())!==o&&(a=ci())!==o&&(i=pi())!==o&&(c=Rs())!==o?u=s=[s,a,i,c]:(Qu=u,u=o);u!==o;)n.push(u),u=Qu,(s=pi())!==o&&(a=ci())!==o&&(i=pi())!==o&&(c=Rs())!==o?u=s=[s,a,i,c]:(Qu=u,u=o);n!==o&&(u=pi())!==o&&(s=vi())!==o?(r=Gi(e,n)):(Qu=r,r=o);}else Qu=r,r=o;else Qu=r,r=o;else Qu=r,r=o;else Qu=r,r=o;else Qu=r,r=o;return r===o&&(r=Qu,ua()!==o&&pi()!==o&&(t=as())!==o?(r=t):(Qu=r,r=o)),r}function ss(){var t,e;return t=Qu,(e=function(){var t,e,n,u;t=Qu,"insert"===r.substr(Qu,6).toLowerCase()?(e=r.substr(Qu,6),Qu+=6):(e=o,0===no&&io(we));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o);return t}())!==o&&(e="insert"),(t=e)===o&&(t=Qu,(e=ea())!==o&&(e="replace"),t=e),t}function as(){var r,t;return r=Qu,fi()!==o&&pi()!==o&&(t=is())!==o&&pi()!==o&&vi()!==o?(r=t):(Qu=r,r=o),r}function is(){var r,t,e,n,u,s,a,i;if(r=Qu,(t=vs())!==o){for(e=[],n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(i=vs())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);n!==o;)e.push(n),n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(i=vs())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);e!==o?(r=t=function(r,t){const e={type:"expr_list"};return e.value=Gi(r,t),e}(t,e)):(Qu=r,r=o);}else Qu=r,r=o;return r}function cs(){var t,e,n;return t=Qu,function(){var t,e,n,u;t=Qu,"interval"===r.substr(Qu,8).toLowerCase()?(e=r.substr(Qu,8),Qu+=8):(e=o,0===no&&io(eu));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="INTERVAL"):(Qu=t,t=o)):(Qu=t,t=o);return t}()!==o&&pi()!==o&&(e=vs())!==o&&pi()!==o&&(n=function(){var t;(t=function(){var t,e,n,u;t=Qu,"year"===r.substr(Qu,4).toLowerCase()?(e=r.substr(Qu,4),Qu+=4):(e=o,0===no&&io(nu));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="YEAR"):(Qu=t,t=o)):(Qu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=Qu,"month"===r.substr(Qu,5).toLowerCase()?(e=r.substr(Qu,5),Qu+=5):(e=o,0===no&&io(uu));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="MONTH"):(Qu=t,t=o)):(Qu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=Qu,"day"===r.substr(Qu,3).toLowerCase()?(e=r.substr(Qu,3),Qu+=3):(e=o,0===no&&io(ou));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="DAY"):(Qu=t,t=o)):(Qu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=Qu,"hour"===r.substr(Qu,4).toLowerCase()?(e=r.substr(Qu,4),Qu+=4):(e=o,0===no&&io(su));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="HOUR"):(Qu=t,t=o)):(Qu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=Qu,"minute"===r.substr(Qu,6).toLowerCase()?(e=r.substr(Qu,6),Qu+=6):(e=o,0===no&&io(au));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="MINUTE"):(Qu=t,t=o)):(Qu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=Qu,"second"===r.substr(Qu,6).toLowerCase()?(e=r.substr(Qu,6),Qu+=6):(e=o,0===no&&io(iu));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="SECOND"):(Qu=t,t=o)):(Qu=t,t=o);return t}());return t}())!==o?(t={type:"interval",expr:e,unit:n.toLowerCase()}):(Qu=t,t=o),t}function ls(){var t,e,n,u,s,a,i,c,l;if(t=Qu,_a()!==o)if(pi()!==o)if((e=vs())===o&&(e=null),e!==o)if(pi()!==o){if(n=[],(u=fs())!==o)for(;u!==o;)n.push(u),u=fs();else n=o;n!==o&&(u=pi())!==o?((s=function(){var t,e;t=Qu,function(){var t,e,n,u;t=Qu,"else"===r.substr(Qu,4).toLowerCase()?(e=r.substr(Qu,4),Qu+=4):(e=o,0===no&&io(pn));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o);return t}()!==o&&pi()!==o&&(e=vs())!==o?(t={type:"else",result:e}):(Qu=t,t=o);return t}())===o&&(s=null),s!==o&&pi()!==o&&function(){var t,e,n,u;t=Qu,"end"===r.substr(Qu,3).toLowerCase()?(e=r.substr(Qu,3),Qu+=3):(e=o,0===no&&io(wn));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o);return t}()!==o&&pi()!==o?((a=_a())===o&&(a=null),a!==o?(i=e,c=n,(l=s)&&c.push(l),t={type:"case",expr:i||null,args:c}):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o);}else Qu=t,t=o;else Qu=t,t=o;else Qu=t,t=o;else Qu=t,t=o;return t}function fs(){var t,e,n;return t=Qu,function(){var t,e,n,u;t=Qu,"when"===r.substr(Qu,4).toLowerCase()?(e=r.substr(Qu,4),Qu+=4):(e=o,0===no&&io(Ln));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o);return t}()!==o&&pi()!==o&&(e=vs())!==o&&pi()!==o&&function(){var t,e,n,u;t=Qu,"then"===r.substr(Qu,4).toLowerCase()?(e=r.substr(Qu,4),Qu+=4):(e=o,0===no&&io(Cn));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o);return t}()!==o&&pi()!==o&&(n=vs())!==o?(t={type:"when",cond:e,result:n}):(Qu=t,t=o),t}function vs(){var r;return (r=function(){var r,t,e,n,u,s,a,i;if(r=Qu,(t=ys())!==o){if(e=[],n=Qu,(u=pi())!==o&&(s=Ci())!==o&&(a=pi())!==o&&(i=ys())!==o?n=u=[u,s,a,i]:(Qu=n,n=o),n!==o)for(;n!==o;)e.push(n),n=Qu,(u=pi())!==o&&(s=Ci())!==o&&(a=pi())!==o&&(i=ys())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);else e=o;e!==o?(t=ji(t,e),r=t):(Qu=r,r=o);}else Qu=r,r=o;return r}())===o&&(r=function(){var r,t,e,n,u,s;if(r=Qu,(t=Es())!==o){if(e=[],n=Qu,(u=pi())!==o&&(s=ys())!==o?n=u=[u,s]:(Qu=n,n=o),n!==o)for(;n!==o;)e.push(n),n=Qu,(u=pi())!==o&&(s=ys())!==o?n=u=[u,s]:(Qu=n,n=o);else e=o;e!==o?(t=Fi(t,e[0][1]),r=t):(Qu=r,r=o);}else Qu=r,r=o;return r}())===o&&(r=function(){var r,t,e,n,u,s,a,i;if(r=Qu,(t=bs())!==o){for(e=[],n=Qu,(u=wi())!==o&&(s=Ra())!==o&&(a=pi())!==o&&(i=bs())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);n!==o;)e.push(n),n=Qu,(u=wi())!==o&&(s=Ra())!==o&&(a=pi())!==o&&(i=bs())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);e!==o?(t=Xr(t,e),r=t):(Qu=r,r=o);}else Qu=r,r=o;return r}())===o&&(r=go()),r}function bs(){var r,t,e,n,u,s,a,i;if(r=Qu,(t=ds())!==o){for(e=[],n=Qu,(u=wi())!==o&&(s=Na())!==o&&(a=pi())!==o&&(i=ds())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);n!==o;)e.push(n),n=Qu,(u=wi())!==o&&(s=Na())!==o&&(a=pi())!==o&&(i=ds())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);e!==o?(r=t=Xr(t,e)):(Qu=r,r=o);}else Qu=r,r=o;return r}function ds(){var t,e,n,u,s;return (t=Ls())===o&&(t=function(){var r,t,e;r=Qu,(t=function(){var r,t,e,n,u;r=Qu,t=Qu,(e=Ia())!==o&&(n=pi())!==o&&(u=Sa())!==o?t=e=[e,n,u]:(Qu=t,t=o);t!==o&&(t=Vr(t));(r=t)===o&&(r=Sa());return r}())!==o&&pi()!==o&&fi()!==o&&pi()!==o&&(e=bo())!==o&&pi()!==o&&vi()!==o?(n=t,(u=e).parentheses=!0,t=Fi(n,u),r=t):(Qu=r,r=o);var n,u;return r}())===o&&(t=Qu,(e=Ia())===o&&(e=Qu,33===r.charCodeAt(Qu)?(n="!",Qu++):(n=o,0===no&&io(Wr)),n!==o?(u=Qu,no++,61===r.charCodeAt(Qu)?(s="=",Qu++):(s=o,0===no&&io(Br)),no--,s===o?u=void 0:(Qu=u,u=o),u!==o?e=n=[n,u]:(Qu=e,e=o)):(Qu=e,e=o)),e!==o&&(n=pi())!==o&&(u=ds())!==o?(t=e=Fi("NOT",u)):(Qu=t,t=o)),t}function Ls(){var r,t,e,n,u,s,a;return r=Qu,(t=ws())!==o&&pi()!==o?(e=Qu,no++,n=Na(),no--,n===o?e=void 0:(Qu=e,e=o),e!==o&&(n=pi())!==o?((u=function(){var r;(r=function(){var r,t,e,n,u,s,a;r=Qu,t=[],e=Qu,(n=pi())!==o&&(u=Cs())!==o&&(s=pi())!==o&&(a=ws())!==o?e=n=[n,u,s,a]:(Qu=e,e=o);if(e!==o)for(;e!==o;)t.push(e),e=Qu,(n=pi())!==o&&(u=Cs())!==o&&(s=pi())!==o&&(a=ws())!==o?e=n=[n,u,s,a]:(Qu=e,e=o);else t=o;t!==o&&(t={type:"arithmetic",tail:t});return r=t}())===o&&(r=function(){var r,t,e,n;r=Qu,(t=ps())!==o&&pi()!==o&&(e=fi())!==o&&pi()!==o&&(n=is())!==o&&pi()!==o&&vi()!==o?(r=t={op:t,right:n}):(Qu=r,r=o);r===o&&(r=Qu,(t=ps())!==o&&pi()!==o?((e=xi())===o&&(e=ks()),e!==o?(t=function(r,t){return {op:r,right:t}}(t,e),r=t):(Qu=r,r=o)):(Qu=r,r=o));return r}())===o&&(r=function(){var r,t,e,n;r=Qu,(t=function(){var r,t,e,n,u;r=Qu,t=Qu,(e=Ia())!==o&&(n=pi())!==o&&(u=Aa())!==o?t=e=[e,n,u]:(Qu=t,t=o);t!==o&&(t=Vr(t));(r=t)===o&&(r=Aa());return r}())!==o&&pi()!==o&&(e=ws())!==o&&pi()!==o&&Na()!==o&&pi()!==o&&(n=ws())!==o?(r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(Qu=r,r=o);return r}())===o&&(r=function(){var r,t,e,n,u;r=Qu,(t=Ta())!==o&&(e=pi())!==o&&(n=ws())!==o?(r=t={op:"IS",right:n}):(Qu=r,r=o);r===o&&(r=Qu,t=Qu,(e=Ta())!==o&&(n=pi())!==o&&(u=Ia())!==o?t=e=[e,n,u]:(Qu=t,t=o),t!==o&&(e=pi())!==o&&(n=ws())!==o?(t=function(r){return {op:"IS NOT",right:r}}(n),r=t):(Qu=r,r=o));return r}())===o&&(r=function(){var r,t,e;r=Qu,(t=function(){var r,t,e,n,u;r=Qu,t=Qu,(e=Ia())!==o&&(n=pi())!==o&&(u=ma())!==o?t=e=[e,n,u]:(Qu=t,t=o);t!==o&&(t=Vr(t));(r=t)===o&&(r=ma());return r}())!==o&&pi()!==o&&(e=Ls())!==o?(r=t={op:t,right:e}):(Qu=r,r=o);return r}());return r}())===o&&(u=null),u!==o?(s=t,r=t=null===(a=u)?s:"arithmetic"===a.type?ji(s,a.tail):Pi(a.op,s,a.right)):(Qu=r,r=o)):(Qu=r,r=o)):(Qu=r,r=o),r===o&&(r=ks())===o&&(r=Ts()),r}function Cs(){var t;return ">="===r.substr(Qu,2)?(t=">=",Qu+=2):(t=o,0===no&&io(Kr)),t===o&&(62===r.charCodeAt(Qu)?(t=">",Qu++):(t=o,0===no&&io(qr)),t===o&&("<="===r.substr(Qu,2)?(t="<=",Qu+=2):(t=o,0===no&&io(Zr)),t===o&&("<>"===r.substr(Qu,2)?(t="<>",Qu+=2):(t=o,0===no&&io(zr)),t===o&&(60===r.charCodeAt(Qu)?(t="<",Qu++):(t=o,0===no&&io(Jr)),t===o&&(61===r.charCodeAt(Qu)?(t="=",Qu++):(t=o,0===no&&io(Br)),t===o&&("!="===r.substr(Qu,2)?(t="!=",Qu+=2):(t=o,0===no&&io(Qr)))))))),t}function ps(){var r,t,e,n,u;return r=Qu,t=Qu,(e=Ia())!==o&&(n=pi())!==o&&(u=ya())!==o?t=e=[e,n,u]:(Qu=t,t=o),t!==o&&(t=Vr(t)),(r=t)===o&&(r=ya()),r}function ws(){var r,t,e,n,u,s,a,i;if(r=Qu,(t=hs())!==o){for(e=[],n=Qu,(u=pi())!==o&&(s=Es())!==o&&(a=pi())!==o&&(i=hs())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);n!==o;)e.push(n),n=Qu,(u=pi())!==o&&(s=Es())!==o&&(a=pi())!==o&&(i=hs())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);e!==o?(r=t=Xr(t,e)):(Qu=r,r=o);}else Qu=r,r=o;return r}function Es(){var t;return 43===r.charCodeAt(Qu)?(t="+",Qu++):(t=o,0===no&&io(rt)),t===o&&(45===r.charCodeAt(Qu)?(t="-",Qu++):(t=o,0===no&&io(tt))),t}function hs(){var r,t,e,n,u,s,a,i;if(r=Qu,(t=ys())!==o){for(e=[],n=Qu,(u=pi())!==o&&(s=As())!==o&&(a=pi())!==o&&(i=ys())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);n!==o;)e.push(n),n=Qu,(u=pi())!==o&&(s=As())!==o&&(a=pi())!==o&&(i=ys())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);e!==o?(r=t=ji(t,e)):(Qu=r,r=o);}else Qu=r,r=o;return r}function As(){var t;return 42===r.charCodeAt(Qu)?(t="*",Qu++):(t=o,0===no&&io(et)),t===o&&(47===r.charCodeAt(Qu)?(t="/",Qu++):(t=o,0===no&&io(nt)),t===o&&(37===r.charCodeAt(Qu)?(t="%",Qu++):(t=o,0===no&&io(ut)))),t}function ys(){var t,e,n;return (t=function(){var t,e,n,u,s,a,i;t=Qu,(e=ga())!==o&&pi()!==o&&fi()!==o&&pi()!==o&&(n=vs())!==o&&pi()!==o&&aa()!==o&&pi()!==o&&(u=Di())!==o&&pi()!==o&&(s=vi())!==o?(t=e={type:"cast",expr:n,symbol:"as",target:u}):(Qu=t,t=o);t===o&&(t=Qu,(e=ga())!==o&&pi()!==o&&fi()!==o&&pi()!==o&&(n=vs())!==o&&pi()!==o&&aa()!==o&&pi()!==o&&(u=Da())!==o&&pi()!==o&&(s=fi())!==o&&pi()!==o&&(a=js())!==o&&pi()!==o&&vi()!==o&&pi()!==o&&(i=vi())!==o?(e=function(r,t){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+")"}}}(n,a),t=e):(Qu=t,t=o),t===o&&(t=Qu,(e=ga())!==o&&pi()!==o&&fi()!==o&&pi()!==o&&(n=vs())!==o&&pi()!==o&&aa()!==o&&pi()!==o&&(u=Da())!==o&&pi()!==o&&(s=fi())!==o&&pi()!==o&&(a=js())!==o&&pi()!==o&&ci()!==o&&pi()!==o&&(i=js())!==o&&pi()!==o&&vi()!==o&&pi()!==o&&vi()!==o?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+", "+e+")"}}}(n,a,i),t=e):(Qu=t,t=o),t===o&&(t=Qu,(e=ga())!==o&&pi()!==o&&fi()!==o&&pi()!==o&&(n=vs())!==o&&pi()!==o&&aa()!==o&&pi()!==o&&(u=function(){var t;(t=function(){var t,e,n,u;t=Qu,"signed"===r.substr(Qu,6).toLowerCase()?(e=r.substr(Qu,6),Qu+=6):(e=o,0===no&&io(_n));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="SIGNED"):(Qu=t,t=o)):(Qu=t,t=o);return t}())===o&&(t=ka());return t}())!==o&&pi()!==o?((s=Fa())===o&&(s=null),s!==o&&pi()!==o&&(a=vi())!==o?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:t+(e?" "+e:"")}}}(n,u,s),t=e):(Qu=t,t=o)):(Qu=t,t=o))));return t}())===o&&(t=Ms())===o&&(t=function(){var t;(t=function(){var t,e,n,u;t=Qu,(e=function(){var t,e,n,u;t=Qu,"count"===r.substr(Qu,5).toLowerCase()?(e=r.substr(Qu,5),Qu+=5):(e=o,0===no&&io(an));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="COUNT"):(Qu=t,t=o)):(Qu=t,t=o);return t}())!==o&&pi()!==o&&fi()!==o&&pi()!==o&&(n=function(){var t,e,n;t=Qu,(e=function(){var t,e;t=Qu,42===r.charCodeAt(Qu)?(e="*",Qu++):(e=o,0===no&&io(et));e!==o&&(e={type:"star",value:"*"});return t=e}())!==o&&(e={expr:e});(t=e)===o&&(t=Qu,(e=ha())===o&&(e=null),e!==o&&pi()!==o&&(n=Ts())!==o?(t=e={distinct:e,expr:n}):(Qu=t,t=o));return t}())!==o&&pi()!==o&&vi()!==o&&pi()!==o&&(u=xs())!==o?(t=e={type:"aggr_func",name:e,args:n,over:u}):(Qu=t,t=o);return t}())===o&&(t=function(){var t,e,n;t=Qu,(e=function(){var t;(t=function(){var t,e,n,u;t=Qu,"sum"===r.substr(Qu,3).toLowerCase()?(e=r.substr(Qu,3),Qu+=3):(e=o,0===no&&io(fn));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="SUM"):(Qu=t,t=o)):(Qu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=Qu,"max"===r.substr(Qu,3).toLowerCase()?(e=r.substr(Qu,3),Qu+=3):(e=o,0===no&&io(cn));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="MAX"):(Qu=t,t=o)):(Qu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=Qu,"min"===r.substr(Qu,3).toLowerCase()?(e=r.substr(Qu,3),Qu+=3):(e=o,0===no&&io(ln));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="MIN"):(Qu=t,t=o)):(Qu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=Qu,"avg"===r.substr(Qu,3).toLowerCase()?(e=r.substr(Qu,3),Qu+=3):(e=o,0===no&&io(vn));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="AVG"):(Qu=t,t=o)):(Qu=t,t=o);return t}());return t}())!==o&&pi()!==o&&fi()!==o&&pi()!==o&&(n=ws())!==o&&pi()!==o&&vi()!==o?(t=e={type:"aggr_func",name:e,args:{expr:n}}):(Qu=t,t=o);return t}());return t}())===o&&(t=function(){var t,e,n,u,s;t=Qu,(e=gi())!==o&&pi()!==o&&fi()!==o&&pi()!==o?((n=is())===o&&(n=null),n!==o&&pi()!==o&&(u=vi())!==o&&pi()!==o?((s=xs())===o&&(s=null),s!==o?(t=e={type:"function",name:e,args:n||{type:"expr_list",value:[]},over:s}):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o);t===o&&(t=Qu,(e=function(){var t;(t=function(){var t,e,n,u;t=Qu,"current_date"===r.substr(Qu,12).toLowerCase()?(e=r.substr(Qu,12),Qu+=12):(e=o,0===no&&io(tu));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="CURRENT_DATE"):(Qu=t,t=o)):(Qu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=Qu,"current_time"===r.substr(Qu,12).toLowerCase()?(e=r.substr(Qu,12),Qu+=12):(e=o,0===no&&io(cu));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="CURRENT_TIME"):(Qu=t,t=o)):(Qu=t,t=o);return t}())===o&&(t=za())===o&&(t=function(){var t,e,n,u;t=Qu,"current_user"===r.substr(Qu,12).toLowerCase()?(e=r.substr(Qu,12),Qu+=12):(e=o,0===no&&io(fu));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="CURRENT_USER"):(Qu=t,t=o)):(Qu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=Qu,"user"===r.substr(Qu,4).toLowerCase()?(e=r.substr(Qu,4),Qu+=4):(e=o,0===no&&io(ru));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="USER"):(Qu=t,t=o)):(Qu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=Qu,"session_user"===r.substr(Qu,12).toLowerCase()?(e=r.substr(Qu,12),Qu+=12):(e=o,0===no&&io(vu));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="SESSION_USER"):(Qu=t,t=o)):(Qu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=Qu,"system_user"===r.substr(Qu,11).toLowerCase()?(e=r.substr(Qu,11),Qu+=11):(e=o,0===no&&io(bu));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="SYSTEM_USER"):(Qu=t,t=o)):(Qu=t,t=o);return t}());return t}())!==o&&pi()!==o&&fi()!==o&&pi()!==o&&(n=vi())!==o&&pi()!==o?((u=xs())===o&&(u=null),u!==o?(e=function(r,t){return {type:"function",name:r,args:{type:"expr_list",value:[]},over:t}}(e,u),t=e):(Qu=t,t=o)):(Qu=t,t=o));return t}())===o&&(t=ls())===o&&(t=cs())===o&&(t=Ts())===o&&(t=Us())===o&&(t=Qu,fi()!==o&&pi()!==o&&(e=vs())!==o&&pi()!==o&&vi()!==o?(t=ot(e)):(Qu=t,t=o),t===o&&(t=Qu,fi()!==o&&pi()!==o&&(e=is())!==o&&pi()!==o&&vi()!==o?((n=e).parentheses=!0,t=n):(Qu=t,t=o),t===o&&(t=xi()))),t}function Ts(){var r,t,e,n,u;return r=Qu,(t=Ss())!==o&&pi()!==o&&ii()!==o&&pi()!==o&&(e=Ns())!==o?(n=t,u=e,Vi.add(`select::${n}::${u}`),r=t={type:"column_ref",table:n,column:u}):(Qu=r,r=o),r===o&&(r=Qu,(t=Ns())!==o&&(t=function(r){return Vi.add("select::null::"+r),{type:"column_ref",table:null,column:r}}(t)),r=t),r}function ms(){var r,t,e,n,u,s,a,i;if(r=Qu,(t=Ns())!==o){for(e=[],n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(i=Ns())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);n!==o;)e.push(n),n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(i=Ns())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);e!==o?(r=t=f(t,e)):(Qu=r,r=o);}else Qu=r,r=o;return r}function Ss(){var r,t;return r=Qu,(t=Rs())!==o?((st(t)?o:void 0)!==o?(r=t=t):(Qu=r,r=o)):(Qu=r,r=o),r===o&&(r=Qu,(t=Is())!==o&&(t=t),r=t),r}function Is(){var t;return (t=function(){var t,e,n,u;t=Qu,34===r.charCodeAt(Qu)?(e='"',Qu++):(e=o,0===no&&io(at));if(e!==o){if(n=[],it.test(r.charAt(Qu))?(u=r.charAt(Qu),Qu++):(u=o,0===no&&io(ct)),u!==o)for(;u!==o;)n.push(u),it.test(r.charAt(Qu))?(u=r.charAt(Qu),Qu++):(u=o,0===no&&io(ct));else n=o;n!==o?(34===r.charCodeAt(Qu)?(u='"',Qu++):(u=o,0===no&&io(at)),u!==o?(e=lt(n),t=e):(Qu=t,t=o)):(Qu=t,t=o);}else Qu=t,t=o;return t}())===o&&(t=function(){var t,e,n,u;t=Qu,39===r.charCodeAt(Qu)?(e="'",Qu++):(e=o,0===no&&io(ar));if(e!==o){if(n=[],ft.test(r.charAt(Qu))?(u=r.charAt(Qu),Qu++):(u=o,0===no&&io(vt)),u!==o)for(;u!==o;)n.push(u),ft.test(r.charAt(Qu))?(u=r.charAt(Qu),Qu++):(u=o,0===no&&io(vt));else n=o;n!==o?(39===r.charCodeAt(Qu)?(u="'",Qu++):(u=o,0===no&&io(ar)),u!==o?(e=lt(n),t=e):(Qu=t,t=o)):(Qu=t,t=o);}else Qu=t,t=o;return t}())===o&&(t=function(){var t,e,n,u;t=Qu,96===r.charCodeAt(Qu)?(e="`",Qu++):(e=o,0===no&&io(bt));if(e!==o){if(n=[],dt.test(r.charAt(Qu))?(u=r.charAt(Qu),Qu++):(u=o,0===no&&io(Lt)),u!==o)for(;u!==o;)n.push(u),dt.test(r.charAt(Qu))?(u=r.charAt(Qu),Qu++):(u=o,0===no&&io(Lt));else n=o;n!==o?(96===r.charCodeAt(Qu)?(u="`",Qu++):(u=o,0===no&&io(bt)),u!==o?(e=lt(n),t=e):(Qu=t,t=o)):(Qu=t,t=o);}else Qu=t,t=o;return t}())===o&&(t=function(){var t,e,n,u;t=Qu,91===r.charCodeAt(Qu)?(e="[",Qu++):(e=o,0===no&&io(Ct));if(e!==o){if(n=[],pt.test(r.charAt(Qu))?(u=r.charAt(Qu),Qu++):(u=o,0===no&&io(wt)),u!==o)for(;u!==o;)n.push(u),pt.test(r.charAt(Qu))?(u=r.charAt(Qu),Qu++):(u=o,0===no&&io(wt));else n=o;n!==o?(93===r.charCodeAt(Qu)?(u="]",Qu++):(u=o,0===no&&io(Et)),u!==o?(e=lt(n),t=e):(Qu=t,t=o)):(Qu=t,t=o);}else Qu=t,t=o;return t}()),t}function Ns(){var r,t;return r=Qu,(t=function(){var r,t,e,n;if(r=Qu,(t=_s())!==o){for(e=[],n=Os();n!==o;)e.push(n),n=Os();e!==o?(t=ht(t,e),r=t):(Qu=r,r=o);}else Qu=r,r=o;return r}())!==o?((st(t)?o:void 0)!==o?(r=t=t):(Qu=r,r=o)):(Qu=r,r=o),r===o&&(r=Is()),r}function Rs(){var r,t,e,n;if(r=Qu,(t=_s())!==o){for(e=[],n=gs();n!==o;)e.push(n),n=gs();e!==o?(r=t=ht(t,e)):(Qu=r,r=o);}else Qu=r,r=o;return r}function _s(){var t;return At.test(r.charAt(Qu))?(t=r.charAt(Qu),Qu++):(t=o,0===no&&io(yt)),t}function gs(){var t;return Tt.test(r.charAt(Qu))?(t=r.charAt(Qu),Qu++):(t=o,0===no&&io(mt)),t}function Os(){var t;return St.test(r.charAt(Qu))?(t=r.charAt(Qu),Qu++):(t=o,0===no&&io(It)),t}function Us(){var t,e,n,u;return t=Qu,e=Qu,58===r.charCodeAt(Qu)?(n=":",Qu++):(n=o,0===no&&io(Nt)),n!==o&&(u=Rs())!==o?e=n=[n,u]:(Qu=e,e=o),e!==o&&(e={type:"param",value:e[1]}),t=e}function xs(){var t,e,n;return t=Qu,function(){var t,e,n,u;t=Qu,"over"===r.substr(Qu,4).toLowerCase()?(e=r.substr(Qu,4),Qu+=4):(e=o,0===no&&io(Pe));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o);return t}()!==o&&pi()!==o&&fi()!==o&&pi()!==o&&ua()!==o&&pi()!==o&&Ca()!==o&&pi()!==o&&(e=ko())!==o&&pi()!==o?((n=Qo())===o&&(n=null),n!==o&&pi()!==o&&vi()!==o?(t={partitionby:e,orderby:n}):(Qu=t,t=o)):(Qu=t,t=o),t}function Ms(){var t;return (t=ks())===o&&(t=Hs())===o&&(t=function(){var t,e;t=Qu,(e=function(){var t,e,n,u;t=Qu,"true"===r.substr(Qu,4).toLowerCase()?(e=r.substr(Qu,4),Qu+=4):(e=o,0===no&&io(ue));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o);return t}())!==o&&(e={type:"bool",value:!0});(t=e)===o&&(t=Qu,(e=function(){var t,e,n,u;t=Qu,"false"===r.substr(Qu,5).toLowerCase()?(e=r.substr(Qu,5),Qu+=5):(e=o,0===no&&io(ae));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o);return t}())!==o&&(e={type:"bool",value:!1}),t=e);return t}())===o&&(t=Ds())===o&&(t=function(){var t,e,n,u,s,a,i;t=Qu,(e=qa())===o&&(e=Xa())===o&&(e=Za())===o&&(e=Wa());if(e!==o)if(pi()!==o){if(n=Qu,39===r.charCodeAt(Qu)?(u="'",Qu++):(u=o,0===no&&io(ar)),u!==o){for(s=[],a=Fs();a!==o;)s.push(a),a=Fs();s!==o?(39===r.charCodeAt(Qu)?(a="'",Qu++):(a=o,0===no&&io(ar)),a!==o?n=u=[u,s,a]:(Qu=n,n=o)):(Qu=n,n=o);}else Qu=n,n=o;n!==o?(c=n,e={type:e.toLowerCase(),value:c[1].join("")},t=e):(Qu=t,t=o);}else Qu=t,t=o;else Qu=t,t=o;var c;t===o&&(t=Qu,(e=za())!==o&&pi()!==o?((n=fi())===o&&(n=null),n!==o&&(u=pi())!==o?((s=vi())===o&&(s=null),s!==o?((a=(a=function(r,t,e){if(t&&e)return !0}(0,n,s))?o:void 0)!==o&&pi()!==o?("on update current_timestamp"===r.substr(Qu,27).toLowerCase()?(i=r.substr(Qu,27),Qu+=27):(i=o,0===no&&io(_t)),i===o&&(i=null),i!==o?(e=function(r,t,e,n){return {type:"origin",value:(n?`${r} ${n}`:r).toLowerCase()}}(e,0,0,i),t=e):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o));return t}()),t}function Ds(){var t,e;return t=Qu,(e=function(){var t,e,n,u;t=Qu,"null"===r.substr(Qu,4).toLowerCase()?(e=r.substr(Qu,4),Qu+=4):(e=o,0===no&&io(ee));e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o);return t}())!==o&&(e={type:"null",value:null}),t=e}function ks(){var t,e,n,u,s;if(t=Qu,e=Qu,39===r.charCodeAt(Qu)?(n="'",Qu++):(n=o,0===no&&io(ar)),n!==o){for(u=[],s=Fs();s!==o;)u.push(s),s=Fs();u!==o?(39===r.charCodeAt(Qu)?(s="'",Qu++):(s=o,0===no&&io(ar)),s!==o?e=n=[n,u,s]:(Qu=e,e=o)):(Qu=e,e=o);}else Qu=e,e=o;if(e!==o&&(e=Rt(e)),(t=e)===o){if(t=Qu,e=Qu,34===r.charCodeAt(Qu)?(n='"',Qu++):(n=o,0===no&&io(at)),n!==o){for(u=[],s=$s();s!==o;)u.push(s),s=$s();u!==o?(34===r.charCodeAt(Qu)?(s='"',Qu++):(s=o,0===no&&io(at)),s!==o?e=n=[n,u,s]:(Qu=e,e=o)):(Qu=e,e=o);}else Qu=e,e=o;e!==o&&(e=Rt(e)),t=e;}return t}function $s(){var t;return gt.test(r.charAt(Qu))?(t=r.charAt(Qu),Qu++):(t=o,0===no&&io(Ot)),t===o&&(t=Ps()),t}function Fs(){var t;return Ut.test(r.charAt(Qu))?(t=r.charAt(Qu),Qu++):(t=o,0===no&&io(xt)),t===o&&(t=Ps()),t}function Ps(){var t,e,n,u,s,a,i,c,l,f;return t=Qu,"\\'"===r.substr(Qu,2)?(e="\\'",Qu+=2):(e=o,0===no&&io(Mt)),e!==o&&(e="'"),(t=e)===o&&(t=Qu,'\\"'===r.substr(Qu,2)?(e='\\"',Qu+=2):(e=o,0===no&&io(Dt)),e!==o&&(e='"'),(t=e)===o&&(t=Qu,"\\\\"===r.substr(Qu,2)?(e="\\\\",Qu+=2):(e=o,0===no&&io(kt)),e!==o&&(e="\\"),(t=e)===o&&(t=Qu,"\\/"===r.substr(Qu,2)?(e="\\/",Qu+=2):(e=o,0===no&&io($t)),e!==o&&(e="/"),(t=e)===o&&(t=Qu,"\\b"===r.substr(Qu,2)?(e="\\b",Qu+=2):(e=o,0===no&&io(Ft)),e!==o&&(e="\b"),(t=e)===o&&(t=Qu,"\\f"===r.substr(Qu,2)?(e="\\f",Qu+=2):(e=o,0===no&&io(Pt)),e!==o&&(e="\f"),(t=e)===o&&(t=Qu,"\\n"===r.substr(Qu,2)?(e="\\n",Qu+=2):(e=o,0===no&&io(Ht)),e!==o&&(e="\n"),(t=e)===o&&(t=Qu,"\\r"===r.substr(Qu,2)?(e="\\r",Qu+=2):(e=o,0===no&&io(Gt)),e!==o&&(e="\r"),(t=e)===o&&(t=Qu,"\\t"===r.substr(Qu,2)?(e="\\t",Qu+=2):(e=o,0===no&&io(jt)),e!==o&&(e="\t"),(t=e)===o&&(t=Qu,"\\u"===r.substr(Qu,2)?(e="\\u",Qu+=2):(e=o,0===no&&io(Yt)),e!==o&&(n=Vs())!==o&&(u=Vs())!==o&&(s=Vs())!==o&&(a=Vs())!==o?(i=n,c=u,l=s,f=a,t=e=String.fromCharCode(parseInt("0x"+i+c+l+f))):(Qu=t,t=o),t===o&&(t=Qu,92===r.charCodeAt(Qu)?(e="\\",Qu++):(e=o,0===no&&io(Bt)),e!==o&&(e="\\"),t=e)))))))))),t}function Hs(){var r,t,e;return r=Qu,(t=Gs())!==o&&(t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),r=t}function Gs(){var r,t,e,n;return r=Qu,(t=js())!==o&&(e=Ys())!==o&&(n=Bs())!==o?(r=t={type:"bigint",value:t+e+n}):(Qu=r,r=o),r===o&&(r=Qu,(t=js())!==o&&(e=Ys())!==o?(r=t=function(r,t){const e=r+t;return Hi(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e)):(Qu=r,r=o),r===o&&(r=Qu,(t=js())!==o&&(e=Bs())!==o?(r=t=function(r,t){return {type:"bigint",value:r+t}}(t,e)):(Qu=r,r=o),r===o&&(r=Qu,(t=js())!==o&&(t=function(r){return Hi(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t))),r}function js(){var t,e,n;return (t=Xs())===o&&(t=Ws())===o&&(t=Qu,45===r.charCodeAt(Qu)?(e="-",Qu++):(e=o,0===no&&io(tt)),e===o&&(43===r.charCodeAt(Qu)?(e="+",Qu++):(e=o,0===no&&io(rt))),e!==o&&(n=Xs())!==o?(t=e="-"+n):(Qu=t,t=o),t===o&&(t=Qu,45===r.charCodeAt(Qu)?(e="-",Qu++):(e=o,0===no&&io(tt)),e===o&&(43===r.charCodeAt(Qu)?(e="+",Qu++):(e=o,0===no&&io(rt))),e!==o&&(n=Ws())!==o?(t=e="-"+n):(Qu=t,t=o))),t}function Ys(){var t,e,n;return t=Qu,46===r.charCodeAt(Qu)?(e=".",Qu++):(e=o,0===no&&io(Vt)),e!==o&&(n=Xs())!==o?(t=e="."+n):(Qu=t,t=o),t}function Bs(){var t,e,n;return t=Qu,(e=function(){var t,e,n;t=Qu,Jt.test(r.charAt(Qu))?(e=r.charAt(Qu),Qu++):(e=o,0===no&&io(Qt));e!==o?(re.test(r.charAt(Qu))?(n=r.charAt(Qu),Qu++):(n=o,0===no&&io(te)),n===o&&(n=null),n!==o?(t=e=e+(null!==(u=n)?u:"")):(Qu=t,t=o)):(Qu=t,t=o);var u;return t}())!==o&&(n=Xs())!==o?(t=e=e+n):(Qu=t,t=o),t}function Xs(){var r,t,e;if(r=Qu,t=[],(e=Ws())!==o)for(;e!==o;)t.push(e),e=Ws();else t=o;return t!==o&&(t=t.join("")),r=t}function Ws(){var t;return Kt.test(r.charAt(Qu))?(t=r.charAt(Qu),Qu++):(t=o,0===no&&io(qt)),t}function Vs(){var t;return Zt.test(r.charAt(Qu))?(t=r.charAt(Qu),Qu++):(t=o,0===no&&io(zt)),t}function Ks(){var t,e,n,u;return t=Qu,"default"===r.substr(Qu,7).toLowerCase()?(e=r.substr(Qu,7),Qu+=7):(e=o,0===no&&io(E)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o),t}function qs(){var t,e,n,u;return t=Qu,"to"===r.substr(Qu,2).toLowerCase()?(e=r.substr(Qu,2),Qu+=2):(e=o,0===no&&io(oe)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o),t}function Zs(){var t,e,n,u;return t=Qu,"drop"===r.substr(Qu,4).toLowerCase()?(e=r.substr(Qu,4),Qu+=4):(e=o,0===no&&io(ie)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="DROP"):(Qu=t,t=o)):(Qu=t,t=o),t}function zs(){var t,e,n,u;return t=Qu,"declare"===r.substr(Qu,7).toLowerCase()?(e=r.substr(Qu,7),Qu+=7):(e=o,0===no&&io(ce)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="DECLARE"):(Qu=t,t=o)):(Qu=t,t=o),t}function Js(){var t,e,n,u;return t=Qu,"alter"===r.substr(Qu,5).toLowerCase()?(e=r.substr(Qu,5),Qu+=5):(e=o,0===no&&io(fe)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="ALTER"):(Qu=t,t=o)):(Qu=t,t=o),t}function Qs(){var t,e,n,u;return t=Qu,"create"===r.substr(Qu,6).toLowerCase()?(e=r.substr(Qu,6),Qu+=6):(e=o,0===no&&io(de)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o),t}function ra(){var t,e,n,u;return t=Qu,"temporary"===r.substr(Qu,9).toLowerCase()?(e=r.substr(Qu,9),Qu+=9):(e=o,0===no&&io(Le)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o),t}function ta(){var t,e,n,u;return t=Qu,"if not exists"===r.substr(Qu,13).toLowerCase()?(e=r.substr(Qu,13),Qu+=13):(e=o,0===no&&io(Ce)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o),t}function ea(){var t,e,n,u;return t=Qu,"replace"===r.substr(Qu,7).toLowerCase()?(e=r.substr(Qu,7),Qu+=7):(e=o,0===no&&io(he)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o),t}function na(){var t,e,n,u;return t=Qu,"rename"===r.substr(Qu,6).toLowerCase()?(e=r.substr(Qu,6),Qu+=6):(e=o,0===no&&io(Ae)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o),t}function ua(){var t,e,n,u;return t=Qu,"partition"===r.substr(Qu,9).toLowerCase()?(e=r.substr(Qu,9),Qu+=9):(e=o,0===no&&io(Te)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="PARTITION"):(Qu=t,t=o)):(Qu=t,t=o),t}function oa(){var t,e,n,u;return t=Qu,"into"===r.substr(Qu,4).toLowerCase()?(e=r.substr(Qu,4),Qu+=4):(e=o,0===no&&io(me)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o),t}function sa(){var t,e,n,u;return t=Qu,"set"===r.substr(Qu,3).toLowerCase()?(e=r.substr(Qu,3),Qu+=3):(e=o,0===no&&io(Ie)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o),t}function aa(){var t,e,n,u;return t=Qu,"as"===r.substr(Qu,2).toLowerCase()?(e=r.substr(Qu,2),Qu+=2):(e=o,0===no&&io(Re)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o),t}function ia(){var t,e,n,u;return t=Qu,"table"===r.substr(Qu,5).toLowerCase()?(e=r.substr(Qu,5),Qu+=5):(e=o,0===no&&io(_e)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="TABLE"):(Qu=t,t=o)):(Qu=t,t=o),t}function ca(){var t,e,n,u;return t=Qu,"tables"===r.substr(Qu,6).toLowerCase()?(e=r.substr(Qu,6),Qu+=6):(e=o,0===no&&io(ge)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="TABLES"):(Qu=t,t=o)):(Qu=t,t=o),t}function la(){var t,e,n,u;return t=Qu,"on"===r.substr(Qu,2).toLowerCase()?(e=r.substr(Qu,2),Qu+=2):(e=o,0===no&&io(Oe)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o),t}function fa(){var t,e,n,u;return t=Qu,"join"===r.substr(Qu,4).toLowerCase()?(e=r.substr(Qu,4),Qu+=4):(e=o,0===no&&io($e)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o),t}function va(){var t,e,n,u;return t=Qu,"outer"===r.substr(Qu,5).toLowerCase()?(e=r.substr(Qu,5),Qu+=5):(e=o,0===no&&io(Fe)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o),t}function ba(){var t,e,n,u;return t=Qu,"union"===r.substr(Qu,5).toLowerCase()?(e=r.substr(Qu,5),Qu+=5):(e=o,0===no&&io(He)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o),t}function da(){var t,e,n,u;return t=Qu,"using"===r.substr(Qu,5).toLowerCase()?(e=r.substr(Qu,5),Qu+=5):(e=o,0===no&&io(je)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o),t}function La(){var t,e,n,u;return t=Qu,"with"===r.substr(Qu,4).toLowerCase()?(e=r.substr(Qu,4),Qu+=4):(e=o,0===no&&io(Ir)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o),t}function Ca(){var t,e,n,u;return t=Qu,"by"===r.substr(Qu,2).toLowerCase()?(e=r.substr(Qu,2),Qu+=2):(e=o,0===no&&io(Xe)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o),t}function pa(){var t,e,n,u;return t=Qu,"asc"===r.substr(Qu,3).toLowerCase()?(e=r.substr(Qu,3),Qu+=3):(e=o,0===no&&io(Ze)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="ASC"):(Qu=t,t=o)):(Qu=t,t=o),t}function wa(){var t,e,n,u;return t=Qu,"desc"===r.substr(Qu,4).toLowerCase()?(e=r.substr(Qu,4),Qu+=4):(e=o,0===no&&io(ze)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="DESC"):(Qu=t,t=o)):(Qu=t,t=o),t}function Ea(){var t,e,n,u;return t=Qu,"all"===r.substr(Qu,3).toLowerCase()?(e=r.substr(Qu,3),Qu+=3):(e=o,0===no&&io(Je)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="ALL"):(Qu=t,t=o)):(Qu=t,t=o),t}function ha(){var t,e,n,u;return t=Qu,"distinct"===r.substr(Qu,8).toLowerCase()?(e=r.substr(Qu,8),Qu+=8):(e=o,0===no&&io(Qe)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="DISTINCT"):(Qu=t,t=o)):(Qu=t,t=o),t}function Aa(){var t,e,n,u;return t=Qu,"between"===r.substr(Qu,7).toLowerCase()?(e=r.substr(Qu,7),Qu+=7):(e=o,0===no&&io(rn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="BETWEEN"):(Qu=t,t=o)):(Qu=t,t=o),t}function ya(){var t,e,n,u;return t=Qu,"in"===r.substr(Qu,2).toLowerCase()?(e=r.substr(Qu,2),Qu+=2):(e=o,0===no&&io(tn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="IN"):(Qu=t,t=o)):(Qu=t,t=o),t}function Ta(){var t,e,n,u;return t=Qu,"is"===r.substr(Qu,2).toLowerCase()?(e=r.substr(Qu,2),Qu+=2):(e=o,0===no&&io(en)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="IS"):(Qu=t,t=o)):(Qu=t,t=o),t}function ma(){var t,e,n,u;return t=Qu,"like"===r.substr(Qu,4).toLowerCase()?(e=r.substr(Qu,4),Qu+=4):(e=o,0===no&&io(nn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="LIKE"):(Qu=t,t=o)):(Qu=t,t=o),t}function Sa(){var t,e,n,u;return t=Qu,"exists"===r.substr(Qu,6).toLowerCase()?(e=r.substr(Qu,6),Qu+=6):(e=o,0===no&&io(un)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="EXISTS"):(Qu=t,t=o)):(Qu=t,t=o),t}function Ia(){var t,e,n,u;return t=Qu,"not"===r.substr(Qu,3).toLowerCase()?(e=r.substr(Qu,3),Qu+=3):(e=o,0===no&&io(k)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="NOT"):(Qu=t,t=o)):(Qu=t,t=o),t}function Na(){var t,e,n,u;return t=Qu,"and"===r.substr(Qu,3).toLowerCase()?(e=r.substr(Qu,3),Qu+=3):(e=o,0===no&&io(on)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="AND"):(Qu=t,t=o)):(Qu=t,t=o),t}function Ra(){var t,e,n,u;return t=Qu,"or"===r.substr(Qu,2).toLowerCase()?(e=r.substr(Qu,2),Qu+=2):(e=o,0===no&&io(sn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="OR"):(Qu=t,t=o)):(Qu=t,t=o),t}function _a(){var t,e,n,u;return t=Qu,"case"===r.substr(Qu,4).toLowerCase()?(e=r.substr(Qu,4),Qu+=4):(e=o,0===no&&io(dn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o),t}function ga(){var t,e,n,u;return t=Qu,"cast"===r.substr(Qu,4).toLowerCase()?(e=r.substr(Qu,4),Qu+=4):(e=o,0===no&&io(En)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?t=e=[e,n]:(Qu=t,t=o)):(Qu=t,t=o),t}function Oa(){var t,e,n,u;return t=Qu,"char"===r.substr(Qu,4).toLowerCase()?(e=r.substr(Qu,4),Qu+=4):(e=o,0===no&&io(Tn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="CHAR"):(Qu=t,t=o)):(Qu=t,t=o),t}function Ua(){var t,e,n,u;return t=Qu,"varchar"===r.substr(Qu,7).toLowerCase()?(e=r.substr(Qu,7),Qu+=7):(e=o,0===no&&io(mn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="VARCHAR"):(Qu=t,t=o)):(Qu=t,t=o),t}function xa(){var t,e,n,u;return t=Qu,"nvarchar"===r.substr(Qu,8).toLowerCase()?(e=r.substr(Qu,8),Qu+=8):(e=o,0===no&&io(In)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="NVARCHAR"):(Qu=t,t=o)):(Qu=t,t=o),t}function Ma(){var t,e,n,u;return t=Qu,"numeric"===r.substr(Qu,7).toLowerCase()?(e=r.substr(Qu,7),Qu+=7):(e=o,0===no&&io(Nn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="NUMERIC"):(Qu=t,t=o)):(Qu=t,t=o),t}function Da(){var t,e,n,u;return t=Qu,"decimal"===r.substr(Qu,7).toLowerCase()?(e=r.substr(Qu,7),Qu+=7):(e=o,0===no&&io(Rn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="DECIMAL"):(Qu=t,t=o)):(Qu=t,t=o),t}function ka(){var t,e,n,u;return t=Qu,"unsigned"===r.substr(Qu,8).toLowerCase()?(e=r.substr(Qu,8),Qu+=8):(e=o,0===no&&io(gn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="UNSIGNED"):(Qu=t,t=o)):(Qu=t,t=o),t}function $a(){var t,e,n,u;return t=Qu,"int"===r.substr(Qu,3).toLowerCase()?(e=r.substr(Qu,3),Qu+=3):(e=o,0===no&&io(On)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="INT"):(Qu=t,t=o)):(Qu=t,t=o),t}function Fa(){var t,e,n,u;return t=Qu,"integer"===r.substr(Qu,7).toLowerCase()?(e=r.substr(Qu,7),Qu+=7):(e=o,0===no&&io(xn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="INTEGER"):(Qu=t,t=o)):(Qu=t,t=o),t}function Pa(){var t,e,n,u;return t=Qu,"smallint"===r.substr(Qu,8).toLowerCase()?(e=r.substr(Qu,8),Qu+=8):(e=o,0===no&&io(Dn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="SMALLINT"):(Qu=t,t=o)):(Qu=t,t=o),t}function Ha(){var t,e,n,u;return t=Qu,"tinyint"===r.substr(Qu,7).toLowerCase()?(e=r.substr(Qu,7),Qu+=7):(e=o,0===no&&io(kn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="TINYINT"):(Qu=t,t=o)):(Qu=t,t=o),t}function Ga(){var t,e,n,u;return t=Qu,"bigint"===r.substr(Qu,6).toLowerCase()?(e=r.substr(Qu,6),Qu+=6):(e=o,0===no&&io(Gn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="BIGINT"):(Qu=t,t=o)):(Qu=t,t=o),t}function ja(){var t,e,n,u;return t=Qu,"float"===r.substr(Qu,5).toLowerCase()?(e=r.substr(Qu,5),Qu+=5):(e=o,0===no&&io(jn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="FLOAT"):(Qu=t,t=o)):(Qu=t,t=o),t}function Ya(){var t,e,n,u;return t=Qu,"real"===r.substr(Qu,4).toLowerCase()?(e=r.substr(Qu,4),Qu+=4):(e=o,0===no&&io(Yn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="REAL"):(Qu=t,t=o)):(Qu=t,t=o),t}function Ba(){var t,e,n,u;return t=Qu,"double"===r.substr(Qu,6).toLowerCase()?(e=r.substr(Qu,6),Qu+=6):(e=o,0===no&&io(Bn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="DOUBLE"):(Qu=t,t=o)):(Qu=t,t=o),t}function Xa(){var t,e,n,u;return t=Qu,"date"===r.substr(Qu,4).toLowerCase()?(e=r.substr(Qu,4),Qu+=4):(e=o,0===no&&io(Xn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="DATE"):(Qu=t,t=o)):(Qu=t,t=o),t}function Wa(){var t,e,n,u;return t=Qu,"datetime"===r.substr(Qu,8).toLowerCase()?(e=r.substr(Qu,8),Qu+=8):(e=o,0===no&&io(Vn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="DATETIME"):(Qu=t,t=o)):(Qu=t,t=o),t}function Va(){var t,e,n,u;return t=Qu,"datetime2"===r.substr(Qu,9).toLowerCase()?(e=r.substr(Qu,9),Qu+=9):(e=o,0===no&&io(Kn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="DATETIME2"):(Qu=t,t=o)):(Qu=t,t=o),t}function Ka(){var t,e,n,u;return t=Qu,"datetimeoffset"===r.substr(Qu,14).toLowerCase()?(e=r.substr(Qu,14),Qu+=14):(e=o,0===no&&io(qn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="DATETIMEOFFSET"):(Qu=t,t=o)):(Qu=t,t=o),t}function qa(){var t,e,n,u;return t=Qu,"time"===r.substr(Qu,4).toLowerCase()?(e=r.substr(Qu,4),Qu+=4):(e=o,0===no&&io(Zn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="TIME"):(Qu=t,t=o)):(Qu=t,t=o),t}function Za(){var t,e,n,u;return t=Qu,"timestamp"===r.substr(Qu,9).toLowerCase()?(e=r.substr(Qu,9),Qu+=9):(e=o,0===no&&io(zn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="TIMESTAMP"):(Qu=t,t=o)):(Qu=t,t=o),t}function za(){var t,e,n,u;return t=Qu,"current_timestamp"===r.substr(Qu,17).toLowerCase()?(e=r.substr(Qu,17),Qu+=17):(e=o,0===no&&io(lu)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="CURRENT_TIMESTAMP"):(Qu=t,t=o)):(Qu=t,t=o),t}function Ja(){var t;return 64===r.charCodeAt(Qu)?(t="@",Qu++):(t=o,0===no&&io(wu)),t}function Qa(){var t;return (t=function(){var t;return "@@"===r.substr(Qu,2)?(t="@@",Qu+=2):(t=o,0===no&&io(Eu)),t}())===o&&(t=Ja())===o&&(t=function(){var t;return 36===r.charCodeAt(Qu)?(t="$",Qu++):(t=o,0===no&&io(hu)),t}()),t}function ri(){var t;return 61===r.charCodeAt(Qu)?(t="=",Qu++):(t=o,0===no&&io(Br)),t}function ti(){var t,e,n,u;return t=Qu,"add"===r.substr(Qu,3).toLowerCase()?(e=r.substr(Qu,3),Qu+=3):(e=o,0===no&&io(mu)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="ADD"):(Qu=t,t=o)):(Qu=t,t=o),t}function ei(){var t,e,n,u;return t=Qu,"column"===r.substr(Qu,6).toLowerCase()?(e=r.substr(Qu,6),Qu+=6):(e=o,0===no&&io(Su)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="COLUMN"):(Qu=t,t=o)):(Qu=t,t=o),t}function ni(){var t,e,n,u;return t=Qu,"index"===r.substr(Qu,5).toLowerCase()?(e=r.substr(Qu,5),Qu+=5):(e=o,0===no&&io(Iu)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="INDEX"):(Qu=t,t=o)):(Qu=t,t=o),t}function ui(){var t,e,n,u;return t=Qu,"key"===r.substr(Qu,3).toLowerCase()?(e=r.substr(Qu,3),Qu+=3):(e=o,0===no&&io(L)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="KEY"):(Qu=t,t=o)):(Qu=t,t=o),t}function oi(){var t,e,n,u;return t=Qu,"unique"===r.substr(Qu,6).toLowerCase()?(e=r.substr(Qu,6),Qu+=6):(e=o,0===no&&io(b)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="UNIQUE"):(Qu=t,t=o)):(Qu=t,t=o),t}function si(){var t,e,n,u;return t=Qu,"comment"===r.substr(Qu,7).toLowerCase()?(e=r.substr(Qu,7),Qu+=7):(e=o,0===no&&io(gu)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="COMMENT"):(Qu=t,t=o)):(Qu=t,t=o),t}function ai(){var t,e,n,u;return t=Qu,"constraint"===r.substr(Qu,10).toLowerCase()?(e=r.substr(Qu,10),Qu+=10):(e=o,0===no&&io(Ou)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="CONSTRAINT"):(Qu=t,t=o)):(Qu=t,t=o),t}function ii(){var t;return 46===r.charCodeAt(Qu)?(t=".",Qu++):(t=o,0===no&&io(Vt)),t}function ci(){var t;return 44===r.charCodeAt(Qu)?(t=",",Qu++):(t=o,0===no&&io(Pu)),t}function li(){var t;return 42===r.charCodeAt(Qu)?(t="*",Qu++):(t=o,0===no&&io(et)),t}function fi(){var t;return 40===r.charCodeAt(Qu)?(t="(",Qu++):(t=o,0===no&&io(Lr)),t}function vi(){var t;return 41===r.charCodeAt(Qu)?(t=")",Qu++):(t=o,0===no&&io(Cr)),t}function bi(){var t;return 91===r.charCodeAt(Qu)?(t="[",Qu++):(t=o,0===no&&io(Ct)),t}function di(){var t;return 93===r.charCodeAt(Qu)?(t="]",Qu++):(t=o,0===no&&io(Et)),t}function Li(){var t;return 59===r.charCodeAt(Qu)?(t=";",Qu++):(t=o,0===no&&io(Hu)),t}function Ci(){var t;return (t=function(){var t;return "||"===r.substr(Qu,2)?(t="||",Qu+=2):(t=o,0===no&&io(Gu)),t}())===o&&(t=function(){var t;return "&&"===r.substr(Qu,2)?(t="&&",Qu+=2):(t=o,0===no&&io(ju)),t}()),t}function pi(){var r,t;for(r=[],(t=yi())===o&&(t=Ei());t!==o;)r.push(t),(t=yi())===o&&(t=Ei());return r}function wi(){var r,t;if(r=[],(t=yi())===o&&(t=Ei()),t!==o)for(;t!==o;)r.push(t),(t=yi())===o&&(t=Ei());else r=o;return r}function Ei(){var t;return (t=function(){var t,e,n,u,s,a;t=Qu,"/*"===r.substr(Qu,2)?(e="/*",Qu+=2):(e=o,0===no&&io(Yu));if(e!==o){for(n=[],u=Qu,s=Qu,no++,"*/"===r.substr(Qu,2)?(a="*/",Qu+=2):(a=o,0===no&&io(Bu)),no--,a===o?s=void 0:(Qu=s,s=o),s!==o&&(a=Ai())!==o?u=s=[s,a]:(Qu=u,u=o);u!==o;)n.push(u),u=Qu,s=Qu,no++,"*/"===r.substr(Qu,2)?(a="*/",Qu+=2):(a=o,0===no&&io(Bu)),no--,a===o?s=void 0:(Qu=s,s=o),s!==o&&(a=Ai())!==o?u=s=[s,a]:(Qu=u,u=o);n!==o?("*/"===r.substr(Qu,2)?(u="*/",Qu+=2):(u=o,0===no&&io(Bu)),u!==o?t=e=[e,n,u]:(Qu=t,t=o)):(Qu=t,t=o);}else Qu=t,t=o;return t}())===o&&(t=function(){var t,e,n,u,s,a;t=Qu,"--"===r.substr(Qu,2)?(e="--",Qu+=2):(e=o,0===no&&io(Xu));if(e!==o){for(n=[],u=Qu,s=Qu,no++,a=Ti(),no--,a===o?s=void 0:(Qu=s,s=o),s!==o&&(a=Ai())!==o?u=s=[s,a]:(Qu=u,u=o);u!==o;)n.push(u),u=Qu,s=Qu,no++,a=Ti(),no--,a===o?s=void 0:(Qu=s,s=o),s!==o&&(a=Ai())!==o?u=s=[s,a]:(Qu=u,u=o);n!==o?t=e=[e,n]:(Qu=t,t=o);}else Qu=t,t=o;return t}())===o&&(t=function(){var t,e,n,u,s,a;t=Qu,35===r.charCodeAt(Qu)?(e="#",Qu++):(e=o,0===no&&io(Wu));if(e!==o){for(n=[],u=Qu,s=Qu,no++,a=Ti(),no--,a===o?s=void 0:(Qu=s,s=o),s!==o&&(a=Ai())!==o?u=s=[s,a]:(Qu=u,u=o);u!==o;)n.push(u),u=Qu,s=Qu,no++,a=Ti(),no--,a===o?s=void 0:(Qu=s,s=o),s!==o&&(a=Ai())!==o?u=s=[s,a]:(Qu=u,u=o);n!==o?t=e=[e,n]:(Qu=t,t=o);}else Qu=t,t=o;return t}()),t}function hi(){var r,t,e,n,u,s,a;return r=Qu,(t=si())!==o&&pi()!==o?((e=ri())===o&&(e=null),e!==o&&pi()!==o&&(n=ks())!==o?(s=e,a=n,r=t={type:(u=t).toLowerCase(),keyword:u.toLowerCase(),symbol:s,value:a}):(Qu=r,r=o)):(Qu=r,r=o),r}function Ai(){var t;return r.length>Qu?(t=r.charAt(Qu),Qu++):(t=o,0===no&&io(Vu)),t}function yi(){var t;return Ku.test(r.charAt(Qu))?(t=r.charAt(Qu),Qu++):(t=o,0===no&&io(qu)),t}function Ti(){var t,e;if((t=function(){var t,e;t=Qu,no++,r.length>Qu?(e=r.charAt(Qu),Qu++):(e=o,0===no&&io(Vu));no--,e===o?t=void 0:(Qu=t,t=o);return t}())===o)if(t=[],Xt.test(r.charAt(Qu))?(e=r.charAt(Qu),Qu++):(e=o,0===no&&io(Wt)),e!==o)for(;e!==o;)t.push(e),Xt.test(r.charAt(Qu))?(e=r.charAt(Qu),Qu++):(e=o,0===no&&io(Wt));else t=o;return t}function mi(){var t,e;return t=Qu,Xi=[],(void 0)!==o&&pi()!==o?((e=Si())===o&&(e=function(){var t,e;t=Qu,function(){var t;return "return"===r.substr(Qu,6).toLowerCase()?(t=r.substr(Qu,6),Qu+=6):(t=o,0===no&&io(Au)),t}()!==o&&pi()!==o&&(e=Ii())!==o?(t={type:"return",expr:e}):(Qu=t,t=o);return t}()),e!==o?(t={stmt:e,vars:Xi}):(Qu=t,t=o)):(Qu=t,t=o),t}function Si(){var t,e,n,u;return t=Qu,(e=xi())===o&&(e=Mi()),e!==o&&pi()!==o?((n=function(){var t;return ":="===r.substr(Qu,2)?(t=":=",Qu+=2):(t=o,0===no&&io(yu)),t}())===o&&(n=ri()),n!==o&&pi()!==o&&(u=Ii())!==o?(t=e={type:"assign",left:e,symbol:n,right:u}):(Qu=t,t=o)):(Qu=t,t=o),t}function Ii(){var r;return (r=go())===o&&(r=function(){var r,t,e,n,u;r=Qu,(t=xi())!==o&&pi()!==o&&(e=qo())!==o&&pi()!==o&&(n=xi())!==o&&pi()!==o&&(u=zo())!==o?(r=t={type:"join",ltable:t,rtable:n,op:e,on:u}):(Qu=r,r=o);return r}())===o&&(r=Ni())===o&&(r=function(){var r,t;r=Qu,bi()!==o&&pi()!==o&&(t=Ui())!==o&&pi()!==o&&di()!==o?(r={type:"array",value:t}):(Qu=r,r=o);return r}()),r}function Ni(){var r,t,e,n,u,s,a,i;if(r=Qu,(t=Ri())!==o){for(e=[],n=Qu,(u=pi())!==o&&(s=Es())!==o&&(a=pi())!==o&&(i=Ri())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);n!==o;)e.push(n),n=Qu,(u=pi())!==o&&(s=Es())!==o&&(a=pi())!==o&&(i=Ri())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);e!==o?(r=t=Xr(t,e)):(Qu=r,r=o);}else Qu=r,r=o;return r}function Ri(){var r,t,e,n,u,s,a,i;if(r=Qu,(t=_i())!==o){for(e=[],n=Qu,(u=pi())!==o&&(s=As())!==o&&(a=pi())!==o&&(i=_i())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);n!==o;)e.push(n),n=Qu,(u=pi())!==o&&(s=As())!==o&&(a=pi())!==o&&(i=_i())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);e!==o?(r=t=Xr(t,e)):(Qu=r,r=o);}else Qu=r,r=o;return r}function _i(){var r,t;return (r=Ms())===o&&(r=xi())===o&&(r=Oi())===o&&(r=Us())===o&&(r=Qu,fi()!==o&&pi()!==o&&(t=Ni())!==o&&pi()!==o&&vi()!==o?(r=ot(t)):(Qu=r,r=o)),r}function gi(){var r,t,e,n,u,s,a;return r=Qu,(t=Ss())!==o?(e=Qu,(n=pi())!==o&&(u=ii())!==o&&(s=pi())!==o&&(a=Ss())!==o?e=n=[n,u,s,a]:(Qu=e,e=o),e===o&&(e=null),e!==o?(r=t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e)):(Qu=r,r=o)):(Qu=r,r=o),r}function Oi(){var r,t,e;return r=Qu,(t=gi())!==o&&pi()!==o&&fi()!==o&&pi()!==o?((e=Ui())===o&&(e=null),e!==o&&pi()!==o&&vi()!==o?(r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(Qu=r,r=o)):(Qu=r,r=o),r===o&&(r=Qu,(t=gi())!==o&&(t=function(r){return {type:"function",name:r,args:null}}(t)),r=t),r}function Ui(){var r,t,e,n,u,s,a,i;if(r=Qu,(t=_i())!==o){for(e=[],n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(i=_i())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);n!==o;)e.push(n),n=Qu,(u=pi())!==o&&(s=ci())!==o&&(a=pi())!==o&&(i=_i())!==o?n=u=[u,s,a,i]:(Qu=n,n=o);e!==o?(r=t=f(t,e)):(Qu=r,r=o);}else Qu=r,r=o;return r}function xi(){var r,t,e,n,u;return r=Qu,(t=Qa())!==o&&(e=Mi())!==o?(n=t,u=e,r=t={type:"var",...u,prefix:n}):(Qu=r,r=o),r}function Mi(){var t,e,n,u,s;return t=Qu,(e=Rs())!==o&&(n=function(){var t,e,n,u,s;t=Qu,e=[],n=Qu,46===r.charCodeAt(Qu)?(u=".",Qu++):(u=o,0===no&&io(Vt));u!==o&&(s=Rs())!==o?n=u=[u,s]:(Qu=n,n=o);for(;n!==o;)e.push(n),n=Qu,46===r.charCodeAt(Qu)?(u=".",Qu++):(u=o,0===no&&io(Vt)),u!==o&&(s=Rs())!==o?n=u=[u,s]:(Qu=n,n=o);e!==o&&(e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return t=e}())!==o?(u=e,s=n,Xi.push(u),t=e={type:"var",name:u,members:s,prefix:null}):(Qu=t,t=o),t}function Di(){var t;return (t=function(){var t,e,n,u,s,a;t=Qu,(e=bi())===o&&(e=null);if(e!==o)if(pi()!==o)if((n=Oa())===o&&(n=Ua())===o&&(n=function(){var t,e,n,u;return t=Qu,"nchar"===r.substr(Qu,5).toLowerCase()?(e=r.substr(Qu,5),Qu+=5):(e=o,0===no&&io(Sn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="NCHAR"):(Qu=t,t=o)):(Qu=t,t=o),t}())===o&&(n=xa()),n!==o)if(pi()!==o)if((u=di())===o&&(u=null),u!==o)if((Zu(e,0,u)?o:void 0)!==o)if(pi()!==o)if(fi()!==o)if(pi()!==o){if(s=[],Kt.test(r.charAt(Qu))?(a=r.charAt(Qu),Qu++):(a=o,0===no&&io(qt)),a!==o)for(;a!==o;)s.push(a),Kt.test(r.charAt(Qu))?(a=r.charAt(Qu),Qu++):(a=o,0===no&&io(qt));else s=o;s!==o&&(a=pi())!==o&&vi()!==o?(e={dataType:n,length:parseInt(s.join(""),10)},t=e):(Qu=t,t=o);}else Qu=t,t=o;else Qu=t,t=o;else Qu=t,t=o;else Qu=t,t=o;else Qu=t,t=o;else Qu=t,t=o;else Qu=t,t=o;else Qu=t,t=o;else Qu=t,t=o;t===o&&(t=Qu,(e=bi())===o&&(e=null),e!==o&&pi()!==o?((n=Oa())===o&&(n=Ua()),n!==o&&pi()!==o?((u=di())===o&&(u=null),u!==o?((Zu(e,0,u)?o:void 0)!==o?(e=zu(0,n),t=e):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o),t===o&&(t=Qu,(e=bi())===o&&(e=null),e!==o&&pi()!==o&&(n=xa())!==o&&pi()!==o?((u=di())===o&&(u=null),u!==o?((Zu(e,0,u)?o:void 0)!==o&&pi()!==o&&fi()!==o&&pi()!==o?("max"===r.substr(Qu,3).toLowerCase()?(s=r.substr(Qu,3),Qu+=3):(s=o,0===no&&io(cn)),s!==o&&(a=pi())!==o&&vi()!==o?(e=function(r,t,e,n){return {dataType:t,length:"max"}}(0,n),t=e):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)));return t}())===o&&(t=function(){var t,e,n,u,s,a,i,c,l,f,v,b,d,L,C;t=Qu,(e=bi())===o&&(e=null);if(e!==o)if(pi()!==o)if((n=Ma())===o&&(n=Da())===o&&(n=$a())===o&&(n=Fa())===o&&(n=Pa())===o&&(n=Ha())===o&&(n=Ga())===o&&(n=ja())===o&&(n=Ya())===o&&(n=Ba()),n!==o)if((u=pi())!==o)if((s=di())===o&&(s=null),s!==o)if((Zu(e,0,s)?o:void 0)!==o)if((a=pi())!==o)if((i=fi())!==o)if((c=pi())!==o){if(l=[],Kt.test(r.charAt(Qu))?(f=r.charAt(Qu),Qu++):(f=o,0===no&&io(qt)),f!==o)for(;f!==o;)l.push(f),Kt.test(r.charAt(Qu))?(f=r.charAt(Qu),Qu++):(f=o,0===no&&io(qt));else l=o;if(l!==o)if((f=pi())!==o){if(v=Qu,(b=ci())!==o)if((d=pi())!==o){if(L=[],Kt.test(r.charAt(Qu))?(C=r.charAt(Qu),Qu++):(C=o,0===no&&io(qt)),C!==o)for(;C!==o;)L.push(C),Kt.test(r.charAt(Qu))?(C=r.charAt(Qu),Qu++):(C=o,0===no&&io(qt));else L=o;L!==o?v=b=[b,d,L]:(Qu=v,v=o);}else Qu=v,v=o;else Qu=v,v=o;v===o&&(v=null),v!==o&&(b=pi())!==o&&(d=vi())!==o&&(L=pi())!==o?((C=ki())===o&&(C=null),C!==o?(p=v,w=C,e={dataType:n,length:parseInt(l.join(""),10),scale:p&&parseInt(p[2].join(""),10),parentheses:!0,suffix:w},t=e):(Qu=t,t=o)):(Qu=t,t=o);}else Qu=t,t=o;else Qu=t,t=o;}else Qu=t,t=o;else Qu=t,t=o;else Qu=t,t=o;else Qu=t,t=o;else Qu=t,t=o;else Qu=t,t=o;else Qu=t,t=o;else Qu=t,t=o;else Qu=t,t=o;var p,w;if(t===o){if(t=Qu,(e=bi())===o&&(e=null),e!==o)if(pi()!==o)if((n=Ma())===o&&(n=Da())===o&&(n=$a())===o&&(n=Fa())===o&&(n=Pa())===o&&(n=Ha())===o&&(n=Ga())===o&&(n=ja())===o&&(n=Ya())===o&&(n=Ba()),n!==o)if((u=di())===o&&(u=null),u!==o)if((s=(s=Zu(e,0,u))?o:void 0)!==o)if(pi()!==o){if(a=[],Kt.test(r.charAt(Qu))?(i=r.charAt(Qu),Qu++):(i=o,0===no&&io(qt)),i!==o)for(;i!==o;)a.push(i),Kt.test(r.charAt(Qu))?(i=r.charAt(Qu),Qu++):(i=o,0===no&&io(qt));else a=o;a!==o&&(i=pi())!==o?((c=ki())===o&&(c=null),c!==o?(e=function(r,t,e,n,u){return {dataType:t,length:parseInt(n.join(""),10),suffix:u}}(0,n,0,a,c),t=e):(Qu=t,t=o)):(Qu=t,t=o);}else Qu=t,t=o;else Qu=t,t=o;else Qu=t,t=o;else Qu=t,t=o;else Qu=t,t=o;else Qu=t,t=o;t===o&&(t=Qu,(e=bi())===o&&(e=null),e!==o&&pi()!==o?((n=Ma())===o&&(n=Da())===o&&(n=$a())===o&&(n=Fa())===o&&(n=Pa())===o&&(n=Ha())===o&&(n=Ga())===o&&(n=ja())===o&&(n=Ya())===o&&(n=Ba())===o&&(n=function(){var t,e,n,u;return t=Qu,"bit"===r.substr(Qu,3).toLowerCase()?(e=r.substr(Qu,3),Qu+=3):(e=o,0===no&&io(hn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="BIT"):(Qu=t,t=o)):(Qu=t,t=o),t}())===o&&(n=function(){var t,e,n,u;return t=Qu,"money"===r.substr(Qu,5).toLowerCase()?(e=r.substr(Qu,5),Qu+=5):(e=o,0===no&&io(An)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="MONEY"):(Qu=t,t=o)):(Qu=t,t=o),t}())===o&&(n=function(){var t,e,n,u;return t=Qu,"smallmoney"===r.substr(Qu,10).toLowerCase()?(e=r.substr(Qu,10),Qu+=10):(e=o,0===no&&io(yn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="SMALLMONEY"):(Qu=t,t=o)):(Qu=t,t=o),t}()),n!==o&&(u=pi())!==o?((s=di())===o&&(s=null),s!==o?((Zu(e,0,s)?o:void 0)!==o&&(a=pi())!==o?((i=ki())===o&&(i=null),i!==o&&(c=pi())!==o?(e=function(r,t,e,n){return {dataType:t,suffix:n}}(0,n,0,i),t=e):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o));}return t}())===o&&(t=function(){var t,e,n,u,s,a,i,c,l,f,v;t=Qu,(e=bi())===o&&(e=null);if(e!==o)if(pi()!==o)if((n=Va())===o&&(n=Ka())===o&&(n=qa()),n!==o)if(pi()!==o)if((u=di())===o&&(u=null),u!==o)if((Zu(e,0,u)?o:void 0)!==o)if(fi()!==o)if(pi()!==o){if(s=[],Kt.test(r.charAt(Qu))?(a=r.charAt(Qu),Qu++):(a=o,0===no&&io(qt)),a!==o)for(;a!==o;)s.push(a),Kt.test(r.charAt(Qu))?(a=r.charAt(Qu),Qu++):(a=o,0===no&&io(qt));else s=o;if(s!==o)if((a=pi())!==o){if(i=Qu,(c=ci())!==o)if((l=pi())!==o){if(f=[],Kt.test(r.charAt(Qu))?(v=r.charAt(Qu),Qu++):(v=o,0===no&&io(qt)),v!==o)for(;v!==o;)f.push(v),Kt.test(r.charAt(Qu))?(v=r.charAt(Qu),Qu++):(v=o,0===no&&io(qt));else f=o;f!==o?i=c=[c,l,f]:(Qu=i,i=o);}else Qu=i,i=o;else Qu=i,i=o;i===o&&(i=null),i!==o&&(c=pi())!==o&&(l=vi())!==o?(e={dataType:n,length:parseInt(s.join(""),10)},t=e):(Qu=t,t=o);}else Qu=t,t=o;else Qu=t,t=o;}else Qu=t,t=o;else Qu=t,t=o;else Qu=t,t=o;else Qu=t,t=o;else Qu=t,t=o;else Qu=t,t=o;else Qu=t,t=o;else Qu=t,t=o;t===o&&(t=Qu,(e=bi())===o&&(e=null),e!==o&&pi()!==o?((n=Xa())===o&&(n=function(){var t,e,n,u;return t=Qu,"smalldatetime"===r.substr(Qu,13).toLowerCase()?(e=r.substr(Qu,13),Qu+=13):(e=o,0===no&&io(Wn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="SMALLDATETIME"):(Qu=t,t=o)):(Qu=t,t=o),t}())===o&&(n=Wa())===o&&(n=Va())===o&&(n=Ka())===o&&(n=qa())===o&&(n=Za()),n!==o&&pi()!==o?((u=di())===o&&(u=null),u!==o?((Zu(e,0,u)?o:void 0)!==o?(e=zu(0,n),t=e):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o));return t}())===o&&(t=function(){var t,e,n,u;t=Qu,(e=bi())===o&&(e=null);e!==o&&pi()!==o&&(n=function(){var t,e,n,u;return t=Qu,"json"===r.substr(Qu,4).toLowerCase()?(e=r.substr(Qu,4),Qu+=4):(e=o,0===no&&io(Mn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="JSON"):(Qu=t,t=o)):(Qu=t,t=o),t}())!==o&&pi()!==o?((u=di())===o&&(u=null),u!==o?((Zu(e,0,u)?o:void 0)!==o?(e=zu(0,n),t=e):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=Qu,(e=bi())===o&&(e=null);e!==o&&pi()!==o?((n=function(){var t,e,n,u;return t=Qu,"tinytext"===r.substr(Qu,8).toLowerCase()?(e=r.substr(Qu,8),Qu+=8):(e=o,0===no&&io($n)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="TINYTEXT"):(Qu=t,t=o)):(Qu=t,t=o),t}())===o&&(n=function(){var t,e,n,u;return t=Qu,"text"===r.substr(Qu,4).toLowerCase()?(e=r.substr(Qu,4),Qu+=4):(e=o,0===no&&io(Fn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="TEXT"):(Qu=t,t=o)):(Qu=t,t=o),t}())===o&&(n=function(){var t,e,n,u;return t=Qu,"mediumtext"===r.substr(Qu,10).toLowerCase()?(e=r.substr(Qu,10),Qu+=10):(e=o,0===no&&io(Pn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="MEDIUMTEXT"):(Qu=t,t=o)):(Qu=t,t=o),t}())===o&&(n=function(){var t,e,n,u;return t=Qu,"longtext"===r.substr(Qu,8).toLowerCase()?(e=r.substr(Qu,8),Qu+=8):(e=o,0===no&&io(Hn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="LONGTEXT"):(Qu=t,t=o)):(Qu=t,t=o),t}()),n!==o&&pi()!==o?((u=di())===o&&(u=null),u!==o?((Zu(e,0,u)?o:void 0)!==o?(e=Ju(0,n),t=e):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=Qu,(e=bi())===o&&(e=null);e!==o&&pi()!==o&&(n=function(){var t,e,n,u;return t=Qu,"uniqueidentifier"===r.substr(Qu,16).toLowerCase()?(e=r.substr(Qu,16),Qu+=16):(e=o,0===no&&io(Qn)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="UNIQUEIDENTIFIER"):(Qu=t,t=o)):(Qu=t,t=o),t}())!==o&&pi()!==o?((u=di())===o&&(u=null),u!==o?((Zu(e,0,u)?o:void 0)!==o?(e=Ju(0,n),t=e):(Qu=t,t=o)):(Qu=t,t=o)):(Qu=t,t=o);return t}()),t}function ki(){var t,e,n;return t=Qu,(e=ka())===o&&(e=null),e!==o&&pi()!==o?((n=function(){var t,e,n,u;return t=Qu,"zerofill"===r.substr(Qu,8).toLowerCase()?(e=r.substr(Qu,8),Qu+=8):(e=o,0===no&&io(Un)),e!==o?(n=Qu,no++,u=_s(),no--,u===o?n=void 0:(Qu=n,n=o),n!==o?(t=e="ZEROFILL"):(Qu=t,t=o)):(Qu=t,t=o),t}())===o&&(n=null),n!==o?(t=e=function(r,t){const e=[];return r&&e.push(r),t&&e.push(t),e}(e,n)):(Qu=t,t=o)):(Qu=t,t=o),t}const $i={ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,IS:!0,JOIN:!0,JSON:!0,KEY:!0,LEFT:!0,LIKE:!0,LIMIT:!0,LOW_PRIORITY:!0,NOT:!0,NULL:!0,NOCHECK:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,RECURSIVE:!0,RENAME:!0,READ:!0,RIGHT:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,STATUS:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,TYPE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WITH:!0,WHEN:!0,WHERE:!0,WRITE:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0};function Fi(r,t){return {type:"unary_expr",operator:r,expr:t}}function Pi(r,t,e){return {type:"binary_expr",operator:r,left:t,right:e}}function Hi(r){const t=n(Number.MAX_SAFE_INTEGER);return !(n(r)<t)}function Gi(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][3]);return e}function ji(r,t){let e=r;for(let r=0;r<t.length;r++)e=Pi(t[r][1],e,t[r][3]);return e}function Yi(r){const t=Ki[r];return t||(r||null)}function Bi(r){const t=[];for(let e of r.keys()){const r=e.split("::");if(!r){t.push(e);break}r&&r[1]&&(r[1]=Yi(r[1])),t.push(r.join("::"));}return t}let Xi=[];const Wi=new Set,Vi=new Set,Ki={};if((e=a())!==o&&Qu===r.length)return e;throw e!==o&&Qu<r.length&&io({type:"end"}),co(eo,to<r.length?r.charAt(to):null,to<r.length?ao(to,to+1):ao(to,to))}};},function(r,t,e){var n=e(0);function u(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,u);}!function(r,t){function e(){this.constructor=r;}e.prototype=t.prototype,r.prototype=new e;}(u,Error),u.buildMessage=function(r,t){var e={literal:function(r){return '"'+u(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?o(r.parts[t][0])+"-"+o(r.parts[t][1]):o(r.parts[t]);return "["+(r.inverted?"^":"")+e+"]"},any:function(r){return "any character"},end:function(r){return "end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function u(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}function o(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}return "Expected "+function(r){var t,n,u,o=new Array(r.length);for(t=0;t<r.length;t++)o[t]=(u=r[t],e[u.type](u));if(o.sort(),o.length>0){for(t=1,n=1;t<o.length;t++)o[t-1]!==o[t]&&(o[n]=o[t],n++);o.length=n;}switch(o.length){case 1:return o[0];case 2:return o[0]+" or "+o[1];default:return o.slice(0,-1).join(", ")+", or "+o[o.length-1]}}(r)+" but "+function(r){return r?'"'+u(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:u,parse:function(r,t){t=void 0!==t?t:{};var e,o={},s={start:To},a=To,i=po("EXTENSION",!0),c=po("SCHEMA",!0),l=po("VERSION",!0),v=po("NULLS",!0),b=po("FIRST",!0),d=po("LAST",!0),L=po("AUTO_INCREMENT",!0),C=po("UNIQUE",!0),p=po("PRIMARY",!0),w=po("KEY",!0),E=po("COLUMN_FORMAT",!0),h=po("FIXED",!0),A=po("DYNAMIC",!0),y=po("DEFAULT",!0),T=po("STORAGE",!0),m=po("DISK",!0),S=po("MEMORY",!0),I=po("ALGORITHM",!0),N=po("INSTANT",!0),R=po("INPLACE",!0),_=po("COPY",!0),g=po("LOCK",!0),O=po("NONE",!0),U=po("SHARED",!0),x=po("EXCLUSIVE",!0),M=po("PRIMARY KEY",!0),D=po("FOREIGN KEY",!0),k=po("MATCH FULL",!0),$=po("MATCH PARTIAL",!0),F=po("MATCH SIMPLE",!0),P=po("ON DELETE",!0),H=po("ON UPDATE",!0),G=po("RESTRICT",!0),j=po("CASCADE",!0),Y=po("SET NULL",!0),B=po("NO ACTION",!0),X=po("SET DEFAULT",!0),W=po("TRIGGER",!0),V=po("BEFORE",!0),K=po("AFTER",!0),q=po("INSTEAD OF",!0),Z=po("ON",!0),z=po("EXECUTE",!0),J=po("PROCEDURE",!0),Q=po("OF",!0),rr=po("NOT",!0),tr=po("DEFERRABLE",!0),er=po("INITIALLY IMMEDIATE",!0),nr=po("INITIALLY DEFERRED",!0),ur=po("FOR",!0),or=po("EACH",!0),sr=po("ROW",!0),ar=po("STATEMENT",!0),ir=po("AVG_ROW_LENGTH",!0),cr=po("KEY_BLOCK_SIZE",!0),lr=po("MAX_ROWS",!0),fr=po("MIN_ROWS",!0),vr=po("STATS_SAMPLE_PAGES",!0),br=po("CHARACTER SET",!0),dr=po("CHARSET",!0),Lr=po("COLLATE",!0),Cr=po("CONNECTION",!0),pr=po("COMPRESSION",!0),wr=po("'",!1),Er=po("ZLIB",!0),hr=po("LZ4",!0),Ar=po("ENGINE",!0),yr=po("IN",!0),Tr=po("ACCESS SHARE",!0),mr=po("ROW SHARE",!0),Sr=po("ROW EXCLUSIVE",!0),Ir=po("SHARE UPDATE EXCLUSIVE",!0),Nr=po("SHARE ROW EXCLUSIVE",!0),Rr=po("ACCESS EXCLUSIVE",!0),_r=po("SHARE",!0),gr=po("MODE",!0),Or=po("NOWAIT",!0),Ur=po("(",!1),xr=po(")",!1),Mr=function(r,t){return qi(r,t)},Dr=po("BTREE",!0),kr=po("HASH",!0),$r=po("GIST",!0),Fr=po("GIN",!0),Pr=po("WITH",!0),Hr=po("PARSER",!0),Gr=po("VISIBLE",!0),jr=po("INVISIBLE",!0),Yr=po("=",!1),Br=function(r,t){return Zi(r,t)},Xr=po("!",!1),Wr=po(">=",!1),Vr=po(">",!1),Kr=po("<=",!1),qr=po("<>",!1),Zr=po("<",!1),zr=po("!=",!1),Jr=po("@>",!1),Qr=po("<@",!1),rt=po("?",!1),tt=po("?|",!1),et=po("?&",!1),nt=po("#-",!1),ut=po("+",!1),ot=po("-",!1),st=po("*",!1),at=po("/",!1),it=po("%",!1),ct=po("$",!1),lt=function(r){return !0===Xi[r.toUpperCase()]},ft=po('"',!1),vt=/^[^"]/,bt=wo(['"'],!0,!1),dt=function(r){return r.join("")},Lt=/^[^']/,Ct=wo(["'"],!0,!1),pt=po("`",!1),wt=/^[^`]/,Et=wo(["`"],!0,!1),ht=/^[A-Za-z_]/,At=wo([["A","Z"],["a","z"],"_"],!1,!1),yt=/^[A-Za-z0-9_\-]/,Tt=wo([["A","Z"],["a","z"],["0","9"],"_","-"],!1,!1),mt=/^[A-Za-z0-9_]/,St=wo([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),It=po(":",!1),Nt=po("CENTURY",!0),Rt=po("DAY",!0),_t=po("DECADE",!0),gt=po("DOW",!0),Ot=po("DOY",!0),Ut=po("EPOCH",!0),xt=po("HOUR",!0),Mt=po("ISODOW",!0),Dt=po("ISOYEAR",!0),kt=po("MICROSECONDS",!0),$t=po("MILLENNIUM",!0),Ft=po("MILLISECONDS",!0),Pt=po("MINUTE",!0),Ht=po("MONTH",!0),Gt=po("QUARTER",!0),jt=po("SECOND",!0),Yt=po("TIMEZONE",!0),Bt=po("TIMEZONE_HOUR",!0),Xt=po("TIMEZONE_MINUTE",!0),Wt=po("WEEK",!0),Vt=po("YEAR",!0),Kt=po("ON UPDATE CURRENT_TIMESTAMP",!0),qt=/^[^"\\\0-\x1F\x7F]/,Zt=wo(['"',"\\",["\0",""],""],!0,!1),zt=/^[^'\\]/,Jt=wo(["'","\\"],!0,!1),Qt=po("\\'",!1),re=po('\\"',!1),te=po("\\\\",!1),ee=po("\\/",!1),ne=po("\\b",!1),ue=po("\\f",!1),oe=po("\\n",!1),se=po("\\r",!1),ae=po("\\t",!1),ie=po("\\u",!1),ce=po("\\",!1),le=/^[\n\r]/,fe=wo(["\n","\r"],!1,!1),ve=po(".",!1),be=/^[0-9]/,de=wo([["0","9"]],!1,!1),Le=/^[0-9a-fA-F]/,Ce=wo([["0","9"],["a","f"],["A","F"]],!1,!1),pe=/^[eE]/,we=wo(["e","E"],!1,!1),Ee=/^[+\-]/,he=wo(["+","-"],!1,!1),Ae=po("NULL",!0),ye=po("NOT NULL",!0),Te=po("TRUE",!0),me=po("TO",!0),Se=po("FALSE",!0),Ie=(po("DROP",!0)),Ne=po("USE",!0),Re=po("ALTER",!0),_e=po("SELECT",!0),ge=po("UPDATE",!0),Oe=po("CREATE",!0),Ue=po("TEMPORARY",!0),xe=po("IF NOT EXISTS",!0),Me=po("DELETE",!0),De=po("INSERT",!0),ke=po("RECURSIVE",!1),$e=po("REPLACE",!0),Fe=po("RETURNING",!0),Pe=po("RENAME",!0),He=po("IGNORE",!0),Ge=(po("PARTITION",!0)),je=po("INTO",!0),Ye=po("FROM",!0),Be=po("SET",!0),Xe=po("AS",!0),We=po("TABLE",!0),Ve=po("TABLESPACE",!0),Ke=po("LEFT",!0),qe=po("RIGHT",!0),Ze=po("FULL",!0),ze=po("INNER",!0),Je=po("JOIN",!0),Qe=po("OUTER",!0),rn=po("UNION",!0),tn=po("VALUES",!0),en=po("USING",!0),nn=po("WHERE",!0),un=po("GROUP",!0),on=po("BY",!0),sn=po("ORDER",!0),an=po("HAVING",!0),cn=po("LIMIT",!0),ln=po("OFFSET",!0),fn=po("ASC",!0),vn=po("DESC",!0),bn=po("ALL",!0),dn=po("DISTINCT",!0),Ln=po("BETWEEN",!0),Cn=po("IS",!0),pn=po("LIKE",!0),wn=po("EXISTS",!0),En=po("AND",!0),hn=po("OR",!0),An=po("COUNT",!0),yn=po("MAX",!0),Tn=po("MIN",!0),mn=po("SUM",!0),Sn=po("AVG",!0),In=po("COLLECT",!0),Nn=po("RANK",!0),Rn=po("DENSE_RANK",!0),_n=po("LISTAGG",!0),gn=po("ROW_NUMBER",!0),On=po("EXTRACT",!0),Un=po("CALL",!0),xn=po("CASE",!0),Mn=po("WHEN",!0),Dn=po("THEN",!0),kn=po("ELSE",!0),$n=po("END",!0),Fn=po("CAST",!0),Pn=po("BOOL",!0),Hn=po("BOOLEAN",!0),Gn=po("CHAR",!0),jn=po("VARCHAR",!0),Yn=po("NUMERIC",!0),Bn=po("DECIMAL",!0),Xn=po("SIGNED",!0),Wn=po("UNSIGNED",!0),Vn=po("INT",!0),Kn=po("ZEROFILL",!0),qn=po("INTEGER",!0),Zn=po("JSON",!0),zn=po("JSONB",!0),Jn=po("GEOMETRY",!0),Qn=po("SMALLINT",!0),ru=po("TINYINT",!0),tu=po("TINYTEXT",!0),eu=po("TEXT",!0),nu=po("MEDIUMTEXT",!0),uu=po("LONGTEXT",!0),ou=po("BIGINT",!0),su=po("FLOAT",!0),au=po("DOUBLE",!0),iu=po("DATE",!0),cu=po("DATETIME",!0),lu=po("TIME",!0),fu=po("TIMESTAMP",!0),vu=po("TRUNCATE",!0),bu=po("USER",!0),du=po("UUID",!0),Lu=po("CURRENT_DATE",!0),Cu=(po("INTERVAL",!0)),pu=po("CURRENT_TIME",!0),wu=po("CURRENT_TIMESTAMP",!0),Eu=po("CURRENT_USER",!0),hu=po("SESSION_USER",!0),Au=po("SYSTEM_USER",!0),yu=po("GLOBAL",!0),Tu=po("SESSION",!0),mu=po("LOCAL",!0),Su=po("PERSIST",!0),Iu=po("PERSIST_ONLY",!0),Nu=po("@",!1),Ru=po("@@",!1),_u=po("return",!0),gu=po(":=",!1),Ou=po("::",!1),Uu=po("DUAL",!0),xu=po("ADD",!0),Mu=po("COLUMN",!0),Du=po("INDEX",!0),ku=po("FULLTEXT",!0),$u=po("SPATIAL",!0),Fu=po("COMMENT",!0),Pu=po("CONSTRAINT",!0),Hu=po("CONCURRENTLY",!0),Gu=po("REFERENCES",!0),ju=po("SQL_CALC_FOUND_ROWS",!0),Yu=po("SQL_CACHE",!0),Bu=po("SQL_NO_CACHE",!0),Xu=po("SQL_SMALL_RESULT",!0),Wu=po("SQL_BIG_RESULT",!0),Vu=po("SQL_BUFFER_RESULT",!0),Ku=po(",",!1),qu=po("[",!1),Zu=po("]",!1),zu=po(";",!1),Ju=po("->",!1),Qu=po("->>",!1),ro=po("#>",!1),to=po("#>>",!1),eo=po("||",!1),no=po("&&",!1),uo=po("/*",!1),oo=po("*/",!1),so=po("--",!1),ao=({type:"any"}),io=/^[ \t\n\r]/,co=wo([" ","\t","\n","\r"],!1,!1),lo=function(r){return {dataType:r}},fo=0,vo=[{line:1,column:1}],bo=0,Lo=[],Co=0;if("startRule"in t){if(!(t.startRule in s))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=s[t.startRule];}function po(r,t){return {type:"literal",text:r,ignoreCase:t}}function wo(r,t,e){return {type:"class",parts:r,inverted:t,ignoreCase:e}}function Eo(t){var e,n=vo[t];if(n)return n;for(e=t-1;!vo[e];)e--;for(n={line:(n=vo[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return vo[t]=n,n}function ho(r,t){var e=Eo(r),n=Eo(t);return {start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function Ao(r){fo<bo||(fo>bo&&(bo=fo,Lo=[]),Lo.push(r));}function yo(r,t,e){return new u(u.buildMessage(r,t),r,t,e)}function To(){var r,t;return r=fo,Si()!==o?((t=function(){var r,t,e,n,u,s,a,i;if(r=fo,(t=So())!==o){if(e=[],n=fo,(u=Si())!==o&&(s=yi())!==o&&(a=Si())!==o&&(i=So())!==o?n=u=[u,s,a,i]:(fo=n,n=o),n!==o)for(;n!==o;)e.push(n),n=fo,(u=Si())!==o&&(s=yi())!==o&&(a=Si())!==o&&(i=So())!==o?n=u=[u,s,a,i]:(fo=n,n=o);else e=o;e!==o?(t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return {tableList:Array.from(tc),columnList:Ji(ec),ast:e}}(t,e),r=t):(fo=r,r=o);}else fo=r,r=o;return r}())===o&&(t=mo())===o&&(t=So()),t!==o?(r=t):(fo=r,r=o)):(fo=r,r=o),r}function mo(){var t;return (t=function(){var r,t,e,n;r=fo,(t=oa())!==o&&Si()!==o&&(e=Ea())!==o&&Si()!==o&&(n=Qo())!==o?(u=t,s=e,(a=n)&&a.forEach(r=>tc.add(`${u}::${r.db}::${r.table}`)),t={tableList:Array.from(tc),columnList:Ji(ec),ast:{type:u.toLowerCase(),keyword:s.toLowerCase(),name:a}},r=t):(fo=r,r=o);var u,s,a;return r}())===o&&(t=function(){var t;(t=function(){var t,e,n,u,s,a,i,c,l,f;t=fo,(e=aa())!==o&&Si()!==o?((n=ia())===o&&(n=null),n!==o&&Si()!==o&&Ea()!==o&&Si()!==o?((u=ca())===o&&(u=null),u!==o&&Si()!==o&&(s=Qo())!==o&&Si()!==o&&(a=function(){var r,t,e,n,u,s,a,i,c;if(r=fo,(t=hi())!==o)if(Si()!==o)if((e=Ro())!==o){for(n=[],u=fo,(s=Si())!==o&&(a=wi())!==o&&(i=Si())!==o&&(c=Ro())!==o?u=s=[s,a,i,c]:(fo=u,u=o);u!==o;)n.push(u),u=fo,(s=Si())!==o&&(a=wi())!==o&&(i=Si())!==o&&(c=Ro())!==o?u=s=[s,a,i,c]:(fo=u,u=o);n!==o&&(u=Si())!==o&&(s=Ai())!==o?(t=qi(e,n),r=t):(fo=r,r=o);}else fo=r,r=o;else fo=r,r=o;else fo=r,r=o;return r}())!==o&&Si()!==o?((i=function(){var r,t,e,n,u,s,a,i;if(r=fo,(t=Po())!==o){for(e=[],n=fo,(u=Si())!==o?((s=wi())===o&&(s=null),s!==o&&(a=Si())!==o&&(i=Po())!==o?n=u=[u,s,a,i]:(fo=n,n=o)):(fo=n,n=o);n!==o;)e.push(n),n=fo,(u=Si())!==o?((s=wi())===o&&(s=null),s!==o&&(a=Si())!==o&&(i=Po())!==o?n=u=[u,s,a,i]:(fo=n,n=o)):(fo=n,n=o);e!==o?(t=qi(t,e),r=t):(fo=r,r=o);}else fo=r,r=o;return r}())===o&&(i=null),i!==o&&Si()!==o?((c=function(){var t,e,n,u;t=fo,"ignore"===r.substr(fo,6).toLowerCase()?(e=r.substr(fo,6),fo+=6):(e=o,0===Co&&Ao(He));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o);return t}())===o&&(c=va()),c===o&&(c=null),c!==o&&Si()!==o?((l=wa())===o&&(l=null),l!==o&&Si()!==o?((f=Io())===o&&(f=null),f!==o?(v=e,b=n,d=u,C=a,p=i,w=c,E=l,h=f,(L=s)&&L.forEach(r=>tc.add(`create::${r.db}::${r.table}`)),e={tableList:Array.from(tc),columnList:Ji(ec),ast:{type:v[0].toLowerCase(),keyword:"table",temporary:b&&b[0].toLowerCase(),if_not_exists:d&&d[0].toLowerCase(),table:L,ignore_replace:w&&w[0].toLowerCase(),as:E&&E[0].toLowerCase(),query_expr:h&&h.ast,create_definitions:C,table_options:p}},t=e):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o);var v,b,d,L,C,p,w,E,h;t===o&&(t=fo,(e=aa())!==o&&Si()!==o?((n=ia())===o&&(n=null),n!==o&&Si()!==o&&Ea()!==o&&Si()!==o?((u=ca())===o&&(u=null),u!==o&&Si()!==o&&(s=Qo())!==o&&Si()!==o&&(a=function r(){var t,e;(t=function(){var r,t;r=fo,Ma()!==o&&Si()!==o&&(t=Qo())!==o?(r={type:"like",table:t}):(fo=r,r=o);return r}())===o&&(t=fo,hi()!==o&&Si()!==o&&(e=r())!==o&&Si()!==o&&Ai()!==o?((n=e).parentheses=!0,t=n):(fo=t,t=o));var n;return t}())!==o?(e=function(r,t,e,n,u){return n&&n.forEach(r=>tc.add(`create::${r.db}::${r.table}`)),{tableList:Array.from(tc),columnList:Ji(ec),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t[0].toLowerCase(),if_not_exists:e&&e[0].toLowerCase(),table:n,like:u}}}(e,n,u,s,a),t=e):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o));return t}())===o&&(t=function(){var t,e,n,u,s,a,i,c,l,f,v,b,d,L,C,p,w,E;t=fo,(e=aa())!==o&&Si()!==o?((n=Ci())===o&&(n=null),n!==o&&Si()!==o?("trigger"===r.substr(fo,7).toLowerCase()?(u=r.substr(fo,7),fo+=7):(u=o,0===Co&&Ao(W)),u!==o&&Si()!==o&&(s=ks())!==o&&Si()!==o?("before"===r.substr(fo,6).toLowerCase()?(a=r.substr(fo,6),fo+=6):(a=o,0===Co&&Ao(V)),a===o&&("after"===r.substr(fo,5).toLowerCase()?(a=r.substr(fo,5),fo+=5):(a=o,0===Co&&Ao(K)),a===o&&("instead of"===r.substr(fo,10).toLowerCase()?(a=r.substr(fo,10),fo+=10):(a=o,0===Co&&Ao(q)))),a!==o&&Si()!==o&&(i=function(){var r,t,e,n,u,s,a,i;if(r=fo,(t=Fo())!==o){for(e=[],n=fo,(u=Si())!==o&&(s=Fa())!==o&&(a=Si())!==o&&(i=Fo())!==o?n=u=[u,s,a,i]:(fo=n,n=o);n!==o;)e.push(n),n=fo,(u=Si())!==o&&(s=Fa())!==o&&(a=Si())!==o&&(i=Fo())!==o?n=u=[u,s,a,i]:(fo=n,n=o);e!==o?(t=qi(t,e),r=t):(fo=r,r=o);}else fo=r,r=o;return r}())!==o&&Si()!==o?("on"===r.substr(fo,2).toLowerCase()?(c=r.substr(fo,2),fo+=2):(c=o,0===Co&&Ao(Z)),c!==o&&Si()!==o&&(l=ns())!==o&&Si()!==o?(f=fo,(v=Ca())!==o&&(b=Si())!==o&&(d=ns())!==o?f=v=[v,b,d]:(fo=f,f=o),f===o&&(f=null),f!==o&&(v=Si())!==o?((b=function(){var t,e,n,u,s;t=fo,e=fo,"not"===r.substr(fo,3).toLowerCase()?(n=r.substr(fo,3),fo+=3):(n=o,0===Co&&Ao(rr));n===o&&(n=null);n!==o&&(u=Si())!==o?("deferrable"===r.substr(fo,10).toLowerCase()?(s=r.substr(fo,10),fo+=10):(s=o,0===Co&&Ao(tr)),s!==o?e=n=[n,u,s]:(fo=e,e=o)):(fo=e,e=o);e!==o&&(n=Si())!==o?("initially immediate"===r.substr(fo,19).toLowerCase()?(u=r.substr(fo,19),fo+=19):(u=o,0===Co&&Ao(er)),u===o&&("initially deferred"===r.substr(fo,18).toLowerCase()?(u=r.substr(fo,18),fo+=18):(u=o,0===Co&&Ao(nr))),u!==o?(i=u,e={keyword:(a=e)&&a[0]?a[0].toLowerCase()+" deferrable":"deferrable",args:i&&i.toLowerCase()},t=e):(fo=t,t=o)):(fo=t,t=o);var a,i;return t}())===o&&(b=null),b!==o&&(d=Si())!==o?((L=function(){var t,e,n,u;t=fo,"for"===r.substr(fo,3).toLowerCase()?(e=r.substr(fo,3),fo+=3):(e=o,0===Co&&Ao(ur));e!==o&&Si()!==o?("each"===r.substr(fo,4).toLowerCase()?(n=r.substr(fo,4),fo+=4):(n=o,0===Co&&Ao(or)),n===o&&(n=null),n!==o&&Si()!==o?("row"===r.substr(fo,3).toLowerCase()?(u=r.substr(fo,3),fo+=3):(u=o,0===Co&&Ao(sr)),u===o&&("statement"===r.substr(fo,9).toLowerCase()?(u=r.substr(fo,9),fo+=9):(u=o,0===Co&&Ao(ar))),u!==o?(s=e,i=u,e={keyword:(a=n)?`${s.toLowerCase()} ${a.toLowerCase()}`:s.toLowerCase(),args:i.toLowerCase()},t=e):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o);var s,a,i;return t}())===o&&(L=null),L!==o&&Si()!==o?((C=function(){var r,t;r=fo,Ha()!==o&&Si()!==o&&hi()!==o&&Si()!==o&&(t=As())!==o&&Si()!==o&&Ai()!==o?(r={type:"when",cond:t,parentheses:!0}):(fo=r,r=o);return r}())===o&&(C=null),C!==o&&Si()!==o?("execute"===r.substr(fo,7).toLowerCase()?(p=r.substr(fo,7),fo+=7):(p=o,0===Co&&Ao(z)),p!==o&&Si()!==o?("procedure"===r.substr(fo,9).toLowerCase()?(w=r.substr(fo,9),fo+=9):(w=o,0===Co&&Ao(J)),w!==o&&Si()!==o&&(E=Pi())!==o?(h=n,A=u,T=i,m=l,S=f,I=b,N=L,R=C,_=E,e={type:"create",constraint:s,location:(y=a)&&y.toLowerCase(),events:T,table:m,from:S&&S[2],deferrable:I,for_each:N,when:R,execute:{keyword:"execute procedure",expr:_},constraint_type:A&&A.toLowerCase(),keyword:A&&A.toLowerCase(),constraint_kw:h&&h.toLowerCase(),resource:"constraint"},t=e):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o);var h,A,y,T,m,S,I,N,R,_;return t}())===o&&(t=function(){var t,e,n,u,s,a,f,v,b,d,L,C,p,w;t=fo,(e=aa())!==o&&Si()!==o?("extension"===r.substr(fo,9).toLowerCase()?(n=r.substr(fo,9),fo+=9):(n=o,0===Co&&Ao(i)),n!==o&&Si()!==o?((u=ca())===o&&(u=null),u!==o&&Si()!==o?((s=ks())===o&&(s=Ws()),s!==o&&Si()!==o?((a=Sa())===o&&(a=null),a!==o&&Si()!==o?(f=fo,"schema"===r.substr(fo,6).toLowerCase()?(v=r.substr(fo,6),fo+=6):(v=o,0===Co&&Ao(c)),v!==o&&(b=Si())!==o&&(d=ks())!==o?f=v=[v,b,d]:(fo=f,f=o),f===o&&(f=Ws()),f===o&&(f=null),f!==o&&(v=Si())!==o?(b=fo,"version"===r.substr(fo,7).toLowerCase()?(d=r.substr(fo,7),fo+=7):(d=o,0===Co&&Ao(l)),d!==o&&(L=Si())!==o?((C=ks())===o&&(C=Ws()),C!==o?b=d=[d,L,C]:(fo=b,b=o)):(fo=b,b=o),b===o&&(b=null),b!==o&&(d=Si())!==o?(L=fo,(C=Ca())!==o&&(p=Si())!==o?((w=ks())===o&&(w=Ws()),w!==o?L=C=[C,p,w]:(fo=L,L=o)):(fo=L,L=o),L===o&&(L=null),L!==o?(e=function(r,t,e,n,u,o,s,a){return {type:"create",keyword:t.toLowerCase(),if_not_exists:e&&e[0].toLowerCase(),extension:Qi(n),with:u&&u[0].toLowerCase(),schema:Qi(o&&o[2].toLowerCase()),version:Qi(s&&s[2]),from:Qi(a&&a[2])}}(0,n,u,s,a,f,b,L),t=e):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o);return t}())===o&&(t=function(){var t,e,n,u,s,a,i,c,l,f,v,b,d,L,C,p,w,E;t=fo,(e=aa())!==o&&Si()!==o?((n=di())===o&&(n=null),n!==o&&Si()!==o&&(u=vi())!==o&&Si()!==o?((s=function(){var t,e,n,u;t=fo,"concurrently"===r.substr(fo,12).toLowerCase()?(e=r.substr(fo,12),fo+=12):(e=o,0===Co&&Ao(Hu));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="CONCURRENTLY"):(fo=t,t=o)):(fo=t,t=o);return t}())===o&&(s=null),s!==o&&Si()!==o?((a=xs())===o&&(a=null),a!==o&&Si()!==o&&(i=ha())!==o&&Si()!==o&&(c=ns())!==o&&Si()!==o?((l=Zo())===o&&(l=null),l!==o&&Si()!==o&&hi()!==o&&Si()!==o&&(f=function(){var r,t,e,n,u,s,a,i;if(r=fo,(t=No())!==o){for(e=[],n=fo,(u=Si())!==o&&(s=wi())!==o&&(a=Si())!==o&&(i=No())!==o?n=u=[u,s,a,i]:(fo=n,n=o);n!==o;)e.push(n),n=fo,(u=Si())!==o&&(s=wi())!==o&&(a=Si())!==o&&(i=No())!==o?n=u=[u,s,a,i]:(fo=n,n=o);e!==o?(t=qi(t,e),r=t):(fo=r,r=o);}else fo=r,r=o;return r}())!==o&&Si()!==o&&Ai()!==o&&Si()!==o?(v=fo,(b=Sa())!==o&&(d=Si())!==o&&(L=hi())!==o&&(C=Si())!==o&&(p=function(){var r,t,e,n,u,s,a,i;if(r=fo,(t=Jo())!==o){for(e=[],n=fo,(u=Si())!==o&&(s=wi())!==o&&(a=Si())!==o&&(i=Jo())!==o?n=u=[u,s,a,i]:(fo=n,n=o);n!==o;)e.push(n),n=fo,(u=Si())!==o&&(s=wi())!==o&&(a=Si())!==o&&(i=Jo())!==o?n=u=[u,s,a,i]:(fo=n,n=o);e!==o?(t=qi(t,e),r=t):(fo=r,r=o);}else fo=r,r=o;return r}())!==o&&(w=Si())!==o&&(E=Ai())!==o?v=b=[b,d,L,C,p,w,E]:(fo=v,v=o),v===o&&(v=null),v!==o&&(b=Si())!==o?(d=fo,(L=function(){var t,e,n,u;t=fo,"tablespace"===r.substr(fo,10).toLowerCase()?(e=r.substr(fo,10),fo+=10):(e=o,0===Co&&Ao(Ve));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="TABLESPACE"):(fo=t,t=o)):(fo=t,t=o);return t}())!==o&&(C=Si())!==o&&(p=ks())!==o?d=L=[L,C,p]:(fo=d,d=o),d===o&&(d=null),d!==o&&(L=Si())!==o?((C=os())===o&&(C=null),C!==o&&(p=Si())!==o?(h=e,A=n,y=u,T=s,m=a,S=i,I=c,N=l,R=f,_=v,g=d,O=C,e={tableList:Array.from(tc),columnList:Ji(ec),ast:{type:h[0].toLowerCase(),index_type:A&&A.toLowerCase(),keyword:y.toLowerCase(),concurrently:T&&T.toLowerCase(),index:m,on_kw:S[0].toLowerCase(),table:I,index_using:N,index_columns:R,with:_&&_[4],with_before_where:!0,tablespace:g&&{type:"origin",value:g[2]},where:O}},t=e):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o);var h,A,y,T,m,S,I,N,R,_,g,O;return t}());return t}())===o&&(t=function(){var r,t,e,n;r=fo,(t=ui())!==o&&Si()!==o?((e=Ea())===o&&(e=null),e!==o&&Si()!==o&&(n=Qo())!==o?(u=t,s=e,(a=n)&&a.forEach(r=>tc.add(`${u}::${r.db}::${r.table}`)),t={tableList:Array.from(tc),columnList:Ji(ec),ast:{type:u.toLowerCase(),keyword:s&&s.toLowerCase()||"table",name:a}},r=t):(fo=r,r=o)):(fo=r,r=o);var u,s,a;return r}())===o&&(t=function(){var r,t,e;r=fo,(t=ba())!==o&&Si()!==o&&Ea()!==o&&Si()!==o&&(e=function(){var r,t,e,n,u,s,a,i;if(r=fo,(t=qo())!==o){for(e=[],n=fo,(u=Si())!==o&&(s=wi())!==o&&(a=Si())!==o&&(i=qo())!==o?n=u=[u,s,a,i]:(fo=n,n=o);n!==o;)e.push(n),n=fo,(u=Si())!==o&&(s=wi())!==o&&(a=Si())!==o&&(i=qo())!==o?n=u=[u,s,a,i]:(fo=n,n=o);e!==o?(t=qi(t,e),r=t):(fo=r,r=o);}else fo=r,r=o;return r}())!==o?((n=e).forEach(r=>r.forEach(r=>r.table&&tc.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(tc),columnList:Ji(ec),ast:{type:"rename",table:n}},r=t):(fo=r,r=o);var n;return r}())===o&&(t=function(){var t,e,n;t=fo,(e=function(){var t,e,n,u;t=fo,"call"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(Un));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="CALL"):(fo=t,t=o)):(fo=t,t=o);return t}())!==o&&Si()!==o&&(n=Pi())!==o?(u=n,e={tableList:Array.from(tc),columnList:Ji(ec),ast:{type:"call",expr:u}},t=e):(fo=t,t=o);var u;return t}())===o&&(t=function(){var t,e,n;t=fo,(e=function(){var t,e,n,u;t=fo,"use"===r.substr(fo,3).toLowerCase()?(e=r.substr(fo,3),fo+=3):(e=o,0===Co&&Ao(Ne));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o);return t}())!==o&&Si()!==o&&(n=xs())!==o?(u=n,tc.add(`use::${u}::null`),e={tableList:Array.from(tc),columnList:Ji(ec),ast:{type:"use",db:u}},t=e):(fo=t,t=o);var u;return t}())===o&&(t=function(){var t,e,n,u;t=fo,(e=function(){var t,e,n,u;t=fo,"alter"===r.substr(fo,5).toLowerCase()?(e=r.substr(fo,5),fo+=5):(e=o,0===Co&&Ao(Re));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o);return t}())!==o&&Si()!==o&&Ea()!==o&&Si()!==o&&(n=Qo())!==o&&Si()!==o&&(u=function(){var r,t,e,n,u,s,a,i;if(r=fo,(t=Uo())!==o){for(e=[],n=fo,(u=Si())!==o&&(s=wi())!==o&&(a=Si())!==o&&(i=Uo())!==o?n=u=[u,s,a,i]:(fo=n,n=o);n!==o;)e.push(n),n=fo,(u=Si())!==o&&(s=wi())!==o&&(a=Si())!==o&&(i=Uo())!==o?n=u=[u,s,a,i]:(fo=n,n=o);e!==o?(t=qi(t,e),r=t):(fo=r,r=o);}else fo=r,r=o;return r}())!==o?(a=u,(s=n)&&s.length>0&&s.forEach(r=>tc.add(`alter::${r.db}::${r.table}`)),e={tableList:Array.from(tc),columnList:Ji(ec),ast:{type:"alter",table:s,expr:a}},t=e):(fo=t,t=o);var s,a;return t}())===o&&(t=function(){var t,e,n,u;t=fo,(e=pa())!==o&&Si()!==o?((n=function(){var t,e,n,u;t=fo,"global"===r.substr(fo,6).toLowerCase()?(e=r.substr(fo,6),fo+=6):(e=o,0===Co&&Ao(yu));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="GLOBAL"):(fo=t,t=o)):(fo=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=fo,"session"===r.substr(fo,7).toLowerCase()?(e=r.substr(fo,7),fo+=7):(e=o,0===Co&&Ao(Tu));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="SESSION"):(fo=t,t=o)):(fo=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=fo,"local"===r.substr(fo,5).toLowerCase()?(e=r.substr(fo,5),fo+=5):(e=o,0===Co&&Ao(mu));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="LOCAL"):(fo=t,t=o)):(fo=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=fo,"persist"===r.substr(fo,7).toLowerCase()?(e=r.substr(fo,7),fo+=7):(e=o,0===Co&&Ao(Su));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="PERSIST"):(fo=t,t=o)):(fo=t,t=o);return t}())===o&&(n=function(){var t,e,n,u;t=fo,"persist_only"===r.substr(fo,12).toLowerCase()?(e=r.substr(fo,12),fo+=12):(e=o,0===Co&&Ao(Iu));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="PERSIST_ONLY"):(fo=t,t=o)):(fo=t,t=o);return t}()),n===o&&(n=null),n!==o&&Si()!==o&&(u=xi())!==o?(s=n,(a=u).keyword=s,e={tableList:Array.from(tc),columnList:Ji(ec),ast:{type:"set",expr:a}},t=e):(fo=t,t=o)):(fo=t,t=o);var s,a;return t}())===o&&(t=function(){var t,e,n,u,s,a;t=fo,(e=function(){var t,e,n,u;t=fo,"lock"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(g));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o);return t}())!==o&&Si()!==o?((n=Ea())===o&&(n=null),n!==o&&Si()!==o&&(u=Qo())!==o&&Si()!==o?((s=function(){var t,e,n,u;t=fo,"in"===r.substr(fo,2).toLowerCase()?(e=r.substr(fo,2),fo+=2):(e=o,0===Co&&Ao(yr));e!==o&&Si()!==o?("access share"===r.substr(fo,12).toLowerCase()?(n=r.substr(fo,12),fo+=12):(n=o,0===Co&&Ao(Tr)),n===o&&("row share"===r.substr(fo,9).toLowerCase()?(n=r.substr(fo,9),fo+=9):(n=o,0===Co&&Ao(mr)),n===o&&("row exclusive"===r.substr(fo,13).toLowerCase()?(n=r.substr(fo,13),fo+=13):(n=o,0===Co&&Ao(Sr)),n===o&&("share update exclusive"===r.substr(fo,22).toLowerCase()?(n=r.substr(fo,22),fo+=22):(n=o,0===Co&&Ao(Ir)),n===o&&("share row exclusive"===r.substr(fo,19).toLowerCase()?(n=r.substr(fo,19),fo+=19):(n=o,0===Co&&Ao(Nr)),n===o&&("exclusive"===r.substr(fo,9).toLowerCase()?(n=r.substr(fo,9),fo+=9):(n=o,0===Co&&Ao(x)),n===o&&("access exclusive"===r.substr(fo,16).toLowerCase()?(n=r.substr(fo,16),fo+=16):(n=o,0===Co&&Ao(Rr)),n===o&&("share"===r.substr(fo,5).toLowerCase()?(n=r.substr(fo,5),fo+=5):(n=o,0===Co&&Ao(_r))))))))),n!==o&&Si()!==o?("mode"===r.substr(fo,4).toLowerCase()?(u=r.substr(fo,4),fo+=4):(u=o,0===Co&&Ao(gr)),u!==o?(e={mode:`in ${n.toLowerCase()} mode`},t=e):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o);return t}())===o&&(s=null),s!==o&&Si()!==o?("nowait"===r.substr(fo,6).toLowerCase()?(a=r.substr(fo,6),fo+=6):(a=o,0===Co&&Ao(Or)),a===o&&(a=null),a!==o?(i=n,l=s,f=a,(c=u)&&c.forEach(r=>tc.add(`lock::${r.db}::${r.table}`)),e={tableList:Array.from(tc),columnList:Ji(ec),ast:{type:"lock",keyword:i&&i.toLowerCase(),tables:c.map(r=>({table:r})),lock_mode:l,nowait:f}},t=e):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o);var i,c,l,f;return t}()),t}function So(){var r;return (r=Io())===o&&(r=function(){var r,t,e,n,u,s;r=fo,(t=sa())!==o&&Si()!==o&&(e=Qo())!==o&&Si()!==o&&pa()!==o&&Si()!==o&&(n=function(){var r,t,e,n,u,s,a,i;if(r=fo,(t=fs())!==o){for(e=[],n=fo,(u=Si())!==o&&(s=wi())!==o&&(a=Si())!==o&&(i=fs())!==o?n=u=[u,s,a,i]:(fo=n,n=o);n!==o;)e.push(n),n=fo,(u=Si())!==o&&(s=wi())!==o&&(a=Si())!==o&&(i=fs())!==o?n=u=[u,s,a,i]:(fo=n,n=o);e!==o?(t=qi(t,e),r=t):(fo=r,r=o);}else fo=r,r=o;return r}())!==o&&Si()!==o?((u=os())===o&&(u=null),u!==o&&Si()!==o?((s=vs())===o&&(s=null),s!==o?(i=n,c=u,l=s,(a=e)&&a.forEach(r=>{const{db:t,as:e,table:n}=r;tc.add(`update::${t}::${n}`);}),i&&i.forEach(r=>ec.add(`update::${r.table}::${r.column}`)),t={tableList:Array.from(tc),columnList:Ji(ec),ast:{type:"update",table:a,set:i,where:c,returning:l}},r=t):(fo=r,r=o)):(fo=r,r=o)):(fo=r,r=o);var a,i,c,l;return r}())===o&&(r=function(){var r,t,e,n,u,s,a,i;r=fo,(t=Ls())!==o&&Si()!==o?((e=La())===o&&(e=null),e!==o&&Si()!==o&&(n=ns())!==o&&Si()!==o?((u=ds())===o&&(u=null),u!==o&&Si()!==o&&hi()!==o&&Si()!==o&&(s=function(){var r,t,e,n,u,s,a,i;if(r=fo,(t=Ds())!==o){for(e=[],n=fo,(u=Si())!==o&&(s=wi())!==o&&(a=Si())!==o&&(i=Ds())!==o?n=u=[u,s,a,i]:(fo=n,n=o);n!==o;)e.push(n),n=fo,(u=Si())!==o&&(s=wi())!==o&&(a=Si())!==o&&(i=Ds())!==o?n=u=[u,s,a,i]:(fo=n,n=o);e!==o?(t=Mr(t,e),r=t):(fo=r,r=o);}else fo=r,r=o;return r}())!==o&&Si()!==o&&Ai()!==o&&Si()!==o&&(a=bs())!==o&&Si()!==o?((i=vs())===o&&(i=null),i!==o?(t=function(r,t,e,n,u,o){if(t&&(tc.add(`insert::${t.db}::${t.table}`),t.as=null),n){let r=t&&t.table||null;n.forEach(t=>ec.add(`insert::${r}::${t}`));}return {tableList:Array.from(tc),columnList:Ji(ec),ast:{type:r,table:[t],columns:n,values:u,partition:e,returning:o}}}(t,n,u,s,a,i),r=t):(fo=r,r=o)):(fo=r,r=o)):(fo=r,r=o)):(fo=r,r=o);return r}())===o&&(r=function(){var r,t,e,n,u,s;r=fo,(t=Ls())!==o&&Si()!==o&&La()!==o&&Si()!==o&&(e=ns())!==o&&Si()!==o?((n=ds())===o&&(n=null),n!==o&&Si()!==o&&(u=bs())!==o&&Si()!==o?((s=vs())===o&&(s=null),s!==o?(a=t,c=n,l=u,f=s,(i=e)&&(tc.add(`insert::${i.db}::${i.table}`),ec.add(`insert::${i.table}::(.*)`),i.as=null),t={tableList:Array.from(tc),columnList:Ji(ec),ast:{type:a,table:[i],columns:null,values:l,partition:c,returning:f}},r=t):(fo=r,r=o)):(fo=r,r=o)):(fo=r,r=o);var a,i,c,l,f;return r}())===o&&(r=function(){var r,t,e,n,u;r=fo,(t=la())!==o&&Si()!==o?((e=Qo())===o&&(e=null),e!==o&&Si()!==o&&(n=Ko())!==o&&Si()!==o?((u=os())===o&&(u=null),u!==o?(t=function(r,t,e){if(t&&t.forEach(r=>{r.table&&tc.add(`delete::${r.db}::${r.table}`),ec.add(`delete::${r.table}::(.*)`);}),null===r&&1===t.length){const e=t[0];r=[{db:e.db,table:e.table,as:e.as,addition:!0}];}return {tableList:Array.from(tc),columnList:Ji(ec),ast:{type:"delete",table:r,from:t,where:e}}}(e,n,u),r=t):(fo=r,r=o)):(fo=r,r=o)):(fo=r,r=o);return r}())===o&&(r=mo())===o&&(r=function(){var r,t;r=[],t=Ui();for(;t!==o;)r.push(t),t=Ui();return r}()),r}function Io(){var r,t,e,n,u,s,a,i,c,l;if(r=fo,(t=Ho())!==o){for(e=[],n=fo,(u=Si())!==o&&(s=Ta())!==o&&(a=Si())!==o?((i=_a())===o&&(i=null),i!==o&&(c=Si())!==o&&(l=Ho())!==o?n=u=[u,s,a,i,c,l]:(fo=n,n=o)):(fo=n,n=o);n!==o;)e.push(n),n=fo,(u=Si())!==o&&(s=Ta())!==o&&(a=Si())!==o?((i=_a())===o&&(i=null),i!==o&&(c=Si())!==o&&(l=Ho())!==o?n=u=[u,s,a,i,c,l]:(fo=n,n=o)):(fo=n,n=o);e!==o&&(n=Si())!==o?((u=as())===o&&(u=null),u!==o&&(s=Si())!==o?((a=ls())===o&&(a=null),a!==o?(r=t=function(r,t,e,n){let u=r;for(let r=0;r<t.length;r++)u._next=t[r][5],u.union=t[r][3]?"union all":"union",u=u._next;return e&&(r._orderby=e),n&&(r._limit=n),{tableList:Array.from(tc),columnList:Ji(ec),ast:r}}(t,e,u,a)):(fo=r,r=o)):(fo=r,r=o)):(fo=r,r=o);}else fo=r,r=o;return r}function No(){var t,e,n,u,s,a,i,c,l,f,L;return t=fo,(e=As())!==o&&Si()!==o?((n=go())===o&&(n=null),n!==o&&Si()!==o?((u=xs())===o&&(u=null),u!==o&&Si()!==o?((s=Na())===o&&(s=Ra()),s===o&&(s=null),s!==o&&Si()!==o?(a=fo,"nulls"===r.substr(fo,5).toLowerCase()?(i=r.substr(fo,5),fo+=5):(i=o,0===Co&&Ao(v)),i!==o&&(c=Si())!==o?("first"===r.substr(fo,5).toLowerCase()?(l=r.substr(fo,5),fo+=5):(l=o,0===Co&&Ao(b)),l===o&&("last"===r.substr(fo,4).toLowerCase()?(l=r.substr(fo,4),fo+=4):(l=o,0===Co&&Ao(d))),l!==o?a=i=[i,c,l]:(fo=a,a=o)):(fo=a,a=o),a===o&&(a=null),a!==o?(L=a,t=e={column:e,collate:n,opclass:u,order:(f=s)&&f.toLowerCase()||"asc",nulls:L&&`${L[0].toLowerCase()} ${L[2].toLowerCase()}`}):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o),t}function Ro(){var t;return (t=_o())===o&&(t=xo())===o&&(t=Mo())===o&&(t=function(){var t;(t=function(){var t,e,n,u,s,a;t=fo,(e=Do())===o&&(e=null);e!==o&&Si()!==o?("primary key"===r.substr(fo,11).toLowerCase()?(n=r.substr(fo,11),fo+=11):(n=o,0===Co&&Ao(M)),n!==o&&Si()!==o?((u=Zo())===o&&(u=null),u!==o&&Si()!==o&&(s=Yo())!==o&&Si()!==o?((a=zo())===o&&(a=null),a!==o?(c=n,l=u,f=s,v=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c.toLowerCase(),keyword:i&&i.keyword,index_type:l,resource:"constraint",index_options:v},t=e):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o);var i,c,l,f,v;return t}())===o&&(t=function(){var r,t,e,n,u,s,a,i;r=fo,(t=Do())===o&&(t=null);t!==o&&Si()!==o&&(e=di())!==o&&Si()!==o?((n=vi())===o&&(n=bi()),n===o&&(n=null),n!==o&&Si()!==o?((u=Ds())===o&&(u=null),u!==o&&Si()!==o?((s=Zo())===o&&(s=null),s!==o&&Si()!==o&&(a=Yo())!==o&&Si()!==o?((i=zo())===o&&(i=null),i!==o?(l=e,f=n,v=u,b=s,d=a,L=i,t={constraint:(c=t)&&c.constraint,definition:d,constraint_type:f&&`${l.toLowerCase()} ${f.toLowerCase()}`||l.toLowerCase(),keyword:c&&c.keyword,index_type:b,index:v,resource:"constraint",index_options:L},r=t):(fo=r,r=o)):(fo=r,r=o)):(fo=r,r=o)):(fo=r,r=o)):(fo=r,r=o);var c,l,f,v,b,d,L;return r}())===o&&(t=function(){var t,e,n,u,s,a;t=fo,(e=Do())===o&&(e=null);e!==o&&Si()!==o?("foreign key"===r.substr(fo,11).toLowerCase()?(n=r.substr(fo,11),fo+=11):(n=o,0===Co&&Ao(D)),n!==o&&Si()!==o?((u=Ds())===o&&(u=null),u!==o&&Si()!==o&&(s=Yo())!==o&&Si()!==o?((a=ko())===o&&(a=null),a!==o?(c=n,l=u,f=s,v=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c,keyword:i&&i.keyword,index:l,resource:"constraint",reference_definition:v},t=e):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o);var i,c,l,f,v;return t}());return t}()),t}function _o(){var t,e,n,u,s,a,i,c,l,f,v,b,d,I,N,R,_,g,O,U,x,M,D;return t=fo,(e=Us())!==o&&Si()!==o&&(n=Yi())!==o&&Si()!==o?((u=function(){var r,t,e;r=fo,(t=Xs())===o&&(t=Bs());t!==o&&Si()!==o?((e=Oo())===o&&(e=null),e!==o?(u=e,(n=t)&&!n.value&&(n.value="null"),r=t={default_val:u,nullable:n}):(fo=r,r=o)):(fo=r,r=o);var n,u;r===o&&(r=fo,(t=Oo())!==o&&Si()!==o?((e=Xs())===o&&(e=Bs()),e===o&&(e=null),e!==o?(t=function(r,t){return t&&!t.value&&(t.value="null"),{default_val:r,nullable:t}}(t,e),r=t):(fo=r,r=o)):(fo=r,r=o));return r}())===o&&(u=null),u!==o&&Si()!==o?("auto_increment"===r.substr(fo,14).toLowerCase()?(s=r.substr(fo,14),fo+=14):(s=o,0===Co&&Ao(L)),s===o&&(s=null),s!==o&&Si()!==o?("unique"===r.substr(fo,6).toLowerCase()?(a=r.substr(fo,6),fo+=6):(a=o,0===Co&&Ao(C)),a===o&&(a=fo,"primary"===r.substr(fo,7).toLowerCase()?(i=r.substr(fo,7),fo+=7):(i=o,0===Co&&Ao(p)),i!==o&&(c=Si())!==o?("key"===r.substr(fo,3).toLowerCase()?(l=r.substr(fo,3),fo+=3):(l=o,0===Co&&Ao(w)),l!==o?a=i=[i,c,l]:(fo=a,a=o)):(fo=a,a=o)),a===o&&(a=null),a!==o&&(i=Si())!==o?((c=Ri())===o&&(c=null),c!==o&&(l=Si())!==o?((f=go())===o&&(f=null),f!==o&&Si()!==o?((v=function(){var t,e,n;t=fo,"column_format"===r.substr(fo,13).toLowerCase()?(e=r.substr(fo,13),fo+=13):(e=o,0===Co&&Ao(E));e!==o&&Si()!==o?("fixed"===r.substr(fo,5).toLowerCase()?(n=r.substr(fo,5),fo+=5):(n=o,0===Co&&Ao(h)),n===o&&("dynamic"===r.substr(fo,7).toLowerCase()?(n=r.substr(fo,7),fo+=7):(n=o,0===Co&&Ao(A)),n===o&&("default"===r.substr(fo,7).toLowerCase()?(n=r.substr(fo,7),fo+=7):(n=o,0===Co&&Ao(y)))),n!==o?(e=function(r,t){return {type:"column_format",value:t.toLowerCase()}}(0,n),t=e):(fo=t,t=o)):(fo=t,t=o);return t}())===o&&(v=null),v!==o&&Si()!==o?((b=function(){var t,e,n;t=fo,"storage"===r.substr(fo,7).toLowerCase()?(e=r.substr(fo,7),fo+=7):(e=o,0===Co&&Ao(T));e!==o&&Si()!==o?("disk"===r.substr(fo,4).toLowerCase()?(n=r.substr(fo,4),fo+=4):(n=o,0===Co&&Ao(m)),n===o&&("memory"===r.substr(fo,6).toLowerCase()?(n=r.substr(fo,6),fo+=6):(n=o,0===Co&&Ao(S))),n!==o?(e={type:"storage",value:n.toLowerCase()},t=e):(fo=t,t=o)):(fo=t,t=o);return t}())===o&&(b=null),b!==o&&Si()!==o?((d=ko())===o&&(d=null),d!==o?(I=e,N=n,R=u,_=s,g=a,O=c,U=f,x=v,M=b,D=d,ec.add(`create::${I.table}::${I.column}`),t=e={column:I,definition:N,nullable:R&&R.nullable,default_val:R&&R.default_val,auto_increment:_&&_.toLowerCase(),unique_or_primary:Array.isArray(g)?`${g[0].toLowerCase()} ${g[2].toLowerCase()}`:g,comment:O,collate:U,column_format:x,storage:M,reference_definition:D,resource:"column"}):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o),t}function go(){var t,e;return t=fo,function(){var t,e,n,u;t=fo,"collate"===r.substr(fo,7).toLowerCase()?(e=r.substr(fo,7),fo+=7):(e=o,0===Co&&Ao(Lr));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="COLLATE"):(fo=t,t=o)):(fo=t,t=o);return t}()!==o&&Si()!==o&&(e=xs())!==o?(t={type:"collate",value:e}):(fo=t,t=o),t}function Oo(){var r,t;return r=fo,na()!==o&&Si()!==o?((t=Ys())===o&&(t=As()),t!==o?(r={type:"default",value:t}):(fo=r,r=o)):(fo=r,r=o),r}function Uo(){var t;return (t=function(){var r,t,e,n;r=fo,(t=li())!==o&&Si()!==o?((e=fi())===o&&(e=null),e!==o&&Si()!==o&&(n=_o())!==o?(u=e,s=n,t={action:"add",...s,keyword:u,resource:"column",type:"alter"},r=t):(fo=r,r=o)):(fo=r,r=o);var u,s;return r}())===o&&(t=function(){var r,t,e;r=fo,oa()!==o&&Si()!==o?((t=fi())===o&&(t=null),t!==o&&Si()!==o&&(e=Us())!==o?(r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(fo=r,r=o)):(fo=r,r=o);return r}())===o&&(t=function(){var r,t,e;r=fo,(t=li())!==o&&Si()!==o&&(e=xo())!==o?(n=e,t={action:"add",type:"alter",...n},r=t):(fo=r,r=o);var n;return r}())===o&&(t=function(){var r,t,e;r=fo,(t=li())!==o&&Si()!==o&&(e=Mo())!==o?(n=e,t={action:"add",type:"alter",...n},r=t):(fo=r,r=o);var n;return r}())===o&&(t=function(){var r,t,e,n;r=fo,(t=ba())!==o&&Si()!==o?((e=ua())===o&&(e=wa()),e===o&&(e=null),e!==o&&Si()!==o&&(n=xs())!==o?(s=n,t={action:"rename",type:"alter",resource:"table",keyword:(u=e)&&u[0].toLowerCase(),table:s},r=t):(fo=r,r=o)):(fo=r,r=o);var u,s;return r}())===o&&(t=function(){var t,e,n;t=fo,"algorithm"===r.substr(fo,9).toLowerCase()?(e=r.substr(fo,9),fo+=9):(e=o,0===Co&&Ao(I));e!==o&&Si()!==o&&ci()!==o&&Si()!==o?("default"===r.substr(fo,7).toLowerCase()?(n=r.substr(fo,7),fo+=7):(n=o,0===Co&&Ao(y)),n===o&&("instant"===r.substr(fo,7).toLowerCase()?(n=r.substr(fo,7),fo+=7):(n=o,0===Co&&Ao(N)),n===o&&("inplace"===r.substr(fo,7).toLowerCase()?(n=r.substr(fo,7),fo+=7):(n=o,0===Co&&Ao(R)),n===o&&("copy"===r.substr(fo,4).toLowerCase()?(n=r.substr(fo,4),fo+=4):(n=o,0===Co&&Ao(_))))),n!==o?(t=e={type:"alter",keyword:"algorithm",resource:"algorithm",algorithm:n}):(fo=t,t=o)):(fo=t,t=o);return t}())===o&&(t=function(){var t,e,n;t=fo,"lock"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(g));e!==o&&Si()!==o&&ci()!==o&&Si()!==o?("default"===r.substr(fo,7).toLowerCase()?(n=r.substr(fo,7),fo+=7):(n=o,0===Co&&Ao(y)),n===o&&("none"===r.substr(fo,4).toLowerCase()?(n=r.substr(fo,4),fo+=4):(n=o,0===Co&&Ao(O)),n===o&&("shared"===r.substr(fo,6).toLowerCase()?(n=r.substr(fo,6),fo+=6):(n=o,0===Co&&Ao(U)),n===o&&("exclusive"===r.substr(fo,9).toLowerCase()?(n=r.substr(fo,9),fo+=9):(n=o,0===Co&&Ao(x))))),n!==o?(t=e={type:"alter",keyword:"lock",resource:"lock",lock:n}):(fo=t,t=o)):(fo=t,t=o);return t}()),t}function xo(){var r,t,e,n,u,s,a,i;return r=fo,(t=vi())===o&&(t=bi()),t!==o&&Si()!==o?((e=Ds())===o&&(e=null),e!==o&&Si()!==o?((n=Zo())===o&&(n=null),n!==o&&Si()!==o&&(u=Yo())!==o&&Si()!==o?((s=zo())===o&&(s=null),s!==o&&Si()!==o?(a=n,i=s,r=t={index:e,definition:u,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i}):(fo=r,r=o)):(fo=r,r=o)):(fo=r,r=o)):(fo=r,r=o),r}function Mo(){var t,e,n,u,s,a,i,c,l;return t=fo,(e=function(){var t,e,n,u;t=fo,"fulltext"===r.substr(fo,8).toLowerCase()?(e=r.substr(fo,8),fo+=8):(e=o,0===Co&&Ao(ku));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="FULLTEXT"):(fo=t,t=o)):(fo=t,t=o);return t}())===o&&(e=function(){var t,e,n,u;t=fo,"spatial"===r.substr(fo,7).toLowerCase()?(e=r.substr(fo,7),fo+=7):(e=o,0===Co&&Ao($u));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="SPATIAL"):(fo=t,t=o)):(fo=t,t=o);return t}()),e!==o&&Si()!==o?((n=vi())===o&&(n=bi()),n===o&&(n=null),n!==o&&Si()!==o?((u=Ds())===o&&(u=null),u!==o&&Si()!==o&&(s=Yo())!==o&&Si()!==o?((a=zo())===o&&(a=null),a!==o&&Si()!==o?(i=e,l=a,t=e={index:u,definition:s,keyword:(c=n)&&`${i.toLowerCase()} ${c.toLowerCase()}`||i.toLowerCase(),index_options:l,resource:"index"}):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o),t}function Do(){var r,t,e,n;return r=fo,(t=Ci())!==o&&Si()!==o?((e=xs())===o&&(e=null),e!==o?(n=e,r=t={keyword:t.toLowerCase(),constraint:n}):(fo=r,r=o)):(fo=r,r=o),r}function ko(){var t,e,n,u,s,a,i,c,l,f;return t=fo,(e=function(){var t,e,n,u;t=fo,"references"===r.substr(fo,10).toLowerCase()?(e=r.substr(fo,10),fo+=10):(e=o,0===Co&&Ao(Gu));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="REFERENCES"):(fo=t,t=o)):(fo=t,t=o);return t}())!==o&&Si()!==o&&(n=Qo())!==o&&Si()!==o&&(u=Yo())!==o&&Si()!==o?("match full"===r.substr(fo,10).toLowerCase()?(s=r.substr(fo,10),fo+=10):(s=o,0===Co&&Ao(k)),s===o&&("match partial"===r.substr(fo,13).toLowerCase()?(s=r.substr(fo,13),fo+=13):(s=o,0===Co&&Ao($)),s===o&&("match simple"===r.substr(fo,12).toLowerCase()?(s=r.substr(fo,12),fo+=12):(s=o,0===Co&&Ao(F)))),s===o&&(s=null),s!==o&&Si()!==o?((a=$o())===o&&(a=null),a!==o&&Si()!==o?((i=$o())===o&&(i=null),i!==o?(c=s,l=a,f=i,t=e={definition:u,table:n,keyword:e.toLowerCase(),match:c&&c.toLowerCase(),on_delete:l,on_update:f}):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o),t}function $o(){var t,e,n,u;return t=fo,"on delete"===r.substr(fo,9).toLowerCase()?(e=r.substr(fo,9),fo+=9):(e=o,0===Co&&Ao(P)),e===o&&("on update"===r.substr(fo,9).toLowerCase()?(e=r.substr(fo,9),fo+=9):(e=o,0===Co&&Ao(H))),e!==o&&Si()!==o&&(n=function(){var t,e;t=fo,"restrict"===r.substr(fo,8).toLowerCase()?(e=r.substr(fo,8),fo+=8):(e=o,0===Co&&Ao(G));e===o&&("cascade"===r.substr(fo,7).toLowerCase()?(e=r.substr(fo,7),fo+=7):(e=o,0===Co&&Ao(j)),e===o&&("set null"===r.substr(fo,8).toLowerCase()?(e=r.substr(fo,8),fo+=8):(e=o,0===Co&&Ao(Y)),e===o&&("no action"===r.substr(fo,9).toLowerCase()?(e=r.substr(fo,9),fo+=9):(e=o,0===Co&&Ao(B)),e===o&&("set default"===r.substr(fo,11).toLowerCase()?(e=r.substr(fo,11),fo+=11):(e=o,0===Co&&Ao(X))))));e!==o&&(e=e.toLowerCase());return t=e}())!==o?(u=n,t=e={type:e.toLowerCase(),value:u}):(fo=t,t=o),t}function Fo(){var t,e,n,u,s,a,i;return t=fo,(e=fa())===o&&(e=la())===o&&(e=ui()),e!==o&&(i=e,e={keyword:Array.isArray(i)?i[0].toLowerCase():i.toLowerCase()}),(t=e)===o&&(t=fo,(e=sa())!==o&&Si()!==o?(n=fo,"of"===r.substr(fo,2).toLowerCase()?(u=r.substr(fo,2),fo+=2):(u=o,0===Co&&Ao(Q)),u!==o&&(s=Si())!==o&&(a=ss())!==o?n=u=[u,s,a]:(fo=n,n=o),n===o&&(n=null),n!==o?(t=e=function(r,t){return {keyword:r&&r[0]&&r[0].toLowerCase(),args:t&&{keyword:t[0],columns:t[2]}||null}}(e,n)):(fo=t,t=o)):(fo=t,t=o)),t}function Po(){var t,e,n,u,s,a,i,c,l;return t=fo,"auto_increment"===r.substr(fo,14).toLowerCase()?(e=r.substr(fo,14),fo+=14):(e=o,0===Co&&Ao(L)),e===o&&("avg_row_length"===r.substr(fo,14).toLowerCase()?(e=r.substr(fo,14),fo+=14):(e=o,0===Co&&Ao(ir)),e===o&&("key_block_size"===r.substr(fo,14).toLowerCase()?(e=r.substr(fo,14),fo+=14):(e=o,0===Co&&Ao(cr)),e===o&&("max_rows"===r.substr(fo,8).toLowerCase()?(e=r.substr(fo,8),fo+=8):(e=o,0===Co&&Ao(lr)),e===o&&("min_rows"===r.substr(fo,8).toLowerCase()?(e=r.substr(fo,8),fo+=8):(e=o,0===Co&&Ao(fr)),e===o&&("stats_sample_pages"===r.substr(fo,18).toLowerCase()?(e=r.substr(fo,18),fo+=18):(e=o,0===Co&&Ao(vr))))))),e!==o&&Si()!==o?((n=ci())===o&&(n=null),n!==o&&Si()!==o&&(u=Zs())!==o?(c=n,l=u,t=e={keyword:e.toLowerCase(),symbol:c,value:l.value}):(fo=t,t=o)):(fo=t,t=o),t===o&&(t=fo,(e=na())===o&&(e=null),e!==o&&Si()!==o?("character set"===r.substr(fo,13).toLowerCase()?(n=r.substr(fo,13),fo+=13):(n=o,0===Co&&Ao(br)),n===o&&("charset"===r.substr(fo,7).toLowerCase()?(n=r.substr(fo,7),fo+=7):(n=o,0===Co&&Ao(dr)),n===o&&("collate"===r.substr(fo,7).toLowerCase()?(n=r.substr(fo,7),fo+=7):(n=o,0===Co&&Ao(Lr)))),n!==o&&Si()!==o?((u=ci())===o&&(u=null),u!==o&&(s=Si())!==o&&(a=ks())!==o?(t=e=function(r,t,e,n){return {keyword:r&&`${r[0].toLowerCase()} ${t.toLowerCase()}`||t.toLowerCase(),symbol:e,value:n}}(e,n,u,a)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o),t===o&&(t=fo,(e=Li())===o&&("connection"===r.substr(fo,10).toLowerCase()?(e=r.substr(fo,10),fo+=10):(e=o,0===Co&&Ao(Cr))),e!==o&&Si()!==o?((n=ci())===o&&(n=null),n!==o&&Si()!==o&&(u=Ws())!==o?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,u)):(fo=t,t=o)):(fo=t,t=o),t===o&&(t=fo,"compression"===r.substr(fo,11).toLowerCase()?(e=r.substr(fo,11),fo+=11):(e=o,0===Co&&Ao(pr)),e!==o&&Si()!==o?((n=ci())===o&&(n=null),n!==o&&Si()!==o?(u=fo,39===r.charCodeAt(fo)?(s="'",fo++):(s=o,0===Co&&Ao(wr)),s!==o?("zlib"===r.substr(fo,4).toLowerCase()?(a=r.substr(fo,4),fo+=4):(a=o,0===Co&&Ao(Er)),a===o&&("lz4"===r.substr(fo,3).toLowerCase()?(a=r.substr(fo,3),fo+=3):(a=o,0===Co&&Ao(hr)),a===o&&("none"===r.substr(fo,4).toLowerCase()?(a=r.substr(fo,4),fo+=4):(a=o,0===Co&&Ao(O)))),a!==o?(39===r.charCodeAt(fo)?(i="'",fo++):(i=o,0===Co&&Ao(wr)),i!==o?u=s=[s,a,i]:(fo=u,u=o)):(fo=u,u=o)):(fo=u,u=o),u!==o?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,u)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o),t===o&&(t=fo,"engine"===r.substr(fo,6).toLowerCase()?(e=r.substr(fo,6),fo+=6):(e=o,0===Co&&Ao(Ar)),e!==o&&Si()!==o?((n=ci())===o&&(n=null),n!==o&&Si()!==o&&(u=ks())!==o?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}}(e,n,u)):(fo=t,t=o)):(fo=t,t=o))))),t}function Ho(){var t,e,n,u,s,a,i;return (t=Bo())===o&&(t=fo,e=fo,40===r.charCodeAt(fo)?(n="(",fo++):(n=o,0===Co&&Ao(Ur)),n!==o&&(u=Si())!==o&&(s=Ho())!==o&&(a=Si())!==o?(41===r.charCodeAt(fo)?(i=")",fo++):(i=o,0===Co&&Ao(xr)),i!==o?e=n=[n,u,s,a,i]:(fo=e,e=o)):(fo=e,e=o),e!==o&&(e={...e[2],parentheses_symbol:!0}),t=e),t}function Go(){var t,e,n,u,s,a,i,c,l;if(t=fo,Sa()!==o)if(Si()!==o)if((e=jo())!==o){for(n=[],u=fo,(s=Si())!==o&&(a=wi())!==o&&(i=Si())!==o&&(c=jo())!==o?u=s=[s,a,i,c]:(fo=u,u=o);u!==o;)n.push(u),u=fo,(s=Si())!==o&&(a=wi())!==o&&(i=Si())!==o&&(c=jo())!==o?u=s=[s,a,i,c]:(fo=u,u=o);n!==o?(t=qi(e,n)):(fo=t,t=o);}else fo=t,t=o;else fo=t,t=o;else fo=t,t=o;return t===o&&(t=fo,Si()!==o&&Sa()!==o&&(e=Si())!==o&&(n=function(){var t,e,n,u;t=fo,"RECURSIVE"===r.substr(fo,9)?(e="RECURSIVE",fo+=9):(e=o,0===Co&&Ao(ke));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o);return t}())!==o&&(u=Si())!==o&&(s=jo())!==o?((l=s).recursive=!0,t=[l]):(fo=t,t=o)),t}function jo(){var r,t,e,n;return r=fo,(t=ks())!==o&&Si()!==o?((e=Yo())===o&&(e=null),e!==o&&Si()!==o&&wa()!==o&&Si()!==o&&hi()!==o&&Si()!==o&&(n=Io())!==o&&Si()!==o&&Ai()!==o?(r=t={name:t,stmt:n,columns:e}):(fo=r,r=o)):(fo=r,r=o),r}function Yo(){var r,t,e,n,u,s,a,i;if(r=fo,hi()!==o)if(Si()!==o)if((t=Ds())!==o){for(e=[],n=fo,(u=Si())!==o&&(s=wi())!==o&&(a=Si())!==o&&(i=Ds())!==o?n=u=[u,s,a,i]:(fo=n,n=o);n!==o;)e.push(n),n=fo,(u=Si())!==o&&(s=wi())!==o&&(a=Si())!==o&&(i=Ds())!==o?n=u=[u,s,a,i]:(fo=n,n=o);e!==o&&(n=Si())!==o&&(u=Ai())!==o?(r=Mr(t,e)):(fo=r,r=o);}else fo=r,r=o;else fo=r,r=o;else fo=r,r=o;return r}function Bo(){var t,e,n,u,s,a,i,c,l,f,v;return t=fo,Si()!==o?((e=Go())===o&&(e=null),e!==o&&Si()!==o&&function(){var t,e,n,u;t=fo,"select"===r.substr(fo,6).toLowerCase()?(e=r.substr(fo,6),fo+=6):(e=o,0===Co&&Ao(_e));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o);return t}()!==o&&Si()!==o?((n=function(){var r,t,e,n,u,s;if(r=fo,(t=Xo())!==o){for(e=[],n=fo,(u=Si())!==o&&(s=Xo())!==o?n=u=[u,s]:(fo=n,n=o);n!==o;)e.push(n),n=fo,(u=Si())!==o&&(s=Xo())!==o?n=u=[u,s]:(fo=n,n=o);e!==o?(t=function(r,t){const e=[r];for(let r=0,n=t.length;r<n;++r)e.push(t[r][1]);return e}(t,e),r=t):(fo=r,r=o);}else fo=r,r=o;return r}())===o&&(n=null),n!==o&&Si()!==o?((u=ga())===o&&(u=null),u!==o&&Si()!==o&&(s=function(){var r,t,e,n,u,s,a,i;r=fo,(t=_a())===o&&(t=fo,(e=Ei())!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o),t===o&&(t=Ei()));if(t!==o){for(e=[],n=fo,(u=Si())!==o&&(s=wi())!==o&&(a=Si())!==o&&(i=Wo())!==o?n=u=[u,s,a,i]:(fo=n,n=o);n!==o;)e.push(n),n=fo,(u=Si())!==o&&(s=wi())!==o&&(a=Si())!==o&&(i=Wo())!==o?n=u=[u,s,a,i]:(fo=n,n=o);e!==o?(c=t,l=e,ec.add("select::null::(.*)"),t=l&&l.length>0?(c[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},qi(c[0],l)):c[0],r=t):(fo=r,r=o);}else fo=r,r=o;var c,l;if(r===o)if(r=fo,(t=Wo())!==o){for(e=[],n=fo,(u=Si())!==o&&(s=wi())!==o&&(a=Si())!==o&&(i=Wo())!==o?n=u=[u,s,a,i]:(fo=n,n=o);n!==o;)e.push(n),n=fo,(u=Si())!==o&&(s=wi())!==o&&(a=Si())!==o&&(i=Wo())!==o?n=u=[u,s,a,i]:(fo=n,n=o);e!==o?(t=function(r,t){return qi(r,t)}(t,e),r=t):(fo=r,r=o);}else fo=r,r=o;return r}())!==o&&Si()!==o?((a=Ko())===o&&(a=null),a!==o&&Si()!==o?((i=os())===o&&(i=null),i!==o&&Si()!==o?((c=function(){var t,e,n;t=fo,(e=function(){var t,e,n,u;t=fo,"group"===r.substr(fo,5).toLowerCase()?(e=r.substr(fo,5),fo+=5):(e=o,0===Co&&Ao(un));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o);return t}())!==o&&Si()!==o&&Ia()!==o&&Si()!==o&&(n=ps())!==o?(e=n.value,t=e):(fo=t,t=o);return t}())===o&&(c=null),c!==o&&Si()!==o?((l=function(){var t,e;t=fo,function(){var t,e,n,u;t=fo,"having"===r.substr(fo,6).toLowerCase()?(e=r.substr(fo,6),fo+=6):(e=o,0===Co&&Ao(an));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o);return t}()!==o&&Si()!==o&&(e=As())!==o?(t=e):(fo=t,t=o);return t}())===o&&(l=null),l!==o&&Si()!==o?((f=as())===o&&(f=null),f!==o&&Si()!==o?((v=ls())===o&&(v=null),v!==o?(t=function(r,t,e,n,u,o,s,a,i,c){return u&&u.forEach(r=>r.table&&tc.add(`select::${r.db}::${r.table}`)),{with:r,type:"select",options:t,distinct:e,columns:n,from:u,where:o,groupby:s,having:a,orderby:i,limit:c}}(e,n,u,s,a,i,c,l,f,v)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o),t}function Xo(){var t,e;return t=fo,(e=function(){var t;"sql_calc_found_rows"===r.substr(fo,19).toLowerCase()?(t=r.substr(fo,19),fo+=19):(t=o,0===Co&&Ao(ju));return t}())===o&&((e=function(){var t;"sql_cache"===r.substr(fo,9).toLowerCase()?(t=r.substr(fo,9),fo+=9):(t=o,0===Co&&Ao(Yu));return t}())===o&&(e=function(){var t;"sql_no_cache"===r.substr(fo,12).toLowerCase()?(t=r.substr(fo,12),fo+=12):(t=o,0===Co&&Ao(Bu));return t}()),e===o&&(e=function(){var t;"sql_big_result"===r.substr(fo,14).toLowerCase()?(t=r.substr(fo,14),fo+=14):(t=o,0===Co&&Ao(Wu));return t}())===o&&(e=function(){var t;"sql_small_result"===r.substr(fo,16).toLowerCase()?(t=r.substr(fo,16),fo+=16):(t=o,0===Co&&Ao(Xu));return t}())===o&&(e=function(){var t;"sql_buffer_result"===r.substr(fo,17).toLowerCase()?(t=r.substr(fo,17),fo+=17):(t=o,0===Co&&Ao(Vu));return t}())),e!==o&&(e=e),t=e}function Wo(){var r,t,e,n;return r=fo,(t=As())!==o&&ii()!==o&&(e=Yi())!==o?(r=t={type:"cast",expr:t,symbol:"::",target:e}):(fo=r,r=o),r===o&&(r=fo,(t=xs())!==o&&Si()!==o&&(e=pi())!==o&&Si()!==o&&Ei()!==o?(n=t,ec.add(`select::${n}::(.*)`),r=t={type:"star_ref",expr:{type:"column_ref",table:n,column:"*"},as:null}):(fo=r,r=o),r===o&&(r=fo,(t=As())!==o&&Si()!==o?((e=Vo())===o&&(e=null),e!==o?(r=t=function(r,t){return {type:"expr",expr:r,as:t}}(t,e)):(fo=r,r=o)):(fo=r,r=o))),r}function Vo(){var r,t,e;return r=fo,(t=wa())!==o&&Si()!==o&&(e=function(){var r,t;r=fo,(t=ks())!==o?((function(r){if(!0===Xi[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return !1}(t)?o:void 0)!==o?(r=t=t):(fo=r,r=o)):(fo=r,r=o);r===o&&(r=fo,(t=Ms())!==o&&(t=t),r=t);return r}())!==o?(r=t=e):(fo=r,r=o),r===o&&(r=fo,(t=wa())===o&&(t=null),t!==o&&Si()!==o&&(e=xs())!==o?(r=t=e):(fo=r,r=o)),r}function Ko(){var r,t;return r=fo,Ca()!==o&&Si()!==o&&(t=Qo())!==o?(r=t):(fo=r,r=o),r}function qo(){var r,t,e;return r=fo,(t=ns())!==o&&Si()!==o&&ua()!==o&&Si()!==o&&(e=ns())!==o?(r=t=[t,e]):(fo=r,r=o),r}function Zo(){var t,e;return t=fo,ma()!==o&&Si()!==o?("btree"===r.substr(fo,5).toLowerCase()?(e=r.substr(fo,5),fo+=5):(e=o,0===Co&&Ao(Dr)),e===o&&("hash"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(kr)),e===o&&("gist"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao($r)),e===o&&("gin"===r.substr(fo,3).toLowerCase()?(e=r.substr(fo,3),fo+=3):(e=o,0===Co&&Ao(Fr))))),e!==o?(t={keyword:"using",type:e.toLowerCase()}):(fo=t,t=o)):(fo=t,t=o),t}function zo(){var r,t,e,n,u,s;if(r=fo,(t=Jo())!==o){for(e=[],n=fo,(u=Si())!==o&&(s=Jo())!==o?n=u=[u,s]:(fo=n,n=o);n!==o;)e.push(n),n=fo,(u=Si())!==o&&(s=Jo())!==o?n=u=[u,s]:(fo=n,n=o);e!==o?(r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(fo=r,r=o);}else fo=r,r=o;return r}function Jo(){var t,e,n,u,s,a;return t=fo,(e=function(){var t,e,n,u;t=fo,"key_block_size"===r.substr(fo,14).toLowerCase()?(e=r.substr(fo,14),fo+=14):(e=o,0===Co&&Ao(cr));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="KEY_BLOCK_SIZE"):(fo=t,t=o)):(fo=t,t=o);return t}())!==o&&Si()!==o?((n=ci())===o&&(n=null),n!==o&&Si()!==o&&(u=Zs())!==o?(s=n,a=u,t=e={type:e.toLowerCase(),symbol:s,expr:a}):(fo=t,t=o)):(fo=t,t=o),t===o&&(t=fo,(e=ks())!==o&&Si()!==o&&(n=ci())!==o&&Si()!==o?((u=Zs())===o&&(u=xs()),u!==o?(t=e=function(r,t,e){return {type:r.toLowerCase(),symbol:t,expr:"string"==typeof e&&{type:"origin",value:e}||e}}(e,n,u)):(fo=t,t=o)):(fo=t,t=o),t===o&&(t=Zo())===o&&(t=fo,"with"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(Pr)),e!==o&&Si()!==o?("parser"===r.substr(fo,6).toLowerCase()?(n=r.substr(fo,6),fo+=6):(n=o,0===Co&&Ao(Hr)),n!==o&&Si()!==o&&(u=ks())!==o?(t=e={type:"with parser",expr:u}):(fo=t,t=o)):(fo=t,t=o),t===o&&(t=fo,"visible"===r.substr(fo,7).toLowerCase()?(e=r.substr(fo,7),fo+=7):(e=o,0===Co&&Ao(Gr)),e===o&&("invisible"===r.substr(fo,9).toLowerCase()?(e=r.substr(fo,9),fo+=9):(e=o,0===Co&&Ao(jr))),e!==o&&(e=function(r){return {type:r.toLowerCase(),expr:r.toLowerCase()}}(e)),(t=e)===o&&(t=Ri())))),t}function Qo(){var r,t,e,n,u,s;if(r=fo,(t=ts())!==o){for(e=[],n=rs();n!==o;)e.push(n),n=rs();e!==o?(u=t,(s=e).unshift(u),s.forEach(r=>{const{table:t,as:e}=r;nc[t]=t,e&&(nc[e]=t);}),r=t=s):(fo=r,r=o);}else fo=r,r=o;return r}function rs(){var r,t,e;return r=fo,Si()!==o&&(t=wi())!==o&&Si()!==o&&(e=ts())!==o?(r=e):(fo=r,r=o),r===o&&(r=fo,Si()!==o&&(t=function(){var r,t,e,n,u,s,a,i,c,l,f;if(r=fo,(t=es())!==o)if(Si()!==o)if((e=ts())!==o)if(Si()!==o)if((n=ma())!==o)if(Si()!==o)if(hi()!==o)if(Si()!==o)if((u=ks())!==o){for(s=[],a=fo,(i=Si())!==o&&(c=wi())!==o&&(l=Si())!==o&&(f=ks())!==o?a=i=[i,c,l,f]:(fo=a,a=o);a!==o;)s.push(a),a=fo,(i=Si())!==o&&(c=wi())!==o&&(l=Si())!==o&&(f=ks())!==o?a=i=[i,c,l,f]:(fo=a,a=o);s!==o&&(a=Si())!==o&&(i=Ai())!==o?(v=t,d=u,L=s,(b=e).join=v,b.using=qi(d,L),r=t=b):(fo=r,r=o);}else fo=r,r=o;else fo=r,r=o;else fo=r,r=o;else fo=r,r=o;else fo=r,r=o;else fo=r,r=o;else fo=r,r=o;else fo=r,r=o;else fo=r,r=o;var v,b,d,L;r===o&&(r=fo,(t=es())!==o&&Si()!==o&&(e=ts())!==o&&Si()!==o?((n=us())===o&&(n=null),n!==o?(t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(fo=r,r=o)):(fo=r,r=o),r===o&&(r=fo,(t=es())!==o&&Si()!==o&&(e=hi())!==o&&Si()!==o&&(n=Io())!==o&&Si()!==o&&Ai()!==o&&Si()!==o?((u=Vo())===o&&(u=null),u!==o&&(s=Si())!==o?((a=us())===o&&(a=null),a!==o?(t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,u,a),r=t):(fo=r,r=o)):(fo=r,r=o)):(fo=r,r=o)));return r}())!==o?(r=t):(fo=r,r=o)),r}function ts(){var t,e,n,u,s,a;return t=fo,(e=function(){var t;"dual"===r.substr(fo,4).toLowerCase()?(t=r.substr(fo,4),fo+=4):(t=o,0===Co&&Ao(Uu));return t}())!==o&&(e={type:"dual"}),(t=e)===o&&(t=fo,(e=ns())!==o&&Si()!==o?((n=Vo())===o&&(n=null),n!==o?(a=n,t=e="var"===(s=e).type?(s.as=a,s):{db:s.db,table:s.table,as:a}):(fo=t,t=o)):(fo=t,t=o),t===o&&(t=fo,(e=hi())!==o&&Si()!==o&&(n=Io())!==o&&Si()!==o&&Ai()!==o&&Si()!==o?((u=Vo())===o&&(u=null),u!==o?(t=e=function(r,t){return r.parentheses=!0,{expr:r,as:t}}(n,u)):(fo=t,t=o)):(fo=t,t=o))),t}function es(){var t,e,n,u;return t=fo,(e=function(){var t,e,n,u;t=fo,"left"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(Ke));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o);return t}())!==o&&(n=Si())!==o?((u=ya())===o&&(u=null),u!==o&&Si()!==o&&Aa()!==o?(t=e="LEFT JOIN"):(fo=t,t=o)):(fo=t,t=o),t===o&&(t=fo,(e=function(){var t,e,n,u;t=fo,"right"===r.substr(fo,5).toLowerCase()?(e=r.substr(fo,5),fo+=5):(e=o,0===Co&&Ao(qe));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o);return t}())!==o&&(n=Si())!==o?((u=ya())===o&&(u=null),u!==o&&Si()!==o&&Aa()!==o?(t=e="RIGHT JOIN"):(fo=t,t=o)):(fo=t,t=o),t===o&&(t=fo,(e=function(){var t,e,n,u;t=fo,"full"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(Ze));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o);return t}())!==o&&(n=Si())!==o?((u=ya())===o&&(u=null),u!==o&&Si()!==o&&Aa()!==o?(t=e="FULL JOIN"):(fo=t,t=o)):(fo=t,t=o),t===o&&(t=fo,e=fo,(n=function(){var t,e,n,u;t=fo,"inner"===r.substr(fo,5).toLowerCase()?(e=r.substr(fo,5),fo+=5):(e=o,0===Co&&Ao(ze));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o);return t}())!==o&&(u=Si())!==o?e=n=[n,u]:(fo=e,e=o),e===o&&(e=null),e!==o&&(n=Aa())!==o?(t=e="INNER JOIN"):(fo=t,t=o)))),t}function ns(){var r,t,e,n,u,s,a,i,c,l;return r=fo,(t=xs())!==o?(e=fo,(n=Si())!==o&&(u=pi())!==o&&(s=Si())!==o&&(a=xs())!==o?e=n=[n,u,s,a]:(fo=e,e=o),e!==o?(n=fo,(u=Si())!==o&&(s=pi())!==o&&(a=Si())!==o&&(i=xs())!==o?n=u=[u,s,a,i]:(fo=n,n=o),n!==o?(r=t=function(r,t,e){const n={db:null,table:r};return null!==e&&(n.db=`${r}.${t[3]}`,n.table=e[3]),n}(t,e,n)):(fo=r,r=o)):(fo=r,r=o)):(fo=r,r=o),r===o&&(r=fo,(t=xs())!==o&&(e=Si())!==o&&(n=pi())!==o&&(u=Si())!==o&&(s=Ei())!==o?(l=t,tc.add(`select::${l}::(.*)`),r=t={db:l,table:"*"}):(fo=r,r=o),r===o&&(r=fo,(t=xs())!==o?(e=fo,(n=Si())!==o&&(u=pi())!==o&&(s=Si())!==o&&(a=xs())!==o?e=n=[n,u,s,a]:(fo=e,e=o),e===o&&(e=null),e!==o?(r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(fo=r,r=o)):(fo=r,r=o),r===o&&(r=fo,(t=Gi())!==o&&((c=t).db=null,c.table=c.name,t=c),r=t))),r}function us(){var r,t;return r=fo,ha()!==o&&Si()!==o&&(t=As())!==o?(r=t):(fo=r,r=o),r}function os(){var t,e;return t=fo,function(){var t,e,n,u;t=fo,"where"===r.substr(fo,5).toLowerCase()?(e=r.substr(fo,5),fo+=5):(e=o,0===Co&&Ao(nn));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o);return t}()!==o&&Si()!==o&&(e=As())!==o?(t=e):(fo=t,t=o),t}function ss(){var r,t,e,n,u,s,a,i;if(r=fo,(t=Us())!==o){for(e=[],n=fo,(u=Si())!==o&&(s=wi())!==o&&(a=Si())!==o&&(i=Us())!==o?n=u=[u,s,a,i]:(fo=n,n=o);n!==o;)e.push(n),n=fo,(u=Si())!==o&&(s=wi())!==o&&(a=Si())!==o&&(i=Us())!==o?n=u=[u,s,a,i]:(fo=n,n=o);e!==o?(r=t=qi(t,e)):(fo=r,r=o);}else fo=r,r=o;return r}function as(){var t,e;return t=fo,function(){var t,e,n,u;t=fo,"order"===r.substr(fo,5).toLowerCase()?(e=r.substr(fo,5),fo+=5):(e=o,0===Co&&Ao(sn));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o);return t}()!==o&&Si()!==o&&Ia()!==o&&Si()!==o&&(e=function(){var r,t,e,n,u,s,a,i;if(r=fo,(t=is())!==o){for(e=[],n=fo,(u=Si())!==o&&(s=wi())!==o&&(a=Si())!==o&&(i=is())!==o?n=u=[u,s,a,i]:(fo=n,n=o);n!==o;)e.push(n),n=fo,(u=Si())!==o&&(s=wi())!==o&&(a=Si())!==o&&(i=is())!==o?n=u=[u,s,a,i]:(fo=n,n=o);e!==o?(t=qi(t,e),r=t):(fo=r,r=o);}else fo=r,r=o;return r}())!==o?(t=e):(fo=t,t=o),t}function is(){var r,t,e;return r=fo,(t=As())!==o&&Si()!==o?((e=Ra())===o&&(e=Na()),e===o&&(e=null),e!==o?(r=t=function(r,t){const e={expr:r,type:"ASC"};return "DESC"===t&&(e.type="DESC"),e}(t,e)):(fo=r,r=o)):(fo=r,r=o),r}function cs(){var r;return (r=Zs())===o&&(r=Hs()),r}function ls(){var t,e,n,u,s,a;return t=fo,function(){var t,e,n,u;t=fo,"limit"===r.substr(fo,5).toLowerCase()?(e=r.substr(fo,5),fo+=5):(e=o,0===Co&&Ao(cn));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o);return t}()!==o&&Si()!==o?((e=cs())===o&&(e=_a()),e!==o&&Si()!==o?(n=fo,(u=function(){var t,e,n,u;t=fo,"offset"===r.substr(fo,6).toLowerCase()?(e=r.substr(fo,6),fo+=6):(e=o,0===Co&&Ao(ln));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="OFFSET"):(fo=t,t=o)):(fo=t,t=o);return t}())!==o&&(s=Si())!==o&&(a=cs())!==o?n=u=[u,s,a]:(fo=n,n=o),n===o&&(n=null),n!==o?(t=function(r,t){const e=[];return "string"==typeof r?e.push({type:"origin",value:"all"}):e.push(r),t&&e.push(t[2]),{seperator:t&&t[0]&&t[0].toLowerCase()||"",value:e}}(e,n)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o),t}function fs(){var t,e,n,u,s,a,i,c;return t=fo,e=fo,(n=xs())!==o&&(u=Si())!==o&&(s=pi())!==o?e=n=[n,u,s]:(fo=e,e=o),e===o&&(e=null),e!==o&&(n=Si())!==o&&(u=Ds())!==o&&(s=Si())!==o?(61===r.charCodeAt(fo)?(a="=",fo++):(a=o,0===Co&&Ao(Yr)),a!==o&&Si()!==o&&(i=Ns())!==o?(t=e={column:u,value:i,table:(c=e)&&c[0]}):(fo=t,t=o)):(fo=t,t=o),t}function vs(){var t,e,n,u,s;return t=fo,(e=function(){var t,e,n,u;t=fo,"returning"===r.substr(fo,9).toLowerCase()?(e=r.substr(fo,9),fo+=9):(e=o,0===Co&&Ao(Fe));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="RETURNING"):(fo=t,t=o)):(fo=t,t=o);return t}())!==o&&Si()!==o&&(n=ss())!==o?(s=n,t=e={type:(u=e)&&u.toLowerCase()||"returning",columns:s}):(fo=t,t=o),t}function bs(){var t;return (t=function(){var t,e;t=fo,function(){var t,e,n,u;t=fo,"values"===r.substr(fo,6).toLowerCase()?(e=r.substr(fo,6),fo+=6):(e=o,0===Co&&Ao(tn));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o);return t}()!==o&&Si()!==o&&(e=function(){var r,t,e,n,u,s,a,i;if(r=fo,(t=Cs())!==o){for(e=[],n=fo,(u=Si())!==o&&(s=wi())!==o&&(a=Si())!==o&&(i=Cs())!==o?n=u=[u,s,a,i]:(fo=n,n=o);n!==o;)e.push(n),n=fo,(u=Si())!==o&&(s=wi())!==o&&(a=Si())!==o&&(i=Cs())!==o?n=u=[u,s,a,i]:(fo=n,n=o);e!==o?(t=qi(t,e),r=t):(fo=r,r=o);}else fo=r,r=o;return r}())!==o?(t=e):(fo=t,t=o);return t}())===o&&(t=Bo()),t}function ds(){var r,t,e,n,u,s,a,i,c;if(r=fo,da()!==o)if(Si()!==o)if((t=hi())!==o)if(Si()!==o)if((e=ks())!==o){for(n=[],u=fo,(s=Si())!==o&&(a=wi())!==o&&(i=Si())!==o&&(c=ks())!==o?u=s=[s,a,i,c]:(fo=u,u=o);u!==o;)n.push(u),u=fo,(s=Si())!==o&&(a=wi())!==o&&(i=Si())!==o&&(c=ks())!==o?u=s=[s,a,i,c]:(fo=u,u=o);n!==o&&(u=Si())!==o&&(s=Ai())!==o?(r=qi(e,n)):(fo=r,r=o);}else fo=r,r=o;else fo=r,r=o;else fo=r,r=o;else fo=r,r=o;else fo=r,r=o;return r===o&&(r=fo,da()!==o&&Si()!==o&&(t=Cs())!==o?(r=t):(fo=r,r=o)),r}function Ls(){var r,t;return r=fo,(t=fa())!==o&&(t="insert"),(r=t)===o&&(r=fo,(t=va())!==o&&(t="replace"),r=t),r}function Cs(){var r,t;return r=fo,hi()!==o&&Si()!==o&&(t=ps())!==o&&Si()!==o&&Ai()!==o?(r=t):(fo=r,r=o),r}function ps(){var r,t,e,n,u,s,a,i;if(r=fo,(t=As())!==o){for(e=[],n=fo,(u=Si())!==o&&(s=wi())!==o&&(a=Si())!==o&&(i=As())!==o?n=u=[u,s,a,i]:(fo=n,n=o);n!==o;)e.push(n),n=fo,(u=Si())!==o&&(s=wi())!==o&&(a=Si())!==o&&(i=As())!==o?n=u=[u,s,a,i]:(fo=n,n=o);e!==o?(r=t=function(r,t){const e={type:"expr_list"};return e.value=qi(r,t),e}(t,e)):(fo=r,r=o);}else fo=r,r=o;return r}function ws(){var t,e,n;return t=fo,oi()!==o&&Si()!==o&&(e=As())!==o&&Si()!==o&&(n=function(){var t;(t=function(){var t,e,n,u;t=fo,"year"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(Vt));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="YEAR"):(fo=t,t=o)):(fo=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=fo,"month"===r.substr(fo,5).toLowerCase()?(e=r.substr(fo,5),fo+=5):(e=o,0===Co&&Ao(Ht));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="MONTH"):(fo=t,t=o)):(fo=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=fo,"day"===r.substr(fo,3).toLowerCase()?(e=r.substr(fo,3),fo+=3):(e=o,0===Co&&Ao(Rt));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="DAY"):(fo=t,t=o)):(fo=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=fo,"hour"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(xt));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="HOUR"):(fo=t,t=o)):(fo=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=fo,"minute"===r.substr(fo,6).toLowerCase()?(e=r.substr(fo,6),fo+=6):(e=o,0===Co&&Ao(Pt));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="MINUTE"):(fo=t,t=o)):(fo=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=fo,"second"===r.substr(fo,6).toLowerCase()?(e=r.substr(fo,6),fo+=6):(e=o,0===Co&&Ao(jt));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="SECOND"):(fo=t,t=o)):(fo=t,t=o);return t}());return t}())!==o?(t={type:"interval",expr:e,unit:n.toLowerCase()}):(fo=t,t=o),t===o&&(t=fo,oi()!==o&&Si()!==o&&(e=Ws())!==o?(t=function(r){return {type:"interval",expr:r,unit:""}}(e)):(fo=t,t=o)),t}function Es(){var t,e,n,u,s,a,i,c,l;if(t=fo,Pa()!==o)if(Si()!==o)if((e=As())===o&&(e=null),e!==o)if(Si()!==o){if(n=[],(u=hs())!==o)for(;u!==o;)n.push(u),u=hs();else n=o;n!==o&&(u=Si())!==o?((s=function(){var t,e;t=fo,function(){var t,e,n,u;t=fo,"else"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(kn));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o);return t}()!==o&&Si()!==o&&(e=As())!==o?(t={type:"else",result:e}):(fo=t,t=o);return t}())===o&&(s=null),s!==o&&Si()!==o&&function(){var t,e,n,u;t=fo,"end"===r.substr(fo,3).toLowerCase()?(e=r.substr(fo,3),fo+=3):(e=o,0===Co&&Ao($n));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o);return t}()!==o&&Si()!==o?((a=Pa())===o&&(a=null),a!==o?(i=e,c=n,(l=s)&&c.push(l),t={type:"case",expr:i||null,args:c}):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o);}else fo=t,t=o;else fo=t,t=o;else fo=t,t=o;else fo=t,t=o;return t}function hs(){var t,e,n;return t=fo,Ha()!==o&&Si()!==o&&(e=As())!==o&&Si()!==o&&function(){var t,e,n,u;t=fo,"then"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(Dn));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o);return t}()!==o&&Si()!==o&&(n=As())!==o?(t={type:"when",cond:e,result:n}):(fo=t,t=o),t}function As(){var r;return (r=function(){var r,t,e,n,u,s,a,i;if(r=fo,(t=Os())!==o){if(e=[],n=fo,(u=Si())!==o&&(s=mi())!==o&&(a=Si())!==o&&(i=Os())!==o?n=u=[u,s,a,i]:(fo=n,n=o),n!==o)for(;n!==o;)e.push(n),n=fo,(u=Si())!==o&&(s=mi())!==o&&(a=Si())!==o&&(i=Os())!==o?n=u=[u,s,a,i]:(fo=n,n=o);else e=o;e!==o?(t=Zi(t,e),r=t):(fo=r,r=o);}else fo=r,r=o;return r}())===o&&(r=function(){var r,t,e,n,u,s;if(r=fo,(t=Rs())!==o){if(e=[],n=fo,(u=Si())!==o&&(s=Os())!==o?n=u=[u,s]:(fo=n,n=o),n!==o)for(;n!==o;)e.push(n),n=fo,(u=Si())!==o&&(s=Os())!==o?n=u=[u,s]:(fo=n,n=o);else e=o;e!==o?(t=Wi(t,e[0][1]),r=t):(fo=r,r=o);}else fo=r,r=o;return r}())===o&&(r=function(){var r,t,e,n,u,s,a,i;if(r=fo,(t=ys())!==o){for(e=[],n=fo,(u=Ii())!==o&&(s=Fa())!==o&&(a=Si())!==o&&(i=ys())!==o?n=u=[u,s,a,i]:(fo=n,n=o);n!==o;)e.push(n),n=fo,(u=Ii())!==o&&(s=Fa())!==o&&(a=Si())!==o&&(i=ys())!==o?n=u=[u,s,a,i]:(fo=n,n=o);e!==o?(t=Br(t,e),r=t):(fo=r,r=o);}else fo=r,r=o;return r}())===o&&(r=Ho()),r}function ys(){var r,t,e,n,u,s,a,i;if(r=fo,(t=Ts())!==o){for(e=[],n=fo,(u=Ii())!==o&&(s=$a())!==o&&(a=Si())!==o&&(i=Ts())!==o?n=u=[u,s,a,i]:(fo=n,n=o);n!==o;)e.push(n),n=fo,(u=Ii())!==o&&(s=$a())!==o&&(a=Si())!==o&&(i=Ts())!==o?n=u=[u,s,a,i]:(fo=n,n=o);e!==o?(r=t=Br(t,e)):(fo=r,r=o);}else fo=r,r=o;return r}function Ts(){var t,e,n,u,s;return (t=ms())===o&&(t=function(){var r,t,e;r=fo,(t=function(){var r,t,e,n,u;r=fo,t=fo,(e=ka())!==o&&(n=Si())!==o&&(u=Da())!==o?t=e=[e,n,u]:(fo=t,t=o);t!==o&&(t=(s=t)[0]+" "+s[2]);var s;(r=t)===o&&(r=Da());return r}())!==o&&Si()!==o&&hi()!==o&&Si()!==o&&(e=Io())!==o&&Si()!==o&&Ai()!==o?(n=t,(u=e).parentheses=!0,t=Wi(n,u),r=t):(fo=r,r=o);var n,u;return r}())===o&&(t=fo,(e=ka())===o&&(e=fo,33===r.charCodeAt(fo)?(n="!",fo++):(n=o,0===Co&&Ao(Xr)),n!==o?(u=fo,Co++,61===r.charCodeAt(fo)?(s="=",fo++):(s=o,0===Co&&Ao(Yr)),Co--,s===o?u=void 0:(fo=u,u=o),u!==o?e=n=[n,u]:(fo=e,e=o)):(fo=e,e=o)),e!==o&&(n=Si())!==o&&(u=Ts())!==o?(t=e=Wi("NOT",u)):(fo=t,t=o)),t}function ms(){var t,e,n,u,s,a,i;return t=fo,(e=Ns())!==o&&Si()!==o?(n=fo,Co++,u=$a(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o&&(u=Si())!==o?((s=function(){var t;(t=function(){var r,t,e,n,u,s,a;r=fo,t=[],e=fo,(n=Si())!==o&&(u=Ss())!==o&&(s=Si())!==o&&(a=Ns())!==o?e=n=[n,u,s,a]:(fo=e,e=o);if(e!==o)for(;e!==o;)t.push(e),e=fo,(n=Si())!==o&&(u=Ss())!==o&&(s=Si())!==o&&(a=Ns())!==o?e=n=[n,u,s,a]:(fo=e,e=o);else t=o;t!==o&&(t={type:"arithmetic",tail:t});return r=t}())===o&&(t=function(){var r,t,e,n;r=fo,(t=Is())!==o&&Si()!==o&&(e=hi())!==o&&Si()!==o&&(n=ps())!==o&&Si()!==o&&Ai()!==o?(r=t={op:t,right:n}):(fo=r,r=o);r===o&&(r=fo,(t=Is())!==o&&Si()!==o?((e=Gi())===o&&(e=Ws()),e!==o?(t=function(r,t){return {op:r,right:t}}(t,e),r=t):(fo=r,r=o)):(fo=r,r=o));return r}())===o&&(t=function(){var r,t,e,n;r=fo,(t=function(){var r,t,e,n,u;r=fo,t=fo,(e=ka())!==o&&(n=Si())!==o&&(u=Oa())!==o?t=e=[e,n,u]:(fo=t,t=o);t!==o&&(t=(s=t)[0]+" "+s[2]);var s;(r=t)===o&&(r=Oa());return r}())!==o&&Si()!==o&&(e=Ns())!==o&&Si()!==o&&$a()!==o&&Si()!==o&&(n=Ns())!==o?(r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(fo=r,r=o);return r}())===o&&(t=function(){var r,t,e,n,u,s,a,i,c;r=fo,(t=xa())!==o&&(e=Si())!==o&&(n=Ns())!==o?(r=t={op:"IS",right:n}):(fo=r,r=o);r===o&&(r=fo,(t=xa())!==o&&(e=Si())!==o?(n=fo,(u=ga())!==o&&(s=Si())!==o&&(a=Ca())!==o&&(i=Si())!==o&&(c=ns())!==o?n=u=[u,s,a,i,c]:(fo=n,n=o),n!==o?(t=function(r){const{db:t,table:e}=r.pop(),n="*"===e?"*":`"${e}"`;return {op:"IS",right:{type:"origin",value:"DISTINCT FROM "+(t?`"${t}".${n}`:n)}}}(n),r=t):(fo=r,r=o)):(fo=r,r=o),r===o&&(r=fo,t=fo,(e=xa())!==o&&(n=Si())!==o&&(u=ka())!==o?t=e=[e,n,u]:(fo=t,t=o),t!==o&&(e=Si())!==o&&(n=Ns())!==o?(t=function(r){return {op:"IS NOT",right:r}}(n),r=t):(fo=r,r=o)));return r}())===o&&(t=function(){var r,t,e;r=fo,(t=function(){var r,t,e,n,u;r=fo,t=fo,(e=ka())!==o&&(n=Si())!==o&&(u=Ma())!==o?t=e=[e,n,u]:(fo=t,t=o);t!==o&&(t=(s=t)[0]+" "+s[2]);var s;(r=t)===o&&(r=Ma());return r}())!==o&&Si()!==o&&(e=ms())!==o?(r=t={op:t,right:e}):(fo=r,r=o);return r}())===o&&(t=function(){var t,e,n;t=fo,"@>"===r.substr(fo,2)?(e="@>",fo+=2):(e=o,0===Co&&Ao(Jr));e===o&&("<@"===r.substr(fo,2)?(e="<@",fo+=2):(e=o,0===Co&&Ao(Qr)),e===o&&(e=Ti())===o&&(e=function(){var t;"#>>"===r.substr(fo,3)?(t="#>>",fo+=3):(t=o,0===Co&&Ao(to));return t}())===o&&(e=function(){var t;"#>"===r.substr(fo,2)?(t="#>",fo+=2):(t=o,0===Co&&Ao(ro));return t}())===o&&(63===r.charCodeAt(fo)?(e="?",fo++):(e=o,0===Co&&Ao(rt)),e===o&&("?|"===r.substr(fo,2)?(e="?|",fo+=2):(e=o,0===Co&&Ao(tt)),e===o&&("?&"===r.substr(fo,2)?(e="?&",fo+=2):(e=o,0===Co&&Ao(et)),e===o&&("#-"===r.substr(fo,2)?(e="#-",fo+=2):(e=o,0===Co&&Ao(nt)))))));e!==o&&Si()!==o&&(n=Wo())!==o?(e={op:e,right:(u=n)&&u.expr||u},t=e):(fo=t,t=o);var u;return t}());return t}())===o&&(s=null),s!==o?(a=e,t=e=null===(i=s)?a:"arithmetic"===i.type?Zi(a,i.tail):Vi(i.op,a,i.right)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o),t===o&&(t=Ws())===o&&(t=Us()),t}function Ss(){var t;return ">="===r.substr(fo,2)?(t=">=",fo+=2):(t=o,0===Co&&Ao(Wr)),t===o&&(62===r.charCodeAt(fo)?(t=">",fo++):(t=o,0===Co&&Ao(Vr)),t===o&&("<="===r.substr(fo,2)?(t="<=",fo+=2):(t=o,0===Co&&Ao(Kr)),t===o&&("<>"===r.substr(fo,2)?(t="<>",fo+=2):(t=o,0===Co&&Ao(qr)),t===o&&(60===r.charCodeAt(fo)?(t="<",fo++):(t=o,0===Co&&Ao(Zr)),t===o&&(61===r.charCodeAt(fo)?(t="=",fo++):(t=o,0===Co&&Ao(Yr)),t===o&&("!="===r.substr(fo,2)?(t="!=",fo+=2):(t=o,0===Co&&Ao(zr)))))))),t}function Is(){var r,t,e,n,u,s;return r=fo,t=fo,(e=ka())!==o&&(n=Si())!==o&&(u=Ua())!==o?t=e=[e,n,u]:(fo=t,t=o),t!==o&&(t=(s=t)[0]+" "+s[2]),(r=t)===o&&(r=Ua()),r}function Ns(){var r,t,e,n,u,s,a,i;if(r=fo,(t=_s())!==o){for(e=[],n=fo,(u=Si())!==o&&(s=Rs())!==o&&(a=Si())!==o&&(i=_s())!==o?n=u=[u,s,a,i]:(fo=n,n=o);n!==o;)e.push(n),n=fo,(u=Si())!==o&&(s=Rs())!==o&&(a=Si())!==o&&(i=_s())!==o?n=u=[u,s,a,i]:(fo=n,n=o);e!==o?(r=t=Br(t,e)):(fo=r,r=o);}else fo=r,r=o;return r}function Rs(){var t;return 43===r.charCodeAt(fo)?(t="+",fo++):(t=o,0===Co&&Ao(ut)),t===o&&(45===r.charCodeAt(fo)?(t="-",fo++):(t=o,0===Co&&Ao(ot))),t}function _s(){var r,t,e,n,u,s,a,i;if(r=fo,(t=Os())!==o){for(e=[],n=fo,(u=Si())!==o&&(s=gs())!==o&&(a=Si())!==o&&(i=Os())!==o?n=u=[u,s,a,i]:(fo=n,n=o);n!==o;)e.push(n),n=fo,(u=Si())!==o&&(s=gs())!==o&&(a=Si())!==o&&(i=Os())!==o?n=u=[u,s,a,i]:(fo=n,n=o);e!==o?(r=t=Zi(t,e)):(fo=r,r=o);}else fo=r,r=o;return r}function gs(){var t;return 42===r.charCodeAt(fo)?(t="*",fo++):(t=o,0===Co&&Ao(st)),t===o&&(47===r.charCodeAt(fo)?(t="/",fo++):(t=o,0===Co&&Ao(at)),t===o&&(37===r.charCodeAt(fo)?(t="%",fo++):(t=o,0===Co&&Ao(it)))),t}function Os(){var t,e,n,u,s;return (t=function(){var t,e,n,u,s,a,i,c;t=fo,(e=Ys())===o&&(e=Gs())===o&&(e=js())===o&&(e=Es())===o&&(e=ws())===o&&(e=Us())===o&&(e=Hs());e!==o&&ii()!==o&&(n=Yi())!==o?(t=e={type:"cast",expr:e,symbol:"::",target:n}):(fo=t,t=o);t===o&&(t=fo,(e=Ga())!==o&&Si()!==o&&(n=hi())!==o&&Si()!==o&&(u=As())!==o&&Si()!==o&&wa()!==o&&Si()!==o&&(s=Yi())!==o&&Si()!==o&&(a=Ai())!==o?(e=function(r,t){return {type:"cast",expr:r,symbol:"as",target:t}}(u,s),t=e):(fo=t,t=o),t===o&&(t=fo,(e=Ga())!==o&&Si()!==o&&(n=hi())!==o&&Si()!==o&&(u=As())!==o&&Si()!==o&&wa()!==o&&Si()!==o&&(s=Xa())!==o&&Si()!==o&&(a=hi())!==o&&Si()!==o&&(i=zs())!==o&&Si()!==o&&Ai()!==o&&Si()!==o&&(c=Ai())!==o?(e=function(r,t){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+")"}}}(u,i),t=e):(fo=t,t=o),t===o&&(t=fo,(e=Ga())!==o&&Si()!==o&&(n=hi())!==o&&Si()!==o&&(u=As())!==o&&Si()!==o&&wa()!==o&&Si()!==o&&(s=Xa())!==o&&Si()!==o&&(a=hi())!==o&&Si()!==o&&(i=zs())!==o&&Si()!==o&&wi()!==o&&Si()!==o&&(c=zs())!==o&&Si()!==o&&Ai()!==o&&Si()!==o&&Ai()!==o?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+", "+e+")"}}}(u,i,c),t=e):(fo=t,t=o),t===o&&(t=fo,(e=Ga())!==o&&Si()!==o&&(n=hi())!==o&&Si()!==o&&(u=As())!==o&&Si()!==o&&wa()!==o&&Si()!==o&&(s=function(){var t;(t=function(){var t,e,n,u;t=fo,"signed"===r.substr(fo,6).toLowerCase()?(e=r.substr(fo,6),fo+=6):(e=o,0===Co&&Ao(Xn));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="SIGNED"):(fo=t,t=o)):(fo=t,t=o);return t}())===o&&(t=Wa());return t}())!==o&&Si()!==o?((a=Ka())===o&&(a=null),a!==o&&Si()!==o&&(i=Ai())!==o?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:t+(e?" "+e:"")}}}(u,s,a),t=e):(fo=t,t=o)):(fo=t,t=o)))));return t}())===o&&(t=Ys())===o&&(t=Gs())===o&&(t=js())===o&&(t=Es())===o&&(t=ws())===o&&(t=Us())===o&&(t=Hs())===o&&(t=fo,hi()!==o&&(e=Si())!==o&&(n=As())!==o&&Si()!==o&&Ai()!==o?((s=n).parentheses=!0,t=s):(fo=t,t=o),t===o&&(t=fo,hi()!==o&&(e=Si())!==o&&(n=ps())!==o&&Si()!==o&&Ai()!==o?((u=n).parentheses=!0,t=u):(fo=t,t=o),t===o&&(t=Gi())===o&&(t=fo,Si()!==o?(36===r.charCodeAt(fo)?(e="$",fo++):(e=o,0===Co&&Ao(ct)),e!==o&&(n=Zs())!==o?(t={type:"origin",value:"$"+n.value}):(fo=t,t=o)):(fo=t,t=o)))),t}function Us(){var t,e,n,u,s,a;return t=fo,(e=xs())!==o&&Si()!==o&&(n=pi())!==o&&Si()!==o&&(u=Ds())!==o?(s=e,a=u,ec.add(`select::${s}::${a}`),t=e={type:"column_ref",table:s,column:a}):(fo=t,t=o),t===o&&(t=fo,(e=xs())!==o&&Si()!==o&&(n=pi())!==o&&Si()!==o&&(u=Ei())!==o?(t=e=function(r){return ec.add(`select::${r}::(.*)`),{type:"column_ref",table:r,column:"*"}}(e)):(fo=t,t=o),t===o&&(t=fo,(e=Ds())!==o&&Si()!==o?((n=function(){var t;"->>"===r.substr(fo,3)?(t="->>",fo+=3):(t=o,0===Co&&Ao(Qu));return t}())===o&&(n=function(){var t;"->"===r.substr(fo,2)?(t="->",fo+=2):(t=o,0===Co&&Ao(Ju));return t}()),n!==o&&Si()!==o?((u=Ws())===o&&(u=Zs()),u!==o?(t=e=function(r,t,e){return ec.add("select::null::"+r),{type:"column_ref",table:null,column:r,arrow:t,property:e}}(e,n,u)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o),t===o&&(t=fo,(e=Ds())!==o&&(e=function(r){return ec.add("select::null::"+r),{type:"column_ref",table:null,column:r}}(e)),t=e))),t}function xs(){var r,t;return r=fo,(t=ks())!==o?((lt(t)?o:void 0)!==o?(r=t=t):(fo=r,r=o)):(fo=r,r=o),r===o&&(r=fo,(t=Ms())!==o&&(t=t),r=t),r}function Ms(){var t;return (t=function(){var t,e,n,u;t=fo,34===r.charCodeAt(fo)?(e='"',fo++):(e=o,0===Co&&Ao(ft));if(e!==o){if(n=[],vt.test(r.charAt(fo))?(u=r.charAt(fo),fo++):(u=o,0===Co&&Ao(bt)),u!==o)for(;u!==o;)n.push(u),vt.test(r.charAt(fo))?(u=r.charAt(fo),fo++):(u=o,0===Co&&Ao(bt));else n=o;n!==o?(34===r.charCodeAt(fo)?(u='"',fo++):(u=o,0===Co&&Ao(ft)),u!==o?(e=dt(n),t=e):(fo=t,t=o)):(fo=t,t=o);}else fo=t,t=o;return t}())===o&&(t=function(){var t,e,n,u;t=fo,39===r.charCodeAt(fo)?(e="'",fo++):(e=o,0===Co&&Ao(wr));if(e!==o){if(n=[],Lt.test(r.charAt(fo))?(u=r.charAt(fo),fo++):(u=o,0===Co&&Ao(Ct)),u!==o)for(;u!==o;)n.push(u),Lt.test(r.charAt(fo))?(u=r.charAt(fo),fo++):(u=o,0===Co&&Ao(Ct));else n=o;n!==o?(39===r.charCodeAt(fo)?(u="'",fo++):(u=o,0===Co&&Ao(wr)),u!==o?(e=dt(n),t=e):(fo=t,t=o)):(fo=t,t=o);}else fo=t,t=o;return t}())===o&&(t=function(){var t,e,n,u;t=fo,96===r.charCodeAt(fo)?(e="`",fo++):(e=o,0===Co&&Ao(pt));if(e!==o){if(n=[],wt.test(r.charAt(fo))?(u=r.charAt(fo),fo++):(u=o,0===Co&&Ao(Et)),u!==o)for(;u!==o;)n.push(u),wt.test(r.charAt(fo))?(u=r.charAt(fo),fo++):(u=o,0===Co&&Ao(Et));else n=o;n!==o?(96===r.charCodeAt(fo)?(u="`",fo++):(u=o,0===Co&&Ao(pt)),u!==o?(e=dt(n),t=e):(fo=t,t=o)):(fo=t,t=o);}else fo=t,t=o;return t}()),t}function Ds(){var r,t;return r=fo,(t=function(){var r,t,e,n;if(r=fo,(t=$s())!==o){for(e=[],n=Ps();n!==o;)e.push(n),n=Ps();e!==o?(t=t+e.join(""),r=t):(fo=r,r=o);}else fo=r,r=o;return r}())!==o?((lt(t)?o:void 0)!==o?(r=t=t):(fo=r,r=o)):(fo=r,r=o),r===o&&(r=Ms()),r}function ks(){var r,t,e,n;if(r=fo,(t=$s())!==o){for(e=[],n=Fs();n!==o;)e.push(n),n=Fs();e!==o?(r=t=t+e.join("")):(fo=r,r=o);}else fo=r,r=o;return r}function $s(){var t;return ht.test(r.charAt(fo))?(t=r.charAt(fo),fo++):(t=o,0===Co&&Ao(At)),t}function Fs(){var t;return yt.test(r.charAt(fo))?(t=r.charAt(fo),fo++):(t=o,0===Co&&Ao(Tt)),t}function Ps(){var t;return mt.test(r.charAt(fo))?(t=r.charAt(fo),fo++):(t=o,0===Co&&Ao(St)),t}function Hs(){var t,e,n,u;return t=fo,e=fo,58===r.charCodeAt(fo)?(n=":",fo++):(n=o,0===Co&&Ao(It)),n!==o&&(u=ks())!==o?e=n=[n,u]:(fo=e,e=o),e!==o&&(e={type:"param",value:e[1]}),t=e}function Gs(){var t;return (t=function(){var t,e,n;t=fo,(e=function(){var t,e,n,u;t=fo,"count"===r.substr(fo,5).toLowerCase()?(e=r.substr(fo,5),fo+=5):(e=o,0===Co&&Ao(An));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="COUNT"):(fo=t,t=o)):(fo=t,t=o);return t}())!==o&&Si()!==o&&hi()!==o&&Si()!==o&&(n=function(){var t,e,n;t=fo,(e=function(){var t,e;t=fo,42===r.charCodeAt(fo)?(e="*",fo++):(e=o,0===Co&&Ao(st));e!==o&&(e={type:"star",value:"*"});return t=e}())!==o&&(e={expr:e});(t=e)===o&&(t=fo,(e=ga())===o&&(e=null),e!==o&&Si()!==o&&(n=Us())!==o?(t=e={distinct:e,expr:n}):(fo=t,t=o));return t}())!==o&&Si()!==o&&Ai()!==o?(t=e={type:"aggr_func",name:e,args:n}):(fo=t,t=o);return t}())===o&&(t=function(){var t,e,n,u,s,a,i,c;t=fo,(e=function(){var t;(t=function(){var t,e,n,u;t=fo,"sum"===r.substr(fo,3).toLowerCase()?(e=r.substr(fo,3),fo+=3):(e=o,0===Co&&Ao(mn));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="SUM"):(fo=t,t=o)):(fo=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=fo,"max"===r.substr(fo,3).toLowerCase()?(e=r.substr(fo,3),fo+=3):(e=o,0===Co&&Ao(yn));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="MAX"):(fo=t,t=o)):(fo=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=fo,"min"===r.substr(fo,3).toLowerCase()?(e=r.substr(fo,3),fo+=3):(e=o,0===Co&&Ao(Tn));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="MIN"):(fo=t,t=o)):(fo=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=fo,"avg"===r.substr(fo,3).toLowerCase()?(e=r.substr(fo,3),fo+=3):(e=o,0===Co&&Ao(Sn));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="AVG"):(fo=t,t=o)):(fo=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=fo,"collect"===r.substr(fo,7).toLowerCase()?(e=r.substr(fo,7),fo+=7):(e=o,0===Co&&Ao(In));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="COLLECT"):(fo=t,t=o)):(fo=t,t=o);return t}());return t}())!==o&&Si()!==o&&hi()!==o&&Si()!==o?((n=ga())===o&&(n=null),n!==o&&(u=Si())!==o&&(s=Ns())!==o&&(a=Si())!==o&&(i=Ai())!==o?(t=e={type:"aggr_func",name:e,args:{expr:s,distinct:n}}):(fo=t,t=o)):(fo=t,t=o);t===o&&(t=fo,(e=function(){var t;(t=function(){var t,e,n,u;t=fo,"rank"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(Nn));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="RANK"):(fo=t,t=o)):(fo=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=fo,"dense_rank"===r.substr(fo,10).toLowerCase()?(e=r.substr(fo,10),fo+=10):(e=o,0===Co&&Ao(Rn));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="DENSE_RANK"):(fo=t,t=o)):(fo=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=fo,"row_number"===r.substr(fo,10).toLowerCase()?(e=r.substr(fo,10),fo+=10):(e=o,0===Co&&Ao(gn));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="ROW_NUMBER"):(fo=t,t=o)):(fo=t,t=o);return t}());return t}())!==o&&Si()!==o&&hi()!==o&&Si()!==o&&(n=Ai())!==o?(e=function(r){return {type:"aggr_func",name:r}}(e),t=e):(fo=t,t=o),t===o&&(t=fo,(e=function(){var t,e,n,u;t=fo,"listagg"===r.substr(fo,7).toLowerCase()?(e=r.substr(fo,7),fo+=7):(e=o,0===Co&&Ao(_n));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="LISTAGG"):(fo=t,t=o)):(fo=t,t=o);return t}())!==o&&Si()!==o&&hi()!==o&&Si()!==o&&(n=Ns())!==o?(u=fo,(s=Si())!==o&&(a=wi())!==o&&(i=Si())!==o&&(c=Ws())!==o?u=s=[s,a,i,c]:(fo=u,u=o),u===o&&(u=null),u!==o&&(s=Si())!==o&&(a=Ai())!==o?(e=function(r,t,e){return {type:"aggr_func",name:r,args:{expr:t,separator:e}}}(e,n,u),t=e):(fo=t,t=o)):(fo=t,t=o)));return t}()),t}function js(){var t,e,n;return t=fo,(e=Fi())!==o&&Si()!==o&&hi()!==o&&Si()!==o?((n=ps())===o&&(n=null),n!==o&&Si()!==o&&Ai()!==o?(t=e={type:"function",name:e,args:n||{type:"expr_list",value:[]}}):(fo=t,t=o)):(fo=t,t=o),t===o&&(t=fo,(e=function(){var t;(t=function(){var t,e,n,u;t=fo,"current_date"===r.substr(fo,12).toLowerCase()?(e=r.substr(fo,12),fo+=12):(e=o,0===Co&&Ao(Lu));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="CURRENT_DATE"):(fo=t,t=o)):(fo=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=fo,"current_time"===r.substr(fo,12).toLowerCase()?(e=r.substr(fo,12),fo+=12):(e=o,0===Co&&Ao(pu));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="CURRENT_TIME"):(fo=t,t=o)):(fo=t,t=o);return t}())===o&&(t=si())===o&&(t=function(){var t,e,n,u;t=fo,"current_user"===r.substr(fo,12).toLowerCase()?(e=r.substr(fo,12),fo+=12):(e=o,0===Co&&Ao(Eu));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="CURRENT_USER"):(fo=t,t=o)):(fo=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=fo,"user"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(bu));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="USER"):(fo=t,t=o)):(fo=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=fo,"session_user"===r.substr(fo,12).toLowerCase()?(e=r.substr(fo,12),fo+=12):(e=o,0===Co&&Ao(hu));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="SESSION_USER"):(fo=t,t=o)):(fo=t,t=o);return t}())===o&&(t=function(){var t,e,n,u;t=fo,"system_user"===r.substr(fo,11).toLowerCase()?(e=r.substr(fo,11),fo+=11):(e=o,0===Co&&Ao(Au));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="SYSTEM_USER"):(fo=t,t=o)):(fo=t,t=o);return t}());return t}())!==o&&Si()!==o&&hi()!==o&&Si()!==o&&(n=Ai())!==o?(t=e=function(r){return {type:"function",name:r,args:{type:"expr_list",value:[]}}}(e)):(fo=t,t=o),t===o&&(t=function(){var t,e,n,u,s;t=fo,(e=function(){var t,e,n,u;t=fo,"extract"===r.substr(fo,7).toLowerCase()?(e=r.substr(fo,7),fo+=7):(e=o,0===Co&&Ao(On));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="EXTRACT"):(fo=t,t=o)):(fo=t,t=o);return t}())!==o&&Si()!==o&&hi()!==o&&Si()!==o&&(n=function(){var t,e;"century"===r.substr(fo,7).toLowerCase()?(t=r.substr(fo,7),fo+=7):(t=o,0===Co&&Ao(Nt));t===o&&("day"===r.substr(fo,3).toLowerCase()?(t=r.substr(fo,3),fo+=3):(t=o,0===Co&&Ao(Rt)),t===o&&("decade"===r.substr(fo,6).toLowerCase()?(t=r.substr(fo,6),fo+=6):(t=o,0===Co&&Ao(_t)),t===o&&("dow"===r.substr(fo,3).toLowerCase()?(t=r.substr(fo,3),fo+=3):(t=o,0===Co&&Ao(gt)),t===o&&("doy"===r.substr(fo,3).toLowerCase()?(t=r.substr(fo,3),fo+=3):(t=o,0===Co&&Ao(Ot)),t===o&&("epoch"===r.substr(fo,5).toLowerCase()?(t=r.substr(fo,5),fo+=5):(t=o,0===Co&&Ao(Ut)),t===o&&("hour"===r.substr(fo,4).toLowerCase()?(t=r.substr(fo,4),fo+=4):(t=o,0===Co&&Ao(xt)),t===o&&("isodow"===r.substr(fo,6).toLowerCase()?(t=r.substr(fo,6),fo+=6):(t=o,0===Co&&Ao(Mt)),t===o&&("isoyear"===r.substr(fo,7).toLowerCase()?(t=r.substr(fo,7),fo+=7):(t=o,0===Co&&Ao(Dt)),t===o&&("microseconds"===r.substr(fo,12).toLowerCase()?(t=r.substr(fo,12),fo+=12):(t=o,0===Co&&Ao(kt)),t===o&&("millennium"===r.substr(fo,10).toLowerCase()?(t=r.substr(fo,10),fo+=10):(t=o,0===Co&&Ao($t)),t===o&&("milliseconds"===r.substr(fo,12).toLowerCase()?(t=r.substr(fo,12),fo+=12):(t=o,0===Co&&Ao(Ft)),t===o&&("minute"===r.substr(fo,6).toLowerCase()?(t=r.substr(fo,6),fo+=6):(t=o,0===Co&&Ao(Pt)),t===o&&("month"===r.substr(fo,5).toLowerCase()?(t=r.substr(fo,5),fo+=5):(t=o,0===Co&&Ao(Ht)),t===o&&("quarter"===r.substr(fo,7).toLowerCase()?(t=r.substr(fo,7),fo+=7):(t=o,0===Co&&Ao(Gt)),t===o&&("second"===r.substr(fo,6).toLowerCase()?(t=r.substr(fo,6),fo+=6):(t=o,0===Co&&Ao(jt)),t===o&&("timezone"===r.substr(fo,8).toLowerCase()?(t=r.substr(fo,8),fo+=8):(t=o,0===Co&&Ao(Yt)),t===o&&("timezone_hour"===r.substr(fo,13).toLowerCase()?(t=r.substr(fo,13),fo+=13):(t=o,0===Co&&Ao(Bt)),t===o&&("timezone_minute"===r.substr(fo,15).toLowerCase()?(t=r.substr(fo,15),fo+=15):(t=o,0===Co&&Ao(Xt)),t===o&&("week"===r.substr(fo,4).toLowerCase()?(t=r.substr(fo,4),fo+=4):(t=o,0===Co&&Ao(Wt)),t===o&&(t=fo,"year"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(Vt)),e!==o&&(e=f),t=e))))))))))))))))))));return t}())!==o&&Si()!==o&&Ca()!==o&&Si()!==o?((u=ni())===o&&(u=oi())===o&&(u=ei()),u===o&&(u=null),u!==o&&Si()!==o&&(s=As())!==o&&Si()!==o&&Ai()!==o?(e=function(r,t,e,n){return {type:r.toLowerCase(),args:{field:t,cast_type:e,source:n}}}(e,n,u,s),t=e):(fo=t,t=o)):(fo=t,t=o);return t}())),t}function Ys(){var t;return (t=Ws())===o&&(t=Zs())===o&&(t=function(){var t,e;t=fo,(e=function(){var t,e,n,u;t=fo,"true"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(Te));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o);return t}())!==o&&(e={type:"bool",value:!0});(t=e)===o&&(t=fo,(e=function(){var t,e,n,u;t=fo,"false"===r.substr(fo,5).toLowerCase()?(e=r.substr(fo,5),fo+=5):(e=o,0===Co&&Ao(Se));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o);return t}())!==o&&(e={type:"bool",value:!1}),t=e);return t}())===o&&(t=Bs())===o&&(t=function(){var t,e,n,u,s,a,i;t=fo,(e=ei())===o&&(e=ri())===o&&(e=ni())===o&&(e=ti());if(e!==o)if(Si()!==o){if(n=fo,39===r.charCodeAt(fo)?(u="'",fo++):(u=o,0===Co&&Ao(wr)),u!==o){for(s=[],a=Ks();a!==o;)s.push(a),a=Ks();s!==o?(39===r.charCodeAt(fo)?(a="'",fo++):(a=o,0===Co&&Ao(wr)),a!==o?n=u=[u,s,a]:(fo=n,n=o)):(fo=n,n=o);}else fo=n,n=o;n!==o?(c=n,e={type:e.toLowerCase(),value:c[1].join("")},t=e):(fo=t,t=o);}else fo=t,t=o;else fo=t,t=o;var c;t===o&&(t=fo,(e=si())!==o&&Si()!==o?((n=hi())===o&&(n=null),n!==o&&(u=Si())!==o?((s=Ai())===o&&(s=null),s!==o?((a=(a=function(r,t,e){if(t&&e)return !0}(0,n,s))?o:void 0)!==o&&Si()!==o?("on update current_timestamp"===r.substr(fo,27).toLowerCase()?(i=r.substr(fo,27),fo+=27):(i=o,0===Co&&Ao(Kt)),i===o&&(i=null),i!==o?(e=function(r,t,e,n){return {type:"origin",value:(n?`${r} ${n}`:r).toLowerCase()}}(e,0,0,i),t=e):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o)):(fo=t,t=o));return t}()),t}function Bs(){var t,e;return t=fo,(e=function(){var t,e,n,u;t=fo,"null"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(Ae));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o);return t}())!==o&&(e={type:"null",value:null}),t=e}function Xs(){var t,e;return t=fo,(e=function(){var t,e,n,u;t=fo,"not null"===r.substr(fo,8).toLowerCase()?(e=r.substr(fo,8),fo+=8):(e=o,0===Co&&Ao(ye));e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o);return t}())!==o&&(e={type:"not null",value:"not null"}),t=e}function Ws(){var t,e,n,u,s;if(t=fo,e=fo,39===r.charCodeAt(fo)?(n="'",fo++):(n=o,0===Co&&Ao(wr)),n!==o){for(u=[],s=Ks();s!==o;)u.push(s),s=Ks();u!==o?(39===r.charCodeAt(fo)?(s="'",fo++):(s=o,0===Co&&Ao(wr)),s!==o?e=n=[n,u,s]:(fo=e,e=o)):(fo=e,e=o);}else fo=e,e=o;if(e!==o&&(e={type:"single_quote_string",value:e[1].join("")}),(t=e)===o){if(t=fo,e=fo,34===r.charCodeAt(fo)?(n='"',fo++):(n=o,0===Co&&Ao(ft)),n!==o){for(u=[],s=Vs();s!==o;)u.push(s),s=Vs();u!==o?(34===r.charCodeAt(fo)?(s='"',fo++):(s=o,0===Co&&Ao(ft)),s!==o?e=n=[n,u,s]:(fo=e,e=o)):(fo=e,e=o);}else fo=e,e=o;e!==o?(n=fo,Co++,u=pi(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e=function(r){return {type:"string",value:r[1].join("")}}(e)):(fo=t,t=o)):(fo=t,t=o);}return t}function Vs(){var t;return qt.test(r.charAt(fo))?(t=r.charAt(fo),fo++):(t=o,0===Co&&Ao(Zt)),t===o&&(t=qs()),t}function Ks(){var t;return zt.test(r.charAt(fo))?(t=r.charAt(fo),fo++):(t=o,0===Co&&Ao(Jt)),t===o&&(t=qs()),t}function qs(){var t,e,n,u,s,a,i,c,l,f;return t=fo,"\\'"===r.substr(fo,2)?(e="\\'",fo+=2):(e=o,0===Co&&Ao(Qt)),e!==o&&(e="'"),(t=e)===o&&(t=fo,'\\"'===r.substr(fo,2)?(e='\\"',fo+=2):(e=o,0===Co&&Ao(re)),e!==o&&(e='"'),(t=e)===o&&(t=fo,"\\\\"===r.substr(fo,2)?(e="\\\\",fo+=2):(e=o,0===Co&&Ao(te)),e!==o&&(e="\\"),(t=e)===o&&(t=fo,"\\/"===r.substr(fo,2)?(e="\\/",fo+=2):(e=o,0===Co&&Ao(ee)),e!==o&&(e="/"),(t=e)===o&&(t=fo,"\\b"===r.substr(fo,2)?(e="\\b",fo+=2):(e=o,0===Co&&Ao(ne)),e!==o&&(e="\b"),(t=e)===o&&(t=fo,"\\f"===r.substr(fo,2)?(e="\\f",fo+=2):(e=o,0===Co&&Ao(ue)),e!==o&&(e="\f"),(t=e)===o&&(t=fo,"\\n"===r.substr(fo,2)?(e="\\n",fo+=2):(e=o,0===Co&&Ao(oe)),e!==o&&(e="\n"),(t=e)===o&&(t=fo,"\\r"===r.substr(fo,2)?(e="\\r",fo+=2):(e=o,0===Co&&Ao(se)),e!==o&&(e="\r"),(t=e)===o&&(t=fo,"\\t"===r.substr(fo,2)?(e="\\t",fo+=2):(e=o,0===Co&&Ao(ae)),e!==o&&(e="\t"),(t=e)===o&&(t=fo,"\\u"===r.substr(fo,2)?(e="\\u",fo+=2):(e=o,0===Co&&Ao(ie)),e!==o&&(n=ea())!==o&&(u=ea())!==o&&(s=ea())!==o&&(a=ea())!==o?(i=n,c=u,l=s,f=a,t=e=String.fromCharCode(parseInt("0x"+i+c+l+f))):(fo=t,t=o),t===o&&(t=fo,92===r.charCodeAt(fo)?(e="\\",fo++):(e=o,0===Co&&Ao(ce)),e!==o&&(e="\\"),t=e)))))))))),t}function Zs(){var r,t,e;return r=fo,(t=function(){var r,t,e,n;r=fo,(t=zs())!==o&&(e=Js())!==o&&(n=Qs())!==o?(r=t={type:"bigint",value:t+e+n}):(fo=r,r=o);r===o&&(r=fo,(t=zs())!==o&&(e=Js())!==o?(t=function(r,t){const e=r+t;return Ki(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e),r=t):(fo=r,r=o),r===o&&(r=fo,(t=zs())!==o&&(e=Qs())!==o?(t=function(r,t){return {type:"bigint",value:r+t}}(t,e),r=t):(fo=r,r=o),r===o&&(r=fo,(t=zs())!==o&&(t=function(r){return Ki(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t)));return r}())!==o&&(t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),r=t}function zs(){var t,e,n;return (t=ra())===o&&(t=ta())===o&&(t=fo,45===r.charCodeAt(fo)?(e="-",fo++):(e=o,0===Co&&Ao(ot)),e===o&&(43===r.charCodeAt(fo)?(e="+",fo++):(e=o,0===Co&&Ao(ut))),e!==o&&(n=ra())!==o?(t=e="-"+n):(fo=t,t=o),t===o&&(t=fo,45===r.charCodeAt(fo)?(e="-",fo++):(e=o,0===Co&&Ao(ot)),e===o&&(43===r.charCodeAt(fo)?(e="+",fo++):(e=o,0===Co&&Ao(ut))),e!==o&&(n=ta())!==o?(t=e="-"+n):(fo=t,t=o))),t}function Js(){var t,e,n;return t=fo,46===r.charCodeAt(fo)?(e=".",fo++):(e=o,0===Co&&Ao(ve)),e!==o&&(n=ra())!==o?(t=e="."+n):(fo=t,t=o),t}function Qs(){var t,e,n;return t=fo,(e=function(){var t,e,n;t=fo,pe.test(r.charAt(fo))?(e=r.charAt(fo),fo++):(e=o,0===Co&&Ao(we));e!==o?(Ee.test(r.charAt(fo))?(n=r.charAt(fo),fo++):(n=o,0===Co&&Ao(he)),n===o&&(n=null),n!==o?(t=e=e+(null!==(u=n)?u:"")):(fo=t,t=o)):(fo=t,t=o);var u;return t}())!==o&&(n=ra())!==o?(t=e=e+n):(fo=t,t=o),t}function ra(){var r,t,e;if(r=fo,t=[],(e=ta())!==o)for(;e!==o;)t.push(e),e=ta();else t=o;return t!==o&&(t=t.join("")),r=t}function ta(){var t;return be.test(r.charAt(fo))?(t=r.charAt(fo),fo++):(t=o,0===Co&&Ao(de)),t}function ea(){var t;return Le.test(r.charAt(fo))?(t=r.charAt(fo),fo++):(t=o,0===Co&&Ao(Ce)),t}function na(){var t,e,n,u;return t=fo,"default"===r.substr(fo,7).toLowerCase()?(e=r.substr(fo,7),fo+=7):(e=o,0===Co&&Ao(y)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o),t}function ua(){var t,e,n,u;return t=fo,"to"===r.substr(fo,2).toLowerCase()?(e=r.substr(fo,2),fo+=2):(e=o,0===Co&&Ao(me)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o),t}function oa(){var t,e,n,u;return t=fo,"drop"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(Ie)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="DROP"):(fo=t,t=o)):(fo=t,t=o),t}function sa(){var t,e,n,u;return t=fo,"update"===r.substr(fo,6).toLowerCase()?(e=r.substr(fo,6),fo+=6):(e=o,0===Co&&Ao(ge)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o),t}function aa(){var t,e,n,u;return t=fo,"create"===r.substr(fo,6).toLowerCase()?(e=r.substr(fo,6),fo+=6):(e=o,0===Co&&Ao(Oe)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o),t}function ia(){var t,e,n,u;return t=fo,"temporary"===r.substr(fo,9).toLowerCase()?(e=r.substr(fo,9),fo+=9):(e=o,0===Co&&Ao(Ue)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o),t}function ca(){var t,e,n,u;return t=fo,"if not exists"===r.substr(fo,13).toLowerCase()?(e=r.substr(fo,13),fo+=13):(e=o,0===Co&&Ao(xe)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o),t}function la(){var t,e,n,u;return t=fo,"delete"===r.substr(fo,6).toLowerCase()?(e=r.substr(fo,6),fo+=6):(e=o,0===Co&&Ao(Me)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o),t}function fa(){var t,e,n,u;return t=fo,"insert"===r.substr(fo,6).toLowerCase()?(e=r.substr(fo,6),fo+=6):(e=o,0===Co&&Ao(De)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o),t}function va(){var t,e,n,u;return t=fo,"replace"===r.substr(fo,7).toLowerCase()?(e=r.substr(fo,7),fo+=7):(e=o,0===Co&&Ao($e)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o),t}function ba(){var t,e,n,u;return t=fo,"rename"===r.substr(fo,6).toLowerCase()?(e=r.substr(fo,6),fo+=6):(e=o,0===Co&&Ao(Pe)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o),t}function da(){var t,e,n,u;return t=fo,"partition"===r.substr(fo,9).toLowerCase()?(e=r.substr(fo,9),fo+=9):(e=o,0===Co&&Ao(Ge)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="PARTITION"):(fo=t,t=o)):(fo=t,t=o),t}function La(){var t,e,n,u;return t=fo,"into"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(je)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o),t}function Ca(){var t,e,n,u;return t=fo,"from"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(Ye)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o),t}function pa(){var t,e,n,u;return t=fo,"set"===r.substr(fo,3).toLowerCase()?(e=r.substr(fo,3),fo+=3):(e=o,0===Co&&Ao(Be)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o),t}function wa(){var t,e,n,u;return t=fo,"as"===r.substr(fo,2).toLowerCase()?(e=r.substr(fo,2),fo+=2):(e=o,0===Co&&Ao(Xe)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o),t}function Ea(){var t,e,n,u;return t=fo,"table"===r.substr(fo,5).toLowerCase()?(e=r.substr(fo,5),fo+=5):(e=o,0===Co&&Ao(We)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="TABLE"):(fo=t,t=o)):(fo=t,t=o),t}function ha(){var t,e,n,u;return t=fo,"on"===r.substr(fo,2).toLowerCase()?(e=r.substr(fo,2),fo+=2):(e=o,0===Co&&Ao(Z)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o),t}function Aa(){var t,e,n,u;return t=fo,"join"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(Je)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o),t}function ya(){var t,e,n,u;return t=fo,"outer"===r.substr(fo,5).toLowerCase()?(e=r.substr(fo,5),fo+=5):(e=o,0===Co&&Ao(Qe)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o),t}function Ta(){var t,e,n,u;return t=fo,"union"===r.substr(fo,5).toLowerCase()?(e=r.substr(fo,5),fo+=5):(e=o,0===Co&&Ao(rn)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o),t}function ma(){var t,e,n,u;return t=fo,"using"===r.substr(fo,5).toLowerCase()?(e=r.substr(fo,5),fo+=5):(e=o,0===Co&&Ao(en)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o),t}function Sa(){var t,e,n,u;return t=fo,"with"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(Pr)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o),t}function Ia(){var t,e,n,u;return t=fo,"by"===r.substr(fo,2).toLowerCase()?(e=r.substr(fo,2),fo+=2):(e=o,0===Co&&Ao(on)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o),t}function Na(){var t,e,n,u;return t=fo,"asc"===r.substr(fo,3).toLowerCase()?(e=r.substr(fo,3),fo+=3):(e=o,0===Co&&Ao(fn)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="ASC"):(fo=t,t=o)):(fo=t,t=o),t}function Ra(){var t,e,n,u;return t=fo,"desc"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(vn)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="DESC"):(fo=t,t=o)):(fo=t,t=o),t}function _a(){var t,e,n,u;return t=fo,"all"===r.substr(fo,3).toLowerCase()?(e=r.substr(fo,3),fo+=3):(e=o,0===Co&&Ao(bn)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="ALL"):(fo=t,t=o)):(fo=t,t=o),t}function ga(){var t,e,n,u;return t=fo,"distinct"===r.substr(fo,8).toLowerCase()?(e=r.substr(fo,8),fo+=8):(e=o,0===Co&&Ao(dn)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="DISTINCT"):(fo=t,t=o)):(fo=t,t=o),t}function Oa(){var t,e,n,u;return t=fo,"between"===r.substr(fo,7).toLowerCase()?(e=r.substr(fo,7),fo+=7):(e=o,0===Co&&Ao(Ln)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="BETWEEN"):(fo=t,t=o)):(fo=t,t=o),t}function Ua(){var t,e,n,u;return t=fo,"in"===r.substr(fo,2).toLowerCase()?(e=r.substr(fo,2),fo+=2):(e=o,0===Co&&Ao(yr)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="IN"):(fo=t,t=o)):(fo=t,t=o),t}function xa(){var t,e,n,u;return t=fo,"is"===r.substr(fo,2).toLowerCase()?(e=r.substr(fo,2),fo+=2):(e=o,0===Co&&Ao(Cn)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="IS"):(fo=t,t=o)):(fo=t,t=o),t}function Ma(){var t,e,n,u;return t=fo,"like"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(pn)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="LIKE"):(fo=t,t=o)):(fo=t,t=o),t}function Da(){var t,e,n,u;return t=fo,"exists"===r.substr(fo,6).toLowerCase()?(e=r.substr(fo,6),fo+=6):(e=o,0===Co&&Ao(wn)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="EXISTS"):(fo=t,t=o)):(fo=t,t=o),t}function ka(){var t,e,n,u;return t=fo,"not"===r.substr(fo,3).toLowerCase()?(e=r.substr(fo,3),fo+=3):(e=o,0===Co&&Ao(rr)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="NOT"):(fo=t,t=o)):(fo=t,t=o),t}function $a(){var t,e,n,u;return t=fo,"and"===r.substr(fo,3).toLowerCase()?(e=r.substr(fo,3),fo+=3):(e=o,0===Co&&Ao(En)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="AND"):(fo=t,t=o)):(fo=t,t=o),t}function Fa(){var t,e,n,u;return t=fo,"or"===r.substr(fo,2).toLowerCase()?(e=r.substr(fo,2),fo+=2):(e=o,0===Co&&Ao(hn)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="OR"):(fo=t,t=o)):(fo=t,t=o),t}function Pa(){var t,e,n,u;return t=fo,"case"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(xn)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o),t}function Ha(){var t,e,n,u;return t=fo,"when"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(Mn)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o),t}function Ga(){var t,e,n,u;return t=fo,"cast"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(Fn)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?t=e=[e,n]:(fo=t,t=o)):(fo=t,t=o),t}function ja(){var t,e,n,u;return t=fo,"char"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(Gn)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="CHAR"):(fo=t,t=o)):(fo=t,t=o),t}function Ya(){var t,e,n,u;return t=fo,"varchar"===r.substr(fo,7).toLowerCase()?(e=r.substr(fo,7),fo+=7):(e=o,0===Co&&Ao(jn)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="VARCHAR"):(fo=t,t=o)):(fo=t,t=o),t}function Ba(){var t,e,n,u;return t=fo,"numeric"===r.substr(fo,7).toLowerCase()?(e=r.substr(fo,7),fo+=7):(e=o,0===Co&&Ao(Yn)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="NUMERIC"):(fo=t,t=o)):(fo=t,t=o),t}function Xa(){var t,e,n,u;return t=fo,"decimal"===r.substr(fo,7).toLowerCase()?(e=r.substr(fo,7),fo+=7):(e=o,0===Co&&Ao(Bn)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="DECIMAL"):(fo=t,t=o)):(fo=t,t=o),t}function Wa(){var t,e,n,u;return t=fo,"unsigned"===r.substr(fo,8).toLowerCase()?(e=r.substr(fo,8),fo+=8):(e=o,0===Co&&Ao(Wn)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="UNSIGNED"):(fo=t,t=o)):(fo=t,t=o),t}function Va(){var t,e,n,u;return t=fo,"int"===r.substr(fo,3).toLowerCase()?(e=r.substr(fo,3),fo+=3):(e=o,0===Co&&Ao(Vn)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="INT"):(fo=t,t=o)):(fo=t,t=o),t}function Ka(){var t,e,n,u;return t=fo,"integer"===r.substr(fo,7).toLowerCase()?(e=r.substr(fo,7),fo+=7):(e=o,0===Co&&Ao(qn)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="INTEGER"):(fo=t,t=o)):(fo=t,t=o),t}function qa(){var t,e,n,u;return t=fo,"smallint"===r.substr(fo,8).toLowerCase()?(e=r.substr(fo,8),fo+=8):(e=o,0===Co&&Ao(Qn)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="SMALLINT"):(fo=t,t=o)):(fo=t,t=o),t}function Za(){var t,e,n,u;return t=fo,"tinyint"===r.substr(fo,7).toLowerCase()?(e=r.substr(fo,7),fo+=7):(e=o,0===Co&&Ao(ru)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="TINYINT"):(fo=t,t=o)):(fo=t,t=o),t}function za(){var t,e,n,u;return t=fo,"bigint"===r.substr(fo,6).toLowerCase()?(e=r.substr(fo,6),fo+=6):(e=o,0===Co&&Ao(ou)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="BIGINT"):(fo=t,t=o)):(fo=t,t=o),t}function Ja(){var t,e,n,u;return t=fo,"float"===r.substr(fo,5).toLowerCase()?(e=r.substr(fo,5),fo+=5):(e=o,0===Co&&Ao(su)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="FLOAT"):(fo=t,t=o)):(fo=t,t=o),t}function Qa(){var t,e,n,u;return t=fo,"double"===r.substr(fo,6).toLowerCase()?(e=r.substr(fo,6),fo+=6):(e=o,0===Co&&Ao(au)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="DOUBLE"):(fo=t,t=o)):(fo=t,t=o),t}function ri(){var t,e,n,u;return t=fo,"date"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(iu)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="DATE"):(fo=t,t=o)):(fo=t,t=o),t}function ti(){var t,e,n,u;return t=fo,"datetime"===r.substr(fo,8).toLowerCase()?(e=r.substr(fo,8),fo+=8):(e=o,0===Co&&Ao(cu)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="DATETIME"):(fo=t,t=o)):(fo=t,t=o),t}function ei(){var t,e,n,u;return t=fo,"time"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(lu)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="TIME"):(fo=t,t=o)):(fo=t,t=o),t}function ni(){var t,e,n,u;return t=fo,"timestamp"===r.substr(fo,9).toLowerCase()?(e=r.substr(fo,9),fo+=9):(e=o,0===Co&&Ao(fu)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="TIMESTAMP"):(fo=t,t=o)):(fo=t,t=o),t}function ui(){var t,e,n,u;return t=fo,"truncate"===r.substr(fo,8).toLowerCase()?(e=r.substr(fo,8),fo+=8):(e=o,0===Co&&Ao(vu)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="TRUNCATE"):(fo=t,t=o)):(fo=t,t=o),t}function oi(){var t,e,n,u;return t=fo,"interval"===r.substr(fo,8).toLowerCase()?(e=r.substr(fo,8),fo+=8):(e=o,0===Co&&Ao(Cu)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="INTERVAL"):(fo=t,t=o)):(fo=t,t=o),t}function si(){var t,e,n,u;return t=fo,"current_timestamp"===r.substr(fo,17).toLowerCase()?(e=r.substr(fo,17),fo+=17):(e=o,0===Co&&Ao(wu)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="CURRENT_TIMESTAMP"):(fo=t,t=o)):(fo=t,t=o),t}function ai(){var t;return (t=function(){var t;return "@@"===r.substr(fo,2)?(t="@@",fo+=2):(t=o,0===Co&&Ao(Ru)),t}())===o&&(t=function(){var t;return 64===r.charCodeAt(fo)?(t="@",fo++):(t=o,0===Co&&Ao(Nu)),t}())===o&&(t=function(){var t;return 36===r.charCodeAt(fo)?(t="$",fo++):(t=o,0===Co&&Ao(ct)),t}()),t}function ii(){var t;return "::"===r.substr(fo,2)?(t="::",fo+=2):(t=o,0===Co&&Ao(Ou)),t}function ci(){var t;return 61===r.charCodeAt(fo)?(t="=",fo++):(t=o,0===Co&&Ao(Yr)),t}function li(){var t,e,n,u;return t=fo,"add"===r.substr(fo,3).toLowerCase()?(e=r.substr(fo,3),fo+=3):(e=o,0===Co&&Ao(xu)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="ADD"):(fo=t,t=o)):(fo=t,t=o),t}function fi(){var t,e,n,u;return t=fo,"column"===r.substr(fo,6).toLowerCase()?(e=r.substr(fo,6),fo+=6):(e=o,0===Co&&Ao(Mu)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="COLUMN"):(fo=t,t=o)):(fo=t,t=o),t}function vi(){var t,e,n,u;return t=fo,"index"===r.substr(fo,5).toLowerCase()?(e=r.substr(fo,5),fo+=5):(e=o,0===Co&&Ao(Du)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="INDEX"):(fo=t,t=o)):(fo=t,t=o),t}function bi(){var t,e,n,u;return t=fo,"key"===r.substr(fo,3).toLowerCase()?(e=r.substr(fo,3),fo+=3):(e=o,0===Co&&Ao(w)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="KEY"):(fo=t,t=o)):(fo=t,t=o),t}function di(){var t,e,n,u;return t=fo,"unique"===r.substr(fo,6).toLowerCase()?(e=r.substr(fo,6),fo+=6):(e=o,0===Co&&Ao(C)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="UNIQUE"):(fo=t,t=o)):(fo=t,t=o),t}function Li(){var t,e,n,u;return t=fo,"comment"===r.substr(fo,7).toLowerCase()?(e=r.substr(fo,7),fo+=7):(e=o,0===Co&&Ao(Fu)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="COMMENT"):(fo=t,t=o)):(fo=t,t=o),t}function Ci(){var t,e,n,u;return t=fo,"constraint"===r.substr(fo,10).toLowerCase()?(e=r.substr(fo,10),fo+=10):(e=o,0===Co&&Ao(Pu)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="CONSTRAINT"):(fo=t,t=o)):(fo=t,t=o),t}function pi(){var t;return 46===r.charCodeAt(fo)?(t=".",fo++):(t=o,0===Co&&Ao(ve)),t}function wi(){var t;return 44===r.charCodeAt(fo)?(t=",",fo++):(t=o,0===Co&&Ao(Ku)),t}function Ei(){var t;return 42===r.charCodeAt(fo)?(t="*",fo++):(t=o,0===Co&&Ao(st)),t}function hi(){var t;return 40===r.charCodeAt(fo)?(t="(",fo++):(t=o,0===Co&&Ao(Ur)),t}function Ai(){var t;return 41===r.charCodeAt(fo)?(t=")",fo++):(t=o,0===Co&&Ao(xr)),t}function yi(){var t;return 59===r.charCodeAt(fo)?(t=";",fo++):(t=o,0===Co&&Ao(zu)),t}function Ti(){var t;return "||"===r.substr(fo,2)?(t="||",fo+=2):(t=o,0===Co&&Ao(eo)),t}function mi(){var t;return (t=Ti())===o&&(t=function(){var t;return "&&"===r.substr(fo,2)?(t="&&",fo+=2):(t=o,0===Co&&Ao(no)),t}()),t}function Si(){var r,t;for(r=[],(t=gi())===o&&(t=Ni());t!==o;)r.push(t),(t=gi())===o&&(t=Ni());return r}function Ii(){var r,t;if(r=[],(t=gi())===o&&(t=Ni()),t!==o)for(;t!==o;)r.push(t),(t=gi())===o&&(t=Ni());else r=o;return r}function Ni(){var t;return (t=function(){var t,e,n,u,s,a;t=fo,"/*"===r.substr(fo,2)?(e="/*",fo+=2):(e=o,0===Co&&Ao(uo));if(e!==o){for(n=[],u=fo,s=fo,Co++,"*/"===r.substr(fo,2)?(a="*/",fo+=2):(a=o,0===Co&&Ao(oo)),Co--,a===o?s=void 0:(fo=s,s=o),s!==o&&(a=_i())!==o?u=s=[s,a]:(fo=u,u=o);u!==o;)n.push(u),u=fo,s=fo,Co++,"*/"===r.substr(fo,2)?(a="*/",fo+=2):(a=o,0===Co&&Ao(oo)),Co--,a===o?s=void 0:(fo=s,s=o),s!==o&&(a=_i())!==o?u=s=[s,a]:(fo=u,u=o);n!==o?("*/"===r.substr(fo,2)?(u="*/",fo+=2):(u=o,0===Co&&Ao(oo)),u!==o?t=e=[e,n,u]:(fo=t,t=o)):(fo=t,t=o);}else fo=t,t=o;return t}())===o&&(t=function(){var t,e,n,u,s,a;t=fo,"--"===r.substr(fo,2)?(e="--",fo+=2):(e=o,0===Co&&Ao(so));if(e!==o){for(n=[],u=fo,s=fo,Co++,a=Oi(),Co--,a===o?s=void 0:(fo=s,s=o),s!==o&&(a=_i())!==o?u=s=[s,a]:(fo=u,u=o);u!==o;)n.push(u),u=fo,s=fo,Co++,a=Oi(),Co--,a===o?s=void 0:(fo=s,s=o),s!==o&&(a=_i())!==o?u=s=[s,a]:(fo=u,u=o);n!==o?t=e=[e,n]:(fo=t,t=o);}else fo=t,t=o;return t}()),t}function Ri(){var r,t,e,n,u,s,a;return r=fo,(t=Li())!==o&&Si()!==o?((e=ci())===o&&(e=null),e!==o&&Si()!==o&&(n=Ws())!==o?(s=e,a=n,r=t={type:(u=t).toLowerCase(),keyword:u.toLowerCase(),symbol:s,value:a}):(fo=r,r=o)):(fo=r,r=o),r}function _i(){var t;return r.length>fo?(t=r.charAt(fo),fo++):(t=o,0===Co&&Ao(ao)),t}function gi(){var t;return io.test(r.charAt(fo))?(t=r.charAt(fo),fo++):(t=o,0===Co&&Ao(co)),t}function Oi(){var t,e;if((t=function(){var t,e;t=fo,Co++,r.length>fo?(e=r.charAt(fo),fo++):(e=o,0===Co&&Ao(ao));Co--,e===o?t=void 0:(fo=t,t=o);return t}())===o)if(t=[],le.test(r.charAt(fo))?(e=r.charAt(fo),fo++):(e=o,0===Co&&Ao(fe)),e!==o)for(;e!==o;)t.push(e),le.test(r.charAt(fo))?(e=r.charAt(fo),fo++):(e=o,0===Co&&Ao(fe));else t=o;return t}function Ui(){var t,e;return t=fo,rc=[],(void 0)!==o&&Si()!==o?((e=xi())===o&&(e=function(){var t,e;t=fo,function(){var t;return "return"===r.substr(fo,6).toLowerCase()?(t=r.substr(fo,6),fo+=6):(t=o,0===Co&&Ao(_u)),t}()!==o&&Si()!==o&&(e=Mi())!==o?(t={type:"return",expr:e}):(fo=t,t=o);return t}()),e!==o?(t={type:"proc",stmt:e,vars:rc}):(fo=t,t=o)):(fo=t,t=o),t}function xi(){var t,e,n,u;return t=fo,(e=Gi())===o&&(e=ji()),e!==o&&Si()!==o?((n=function(){var t;return ":="===r.substr(fo,2)?(t=":=",fo+=2):(t=o,0===Co&&Ao(gu)),t}())===o&&(n=ci()),n!==o&&Si()!==o&&(u=Mi())!==o?(t=e={type:"assign",left:e,symbol:n,right:u}):(fo=t,t=o)):(fo=t,t=o),t}function Mi(){var t;return (t=Ho())===o&&(t=function(){var r,t,e,n,u;r=fo,(t=Gi())!==o&&Si()!==o&&(e=es())!==o&&Si()!==o&&(n=Gi())!==o&&Si()!==o&&(u=us())!==o?(r=t={type:"join",ltable:t,rtable:n,op:e,on:u}):(fo=r,r=o);return r}())===o&&(t=Di())===o&&(t=function(){var t,e;t=fo,function(){var t;return 91===r.charCodeAt(fo)?(t="[",fo++):(t=o,0===Co&&Ao(qu)),t}()!==o&&Si()!==o&&(e=Hi())!==o&&Si()!==o&&function(){var t;return 93===r.charCodeAt(fo)?(t="]",fo++):(t=o,0===Co&&Ao(Zu)),t}()!==o?(t={type:"array",value:e}):(fo=t,t=o);return t}()),t}function Di(){var r,t,e,n,u,s,a,i;if(r=fo,(t=ki())!==o){for(e=[],n=fo,(u=Si())!==o&&(s=Rs())!==o&&(a=Si())!==o&&(i=ki())!==o?n=u=[u,s,a,i]:(fo=n,n=o);n!==o;)e.push(n),n=fo,(u=Si())!==o&&(s=Rs())!==o&&(a=Si())!==o&&(i=ki())!==o?n=u=[u,s,a,i]:(fo=n,n=o);e!==o?(r=t=Br(t,e)):(fo=r,r=o);}else fo=r,r=o;return r}function ki(){var r,t,e,n,u,s,a,i;if(r=fo,(t=$i())!==o){for(e=[],n=fo,(u=Si())!==o&&(s=gs())!==o&&(a=Si())!==o&&(i=$i())!==o?n=u=[u,s,a,i]:(fo=n,n=o);n!==o;)e.push(n),n=fo,(u=Si())!==o&&(s=gs())!==o&&(a=Si())!==o&&(i=$i())!==o?n=u=[u,s,a,i]:(fo=n,n=o);e!==o?(r=t=Br(t,e)):(fo=r,r=o);}else fo=r,r=o;return r}function $i(){var r,t,e;return (r=Ys())===o&&(r=Gi())===o&&(r=Pi())===o&&(r=Hs())===o&&(r=fo,hi()!==o&&Si()!==o&&(t=Di())!==o&&Si()!==o&&Ai()!==o?((e=t).parentheses=!0,r=e):(fo=r,r=o)),r}function Fi(){var r,t,e,n,u,s,a;return r=fo,(t=xs())!==o?(e=fo,(n=Si())!==o&&(u=pi())!==o&&(s=Si())!==o&&(a=xs())!==o?e=n=[n,u,s,a]:(fo=e,e=o),e===o&&(e=null),e!==o?(r=t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e)):(fo=r,r=o)):(fo=r,r=o),r}function Pi(){var r,t,e;return r=fo,(t=Fi())!==o&&Si()!==o&&hi()!==o&&Si()!==o?((e=Hi())===o&&(e=null),e!==o&&Si()!==o&&Ai()!==o?(r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(fo=r,r=o)):(fo=r,r=o),r===o&&(r=fo,(t=Fi())!==o&&(t=function(r){return {type:"function",name:r,args:null}}(t)),r=t),r}function Hi(){var r,t,e,n,u,s,a,i;if(r=fo,(t=$i())!==o){for(e=[],n=fo,(u=Si())!==o&&(s=wi())!==o&&(a=Si())!==o&&(i=$i())!==o?n=u=[u,s,a,i]:(fo=n,n=o);n!==o;)e.push(n),n=fo,(u=Si())!==o&&(s=wi())!==o&&(a=Si())!==o&&(i=$i())!==o?n=u=[u,s,a,i]:(fo=n,n=o);e!==o?(r=t=qi(t,e)):(fo=r,r=o);}else fo=r,r=o;return r}function Gi(){var r,t,e,n,u;return r=fo,(t=ai())!==o&&(e=ji())!==o?(n=t,u=e,r=t={type:"var",...u,prefix:n}):(fo=r,r=o),r}function ji(){var t,e,n,u,s;return t=fo,(e=ks())!==o&&(n=function(){var t,e,n,u,s;t=fo,e=[],n=fo,46===r.charCodeAt(fo)?(u=".",fo++):(u=o,0===Co&&Ao(ve));u!==o&&(s=ks())!==o?n=u=[u,s]:(fo=n,n=o);for(;n!==o;)e.push(n),n=fo,46===r.charCodeAt(fo)?(u=".",fo++):(u=o,0===Co&&Ao(ve)),u!==o&&(s=ks())!==o?n=u=[u,s]:(fo=n,n=o);e!==o&&(e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return t=e}())!==o?(u=e,s=n,rc.push(u),t=e={type:"var",name:u,members:s,prefix:null}):(fo=t,t=o),t}function Yi(){var t;return (t=function(){var t,e,n,u;t=fo,(e=ja())===o&&(e=Ya());if(e!==o)if(Si()!==o)if(hi()!==o)if(Si()!==o){if(n=[],be.test(r.charAt(fo))?(u=r.charAt(fo),fo++):(u=o,0===Co&&Ao(de)),u!==o)for(;u!==o;)n.push(u),be.test(r.charAt(fo))?(u=r.charAt(fo),fo++):(u=o,0===Co&&Ao(de));else n=o;n!==o&&(u=Si())!==o&&Ai()!==o?(e={dataType:e,length:parseInt(n.join(""),10)},t=e):(fo=t,t=o);}else fo=t,t=o;else fo=t,t=o;else fo=t,t=o;else fo=t,t=o;t===o&&(t=fo,(e=ja())!==o&&(e=function(r){return {dataType:r}}(e)),(t=e)===o&&(t=fo,(e=Ya())!==o&&(e=lo(e)),t=e));return t}())===o&&(t=function(){var t,e,n,u,s,a,i,c,l,f,v,b;t=fo,(e=Ba())===o&&(e=Xa())===o&&(e=Va())===o&&(e=Ka())===o&&(e=qa())===o&&(e=Za())===o&&(e=za())===o&&(e=Ja())===o&&(e=Qa());if(e!==o)if((n=Si())!==o)if((u=hi())!==o)if((s=Si())!==o){if(a=[],be.test(r.charAt(fo))?(i=r.charAt(fo),fo++):(i=o,0===Co&&Ao(de)),i!==o)for(;i!==o;)a.push(i),be.test(r.charAt(fo))?(i=r.charAt(fo),fo++):(i=o,0===Co&&Ao(de));else a=o;if(a!==o)if((i=Si())!==o){if(c=fo,(l=wi())!==o)if((f=Si())!==o){if(v=[],be.test(r.charAt(fo))?(b=r.charAt(fo),fo++):(b=o,0===Co&&Ao(de)),b!==o)for(;b!==o;)v.push(b),be.test(r.charAt(fo))?(b=r.charAt(fo),fo++):(b=o,0===Co&&Ao(de));else v=o;v!==o?c=l=[l,f,v]:(fo=c,c=o);}else fo=c,c=o;else fo=c,c=o;c===o&&(c=null),c!==o&&(l=Si())!==o&&(f=Ai())!==o&&(v=Si())!==o?((b=Bi())===o&&(b=null),b!==o?(d=c,L=b,e={dataType:e,length:parseInt(a.join(""),10),scale:d&&parseInt(d[2].join(""),10),parentheses:!0,suffix:L},t=e):(fo=t,t=o)):(fo=t,t=o);}else fo=t,t=o;else fo=t,t=o;}else fo=t,t=o;else fo=t,t=o;else fo=t,t=o;else fo=t,t=o;var d,L;if(t===o){if(t=fo,(e=Ba())===o&&(e=Xa())===o&&(e=Va())===o&&(e=Ka())===o&&(e=qa())===o&&(e=Za())===o&&(e=za())===o&&(e=Ja())===o&&(e=Qa()),e!==o){if(n=[],be.test(r.charAt(fo))?(u=r.charAt(fo),fo++):(u=o,0===Co&&Ao(de)),u!==o)for(;u!==o;)n.push(u),be.test(r.charAt(fo))?(u=r.charAt(fo),fo++):(u=o,0===Co&&Ao(de));else n=o;n!==o&&(u=Si())!==o?((s=Bi())===o&&(s=null),s!==o?(e=function(r,t,e){return {dataType:r,length:parseInt(t.join(""),10),suffix:e}}(e,n,s),t=e):(fo=t,t=o)):(fo=t,t=o);}else fo=t,t=o;t===o&&(t=fo,(e=Ba())===o&&(e=Xa())===o&&(e=Va())===o&&(e=Ka())===o&&(e=qa())===o&&(e=Za())===o&&(e=za())===o&&(e=Ja())===o&&(e=Qa()),e!==o&&(n=Si())!==o?((u=Bi())===o&&(u=null),u!==o&&(s=Si())!==o?(e=function(r,t){return {dataType:r,suffix:t}}(e,u),t=e):(fo=t,t=o)):(fo=t,t=o));}return t}())===o&&(t=function(){var t,e,n,u;t=fo,(e=ri())===o&&(e=ti())===o&&(e=ei())===o&&(e=ni());if(e!==o)if(Si()!==o)if(hi()!==o)if(Si()!==o){if(n=[],be.test(r.charAt(fo))?(u=r.charAt(fo),fo++):(u=o,0===Co&&Ao(de)),u!==o)for(;u!==o;)n.push(u),be.test(r.charAt(fo))?(u=r.charAt(fo),fo++):(u=o,0===Co&&Ao(de));else n=o;n!==o&&(u=Si())!==o&&Ai()!==o?(e={dataType:e,length:parseInt(n.join(""),10)},t=e):(fo=t,t=o);}else fo=t,t=o;else fo=t,t=o;else fo=t,t=o;else fo=t,t=o;t===o&&(t=fo,(e=ri())===o&&(e=ti())===o&&(e=ei())===o&&(e=ni()),e!==o&&(e=lo(e)),t=e);return t}())===o&&(t=function(){var t,e;t=fo,(e=function(){var t,e,n,u;return t=fo,"json"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(Zn)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="JSON"):(fo=t,t=o)):(fo=t,t=o),t}())===o&&(e=function(){var t,e,n,u;return t=fo,"jsonb"===r.substr(fo,5).toLowerCase()?(e=r.substr(fo,5),fo+=5):(e=o,0===Co&&Ao(zn)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="JSONB"):(fo=t,t=o)):(fo=t,t=o),t}());e!==o&&(e=lo(e));return t=e}())===o&&(t=function(){var t,e;t=fo,(e=function(){var t,e,n,u;return t=fo,"geometry"===r.substr(fo,8).toLowerCase()?(e=r.substr(fo,8),fo+=8):(e=o,0===Co&&Ao(Jn)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="GEOMETRY"):(fo=t,t=o)):(fo=t,t=o),t}())!==o&&(e={dataType:e});return t=e}())===o&&(t=function(){var t,e;t=fo,(e=function(){var t,e,n,u;return t=fo,"tinytext"===r.substr(fo,8).toLowerCase()?(e=r.substr(fo,8),fo+=8):(e=o,0===Co&&Ao(tu)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="TINYTEXT"):(fo=t,t=o)):(fo=t,t=o),t}())===o&&(e=function(){var t,e,n,u;return t=fo,"text"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(eu)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="TEXT"):(fo=t,t=o)):(fo=t,t=o),t}())===o&&(e=function(){var t,e,n,u;return t=fo,"mediumtext"===r.substr(fo,10).toLowerCase()?(e=r.substr(fo,10),fo+=10):(e=o,0===Co&&Ao(nu)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="MEDIUMTEXT"):(fo=t,t=o)):(fo=t,t=o),t}())===o&&(e=function(){var t,e,n,u;return t=fo,"longtext"===r.substr(fo,8).toLowerCase()?(e=r.substr(fo,8),fo+=8):(e=o,0===Co&&Ao(uu)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="LONGTEXT"):(fo=t,t=o)):(fo=t,t=o),t}());e!==o&&(e={dataType:e});return t=e}())===o&&(t=function(){var t,e;t=fo,(e=function(){var t,e,n,u;return t=fo,"uuid"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(du)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="UUID"):(fo=t,t=o)):(fo=t,t=o),t}())!==o&&(e={dataType:e});return t=e}())===o&&(t=function(){var t,e;t=fo,(e=function(){var t,e,n,u;return t=fo,"bool"===r.substr(fo,4).toLowerCase()?(e=r.substr(fo,4),fo+=4):(e=o,0===Co&&Ao(Pn)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="BOOL"):(fo=t,t=o)):(fo=t,t=o),t}())===o&&(e=function(){var t,e,n,u;return t=fo,"boolean"===r.substr(fo,7).toLowerCase()?(e=r.substr(fo,7),fo+=7):(e=o,0===Co&&Ao(Hn)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="BOOLEAN"):(fo=t,t=o)):(fo=t,t=o),t}());e!==o&&(e={dataType:e});return t=e}()),t}function Bi(){var t,e,n;return t=fo,(e=Wa())===o&&(e=null),e!==o&&Si()!==o?((n=function(){var t,e,n,u;return t=fo,"zerofill"===r.substr(fo,8).toLowerCase()?(e=r.substr(fo,8),fo+=8):(e=o,0===Co&&Ao(Kn)),e!==o?(n=fo,Co++,u=$s(),Co--,u===o?n=void 0:(fo=n,n=o),n!==o?(t=e="ZEROFILL"):(fo=t,t=o)):(fo=t,t=o),t}())===o&&(n=null),n!==o?(t=e=function(r,t){const e=[];return r&&e.push(r),t&&e.push(t),e}(e,n)):(fo=t,t=o)):(fo=t,t=o),t}const Xi={ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,INTERVAL:!0,IS:!0,JOIN:!0,JSON:!0,KEY:!0,LEFT:!0,LIKE:!0,LIMIT:!0,NOT:!0,NULL:!0,NULLS:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,RECURSIVE:!0,RENAME:!0,RIGHT:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,STATUS:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,TYPE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WITH:!0,WHEN:!0,WHERE:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0};function Wi(r,t){return {type:"unary_expr",operator:r,expr:t}}function Vi(r,t,e){return {type:"binary_expr",operator:r,left:t,right:e}}function Ki(r){const t=n(Number.MAX_SAFE_INTEGER);return !(n(r)<t)}function qi(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][3]);return e}function Zi(r,t){let e=r;for(let r=0;r<t.length;r++)e=Vi(t[r][1],e,t[r][3]);return e}function zi(r){const t=nc[r];return t||(r||null)}function Ji(r){const t=[];for(let e of r.keys()){const r=e.split("::");if(!r){t.push(e);break}r&&r[1]&&(r[1]=zi(r[1])),t.push(r.join("::"));}return t}function Qi(r){return "string"==typeof r?{type:"same",value:r}:r}let rc=[];const tc=new Set,ec=new Set,nc={};if((e=a())!==o&&fo===r.length)return e;throw e!==o&&fo<r.length&&Ao({type:"end"}),yo(Lo,bo<r.length?r.charAt(bo):null,bo<r.length?ho(bo,bo+1):ho(bo,bo))}};},function(r,t,e){r.exports=e(10);},function(r,t,e){e.r(t),e.d(t,"Parser",(function(){return Kr})),e.d(t,"util",(function(){return n}));var n={};e.r(n),e.d(n,"arrayStructTypeToSQL",(function(){return Q})),e.d(n,"autoIncreatementToSQL",(function(){return ur})),e.d(n,"columnOrderListToSQL",(function(){return or})),e.d(n,"commonKeywordArgsToSQL",(function(){return nr})),e.d(n,"commonOptionConnector",(function(){return $})),e.d(n,"connector",(function(){return F})),e.d(n,"commonTypeValue",(function(){return q})),e.d(n,"commentToSQL",(function(){return rr})),e.d(n,"createBinaryExpr",(function(){return H})),e.d(n,"createValueExpr",(function(){return P})),e.d(n,"DEFAULT_OPT",(function(){return D})),e.d(n,"escape",(function(){return G})),e.d(n,"literalToSQL",(function(){return V})),e.d(n,"columnIdentifierToSql",(function(){return X})),e.d(n,"identifierToSql",(function(){return W})),e.d(n,"onPartitionsToSQL",(function(){return J})),e.d(n,"replaceParams",(function(){return K})),e.d(n,"returningToSQL",(function(){return er})),e.d(n,"hasVal",(function(){return z})),e.d(n,"setParserOpt",(function(){return Y})),e.d(n,"toUpper",(function(){return Z})),e.d(n,"topToSQL",(function(){return B})),e.d(n,"triggerEventToSQL",(function(){return tr}));var u=e(1),o=e(2),s=e(3),a=e(4),i=e(5),c=e(6),l=e(7),f=e(8),v={bigquery:u.parse,db2:o.parse,hive:s.parse,mysql:a.parse,mariadb:i.parse,postgresql:c.parse,transactsql:l.parse,flinksql:f.parse};function b(r){return function(r){if(Array.isArray(r))return d(r)}(r)||function(r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r))return Array.from(r)}(r)||function(r,t){if(!r)return;if("string"==typeof r)return d(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return d(r,t)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function d(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function L(r){if(!r)return [];var t=r.keyword,e=r.type;return [t.toUpperCase(),e.toUpperCase()]}function C(r){if(r){var t=r.type,e=r.expr,n=r.symbol,u=t.toUpperCase(),o=[];switch(o.push(u),u){case"KEY_BLOCK_SIZE":n&&o.push(n),o.push(V(e));break;case"BTREE":case"HASH":o.length=0,o.push.apply(o,b(L(r)));break;case"WITH PARSER":o.push(e);break;case"VISIBLE":case"INVISIBLE":break;case"COMMENT":o.shift(),o.push(rr(r));break;case"DATA_COMPRESSION":o.push(n,Z(e.value),J(e.on));break;default:o.push(n,V(e));}return o.filter(z).join(" ")}}function p(r){return r?r.map(C):[]}function w(r){var t=r.constraint_type,e=r.index_type,n=r.index_options,u=void 0===n?[]:n,o=r.definition,s=[];if(s.push.apply(s,b(L(e))),o&&o.length){var a="CHECK"===Z(t)?"(".concat(Tr(o[0]),")"):"(".concat(o.map((function(r){return W(r)})).join(", "),")");s.push(a);}return s.push(p(u).join(" ")),s}function E(r){return function(r){if(Array.isArray(r))return h(r)}(r)||function(r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r))return Array.from(r)}(r)||function(r,t){if(!r)return;if("string"==typeof r)return h(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return h(r,t)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function h(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function A(r){if(r){var t=r.constraint,e=r.constraint_type,n=r.index,u=r.keyword,o=r.reference_definition,s=[];return s.push(Z(u)),s.push(W(t)),s.push(Z(e)),s.push(W(n)),s.push.apply(s,E(w(r))),s.push.apply(s,E(_(o))),s.filter(z).join(" ")}}function y(r){var t=r.table,e=r.db,n=r.as,u=r.expr,o=W(e),s=t?W(t):Tr(u),a=o?"".concat(o,".").concat(s):s;return n?"".concat(a," AS ").concat(W(n)):a}function T(r){if("UNNEST"===Z(r.type))return function(r){var t=r.type,e=r.as,n=r.expr,u=r.with_offset;return [Z(t),"(".concat(n&&Tr(n)||" ",")"),$("AS",W,e),$(Z(u&&u.keyword),W,u&&u.as)].filter(z).join(" ")}(r);var t=r[0],e=[];if("dual"===t.type)return "DUAL";e.push(y(t));for(var n=1;n<r.length;++n){var u=r[n],o=u.on,s=u.using,a=u.join,i=[];i.push(a?" ".concat(a):","),i.push(y(u)),i.push($("ON",Tr,o)),s&&i.push("USING (".concat(s.map(W).join(", "),")")),e.push(i.filter(z).join(" "));}return e.filter(z).join("")}function m(r){var t=r.keyword,e=r.symbol,n=r.value,u=[t.toUpperCase()];return e&&u.push(e),u.push(n),u.join(" ")}function S(r){return function(r){if(Array.isArray(r))return I(r)}(r)||function(r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r))return Array.from(r)}(r)||function(r,t){if(!r)return;if("string"==typeof r)return I(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return I(r,t)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function I(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function N(r){var t=r.arrow,e=r.as,n=r.collate,u=r.column,o=r.isDual,s=r.table,a=r.parentheses,i=r.property,c="*"===u?"*":W(u,o);s&&(c="".concat(W(s),".").concat(c));var l=[c,$("AS",Tr,e),$(t,V,i)];n&&l.push(q(n).join(" "));var f=l.filter(z).join(" ");return a?"(".concat(f,")"):f}function R(r){var t=r||{},e=t.dataType,n=t.length,u=t.suffix,o=t.scale,s=e;return n&&(s+="(".concat([n,o].filter(z).join(", "),")")),u&&u.length&&(s+=" ".concat(u.join(" "))),s}function _(r){var t=[];if(!r)return t;var e=r.definition,n=r.keyword,u=r.match,o=r.table,s=r.on_delete,a=r.on_update;return t.push(n.toUpperCase()),t.push(T(o)),t.push("(".concat(e.map(W).join(", "),")")),t.push(Z(u)),t.push.apply(t,S(q(s))),t.push.apply(t,S(q(a))),t.filter(z)}function g(r){var t=r.column,e=r.collate,n=r.nulls,u=r.opclass,o=r.order;return [Tr(t),$(e&&e.type,W,e&&e.value),u,Z(o),Z(n)].filter(z).join(" ")}function O(r){var t=[],e=N(r.column),n=R(r.definition);t.push(e),t.push(n);var u=function(r){var t=[],e=r.nullable,n=r.check,u=r.comment,o=r.collate,s=r.storage,a=r.default_val,i=r.auto_increment,c=r.unique_or_primary,l=r.column_format,f=r.reference_definition;if(t.push(Z(e&&e.value)),a){var v=a.type,b=a.value;t.push(v.toUpperCase(),Tr(b));}return t.push(A(n)),t.push(ur(i),Z(c),rr(u)),t.push.apply(t,S(q(o))),t.push.apply(t,S(q(l))),t.push.apply(t,S(q(s))),t.push.apply(t,S(_(f))),t.filter(z).join(" ")}(r);return t.push(u),t.filter(z).join(" ")}function U(r,t){if(!r||"*"===r)return r;var e=function(r){var t=Array.isArray(r)&&r[0];return !(!t||"dual"!==t.type)}(t),n=[],u=r.expr_list,o=r.star,s=r.type;n.push(o,Z(s));var a=(u||r).map((function(r){return function(r,t){var e=r.expr;t&&(e.isDual=t);var n=Tr(e);return null!==r.as&&(n="".concat(n," AS "),n=r.as.match(/^[a-z_][0-9a-z_]*$/i)?"".concat(n).concat(W(r.as)):"".concat(n).concat(X(r.as))),n}(r,e)})).join(", ");return n.push([s&&"(",a,s&&")"].filter(z).join("")),n.filter(z).join(" ")}function x(r){return (x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r})(r)}var M={"\0":"\\0","'":"\\'",'"':'\\"',"\b":"\\b","\n":"\\n","\r":"\\r","\t":"\\t","":"\\Z"},D={database:"mysql",type:"table"},k=D;function $(r,t,e){if(e)return r?"".concat(r.toUpperCase()," ").concat(t(e)):t(e)}function F(r,t){if(t)return "".concat(r.toUpperCase()," ").concat(t)}function P(r){var t=x(r);if(Array.isArray(r))return {type:"expr_list",value:r.map(P)};if(null===r)return {type:"null",value:null};switch(t){case"boolean":return {type:"bool",value:r};case"string":return {type:"string",value:r};case"number":return {type:"number",value:r};default:throw new Error('Cannot convert value "'.concat(t,'" to SQL'))}}function H(r,t,e){var n={operator:r,type:"binary_expr"};return n.left=t.type?t:P(t),"BETWEEN"===r||"NOT BETWEEN"===r?(n.right={type:"expr_list",value:[P(e[0]),P(e[1])]},n):(n.right=e.type?e:P(e),n)}function G(r){for(var t=[],e=0,n=r.length;e<n;++e){var u=r[e],o=M[u];o&&(u=o),t.push(u);}return t.join("")}function j(){return k}function Y(r){k=r;}function B(r){if(r){var t=r.value,e=r.percent,n="TOP ".concat(t);return e?"".concat(n," ").concat(e.toUpperCase()):n}}function X(r){var t=j().database;if(r)switch(t&&t.toLowerCase()){case"postgresql":case"db2":return '"'.concat(r,'"');case"transactsql":return "[".concat(r,"]");case"mysql":case"mariadb":case"bigquery":default:return "`".concat(r,"`")}}function W(r,t){var e=j().database;if(!0===t)return "'".concat(r,"'");if(r)switch(e&&e.toLowerCase()){case"mysql":case"mariadb":return "`".concat(r,"`");case"postgresql":return '"'.concat(r,'"');case"transactsql":return "[".concat(r,"]");case"bigquery":case"db2":return r;default:return "`".concat(r,"`")}}function V(r){if(r){var t=r.type,e=r.parentheses,n=r.value,u=n;switch(t){case"string":u="'".concat(G(n),"'");break;case"double_quote_string":u='"'.concat(G(n),'"');break;case"single_quote_string":u="'".concat(n,"'");break;case"boolean":case"bool":u=n?"TRUE":"FALSE";break;case"null":u="NULL";break;case"star":u="*";break;case"param":u=":".concat(n);break;case"origin":u=n.toUpperCase();break;case"time":case"date":case"timestamp":u="".concat(t.toUpperCase()," '").concat(n,"'");}return e?"(".concat(u,")"):u}}function K(r,t){return function r(t,e){return Object.keys(t).filter((function(r){var e=t[r];return Array.isArray(e)||"object"===x(e)&&null!==e})).forEach((function(n){var u=t[n];if("object"!==x(u)||"param"!==u.type)return r(u,e);if(void 0===e[u.value])throw new Error("no value for parameter :".concat(u.value," found"));return t[n]=P(e[u.value]),null})),t}(JSON.parse(JSON.stringify(r)),t)}function q(r){var t=[];if(!r)return t;var e=r.type,n=r.value;return t.push(e.toUpperCase()),t.push(n.toUpperCase()),t}function Z(r){if(r)return r.toUpperCase()}function z(r){return r}function J(r){var t=r.type,e=r.partitions;return [Z(t),"(".concat(e.map((function(r){if("range"!==r.type)return V(r);var t=r.start,e=r.end,n=r.symbol;return "".concat(V(t)," ").concat(Z(n)," ").concat(V(e))})).join(", "),")")].join(" ")}function Q(r){if(r){var t=r.dataType,e=r.definition,n=r.anglebracket,u=Z(t);if("ARRAY"!==u&&"STRUCT"!==u)return u;var o=e&&e.map((function(r){return [r.field_name,Q(r.field_type)].filter(z).join(" ")})).join(", ");return n?"".concat(u,"<").concat(o,">"):"".concat(u," ").concat(o)}}function rr(r){if(r){var t=[],e=r.keyword,n=r.symbol,u=r.value;return t.push(e.toUpperCase()),n&&t.push(n),t.push(V(u)),t.join(" ")}}function tr(r){return r.map((function(r){var t=r.keyword,e=r.args,n=[Z(t)];if(e){var u=e.keyword,o=e.columns;n.push(Z(u),o.map(N).join(", "));}return n.join(" ")})).join(" OR ")}function er(r){return r?["RETURNING",r.columns.map(N).filter(z).join(", ")].join(" "):""}function nr(r){return r?[Z(r.keyword),Z(r.args)]:[]}function ur(r){if(!r||"string"==typeof r)return Z(r);var t=r.keyword,e=r.seed,n=r.increment,u=r.parentheses,o=Z(t);return u&&(o+="(".concat(V(e),", ").concat(V(n),")")),o}function or(r){if(r)return r.map(g).filter(z).join(", ")}function sr(r){return function(r){if(Array.isArray(r))return ar(r)}(r)||function(r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r))return Array.from(r)}(r)||function(r,t){if(!r)return;if("string"==typeof r)return ar(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return ar(r,t)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ar(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function ir(r){if("string"==typeof r)return r;var t=r.window_specification;return "(".concat(function(r){var t=r.name,e=r.partitionby,n=r.orderby,u=r.window_frame_clause;return [t,Sr(e,"partition by"),Sr(n,"order by"),Z(u)].filter(z).join(" ")}(t),")")}function cr(r){var t=r.name,e=r.as_window_specification;return "".concat(t," AS ").concat(ir(e))}function lr(r){if(r){var t=r.as_window_specification,e=r.orderby,n=r.partitionby;if("WINDOW"===Z(r.type)){var u=ir(t);return "OVER ".concat(u)}var o=Sr(n,"partition by"),s=Sr(e,"order by");return "OVER (".concat([o,s].filter(z).join(" "),")")}}function fr(r){var t=r.args,e=r.name;if(!t)return e;var n=r.parentheses,u=r.over,o="".concat(e,"(").concat(Tr(t).join(", "),")"),s=lr(u);return [n?"(".concat(o,")"):o,s].filter(z).join(" ")}function vr(r){return function(r){if(Array.isArray(r))return br(r)}(r)||function(r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r))return Array.from(r)}(r)||function(r,t){if(!r)return;if("string"==typeof r)return br(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return br(r,t)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function br(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function dr(r){return r?[Z(r.prefix),Tr(r.value),Z(r.suffix)]:[]}function Lr(r){return r?r.fetch?(e=(t=r).fetch,n=t.offset,[].concat(vr(dr(n)),vr(dr(e))).filter(z).join(" ")):function(r){var t=r.seperator;return F("LIMIT",r.value.map(Tr).join("".concat("offset"===t?" ":"").concat(Z(t)," ")))}(r):"";var t,e,n;}function Cr(r){if(r&&0!==r.length){var t=r[0].recursive?"RECURSIVE ":"",e=r.map((function(r){var t=r.name,e=r.stmt,n=r.columns,u=Array.isArray(n)?"(".concat(n.join(", "),")"):"";return "".concat(t).concat(u," AS (").concat(Tr(e),")")})).join(", ");return "WITH ".concat(t).concat(e)}}function pr(r){var t=r.as_struct_val,e=r.columns,n=r.distinct,u=r.from,o=r.for_sys_time_as_of,s=void 0===o?{}:o,a=r.for_update,i=r.groupby,c=r.having,l=r.limit,f=r.options,v=r.orderby,b=r.parentheses_symbol,d=r.top,L=r.window,C=r.with,p=r.where,w=[Cr(C),"SELECT",Z(t)];w.push(B(d)),Array.isArray(f)&&w.push(f.join(" ")),w.push(n,U(e,u)),w.push($("FROM",T,u));var E=s||{},h=E.keyword,A=E.expr;w.push($(h,Tr,A)),w.push($("WHERE",Tr,p)),w.push(F("GROUP BY",mr(i).join(", "))),w.push($("HAVING",Tr,c)),w.push($("WINDOW",Tr,L)),w.push(Sr(v,"order by")),w.push(Lr(l)),w.push(Z(a));var y=w.filter(z).join(" ");return b?"(".concat(y,")"):y}function wr(r){return (wr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r})(r)}function Er(r){var t=r.expr_list;switch(Z(r.type)){case"STRUCT":return "(".concat(U(t),")");case"ARRAY":return function(r){var t=r.array_path,e=r.expr_list,n=r.parentheses;if(!e)return "[".concat(U(t),"]");if(Array.isArray(e))return "[".concat(e.map((function(r){return "(".concat(U(r),")")})).filter(z).join(", "),"]");var u=Tr(e);return n?"(".concat(u,")"):u}(r);default:return ""}}function hr(r){var t=r.definition,e=[Z(r.keyword)];return t&&"object"===wr(t)&&(e.length=0,e.push(Q(t))),e.push(Er(r)),e.filter(z).join("")}function Ar(r){return (Ar="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r})(r)}var yr={alter:function(r){var t=r.action,e=r.constraint_type,n=r.if_not_exists,u=r.keyword,o=r.resource,s="",a=[];switch(o){case"column":a=[O(r)];break;case"index":a=w(r),s=r[o];break;case"table":s=W(r[o]);break;case"algorithm":case"lock":s="= ".concat(r[o]);break;case"constraint":s=W(r[o]),a=[Z(e)].concat(sr(w(r)));}return [Z(t),Z(u),Z(n),s,a.filter(z).join(" ")].filter(z).join(" ")},aggr_func:function(r){var t=r.args,e=r.over,n=r.orderby,u=Tr(t.expr),o=r.name,s=lr(e);return t.distinct&&(u="DISTINCT ".concat(u)),n&&(u="".concat(u," ").concat(Sr(n,"order by"))),["".concat(o,"(").concat(u,")"),s].filter(z).join(" ")},array:hr,assign:function(r){var t=r.left,e=r.right,n=r.symbol,u=r.keyword;t.keyword=u;var o=Tr(t),s=Tr(e);return "".concat(o," ").concat(n," ").concat(s)},extract:function(r){var t=r.args,e=r.type,n=t.field,u=t.cast_type,o=t.source,s=["".concat(Z(e),"(").concat(Z(n)),"FROM",Z(u),Tr(o)];return "".concat(s.filter(z).join(" "),")")},binary_expr:function(r){var t=r.operator,e=Tr(r.right),n=!1;if(Array.isArray(e)){switch(t){case"=":t="IN";break;case"!=":t="NOT IN";break;case"BETWEEN":case"NOT BETWEEN":n=!0,e="".concat(e[0]," AND ").concat(e[1]);}n||(e="(".concat(e.join(", "),")"));}var u="".concat(Tr(r.left)," ").concat(t," ").concat(e);return r.parentheses?"(".concat(u,")"):u},case:function(r){var t=["CASE"],e=r.args;r.expr&&t.push(Tr(r.expr));for(var n=0,u=e.length;n<u;++n)t.push(e[n].type.toUpperCase()),e[n].cond&&(t.push(Tr(e[n].cond)),t.push("THEN")),t.push(Tr(e[n].result));return t.push("END"),t.join(" ")},cast:function(r){var t=r.target,e=r.expr,n=r.symbol,u=t.length,o=t.dataType,s=t.parentheses,a=t.scale,i="";u&&(i=a?"".concat(u,", ").concat(a):u),s&&(i="(".concat(i,")"));var c=Tr(e),l="::",f="";return "as"===n&&(c="CAST(".concat(c),f=")",l=" ".concat(n.toUpperCase()," ")),"".concat(c).concat(l).concat(o).concat(i).concat(f)},column_ref:N,function:fr,interval:function(r){var t=r.expr,e=r.unit;return ["INTERVAL",Tr(t),Z(e)].filter(z).join(" ")},struct:hr,window:function(r){return r.expr.map(cr).join(", ")}};function Tr(r){var t=r;if(r.ast){var e=t.ast;Reflect.deleteProperty(t,e);for(var n=0,u=Object.keys(e);n<u.length;n++){var o=u[n];t[o]=e[o];}}return yr[t.type]?yr[t.type](t):V(t)}function mr(r){return r?r.map(Tr):[]}function Sr(r,t){if(!Array.isArray(r))return "";var e=[],n=Z(t);switch(n){case"ORDER BY":e=r.map((function(r){return "".concat(Tr(r.expr)," ").concat(r.type)}));break;case"PARTITION BY":default:e=r.map((function(r){return "".concat(N(r.expr))}));}return F(n,e.join(", "))}function Ir(r){return function(r){if(Array.isArray(r))return Nr(r)}(r)||function(r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r))return Array.from(r)}(r)||function(r,t){if(!r)return;if("string"==typeof r)return Nr(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return Nr(r,t)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Nr(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function Rr(r){if(!r)return [];var t,e,n,u,o=r.resource;switch(o){case"column":return O(r);case"index":return e=[],n=(t=r).keyword,u=t.index,e.push(Z(n)),e.push(u),e.push.apply(e,b(w(t))),e.filter(z).join(" ");case"constraint":return A(r);default:throw new Error("unknow resource = ".concat(o," type"))}}function _r(r,t){var e;if("undefined"==typeof Symbol||null==r[Symbol.iterator]){if(Array.isArray(r)||(e=function(r,t){if(!r)return;if("string"==typeof r)return gr(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return gr(r,t)}(r))||t&&r&&"number"==typeof r.length){e&&(r=e);var n=0,u=function(){};return {s:u,n:function(){return n>=r.length?{done:!0}:{done:!1,value:r[n++]}},e:function(r){throw r},f:u}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,s=!0,a=!1;return {s:function(){e=r[Symbol.iterator]();},n:function(){var r=e.next();return s=r.done,r},e:function(r){a=!0,o=r;},f:function(){try{s||null==e.return||e.return();}finally{if(a)throw o}}}}function gr(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function Or(r){if(!r||0===r.length)return "";var t,e=[],n=_r(r);try{for(n.s();!(t=n.n()).done;){var u=t.value,o="",s=u.table,a=u.column,i=u.value;o=[s,a].filter(z).map((function(r){return W(r)})).join("."),i&&(o="".concat(o," = ").concat(Tr(i))),e.push(o);}}catch(r){n.e(r);}finally{n.f();}return e.join(", ")}function Ur(r){if("select"===r.type)return pr(r);var t=r.map(Tr);return "(".concat(t.join("),("),")")}function xr(r){if(!r)return "";var t=["PARTITION","("];if(Array.isArray(r))t.push(r.map(W).join(", "));else{var e=r.value;t.push(e.map(Tr).join(", "));}return t.push(")"),t.filter(z).join("")}function Mr(r){return function(r){if(Array.isArray(r))return $r(r)}(r)||function(r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r))return Array.from(r)}(r)||kr(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Dr(r,t){var e;if("undefined"==typeof Symbol||null==r[Symbol.iterator]){if(Array.isArray(r)||(e=kr(r))||t&&r&&"number"==typeof r.length){e&&(r=e);var n=0,u=function(){};return {s:u,n:function(){return n>=r.length?{done:!0}:{done:!1,value:r[n++]}},e:function(r){throw r},f:u}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,s=!0,a=!1;return {s:function(){e=r[Symbol.iterator]();},n:function(){var r=e.next();return s=r.done,r},e:function(r){a=!0,o=r;},f:function(){try{s||null==e.return||e.return();}finally{if(a)throw o}}}}function kr(r,t){if(r){if("string"==typeof r)return $r(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);return "Object"===e&&r.constructor&&(e=r.constructor.name),"Map"===e||"Set"===e?Array.from(r):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?$r(r,t):void 0}}function $r(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function Fr(r){var t=r.type,e=r.keyword,n=r.name,u=[Z(t),Z(e)];switch(e){case"table":u.push(T(n));break;case"procedure":u.push(W(n));}return u.filter(z).join(" ")}function Pr(r){var t=r.type,e=r.keyword,n=r.tables,u=[t.toUpperCase(),Z(e)];if("UNLOCK"===t.toUpperCase())return u.join(" ");var o,s=[],a=Dr(n);try{var i=function(){var r=o.value,t=r.table,e=r.lock_type,n=[y(t)];if(e){n.push(["prefix","type","suffix"].map((function(r){return Z(e[r])})).filter(z).join(" "));}s.push(n.join(" "));};for(a.s();!(o=a.n()).done;)i();}catch(r){a.e(r);}finally{a.f();}return u.push.apply(u,[s.join(", ")].concat(Mr(function(r){var t=r.lock_mode,e=r.nowait,n=[];if(t){var u=t.mode;n.push(u.toUpperCase());}return e&&n.push(e.toUpperCase()),n}(r)))),u.filter(z).join(" ")}yr.var=function(r){var t=r.prefix,e=void 0===t?"@":t,n=r.name,u=r.members,o=r.keyword,s=[];o&&s.push(o);var a=u&&u.length>0?"".concat(n,".").concat(u.join(".")):n;return s.push("".concat(e||"").concat(a)),s.join(" ")},yr.expr_list=function(r){var t=mr(r.value);return r.parentheses?"(".concat(t,")"):t},yr.select=function(r){var t="object"===Ar(r._next)?Gr(r):pr(r);return r.parentheses?"(".concat(t,")"):t},yr.unary_expr=function(r){var t="".concat(r.operator," ").concat(Tr(r.expr));return r.parentheses?"(".concat(t,")"):t};var Hr={alter:function(r){var t=r.type,e=r.table,n=r.expr,u=void 0===n?[]:n;return [Z(t),"TABLE",T(e),u.map(Tr).join(", ")].filter(z).join(" ")},create:function(r){var t=r.keyword,e="";switch(t.toLowerCase()){case"table":e=function(r){var t=r.type,e=r.keyword,n=r.table,u=r.like,o=r.as,s=r.temporary,a=r.if_not_exists,i=r.create_definitions,c=r.table_options,l=r.ignore_replace,f=r.query_expr,v=[Z(t),Z(s),Z(e),Z(a),T(n)];if(u){var b=u.type,d=T(u.table);return v.push(Z(b),d),v.filter(z).join(" ")}return i&&v.push("(".concat(i.map(Rr).join(", "),")")),c&&v.push(c.map(m).join(" ")),v.push(Z(l),Z(o)),f&&v.push(Gr(f)),v.filter(z).join(" ")}(r);break;case"trigger":e=function(r){var t=r.constraint,e=r.constraint_kw,n=r.deferrable,u=r.events,o=r.execute,s=r.for_each,a=r.from,i=r.location,c=r.keyword,l=r.type,f=r.table,v=r.when,b=[Z(l),Z(e),Z(c),W(t),Z(i)],d=tr(u);return b.push(d,"ON",y(f)),a&&b.push("FROM",y(a)),b.push.apply(b,Ir(nr(n)).concat(Ir(nr(s)))),v&&b.push(Z(v.type),Tr(v.cond)),b.push(Z(o.keyword),fr(o.expr)),b.filter(z).join(" ")}(r);break;case"extension":e=function(r){var t=r.extension,e=r.from,n=r.if_not_exists,u=r.keyword,o=r.schema,s=r.type,a=r.with,i=r.version;return [Z(s),Z(u),Z(n),V(t),Z(a),$("SCHEMA",V,o),$("VERSION",V,i),$("FROM",V,e)].filter(z).join(" ")}(r);break;case"index":e=function(r){var t=r.concurrently,e=r.filestream_on,n=r.keyword,u=r.include,o=r.index_columns,s=r.index_type,a=r.index_using,i=r.index,c=r.on,l=r.on_kw,f=r.table,v=r.tablespace,b=r.type,d=r.where,C=r.with,w=r.with_before_where,E=C&&"WITH (".concat(p(C).join(", "),")"),h=u&&"".concat(Z(u.keyword)," (").concat(u.columns.map((function(r){return W(r)})).join(", "),")"),A=[Z(b),Z(s),Z(n),Z(t),W(i),Z(l),y(f)].concat(Ir(L(a)),["(".concat(or(o),")"),h,$("TABLESPACE",V,v)]);return w?A.push(E,$("WHERE",Tr,d)):A.push($("WHERE",Tr,d),E),A.push($("ON",Tr,c),$("FILESTREAM_ON",V,e)),A.filter(z).join(" ")}(r);break;default:throw new Error("unknow create resource ".concat(t))}return e},select:pr,delete:function(r){var t=["DELETE"],e=r.columns,n=r.from,u=r.table,o=r.where,s=r.orderby,a=r.limit,i=U(e,n);return t.push(i),Array.isArray(u)&&(1===u.length&&!0===u[0].addition||t.push(T(u))),t.push($("FROM",T,n)),t.push($("WHERE",Tr,o)),t.push(Sr(s,"order by")),t.push(Lr(a)),t.filter(z).join(" ")},update:function(r){var t=r.table,e=r.set,n=r.where,u=r.orderby,o=r.limit,s=r.returning;return ["UPDATE",T(t),$("SET",Or,e),$("WHERE",Tr,n),Sr(u,"order by"),Lr(o),er(s)].filter(z).join(" ")},insert:function(r){var t=r.table,e=r.prefix,n=void 0===e?"into":e,u=r.columns,o=r.values,s=r.where,a=r.on_duplicate_update,i=r.partition,c=r.returning,l=r.set,f=["INSERT",Z(n),T(t),xr(i)];return Array.isArray(u)&&f.push("(".concat(u.map(W).join(", "),")")),f.push($(Array.isArray(o)?"VALUES":"",Ur,o)),f.push($("SET",Or,l)),f.push($("WHERE",Tr,s)),f.push(er(c)),f.push($(a&&a.keyword,Or,a&&a.set)),f.filter(z).join(" ")},drop:Fr,truncate:Fr,declare:function(r){var t=r.type,e=r.declare,n=[Z(t)],u=e.map((function(r){var t=r.at,e=r.name,n=r.as,u=r.prefix,o=r.definition,s=r.keyword,a=["".concat(t).concat(e),Z(n)];switch(s){case"variable":a.push(R(u)),o&&a.push("=",Tr(o));break;case"cursor":a.push(Z(u));break;case"table":a.push(Z(u),"(".concat(o.map(Rr).join(", "),")"));}return a.filter(z).join(" ")})).join(", ");return n.push(u),n.join(" ")},use:function(r){var t=r.type,e=r.db,n=Z(t),u=W(e);return "".concat(n," ").concat(u)},rename:function(r){var t=r.type,e=r.table,n=[],u="".concat(t&&t.toUpperCase()," TABLE");if(e){var o,s=Dr(e);try{for(s.s();!(o=s.n()).done;){var a=o.value.map(y);n.push(a.join(" TO "));}}catch(r){s.e(r);}finally{s.f();}}return "".concat(u," ").concat(n.join(", "))},call:function(r){var t=Tr(r.expr);return "".concat("CALL"," ").concat(t)},set:function(r){var t=Tr(r.expr);return "".concat("SET"," ").concat(t)},lock:Pr,unlock:Pr};function Gr(r){for(var t=Hr[r.type],e=[t(r)],n=r,u=n._orderby,o=n._limit;r._next;){var s=(r.union||"union").toUpperCase();e.push(s,t(r._next)),r=r._next;}return e.push(Sr(u,"order by"),Lr(o)),e.filter(z).join(" ")}var jr=["select","delete","update","insert","drop","rename","truncate","call","use","alter","set","create","lock","unlock","bigquery","declare"];function Yr(r){var t=r&&r.ast?r.ast:r;if(!jr.includes(t.type))throw new Error("".concat(t.type," statements not supported at the moment"))}function Br(r){return Array.isArray(r)?(r.forEach(Yr),function(r){for(var t=[],e=0,n=r.length;e<n;++e){var u=r[e]&&r[e].ast;u||(u=r[e]),t.push(Gr(u));}return t.join(" ; ")}(r)):(Yr(r),"bigquery"===r.type?(e=(t=r).with,n=t.parentheses,u=t.select,o=t.orderby,s=t.limit,(a=[Cr(e),n&&"(",Gr(u),n&&")"]).push(Sr(o,"order by"),Lr(s)),a.filter((function(r){return r})).join(" ")):Gr(r));var t,e,n,u,o,s,a;}function Xr(r,t){var e;if("undefined"==typeof Symbol||null==r[Symbol.iterator]){if(Array.isArray(r)||(e=function(r,t){if(!r)return;if("string"==typeof r)return Wr(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return Wr(r,t)}(r))||t&&r&&"number"==typeof r.length){e&&(r=e);var n=0,u=function(){};return {s:u,n:function(){return n>=r.length?{done:!0}:{done:!1,value:r[n++]}},e:function(r){throw r},f:u}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,s=!0,a=!1;return {s:function(){e=r[Symbol.iterator]();},n:function(){var r=e.next();return s=r.done,r},e:function(r){a=!0,o=r;},f:function(){try{s||null==e.return||e.return();}finally{if(a)throw o}}}}function Wr(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function Vr(r,t){for(var e=0;e<t.length;e++){var n=t[e];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(r,n.key,n);}}var Kr=function(){function r(){!function(r,t){if(!(r instanceof t))throw new TypeError("Cannot call a class as a function")}(this,r);}var t,e;return t=r,(e=[{key:"astify",value:function(r){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:D,e=this.parse(r,t);return e&&e.ast}},{key:"sqlify",value:function(r){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:D;return Y(t),Br(r)}},{key:"parse",value:function(r){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:D,e=t.database,n=void 0===e?"mysql":e;Y(t);var u=n.toLowerCase();if(v[u])return v[u](r.trim());throw new Error("".concat(n," is not supported currently"))}},{key:"whiteListCheck",value:function(r,t){var e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:D;if(t&&0!==t.length){var n=e.type,u=void 0===n?"table":n;if(!this["".concat(u,"List")]||"function"!=typeof this["".concat(u,"List")])throw new Error("".concat(u," is not valid check mode"));var o,s=this["".concat(u,"List")].bind(this),a=s(r,e),i=!0,c="",l=Xr(a);try{for(l.s();!(o=l.n()).done;){var f,v=o.value,b=!1,d=Xr(t);try{for(d.s();!(f=d.n()).done;){var L=f.value,C=new RegExp(L,"i");if(C.test(v)){b=!0;break}}}catch(r){d.e(r);}finally{d.f();}if(!b){c=v,i=!1;break}}}catch(r){l.e(r);}finally{l.f();}if(!i)throw new Error("authority = '".concat(c,"' is required in ").concat(u," whiteList to execute SQL = '").concat(r,"'"))}}},{key:"tableList",value:function(r,t){var e=this.parse(r,t);return e&&e.tableList}},{key:"columnList",value:function(r,t){var e=this.parse(r,t);return e&&e.columnList}}])&&Vr(t.prototype,e),r}();commonjsGlobal&&commonjsGlobal.window&&(commonjsGlobal.window.NodeSQLParser={Parser:Kr,util:n});}]));

    });

    var sqlParser = unwrapExports(nodeSqlParser);

    var MAX_QUERY_SIZE = 2048;
    var MAX_PARAMS_LENGTH = 5;
    var parseQueryArgs = function parseQueryArgs(arg1, arg2) {
        var paramNotSet = arg2 === undefined && arg1 instanceof Function;
        var callback = paramNotSet ? arg1 : arg2;
        var params = paramNotSet ? [] : arg1;
        return { params: params, callback: callback };
    };
    var extractSqlInformation = function (query, driver) {
        try {
            var parser = new sqlParser.Parser();
            var tableList = parser.parse(query, { database: driver }).tableList;
            if (!isEmpty(tableList)) {
                var _a = __read(tableList[0].split('::'), 3), operation = _a[0], dbName = _a[1], tableName = _a[2];
                return { operation: operation, dbName: dbName, tableName: tableName };
            }
        }
        catch (e) {
            debugLog("Failed to parse sql query: " + query, e);
        }
        return null;
    };
    var wrapSqlQuery = function wrapSqlQuery(queryString, params, callback, config, driver) {
        var patchedCallback;
        var event;
        try {
            var database = config.database, host = config.host;
            var resourceIdentifier = {
                host: host,
            };
            var sqlData = extractSqlInformation(queryString, driver);
            if (sqlData) {
                resourceIdentifier.tableName = sqlData.tableName;
            }
            var serviceName = 'sql';
            if (host.match('.rds.')) {
                serviceName = 'rds';
            }
            if (host.match('.redshift.')) {
                serviceName = 'redshift';
            }
            event = tracer.resourceAccessStart(serviceName, resourceIdentifier, {
                database: database,
                driver: driver,
                request: {
                    query: queryString.substring(0, MAX_QUERY_SIZE),
                    parameters: isArray(params) ? params.slice(0, MAX_PARAMS_LENGTH) : undefined,
                },
            });
            event.request.operation = get(sqlData, 'operation', 'query');
            patchedCallback = function (err, res, fields) {
                var endTime = Date.now();
                var rowCount;
                if (!err) {
                    rowCount = res.rowCount;
                    if (!rowCount && isArray(res)) {
                        rowCount = res.length;
                    }
                }
                event.end = endTime;
                event.status = err ? 'ERROR' : 'OK';
                event.response.rowCount = rowCount;
                event.error = serializeError$1(err);
                if (callback) {
                    callback(err, res, fields);
                }
            };
        }
        catch (e) {
            if (event) {
                event.end = Date.now();
                event.error = serializeError$1(e);
                event.status = 'ERROR';
            }
        }
        return patchedCallback || callback;
    };

    function mysqlQueryWrapper(wrappedFunction) {
        var internalMySqlQueryWrapper = function internalMySqlQueryWrapper(sql, arg1, arg2) {
            var _a;
            var queryString;
            var callback;
            var params;
            var overrideInnerCallback = false;
            if (typeof sql !== 'string') {
                queryString = sql.sql;
            }
            else {
                queryString = sql;
            }
            if (sql.onResult) {
                params = sql.values;
                callback = sql.onResult;
            }
            else {
                (_a = parseQueryArgs(arg1, arg2), params = _a.params, callback = _a.callback);
            }
            // eslint-disable-next-line no-underscore-dangle
            if (callback === undefined && sql._callback) {
                callback = sql._callback; // eslint-disable-line no-underscore-dangle
                overrideInnerCallback = true;
            }
            var patchedCallback = wrapSqlQuery(queryString, params, callback, this.config, 'MySQL');
            if (sql.onResult) {
                sql.onResult = patchedCallback;
            }
            else {
                callback = patchedCallback;
            }
            if (overrideInnerCallback) {
                // eslint-disable-next-line no-underscore-dangle
                sql._callback = patchedCallback;
            }
            return wrappedFunction.apply(this, [sql, params, callback]);
        };
        // @ts-ignore
        internalMySqlQueryWrapper.recapDevWrapped = true;
        return internalMySqlQueryWrapper;
    }
    var trackMysql = function () {
        patchModule('mysql2', 'query', mysqlQueryWrapper, function (mysql2) { return mysql2.Connection.prototype; });
        patchModule('mysql2', 'execute', mysqlQueryWrapper, function (mysql2) { return mysql2.Connection.prototype; });
        patchModule('mysql/lib/Connection.js', 'query', mysqlQueryWrapper, function (mysqlConnection) { return mysqlConnection.prototype; });
    };

    function pgClientWrapper(wrappedFunction) {
        return function internalPgClientWrapper(queryString, arg1, arg2) {
            if (queryString && queryString.submit) {
                return wrappedFunction.apply(this, [queryString, arg1, arg2]);
            }
            var parseResult = parseQueryArgs(arg1, arg2);
            var params = parseResult.params;
            var callback = parseResult.callback;
            var sqlString = queryString;
            var sqlParams = params;
            if (queryString && queryString.text) {
                sqlString = queryString.text;
                if (queryString.values && params && !params.length) {
                    params = undefined;
                    sqlParams = queryString.values;
                }
            }
            var patchedCallback = wrapSqlQuery(sqlString, sqlParams, callback, this.connectionParameters || this._clients[0], // eslint-disable-line
            'PostgreSQL');
            if (callback) {
                return wrappedFunction.apply(this, [queryString, params, patchedCallback]);
            }
            patchedCallback = patchedCallback || (function () { });
            var responsePromise = wrappedFunction.apply(this, [queryString, params]);
            if (!(responsePromise && typeof responsePromise.then === 'function')) {
                patchedCallback(null, null, null);
            }
            return responsePromise.then(function (res) {
                patchedCallback(null, res, null);
                return res;
            }, function (err) {
                patchedCallback(err, null, null);
                throw err;
            });
        };
    }
    var trackPostgres = function () {
        patchModule(config.pgDriverModulePath, 'query', pgClientWrapper, function (pg) { return pg.Client.prototype; });
        patchModule('pg-pool', 'query', pgClientWrapper, function (Pool) { return Pool.prototype; });
    };

    var logResult = function (result$$1, event) {
        event.end = Date.now();
        event.status = 'OK';
        event.response.statusCode = result$$1.statusCode;
        event.response.body = cloneDeep(result$$1.body);
        if (get(result$$1, 'body.hits.hits')) {
            event.response.body.hits.hits = result$$1.body.hits.hits.length;
        }
        return result$$1;
    };
    var logError = function (err, event) {
        event.end = Date.now();
        event.error = serializeError$1(err);
        event.status = 'ERROR';
        throw err;
    };
    function elasticSearchWrapper(wrappedFunction) {
        function internalEsClientWrapper(params, options, callback) {
            if (callback) {
                var event_1 = tracer.resourceAccessStart('elasticsearch', { path: params.path }, {
                    request: {
                        method: params.method,
                        body: params.body,
                        bulkBody: params.bulkBody,
                        queryString: params.querystring,
                        operation: params.method,
                    },
                });
                var patchedCallback = function (err, result$$1) {
                    if (err) {
                        logError(err, event_1);
                    }
                    else {
                        logResult(result$$1, event_1);
                    }
                    callback(err, result$$1);
                };
                return wrappedFunction.apply(this, [params, options, patchedCallback]);
            }
            return wrappedFunction.apply(this, [params, options]);
        }
        internalEsClientWrapper.recapDevWrapped = true;
        return internalEsClientWrapper;
    }
    var trackElasticsearch = function () {
        patchModule('@elastic/elasticsearch', 'request', elasticSearchWrapper, function (es) { return es.Transport.prototype; });
    };

    var punycode = createCommonjsModule(function (module, exports) {
    (function(root) {

    	/** Detect free variables */
    	var freeExports = exports &&
    		!exports.nodeType && exports;
    	var freeModule = module &&
    		!module.nodeType && module;
    	var freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal;
    	if (
    		freeGlobal.global === freeGlobal ||
    		freeGlobal.window === freeGlobal ||
    		freeGlobal.self === freeGlobal
    	) {
    		root = freeGlobal;
    	}

    	/**
    	 * The `punycode` object.
    	 * @name punycode
    	 * @type Object
    	 */
    	var punycode,

    	/** Highest positive signed 32-bit float value */
    	maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1

    	/** Bootstring parameters */
    	base = 36,
    	tMin = 1,
    	tMax = 26,
    	skew = 38,
    	damp = 700,
    	initialBias = 72,
    	initialN = 128, // 0x80
    	delimiter = '-', // '\x2D'

    	/** Regular expressions */
    	regexPunycode = /^xn--/,
    	regexNonASCII = /[^\x20-\x7E]/, // unprintable ASCII chars + non-ASCII chars
    	regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, // RFC 3490 separators

    	/** Error messages */
    	errors = {
    		'overflow': 'Overflow: input needs wider integers to process',
    		'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
    		'invalid-input': 'Invalid input'
    	},

    	/** Convenience shortcuts */
    	baseMinusTMin = base - tMin,
    	floor = Math.floor,
    	stringFromCharCode = String.fromCharCode,

    	/** Temporary variable */
    	key;

    	/*--------------------------------------------------------------------------*/

    	/**
    	 * A generic error utility function.
    	 * @private
    	 * @param {String} type The error type.
    	 * @returns {Error} Throws a `RangeError` with the applicable error message.
    	 */
    	function error(type) {
    		throw RangeError(errors[type]);
    	}

    	/**
    	 * A generic `Array#map` utility function.
    	 * @private
    	 * @param {Array} array The array to iterate over.
    	 * @param {Function} callback The function that gets called for every array
    	 * item.
    	 * @returns {Array} A new array of values returned by the callback function.
    	 */
    	function map(array, fn) {
    		var length = array.length;
    		var result = [];
    		while (length--) {
    			result[length] = fn(array[length]);
    		}
    		return result;
    	}

    	/**
    	 * A simple `Array#map`-like wrapper to work with domain name strings or email
    	 * addresses.
    	 * @private
    	 * @param {String} domain The domain name or email address.
    	 * @param {Function} callback The function that gets called for every
    	 * character.
    	 * @returns {Array} A new string of characters returned by the callback
    	 * function.
    	 */
    	function mapDomain(string, fn) {
    		var parts = string.split('@');
    		var result = '';
    		if (parts.length > 1) {
    			// In email addresses, only the domain name should be punycoded. Leave
    			// the local part (i.e. everything up to `@`) intact.
    			result = parts[0] + '@';
    			string = parts[1];
    		}
    		// Avoid `split(regex)` for IE8 compatibility. See #17.
    		string = string.replace(regexSeparators, '\x2E');
    		var labels = string.split('.');
    		var encoded = map(labels, fn).join('.');
    		return result + encoded;
    	}

    	/**
    	 * Creates an array containing the numeric code points of each Unicode
    	 * character in the string. While JavaScript uses UCS-2 internally,
    	 * this function will convert a pair of surrogate halves (each of which
    	 * UCS-2 exposes as separate characters) into a single code point,
    	 * matching UTF-16.
    	 * @see `punycode.ucs2.encode`
    	 * @see <https://mathiasbynens.be/notes/javascript-encoding>
    	 * @memberOf punycode.ucs2
    	 * @name decode
    	 * @param {String} string The Unicode input string (UCS-2).
    	 * @returns {Array} The new array of code points.
    	 */
    	function ucs2decode(string) {
    		var output = [],
    		    counter = 0,
    		    length = string.length,
    		    value,
    		    extra;
    		while (counter < length) {
    			value = string.charCodeAt(counter++);
    			if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
    				// high surrogate, and there is a next character
    				extra = string.charCodeAt(counter++);
    				if ((extra & 0xFC00) == 0xDC00) { // low surrogate
    					output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
    				} else {
    					// unmatched surrogate; only append this code unit, in case the next
    					// code unit is the high surrogate of a surrogate pair
    					output.push(value);
    					counter--;
    				}
    			} else {
    				output.push(value);
    			}
    		}
    		return output;
    	}

    	/**
    	 * Creates a string based on an array of numeric code points.
    	 * @see `punycode.ucs2.decode`
    	 * @memberOf punycode.ucs2
    	 * @name encode
    	 * @param {Array} codePoints The array of numeric code points.
    	 * @returns {String} The new Unicode string (UCS-2).
    	 */
    	function ucs2encode(array) {
    		return map(array, function(value) {
    			var output = '';
    			if (value > 0xFFFF) {
    				value -= 0x10000;
    				output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
    				value = 0xDC00 | value & 0x3FF;
    			}
    			output += stringFromCharCode(value);
    			return output;
    		}).join('');
    	}

    	/**
    	 * Converts a basic code point into a digit/integer.
    	 * @see `digitToBasic()`
    	 * @private
    	 * @param {Number} codePoint The basic numeric code point value.
    	 * @returns {Number} The numeric value of a basic code point (for use in
    	 * representing integers) in the range `0` to `base - 1`, or `base` if
    	 * the code point does not represent a value.
    	 */
    	function basicToDigit(codePoint) {
    		if (codePoint - 48 < 10) {
    			return codePoint - 22;
    		}
    		if (codePoint - 65 < 26) {
    			return codePoint - 65;
    		}
    		if (codePoint - 97 < 26) {
    			return codePoint - 97;
    		}
    		return base;
    	}

    	/**
    	 * Converts a digit/integer into a basic code point.
    	 * @see `basicToDigit()`
    	 * @private
    	 * @param {Number} digit The numeric value of a basic code point.
    	 * @returns {Number} The basic code point whose value (when used for
    	 * representing integers) is `digit`, which needs to be in the range
    	 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
    	 * used; else, the lowercase form is used. The behavior is undefined
    	 * if `flag` is non-zero and `digit` has no uppercase form.
    	 */
    	function digitToBasic(digit, flag) {
    		//  0..25 map to ASCII a..z or A..Z
    		// 26..35 map to ASCII 0..9
    		return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
    	}

    	/**
    	 * Bias adaptation function as per section 3.4 of RFC 3492.
    	 * http://tools.ietf.org/html/rfc3492#section-3.4
    	 * @private
    	 */
    	function adapt(delta, numPoints, firstTime) {
    		var k = 0;
    		delta = firstTime ? floor(delta / damp) : delta >> 1;
    		delta += floor(delta / numPoints);
    		for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {
    			delta = floor(delta / baseMinusTMin);
    		}
    		return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
    	}

    	/**
    	 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
    	 * symbols.
    	 * @memberOf punycode
    	 * @param {String} input The Punycode string of ASCII-only symbols.
    	 * @returns {String} The resulting string of Unicode symbols.
    	 */
    	function decode(input) {
    		// Don't use UCS-2
    		var output = [],
    		    inputLength = input.length,
    		    out,
    		    i = 0,
    		    n = initialN,
    		    bias = initialBias,
    		    basic,
    		    j,
    		    index,
    		    oldi,
    		    w,
    		    k,
    		    digit,
    		    t,
    		    /** Cached calculation results */
    		    baseMinusT;

    		// Handle the basic code points: let `basic` be the number of input code
    		// points before the last delimiter, or `0` if there is none, then copy
    		// the first basic code points to the output.

    		basic = input.lastIndexOf(delimiter);
    		if (basic < 0) {
    			basic = 0;
    		}

    		for (j = 0; j < basic; ++j) {
    			// if it's not a basic code point
    			if (input.charCodeAt(j) >= 0x80) {
    				error('not-basic');
    			}
    			output.push(input.charCodeAt(j));
    		}

    		// Main decoding loop: start just after the last delimiter if any basic code
    		// points were copied; start at the beginning otherwise.

    		for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {

    			// `index` is the index of the next character to be consumed.
    			// Decode a generalized variable-length integer into `delta`,
    			// which gets added to `i`. The overflow checking is easier
    			// if we increase `i` as we go, then subtract off its starting
    			// value at the end to obtain `delta`.
    			for (oldi = i, w = 1, k = base; /* no condition */; k += base) {

    				if (index >= inputLength) {
    					error('invalid-input');
    				}

    				digit = basicToDigit(input.charCodeAt(index++));

    				if (digit >= base || digit > floor((maxInt - i) / w)) {
    					error('overflow');
    				}

    				i += digit * w;
    				t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);

    				if (digit < t) {
    					break;
    				}

    				baseMinusT = base - t;
    				if (w > floor(maxInt / baseMinusT)) {
    					error('overflow');
    				}

    				w *= baseMinusT;

    			}

    			out = output.length + 1;
    			bias = adapt(i - oldi, out, oldi == 0);

    			// `i` was supposed to wrap around from `out` to `0`,
    			// incrementing `n` each time, so we'll fix that now:
    			if (floor(i / out) > maxInt - n) {
    				error('overflow');
    			}

    			n += floor(i / out);
    			i %= out;

    			// Insert `n` at position `i` of the output
    			output.splice(i++, 0, n);

    		}

    		return ucs2encode(output);
    	}

    	/**
    	 * Converts a string of Unicode symbols (e.g. a domain name label) to a
    	 * Punycode string of ASCII-only symbols.
    	 * @memberOf punycode
    	 * @param {String} input The string of Unicode symbols.
    	 * @returns {String} The resulting Punycode string of ASCII-only symbols.
    	 */
    	function encode(input) {
    		var n,
    		    delta,
    		    handledCPCount,
    		    basicLength,
    		    bias,
    		    j,
    		    m,
    		    q,
    		    k,
    		    t,
    		    currentValue,
    		    output = [],
    		    /** `inputLength` will hold the number of code points in `input`. */
    		    inputLength,
    		    /** Cached calculation results */
    		    handledCPCountPlusOne,
    		    baseMinusT,
    		    qMinusT;

    		// Convert the input in UCS-2 to Unicode
    		input = ucs2decode(input);

    		// Cache the length
    		inputLength = input.length;

    		// Initialize the state
    		n = initialN;
    		delta = 0;
    		bias = initialBias;

    		// Handle the basic code points
    		for (j = 0; j < inputLength; ++j) {
    			currentValue = input[j];
    			if (currentValue < 0x80) {
    				output.push(stringFromCharCode(currentValue));
    			}
    		}

    		handledCPCount = basicLength = output.length;

    		// `handledCPCount` is the number of code points that have been handled;
    		// `basicLength` is the number of basic code points.

    		// Finish the basic string - if it is not empty - with a delimiter
    		if (basicLength) {
    			output.push(delimiter);
    		}

    		// Main encoding loop:
    		while (handledCPCount < inputLength) {

    			// All non-basic code points < n have been handled already. Find the next
    			// larger one:
    			for (m = maxInt, j = 0; j < inputLength; ++j) {
    				currentValue = input[j];
    				if (currentValue >= n && currentValue < m) {
    					m = currentValue;
    				}
    			}

    			// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
    			// but guard against overflow
    			handledCPCountPlusOne = handledCPCount + 1;
    			if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
    				error('overflow');
    			}

    			delta += (m - n) * handledCPCountPlusOne;
    			n = m;

    			for (j = 0; j < inputLength; ++j) {
    				currentValue = input[j];

    				if (currentValue < n && ++delta > maxInt) {
    					error('overflow');
    				}

    				if (currentValue == n) {
    					// Represent delta as a generalized variable-length integer
    					for (q = delta, k = base; /* no condition */; k += base) {
    						t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
    						if (q < t) {
    							break;
    						}
    						qMinusT = q - t;
    						baseMinusT = base - t;
    						output.push(
    							stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))
    						);
    						q = floor(qMinusT / baseMinusT);
    					}

    					output.push(stringFromCharCode(digitToBasic(q, 0)));
    					bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
    					delta = 0;
    					++handledCPCount;
    				}
    			}

    			++delta;
    			++n;

    		}
    		return output.join('');
    	}

    	/**
    	 * Converts a Punycode string representing a domain name or an email address
    	 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
    	 * it doesn't matter if you call it on a string that has already been
    	 * converted to Unicode.
    	 * @memberOf punycode
    	 * @param {String} input The Punycoded domain name or email address to
    	 * convert to Unicode.
    	 * @returns {String} The Unicode representation of the given Punycode
    	 * string.
    	 */
    	function toUnicode(input) {
    		return mapDomain(input, function(string) {
    			return regexPunycode.test(string)
    				? decode(string.slice(4).toLowerCase())
    				: string;
    		});
    	}

    	/**
    	 * Converts a Unicode string representing a domain name or an email address to
    	 * Punycode. Only the non-ASCII parts of the domain name will be converted,
    	 * i.e. it doesn't matter if you call it with a domain that's already in
    	 * ASCII.
    	 * @memberOf punycode
    	 * @param {String} input The domain name or email address to convert, as a
    	 * Unicode string.
    	 * @returns {String} The Punycode representation of the given domain name or
    	 * email address.
    	 */
    	function toASCII(input) {
    		return mapDomain(input, function(string) {
    			return regexNonASCII.test(string)
    				? 'xn--' + encode(string)
    				: string;
    		});
    	}

    	/*--------------------------------------------------------------------------*/

    	/** Define the public API */
    	punycode = {
    		/**
    		 * A string representing the current Punycode.js version number.
    		 * @memberOf punycode
    		 * @type String
    		 */
    		'version': '1.3.2',
    		/**
    		 * An object of methods to convert from JavaScript's internal character
    		 * representation (UCS-2) to Unicode code points, and back.
    		 * @see <https://mathiasbynens.be/notes/javascript-encoding>
    		 * @memberOf punycode
    		 * @type Object
    		 */
    		'ucs2': {
    			'decode': ucs2decode,
    			'encode': ucs2encode
    		},
    		'decode': decode,
    		'encode': encode,
    		'toASCII': toASCII,
    		'toUnicode': toUnicode
    	};

    	/** Expose `punycode` */
    	// Some AMD build optimizers, like r.js, check for specific condition patterns
    	// like the following:
    	if (freeExports && freeModule) {
    		if (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+
    			freeModule.exports = punycode;
    		} else { // in Narwhal or RingoJS v0.7.0-
    			for (key in punycode) {
    				punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);
    			}
    		}
    	} else { // in Rhino or a web browser
    		root.punycode = punycode;
    	}

    }(commonjsGlobal));
    });

    // Copyright Joyent, Inc. and other Node contributors.

    // If obj.hasOwnProperty has been overridden, then calling
    // obj.hasOwnProperty(prop) will break.
    // See: https://github.com/joyent/node/issues/1707
    function hasOwnProperty$p(obj, prop) {
      return Object.prototype.hasOwnProperty.call(obj, prop);
    }

    var decode = function(qs, sep, eq, options) {
      sep = sep || '&';
      eq = eq || '=';
      var obj = {};

      if (typeof qs !== 'string' || qs.length === 0) {
        return obj;
      }

      var regexp = /\+/g;
      qs = qs.split(sep);

      var maxKeys = 1000;
      if (options && typeof options.maxKeys === 'number') {
        maxKeys = options.maxKeys;
      }

      var len = qs.length;
      // maxKeys <= 0 means that we should not limit keys count
      if (maxKeys > 0 && len > maxKeys) {
        len = maxKeys;
      }

      for (var i = 0; i < len; ++i) {
        var x = qs[i].replace(regexp, '%20'),
            idx = x.indexOf(eq),
            kstr, vstr, k, v;

        if (idx >= 0) {
          kstr = x.substr(0, idx);
          vstr = x.substr(idx + 1);
        } else {
          kstr = x;
          vstr = '';
        }

        k = decodeURIComponent(kstr);
        v = decodeURIComponent(vstr);

        if (!hasOwnProperty$p(obj, k)) {
          obj[k] = v;
        } else if (Array.isArray(obj[k])) {
          obj[k].push(v);
        } else {
          obj[k] = [obj[k], v];
        }
      }

      return obj;
    };

    // Copyright Joyent, Inc. and other Node contributors.

    var stringifyPrimitive = function(v) {
      switch (typeof v) {
        case 'string':
          return v;

        case 'boolean':
          return v ? 'true' : 'false';

        case 'number':
          return isFinite(v) ? v : '';

        default:
          return '';
      }
    };

    var encode = function(obj, sep, eq, name) {
      sep = sep || '&';
      eq = eq || '=';
      if (obj === null) {
        obj = undefined;
      }

      if (typeof obj === 'object') {
        return Object.keys(obj).map(function(k) {
          var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
          if (Array.isArray(obj[k])) {
            return obj[k].map(function(v) {
              return ks + encodeURIComponent(stringifyPrimitive(v));
            }).join(sep);
          } else {
            return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
          }
        }).join(sep);

      }

      if (!name) return '';
      return encodeURIComponent(stringifyPrimitive(name)) + eq +
             encodeURIComponent(stringifyPrimitive(obj));
    };

    var D__Development_Workspace_recap_devClient_node_modules_querystring = createCommonjsModule(function (module, exports) {

    exports.decode = exports.parse = decode;
    exports.encode = exports.stringify = encode;
    });
    var D__Development_Workspace_recap_devClient_node_modules_querystring_1 = D__Development_Workspace_recap_devClient_node_modules_querystring.decode;
    var D__Development_Workspace_recap_devClient_node_modules_querystring_2 = D__Development_Workspace_recap_devClient_node_modules_querystring.parse;
    var D__Development_Workspace_recap_devClient_node_modules_querystring_3 = D__Development_Workspace_recap_devClient_node_modules_querystring.encode;
    var D__Development_Workspace_recap_devClient_node_modules_querystring_4 = D__Development_Workspace_recap_devClient_node_modules_querystring.stringify;

    var punycode$1 = createCommonjsModule(function (module, exports) {
    (function(root) {

    	/** Detect free variables */
    	var freeExports = exports &&
    		!exports.nodeType && exports;
    	var freeModule = module &&
    		!module.nodeType && module;
    	var freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal;
    	if (
    		freeGlobal.global === freeGlobal ||
    		freeGlobal.window === freeGlobal ||
    		freeGlobal.self === freeGlobal
    	) {
    		root = freeGlobal;
    	}

    	/**
    	 * The `punycode` object.
    	 * @name punycode
    	 * @type Object
    	 */
    	var punycode,

    	/** Highest positive signed 32-bit float value */
    	maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1

    	/** Bootstring parameters */
    	base = 36,
    	tMin = 1,
    	tMax = 26,
    	skew = 38,
    	damp = 700,
    	initialBias = 72,
    	initialN = 128, // 0x80
    	delimiter = '-', // '\x2D'

    	/** Regular expressions */
    	regexPunycode = /^xn--/,
    	regexNonASCII = /[^\x20-\x7E]/, // unprintable ASCII chars + non-ASCII chars
    	regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, // RFC 3490 separators

    	/** Error messages */
    	errors = {
    		'overflow': 'Overflow: input needs wider integers to process',
    		'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
    		'invalid-input': 'Invalid input'
    	},

    	/** Convenience shortcuts */
    	baseMinusTMin = base - tMin,
    	floor = Math.floor,
    	stringFromCharCode = String.fromCharCode,

    	/** Temporary variable */
    	key;

    	/*--------------------------------------------------------------------------*/

    	/**
    	 * A generic error utility function.
    	 * @private
    	 * @param {String} type The error type.
    	 * @returns {Error} Throws a `RangeError` with the applicable error message.
    	 */
    	function error(type) {
    		throw RangeError(errors[type]);
    	}

    	/**
    	 * A generic `Array#map` utility function.
    	 * @private
    	 * @param {Array} array The array to iterate over.
    	 * @param {Function} callback The function that gets called for every array
    	 * item.
    	 * @returns {Array} A new array of values returned by the callback function.
    	 */
    	function map(array, fn) {
    		var length = array.length;
    		var result = [];
    		while (length--) {
    			result[length] = fn(array[length]);
    		}
    		return result;
    	}

    	/**
    	 * A simple `Array#map`-like wrapper to work with domain name strings or email
    	 * addresses.
    	 * @private
    	 * @param {String} domain The domain name or email address.
    	 * @param {Function} callback The function that gets called for every
    	 * character.
    	 * @returns {Array} A new string of characters returned by the callback
    	 * function.
    	 */
    	function mapDomain(string, fn) {
    		var parts = string.split('@');
    		var result = '';
    		if (parts.length > 1) {
    			// In email addresses, only the domain name should be punycoded. Leave
    			// the local part (i.e. everything up to `@`) intact.
    			result = parts[0] + '@';
    			string = parts[1];
    		}
    		// Avoid `split(regex)` for IE8 compatibility. See #17.
    		string = string.replace(regexSeparators, '\x2E');
    		var labels = string.split('.');
    		var encoded = map(labels, fn).join('.');
    		return result + encoded;
    	}

    	/**
    	 * Creates an array containing the numeric code points of each Unicode
    	 * character in the string. While JavaScript uses UCS-2 internally,
    	 * this function will convert a pair of surrogate halves (each of which
    	 * UCS-2 exposes as separate characters) into a single code point,
    	 * matching UTF-16.
    	 * @see `punycode.ucs2.encode`
    	 * @see <https://mathiasbynens.be/notes/javascript-encoding>
    	 * @memberOf punycode.ucs2
    	 * @name decode
    	 * @param {String} string The Unicode input string (UCS-2).
    	 * @returns {Array} The new array of code points.
    	 */
    	function ucs2decode(string) {
    		var output = [],
    		    counter = 0,
    		    length = string.length,
    		    value,
    		    extra;
    		while (counter < length) {
    			value = string.charCodeAt(counter++);
    			if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
    				// high surrogate, and there is a next character
    				extra = string.charCodeAt(counter++);
    				if ((extra & 0xFC00) == 0xDC00) { // low surrogate
    					output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
    				} else {
    					// unmatched surrogate; only append this code unit, in case the next
    					// code unit is the high surrogate of a surrogate pair
    					output.push(value);
    					counter--;
    				}
    			} else {
    				output.push(value);
    			}
    		}
    		return output;
    	}

    	/**
    	 * Creates a string based on an array of numeric code points.
    	 * @see `punycode.ucs2.decode`
    	 * @memberOf punycode.ucs2
    	 * @name encode
    	 * @param {Array} codePoints The array of numeric code points.
    	 * @returns {String} The new Unicode string (UCS-2).
    	 */
    	function ucs2encode(array) {
    		return map(array, function(value) {
    			var output = '';
    			if (value > 0xFFFF) {
    				value -= 0x10000;
    				output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
    				value = 0xDC00 | value & 0x3FF;
    			}
    			output += stringFromCharCode(value);
    			return output;
    		}).join('');
    	}

    	/**
    	 * Converts a basic code point into a digit/integer.
    	 * @see `digitToBasic()`
    	 * @private
    	 * @param {Number} codePoint The basic numeric code point value.
    	 * @returns {Number} The numeric value of a basic code point (for use in
    	 * representing integers) in the range `0` to `base - 1`, or `base` if
    	 * the code point does not represent a value.
    	 */
    	function basicToDigit(codePoint) {
    		if (codePoint - 48 < 10) {
    			return codePoint - 22;
    		}
    		if (codePoint - 65 < 26) {
    			return codePoint - 65;
    		}
    		if (codePoint - 97 < 26) {
    			return codePoint - 97;
    		}
    		return base;
    	}

    	/**
    	 * Converts a digit/integer into a basic code point.
    	 * @see `basicToDigit()`
    	 * @private
    	 * @param {Number} digit The numeric value of a basic code point.
    	 * @returns {Number} The basic code point whose value (when used for
    	 * representing integers) is `digit`, which needs to be in the range
    	 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
    	 * used; else, the lowercase form is used. The behavior is undefined
    	 * if `flag` is non-zero and `digit` has no uppercase form.
    	 */
    	function digitToBasic(digit, flag) {
    		//  0..25 map to ASCII a..z or A..Z
    		// 26..35 map to ASCII 0..9
    		return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
    	}

    	/**
    	 * Bias adaptation function as per section 3.4 of RFC 3492.
    	 * http://tools.ietf.org/html/rfc3492#section-3.4
    	 * @private
    	 */
    	function adapt(delta, numPoints, firstTime) {
    		var k = 0;
    		delta = firstTime ? floor(delta / damp) : delta >> 1;
    		delta += floor(delta / numPoints);
    		for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {
    			delta = floor(delta / baseMinusTMin);
    		}
    		return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
    	}

    	/**
    	 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
    	 * symbols.
    	 * @memberOf punycode
    	 * @param {String} input The Punycode string of ASCII-only symbols.
    	 * @returns {String} The resulting string of Unicode symbols.
    	 */
    	function decode(input) {
    		// Don't use UCS-2
    		var output = [],
    		    inputLength = input.length,
    		    out,
    		    i = 0,
    		    n = initialN,
    		    bias = initialBias,
    		    basic,
    		    j,
    		    index,
    		    oldi,
    		    w,
    		    k,
    		    digit,
    		    t,
    		    /** Cached calculation results */
    		    baseMinusT;

    		// Handle the basic code points: let `basic` be the number of input code
    		// points before the last delimiter, or `0` if there is none, then copy
    		// the first basic code points to the output.

    		basic = input.lastIndexOf(delimiter);
    		if (basic < 0) {
    			basic = 0;
    		}

    		for (j = 0; j < basic; ++j) {
    			// if it's not a basic code point
    			if (input.charCodeAt(j) >= 0x80) {
    				error('not-basic');
    			}
    			output.push(input.charCodeAt(j));
    		}

    		// Main decoding loop: start just after the last delimiter if any basic code
    		// points were copied; start at the beginning otherwise.

    		for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {

    			// `index` is the index of the next character to be consumed.
    			// Decode a generalized variable-length integer into `delta`,
    			// which gets added to `i`. The overflow checking is easier
    			// if we increase `i` as we go, then subtract off its starting
    			// value at the end to obtain `delta`.
    			for (oldi = i, w = 1, k = base; /* no condition */; k += base) {

    				if (index >= inputLength) {
    					error('invalid-input');
    				}

    				digit = basicToDigit(input.charCodeAt(index++));

    				if (digit >= base || digit > floor((maxInt - i) / w)) {
    					error('overflow');
    				}

    				i += digit * w;
    				t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);

    				if (digit < t) {
    					break;
    				}

    				baseMinusT = base - t;
    				if (w > floor(maxInt / baseMinusT)) {
    					error('overflow');
    				}

    				w *= baseMinusT;

    			}

    			out = output.length + 1;
    			bias = adapt(i - oldi, out, oldi == 0);

    			// `i` was supposed to wrap around from `out` to `0`,
    			// incrementing `n` each time, so we'll fix that now:
    			if (floor(i / out) > maxInt - n) {
    				error('overflow');
    			}

    			n += floor(i / out);
    			i %= out;

    			// Insert `n` at position `i` of the output
    			output.splice(i++, 0, n);

    		}

    		return ucs2encode(output);
    	}

    	/**
    	 * Converts a string of Unicode symbols (e.g. a domain name label) to a
    	 * Punycode string of ASCII-only symbols.
    	 * @memberOf punycode
    	 * @param {String} input The string of Unicode symbols.
    	 * @returns {String} The resulting Punycode string of ASCII-only symbols.
    	 */
    	function encode(input) {
    		var n,
    		    delta,
    		    handledCPCount,
    		    basicLength,
    		    bias,
    		    j,
    		    m,
    		    q,
    		    k,
    		    t,
    		    currentValue,
    		    output = [],
    		    /** `inputLength` will hold the number of code points in `input`. */
    		    inputLength,
    		    /** Cached calculation results */
    		    handledCPCountPlusOne,
    		    baseMinusT,
    		    qMinusT;

    		// Convert the input in UCS-2 to Unicode
    		input = ucs2decode(input);

    		// Cache the length
    		inputLength = input.length;

    		// Initialize the state
    		n = initialN;
    		delta = 0;
    		bias = initialBias;

    		// Handle the basic code points
    		for (j = 0; j < inputLength; ++j) {
    			currentValue = input[j];
    			if (currentValue < 0x80) {
    				output.push(stringFromCharCode(currentValue));
    			}
    		}

    		handledCPCount = basicLength = output.length;

    		// `handledCPCount` is the number of code points that have been handled;
    		// `basicLength` is the number of basic code points.

    		// Finish the basic string - if it is not empty - with a delimiter
    		if (basicLength) {
    			output.push(delimiter);
    		}

    		// Main encoding loop:
    		while (handledCPCount < inputLength) {

    			// All non-basic code points < n have been handled already. Find the next
    			// larger one:
    			for (m = maxInt, j = 0; j < inputLength; ++j) {
    				currentValue = input[j];
    				if (currentValue >= n && currentValue < m) {
    					m = currentValue;
    				}
    			}

    			// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
    			// but guard against overflow
    			handledCPCountPlusOne = handledCPCount + 1;
    			if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
    				error('overflow');
    			}

    			delta += (m - n) * handledCPCountPlusOne;
    			n = m;

    			for (j = 0; j < inputLength; ++j) {
    				currentValue = input[j];

    				if (currentValue < n && ++delta > maxInt) {
    					error('overflow');
    				}

    				if (currentValue == n) {
    					// Represent delta as a generalized variable-length integer
    					for (q = delta, k = base; /* no condition */; k += base) {
    						t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
    						if (q < t) {
    							break;
    						}
    						qMinusT = q - t;
    						baseMinusT = base - t;
    						output.push(
    							stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))
    						);
    						q = floor(qMinusT / baseMinusT);
    					}

    					output.push(stringFromCharCode(digitToBasic(q, 0)));
    					bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
    					delta = 0;
    					++handledCPCount;
    				}
    			}

    			++delta;
    			++n;

    		}
    		return output.join('');
    	}

    	/**
    	 * Converts a Punycode string representing a domain name or an email address
    	 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
    	 * it doesn't matter if you call it on a string that has already been
    	 * converted to Unicode.
    	 * @memberOf punycode
    	 * @param {String} input The Punycoded domain name or email address to
    	 * convert to Unicode.
    	 * @returns {String} The Unicode representation of the given Punycode
    	 * string.
    	 */
    	function toUnicode(input) {
    		return mapDomain(input, function(string) {
    			return regexPunycode.test(string)
    				? decode(string.slice(4).toLowerCase())
    				: string;
    		});
    	}

    	/**
    	 * Converts a Unicode string representing a domain name or an email address to
    	 * Punycode. Only the non-ASCII parts of the domain name will be converted,
    	 * i.e. it doesn't matter if you call it with a domain that's already in
    	 * ASCII.
    	 * @memberOf punycode
    	 * @param {String} input The domain name or email address to convert, as a
    	 * Unicode string.
    	 * @returns {String} The Punycode representation of the given domain name or
    	 * email address.
    	 */
    	function toASCII(input) {
    		return mapDomain(input, function(string) {
    			return regexNonASCII.test(string)
    				? 'xn--' + encode(string)
    				: string;
    		});
    	}

    	/*--------------------------------------------------------------------------*/

    	/** Define the public API */
    	punycode = {
    		/**
    		 * A string representing the current Punycode.js version number.
    		 * @memberOf punycode
    		 * @type String
    		 */
    		'version': '1.3.2',
    		/**
    		 * An object of methods to convert from JavaScript's internal character
    		 * representation (UCS-2) to Unicode code points, and back.
    		 * @see <https://mathiasbynens.be/notes/javascript-encoding>
    		 * @memberOf punycode
    		 * @type Object
    		 */
    		'ucs2': {
    			'decode': ucs2decode,
    			'encode': ucs2encode
    		},
    		'decode': decode,
    		'encode': encode,
    		'toASCII': toASCII,
    		'toUnicode': toUnicode
    	};

    	/** Expose `punycode` */
    	// Some AMD build optimizers, like r.js, check for specific condition patterns
    	// like the following:
    	if (freeExports && freeModule) {
    		if (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+
    			freeModule.exports = punycode;
    		} else { // in Narwhal or RingoJS v0.7.0-
    			for (key in punycode) {
    				punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);
    			}
    		}
    	} else { // in Rhino or a web browser
    		root.punycode = punycode;
    	}

    }(commonjsGlobal));
    });

    var querystring = createCommonjsModule(function (module, exports) {

    exports.decode = exports.parse = decode;
    exports.encode = exports.stringify = encode;
    });
    var querystring_1 = querystring.decode;
    var querystring_2 = querystring.parse;
    var querystring_3 = querystring.encode;
    var querystring_4 = querystring.stringify;

    // Copyright Joyent, Inc. and other Node contributors.
    //
    // Permission is hereby granted, free of charge, to any person obtaining a
    // copy of this software and associated documentation files (the
    // "Software"), to deal in the Software without restriction, including
    // without limitation the rights to use, copy, modify, merge, publish,
    // distribute, sublicense, and/or sell copies of the Software, and to permit
    // persons to whom the Software is furnished to do so, subject to the
    // following conditions:
    //
    // The above copyright notice and this permission notice shall be included
    // in all copies or substantial portions of the Software.
    //
    // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
    // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
    // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
    // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
    // USE OR OTHER DEALINGS IN THE SOFTWARE.



    var parse = urlParse;
    var resolve = urlResolve;
    var resolveObject = urlResolveObject;
    var format = urlFormat;

    var Url_1 = Url$1;

    function Url$1() {
      this.protocol = null;
      this.slashes = null;
      this.auth = null;
      this.host = null;
      this.port = null;
      this.hostname = null;
      this.hash = null;
      this.search = null;
      this.query = null;
      this.pathname = null;
      this.path = null;
      this.href = null;
    }

    // Reference: RFC 3986, RFC 1808, RFC 2396

    // define these here so at least they only have to be
    // compiled once on the first module load.
    var protocolPattern = /^([a-z0-9.+-]+:)/i,
        portPattern = /:[0-9]*$/,

        // RFC 2396: characters reserved for delimiting URLs.
        // We actually just auto-escape these.
        delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],

        // RFC 2396: characters not allowed for various reasons.
        unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),

        // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
        autoEscape = ['\''].concat(unwise),
        // Characters that are never ever allowed in a hostname.
        // Note that any invalid chars are also handled, but these
        // are the ones that are *expected* to be seen, so we fast-path
        // them.
        nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
        hostEndingChars = ['/', '?', '#'],
        hostnameMaxLen = 255,
        hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/,
        hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/,
        // protocols that can allow "unsafe" and "unwise" chars.
        unsafeProtocol = {
          'javascript': true,
          'javascript:': true
        },
        // protocols that never have a hostname.
        hostlessProtocol = {
          'javascript': true,
          'javascript:': true
        },
        // protocols that always contain a // bit.
        slashedProtocol = {
          'http': true,
          'https': true,
          'ftp': true,
          'gopher': true,
          'file': true,
          'http:': true,
          'https:': true,
          'ftp:': true,
          'gopher:': true,
          'file:': true
        };

    function urlParse(url, parseQueryString, slashesDenoteHost) {
      if (url && isObject$1(url) && url instanceof Url$1) return url;

      var u = new Url$1;
      u.parse(url, parseQueryString, slashesDenoteHost);
      return u;
    }

    Url$1.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {
      if (!isString$1(url)) {
        throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
      }

      var rest = url;

      // trim before proceeding.
      // This is to support parse stuff like "  http://foo.com  \n"
      rest = rest.trim();

      var proto = protocolPattern.exec(rest);
      if (proto) {
        proto = proto[0];
        var lowerProto = proto.toLowerCase();
        this.protocol = lowerProto;
        rest = rest.substr(proto.length);
      }

      // figure out if it's got a host
      // user@server is *always* interpreted as a hostname, and url
      // resolution will treat //foo/bar as host=foo,path=bar because that's
      // how the browser resolves relative URLs.
      if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
        var slashes = rest.substr(0, 2) === '//';
        if (slashes && !(proto && hostlessProtocol[proto])) {
          rest = rest.substr(2);
          this.slashes = true;
        }
      }

      if (!hostlessProtocol[proto] &&
          (slashes || (proto && !slashedProtocol[proto]))) {

        // there's a hostname.
        // the first instance of /, ?, ;, or # ends the host.
        //
        // If there is an @ in the hostname, then non-host chars *are* allowed
        // to the left of the last @ sign, unless some host-ending character
        // comes *before* the @-sign.
        // URLs are obnoxious.
        //
        // ex:
        // http://a@b@c/ => user:a@b host:c
        // http://a@b?@c => user:a host:c path:/?@c

        // v0.12 TODO(isaacs): This is not quite how Chrome does things.
        // Review our test case against browsers more comprehensively.

        // find the first instance of any hostEndingChars
        var hostEnd = -1;
        for (var i = 0; i < hostEndingChars.length; i++) {
          var hec = rest.indexOf(hostEndingChars[i]);
          if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
            hostEnd = hec;
        }

        // at this point, either we have an explicit point where the
        // auth portion cannot go past, or the last @ char is the decider.
        var auth, atSign;
        if (hostEnd === -1) {
          // atSign can be anywhere.
          atSign = rest.lastIndexOf('@');
        } else {
          // atSign must be in auth portion.
          // http://a@b/c@d => host:b auth:a path:/c@d
          atSign = rest.lastIndexOf('@', hostEnd);
        }

        // Now we have a portion which is definitely the auth.
        // Pull that off.
        if (atSign !== -1) {
          auth = rest.slice(0, atSign);
          rest = rest.slice(atSign + 1);
          this.auth = decodeURIComponent(auth);
        }

        // the host is the remaining to the left of the first non-host char
        hostEnd = -1;
        for (var i = 0; i < nonHostChars.length; i++) {
          var hec = rest.indexOf(nonHostChars[i]);
          if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
            hostEnd = hec;
        }
        // if we still have not hit it, then the entire thing is a host.
        if (hostEnd === -1)
          hostEnd = rest.length;

        this.host = rest.slice(0, hostEnd);
        rest = rest.slice(hostEnd);

        // pull out port.
        this.parseHost();

        // we've indicated that there is a hostname,
        // so even if it's empty, it has to be present.
        this.hostname = this.hostname || '';

        // if hostname begins with [ and ends with ]
        // assume that it's an IPv6 address.
        var ipv6Hostname = this.hostname[0] === '[' &&
            this.hostname[this.hostname.length - 1] === ']';

        // validate a little.
        if (!ipv6Hostname) {
          var hostparts = this.hostname.split(/\./);
          for (var i = 0, l = hostparts.length; i < l; i++) {
            var part = hostparts[i];
            if (!part) continue;
            if (!part.match(hostnamePartPattern)) {
              var newpart = '';
              for (var j = 0, k = part.length; j < k; j++) {
                if (part.charCodeAt(j) > 127) {
                  // we replace non-ASCII char with a temporary placeholder
                  // we need this to make sure size of hostname is not
                  // broken by replacing non-ASCII by nothing
                  newpart += 'x';
                } else {
                  newpart += part[j];
                }
              }
              // we test again with ASCII char only
              if (!newpart.match(hostnamePartPattern)) {
                var validParts = hostparts.slice(0, i);
                var notHost = hostparts.slice(i + 1);
                var bit = part.match(hostnamePartStart);
                if (bit) {
                  validParts.push(bit[1]);
                  notHost.unshift(bit[2]);
                }
                if (notHost.length) {
                  rest = '/' + notHost.join('.') + rest;
                }
                this.hostname = validParts.join('.');
                break;
              }
            }
          }
        }

        if (this.hostname.length > hostnameMaxLen) {
          this.hostname = '';
        } else {
          // hostnames are always lower case.
          this.hostname = this.hostname.toLowerCase();
        }

        if (!ipv6Hostname) {
          // IDNA Support: Returns a puny coded representation of "domain".
          // It only converts the part of the domain name that
          // has non ASCII characters. I.e. it dosent matter if
          // you call it with a domain that already is in ASCII.
          var domainArray = this.hostname.split('.');
          var newOut = [];
          for (var i = 0; i < domainArray.length; ++i) {
            var s = domainArray[i];
            newOut.push(s.match(/[^A-Za-z0-9_-]/) ?
                'xn--' + punycode$1.encode(s) : s);
          }
          this.hostname = newOut.join('.');
        }

        var p = this.port ? ':' + this.port : '';
        var h = this.hostname || '';
        this.host = h + p;
        this.href += this.host;

        // strip [ and ] from the hostname
        // the host field still retains them, though
        if (ipv6Hostname) {
          this.hostname = this.hostname.substr(1, this.hostname.length - 2);
          if (rest[0] !== '/') {
            rest = '/' + rest;
          }
        }
      }

      // now rest is set to the post-host stuff.
      // chop off any delim chars.
      if (!unsafeProtocol[lowerProto]) {

        // First, make 100% sure that any "autoEscape" chars get
        // escaped, even if encodeURIComponent doesn't think they
        // need to be.
        for (var i = 0, l = autoEscape.length; i < l; i++) {
          var ae = autoEscape[i];
          var esc = encodeURIComponent(ae);
          if (esc === ae) {
            esc = escape(ae);
          }
          rest = rest.split(ae).join(esc);
        }
      }


      // chop off from the tail first.
      var hash = rest.indexOf('#');
      if (hash !== -1) {
        // got a fragment string.
        this.hash = rest.substr(hash);
        rest = rest.slice(0, hash);
      }
      var qm = rest.indexOf('?');
      if (qm !== -1) {
        this.search = rest.substr(qm);
        this.query = rest.substr(qm + 1);
        if (parseQueryString) {
          this.query = querystring.parse(this.query);
        }
        rest = rest.slice(0, qm);
      } else if (parseQueryString) {
        // no query string, but parseQueryString still requested
        this.search = '';
        this.query = {};
      }
      if (rest) this.pathname = rest;
      if (slashedProtocol[lowerProto] &&
          this.hostname && !this.pathname) {
        this.pathname = '/';
      }

      //to support http.request
      if (this.pathname || this.search) {
        var p = this.pathname || '';
        var s = this.search || '';
        this.path = p + s;
      }

      // finally, reconstruct the href based on what has been validated.
      this.href = this.format();
      return this;
    };

    // format a parsed object into a url string
    function urlFormat(obj) {
      // ensure it's an object, and not a string url.
      // If it's an obj, this is a no-op.
      // this way, you can call url_format() on strings
      // to clean up potentially wonky urls.
      if (isString$1(obj)) obj = urlParse(obj);
      if (!(obj instanceof Url$1)) return Url$1.prototype.format.call(obj);
      return obj.format();
    }

    Url$1.prototype.format = function() {
      var auth = this.auth || '';
      if (auth) {
        auth = encodeURIComponent(auth);
        auth = auth.replace(/%3A/i, ':');
        auth += '@';
      }

      var protocol = this.protocol || '',
          pathname = this.pathname || '',
          hash = this.hash || '',
          host = false,
          query = '';

      if (this.host) {
        host = auth + this.host;
      } else if (this.hostname) {
        host = auth + (this.hostname.indexOf(':') === -1 ?
            this.hostname :
            '[' + this.hostname + ']');
        if (this.port) {
          host += ':' + this.port;
        }
      }

      if (this.query &&
          isObject$1(this.query) &&
          Object.keys(this.query).length) {
        query = querystring.stringify(this.query);
      }

      var search = this.search || (query && ('?' + query)) || '';

      if (protocol && protocol.substr(-1) !== ':') protocol += ':';

      // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
      // unless they had them to begin with.
      if (this.slashes ||
          (!protocol || slashedProtocol[protocol]) && host !== false) {
        host = '//' + (host || '');
        if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
      } else if (!host) {
        host = '';
      }

      if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
      if (search && search.charAt(0) !== '?') search = '?' + search;

      pathname = pathname.replace(/[?#]/g, function(match) {
        return encodeURIComponent(match);
      });
      search = search.replace('#', '%23');

      return protocol + host + pathname + search + hash;
    };

    function urlResolve(source, relative) {
      return urlParse(source, false, true).resolve(relative);
    }

    Url$1.prototype.resolve = function(relative) {
      return this.resolveObject(urlParse(relative, false, true)).format();
    };

    function urlResolveObject(source, relative) {
      if (!source) return relative;
      return urlParse(source, false, true).resolveObject(relative);
    }

    Url$1.prototype.resolveObject = function(relative) {
      if (isString$1(relative)) {
        var rel = new Url$1();
        rel.parse(relative, false, true);
        relative = rel;
      }

      var result = new Url$1();
      Object.keys(this).forEach(function(k) {
        result[k] = this[k];
      }, this);

      // hash is always overridden, no matter what.
      // even href="" will remove it.
      result.hash = relative.hash;

      // if the relative url is empty, then there's nothing left to do here.
      if (relative.href === '') {
        result.href = result.format();
        return result;
      }

      // hrefs like //foo/bar always cut to the protocol.
      if (relative.slashes && !relative.protocol) {
        // take everything except the protocol from relative
        Object.keys(relative).forEach(function(k) {
          if (k !== 'protocol')
            result[k] = relative[k];
        });

        //urlParse appends trailing / to urls like http://www.example.com
        if (slashedProtocol[result.protocol] &&
            result.hostname && !result.pathname) {
          result.path = result.pathname = '/';
        }

        result.href = result.format();
        return result;
      }

      if (relative.protocol && relative.protocol !== result.protocol) {
        // if it's a known url protocol, then changing
        // the protocol does weird things
        // first, if it's not file:, then we MUST have a host,
        // and if there was a path
        // to begin with, then we MUST have a path.
        // if it is file:, then the host is dropped,
        // because that's known to be hostless.
        // anything else is assumed to be absolute.
        if (!slashedProtocol[relative.protocol]) {
          Object.keys(relative).forEach(function(k) {
            result[k] = relative[k];
          });
          result.href = result.format();
          return result;
        }

        result.protocol = relative.protocol;
        if (!relative.host && !hostlessProtocol[relative.protocol]) {
          var relPath = (relative.pathname || '').split('/');
          while (relPath.length && !(relative.host = relPath.shift()));
          if (!relative.host) relative.host = '';
          if (!relative.hostname) relative.hostname = '';
          if (relPath[0] !== '') relPath.unshift('');
          if (relPath.length < 2) relPath.unshift('');
          result.pathname = relPath.join('/');
        } else {
          result.pathname = relative.pathname;
        }
        result.search = relative.search;
        result.query = relative.query;
        result.host = relative.host || '';
        result.auth = relative.auth;
        result.hostname = relative.hostname || relative.host;
        result.port = relative.port;
        // to support http.request
        if (result.pathname || result.search) {
          var p = result.pathname || '';
          var s = result.search || '';
          result.path = p + s;
        }
        result.slashes = result.slashes || relative.slashes;
        result.href = result.format();
        return result;
      }

      var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),
          isRelAbs = (
              relative.host ||
              relative.pathname && relative.pathname.charAt(0) === '/'
          ),
          mustEndAbs = (isRelAbs || isSourceAbs ||
                        (result.host && relative.pathname)),
          removeAllDots = mustEndAbs,
          srcPath = result.pathname && result.pathname.split('/') || [],
          relPath = relative.pathname && relative.pathname.split('/') || [],
          psychotic = result.protocol && !slashedProtocol[result.protocol];

      // if the url is a non-slashed url, then relative
      // links like ../.. should be able
      // to crawl up to the hostname, as well.  This is strange.
      // result.protocol has already been set by now.
      // Later on, put the first path part into the host field.
      if (psychotic) {
        result.hostname = '';
        result.port = null;
        if (result.host) {
          if (srcPath[0] === '') srcPath[0] = result.host;
          else srcPath.unshift(result.host);
        }
        result.host = '';
        if (relative.protocol) {
          relative.hostname = null;
          relative.port = null;
          if (relative.host) {
            if (relPath[0] === '') relPath[0] = relative.host;
            else relPath.unshift(relative.host);
          }
          relative.host = null;
        }
        mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
      }

      if (isRelAbs) {
        // it's absolute.
        result.host = (relative.host || relative.host === '') ?
                      relative.host : result.host;
        result.hostname = (relative.hostname || relative.hostname === '') ?
                          relative.hostname : result.hostname;
        result.search = relative.search;
        result.query = relative.query;
        srcPath = relPath;
        // fall through to the dot-handling below.
      } else if (relPath.length) {
        // it's relative
        // throw away the existing file, and take the new path instead.
        if (!srcPath) srcPath = [];
        srcPath.pop();
        srcPath = srcPath.concat(relPath);
        result.search = relative.search;
        result.query = relative.query;
      } else if (!isNullOrUndefined(relative.search)) {
        // just pull out the search.
        // like href='?foo'.
        // Put this after the other two cases because it simplifies the booleans
        if (psychotic) {
          result.hostname = result.host = srcPath.shift();
          //occationaly the auth can get stuck only in host
          //this especialy happens in cases like
          //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
          var authInHost = result.host && result.host.indexOf('@') > 0 ?
                           result.host.split('@') : false;
          if (authInHost) {
            result.auth = authInHost.shift();
            result.host = result.hostname = authInHost.shift();
          }
        }
        result.search = relative.search;
        result.query = relative.query;
        //to support http.request
        if (!isNull$1(result.pathname) || !isNull$1(result.search)) {
          result.path = (result.pathname ? result.pathname : '') +
                        (result.search ? result.search : '');
        }
        result.href = result.format();
        return result;
      }

      if (!srcPath.length) {
        // no path at all.  easy.
        // we've already handled the other stuff above.
        result.pathname = null;
        //to support http.request
        if (result.search) {
          result.path = '/' + result.search;
        } else {
          result.path = null;
        }
        result.href = result.format();
        return result;
      }

      // if a url ENDs in . or .., then it must get a trailing slash.
      // however, if it ends in anything else non-slashy,
      // then it must NOT get a trailing slash.
      var last = srcPath.slice(-1)[0];
      var hasTrailingSlash = (
          (result.host || relative.host) && (last === '.' || last === '..') ||
          last === '');

      // strip single dots, resolve double dots to parent dir
      // if the path tries to go above the root, `up` ends up > 0
      var up = 0;
      for (var i = srcPath.length; i >= 0; i--) {
        last = srcPath[i];
        if (last == '.') {
          srcPath.splice(i, 1);
        } else if (last === '..') {
          srcPath.splice(i, 1);
          up++;
        } else if (up) {
          srcPath.splice(i, 1);
          up--;
        }
      }

      // if the path is allowed to go above the root, restore leading ..s
      if (!mustEndAbs && !removeAllDots) {
        for (; up--; up) {
          srcPath.unshift('..');
        }
      }

      if (mustEndAbs && srcPath[0] !== '' &&
          (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
        srcPath.unshift('');
      }

      if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {
        srcPath.push('');
      }

      var isAbsolute = srcPath[0] === '' ||
          (srcPath[0] && srcPath[0].charAt(0) === '/');

      // put the host back
      if (psychotic) {
        result.hostname = result.host = isAbsolute ? '' :
                                        srcPath.length ? srcPath.shift() : '';
        //occationaly the auth can get stuck only in host
        //this especialy happens in cases like
        //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
        var authInHost = result.host && result.host.indexOf('@') > 0 ?
                         result.host.split('@') : false;
        if (authInHost) {
          result.auth = authInHost.shift();
          result.host = result.hostname = authInHost.shift();
        }
      }

      mustEndAbs = mustEndAbs || (result.host && srcPath.length);

      if (mustEndAbs && !isAbsolute) {
        srcPath.unshift('');
      }

      if (!srcPath.length) {
        result.pathname = null;
        result.path = null;
      } else {
        result.pathname = srcPath.join('/');
      }

      //to support request.http
      if (!isNull$1(result.pathname) || !isNull$1(result.search)) {
        result.path = (result.pathname ? result.pathname : '') +
                      (result.search ? result.search : '');
      }
      result.auth = relative.auth || result.auth;
      result.slashes = result.slashes || relative.slashes;
      result.href = result.format();
      return result;
    };

    Url$1.prototype.parseHost = function() {
      var host = this.host;
      var port = portPattern.exec(host);
      if (port) {
        port = port[0];
        if (port !== ':') {
          this.port = port.substr(1);
        }
        host = host.substr(0, host.length - port.length);
      }
      if (host) this.hostname = host;
    };

    function isString$1(arg) {
      return typeof arg === "string";
    }

    function isObject$1(arg) {
      return typeof arg === 'object' && arg !== null;
    }

    function isNull$1(arg) {
      return arg === null;
    }
    function isNullOrUndefined(arg) {
      return  arg == null;
    }

    var url = {
    	parse: parse,
    	resolve: resolve,
    	resolveObject: resolveObject,
    	format: format,
    	Url: Url_1
    };

    var extractHostname = function (url$$1) {
        if (!url$$1) {
            return 'unknown';
        }
        var parsedUrl = url.parse(url$$1);
        return (parsedUrl && parsedUrl.hostname)
            || (parsedUrl && parsedUrl.host);
    };
    var isUrlBlacklisted = function (host, path) {
        var _a;
        var syncEndpointHost = extractHostname(process.env.RECAP_DEV_SYNC_ENDPOINT);
        var urlBlacklistMap = (_a = {},
            _a[syncEndpointHost] = 'endsWith',
            _a['oauth2.googleapis.com'] = 'endsWith',
            _a['amazonaws.com'] = function (url$$1, pattern) { return url$$1.endsWith(pattern)
                && (url$$1.indexOf('.execute-api.') === -1)
                && (url$$1.indexOf('.es.') === -1)
                && (url$$1.indexOf('.elb.') === -1)
                && (url$$1.indexOf('.appsync-api.') === -1); },
            _a['blob.core.windows.net'] = 'endsWith',
            _a['documents.azure.com'] = 'endsWith',
            _a['127.0.0.1'] = function (url$$1, pattern, urlPath) { return (url$$1 === pattern) && urlPath.startsWith('/2018-06-01/runtime/invocation/'); },
            _a['169.254.169.254'] = 'startsWith',
            _a);
        return Object.keys(urlBlacklistMap).some(function (key) {
            if (typeof urlBlacklistMap[key] === typeof (function () { })) {
                return urlBlacklistMap[key](host, key, path);
            }
            return host[urlBlacklistMap[key]](key);
        });
    };
    var isUrlIgnoredByUser = function (host) {
        var ignorePatterns = (process.env.RECAP_DEV_IGNORE_HTTP_PATTERNS && process.env.RECAP_DEV_IGNORE_HTTP_PATTERNS.split(',')) || [];
        return ignorePatterns.some(function (pattern) { return host.includes(pattern); });
    };
    var isUrlIgnored = function (host, path) { return isUrlBlacklisted(host, path) || isUrlIgnoredByUser(host); };
    var ENCODING_FUNCTIONS = {
        // @ts-ignore
        br: zlib__default.brotliDecompressSync,
        // @ts-ignore
        brotli: zlib__default.brotliDecompressSync,
        gzip: zlib__default.gunzipSync,
        deflate: zlib__default.deflateSync,
    };
    var decodeJson = function (data, encoding) {
        try {
            var jsonData = data;
            if (ENCODING_FUNCTIONS[encoding]) {
                try {
                    jsonData = ENCODING_FUNCTIONS[encoding](data);
                }
                catch (err) {
                    debugLog('Could not decode JSON');
                }
            }
            JSON.parse(jsonData);
            return jsonData.toString();
        }
        catch (err) {
            debugLog('Could not parse JSON', err);
        }
        return undefined;
    };
    var maxHttpValueSize = 10 * 1024;
    var addChunk = function (chunk, chunks) {
        if (chunk) {
            var totalSize = chunks.reduce(function (total, item) { return item.length + total; }, 0);
            if (totalSize + chunk.length <= maxHttpValueSize) {
                chunks.push(typeof chunk === 'string' ? Buffer.from(chunk) : chunk);
            }
        }
    };

    function buildParams(url$$1, options, callback) {
        if (url$$1 && options) {
            // in case of both input and options returning all three
            return [url$$1, options, callback];
        }
        if (url$$1 && !options) {
            // in case of missing options returning only url and callback
            return [url$$1, callback];
        }
        // url is missing - returning options and callback
        return [options, callback];
    }
    function responseOnWrapper(wrappedResFunction, chunks) {
        return function internalResponseOnWrapper(resEvent, resCallback) {
            if (resEvent !== 'data' || typeof resCallback !== 'function') {
                return wrappedResFunction.apply(this, [resEvent, resCallback]);
            }
            var resPatchedCallback = function (chunk) {
                addChunk(chunk, chunks);
                return resCallback(chunk);
            };
            return wrappedResFunction.apply(this, [resEvent, resPatchedCallback.bind(this)]);
        };
    }
    function requestOnWrapper(wrappedReqFunction, chunks) {
        return function internalRequestOnWrapper(reqEvent, reqCallback) {
            if (reqEvent !== 'response'
                || typeof reqCallback !== 'function') {
                return wrappedReqFunction.apply(this, [reqEvent, reqCallback]);
            }
            var reqPatchedCallback = function (res) {
                if (res && res.RECAP_DEV_PATCHED) {
                    return reqCallback(res);
                }
                res.RECAP_DEV_PATCHED = true;
                shimmer_1.wrap(res, 'on', function (wrapped) { return responseOnWrapper(wrapped, chunks); });
                return reqCallback(res);
            };
            return wrappedReqFunction.apply(this, [reqEvent, reqPatchedCallback.bind(this)]);
        };
    }
    function httpWrapper(wrappedFunction) {
        return function internalHttpWrapper(a, b, c) {
            var url$$1 = a;
            var options = b;
            var callback = c;
            var chunks = [];
            if (!(['string', 'URL'].includes(typeof url$$1)) && !callback) {
                callback = b;
                options = a;
                url$$1 = undefined;
            }
            if ((typeof options === 'function') && (!callback)) {
                callback = options;
                options = null;
            }
            if (callback && callback.recapDevWrapped) {
                // https->http cases
                return wrappedFunction.apply(this, [a, b, c]);
            }
            var clientRequest;
            try {
                var parsedUrl = url$$1;
                if (typeof parsedUrl === 'string') {
                    parsedUrl = url.parse(parsedUrl);
                }
                var hostname = ((parsedUrl && parsedUrl.hostname)
                    || (parsedUrl && parsedUrl.host)
                    || (options && options.hostname)
                    || (options && options.host)
                    || (options && options.uri && options.uri.hostname)
                    || 'localhost');
                var path = ((parsedUrl && parsedUrl.path)
                    || (options && options.path)
                    || ('/'));
                var pathname = ((parsedUrl && parsedUrl.pathname)
                    || (options && options.pathname)
                    || ('/'));
                var headers_1 = ((options && options.headers) || {});
                if (isUrlIgnored(hostname, path)) {
                    debugLog("filtered blacklist hostname " + hostname);
                    return wrappedFunction.apply(this, [a, b, c]);
                }
                // TODO: Inject headers here to allow cross-application tracing:
                // const recapDevTraceId = generateRecapDevTraceId()
                // headers['recap-dev-trace-id'] = recapDevTraceId
                //
                var agent = (
                // eslint-disable-next-line no-underscore-dangle
                (options && options.agent) || (options && options._defaultAgent)
                    || undefined);
                var port = ((parsedUrl && parsedUrl.port) || (options && options.port)
                    || (options && options.defaultPort) || (agent && agent.defaultPort) || 80);
                var protocol = ((parsedUrl && parsedUrl.protocol)
                    || (port === 443 && 'https:')
                    || (options && options.protocol)
                    || (agent && agent.protocol)
                    || 'http:');
                protocol = protocol.slice(0, -1);
                var body_1 = (options
                    && options.body
                    && (options.body instanceof String || options.body instanceof Buffer)) ? options.body : '';
                var method = (options && options.method) || 'GET';
                var requestUrl = protocol + "://" + hostname + pathname;
                var event_1 = tracer.resourceAccessStart(hostname, {
                    host: hostname,
                    url: requestUrl,
                }, {
                    request: {
                        url: requestUrl,
                        method: method,
                        headers: headers_1,
                        operation: method,
                    },
                });
                if (body_1) {
                    debugLog("Set request body=" + body_1);
                }
                if (body_1) {
                    debugLog("Set request body=" + body_1);
                }
                var patchedCallback = function (res) {
                    event_1.response.status = res.statusCode;
                    event_1.response.headers = res.headers;
                    if (res.statusCode >= 400) {
                        event_1.status = 'ERROR';
                        event_1.error = serializeError$1(new Error("Response code: " + res.statusCode));
                    }
                    else {
                        event_1.status = 'OK';
                    }
                    // Override request headers if they are present here. In some libs they are not
                    // available on `options.headers`
                    if (res.req && res.req.getHeaders()) {
                        event_1.response.headers = res.req.getHeaders();
                    }
                    if (headers_1 && 'x-amzn-requestid' in headers_1) {
                        event_1.serviceName = 'api-gateway';
                    }
                    if (callback && typeof callback === 'function') {
                        callback(res);
                    }
                };
                // @ts-ignore
                patchedCallback.recapDevWrapped = true;
                clientRequest = wrappedFunction.apply(this, buildParams(url$$1, options, patchedCallback));
                if (options
                    && options.recapDevSkipResponseData
                    && config.disablePayloadCapture) {
                    shimmer_1.wrap(clientRequest, 'on', function (wrapped) { return requestOnWrapper(wrapped, chunks); });
                }
                var WriteWrapper = function (wrappedWriteFunc) {
                    return function internalWriteWrapper() {
                        var args = [];
                        for (var _i = 0; _i < arguments.length; _i++) {
                            args[_i] = arguments[_i];
                        }
                        try {
                            if ((!body_1 || body_1 === '') && args[0] && ((typeof args[0] === 'string') || (args[0] instanceof Buffer))) {
                                event_1.request.body = decodeJson(body_1, args[0]);
                            }
                        }
                        catch (err) {
                            debugLog('Could not parse request body in write wrapper');
                        }
                        return wrappedWriteFunc.apply(this, args);
                    };
                };
                var endWrapper = function (wrappedEndFunc) {
                    return function internalEndWrapper() {
                        var args = [];
                        for (var _i = 0; _i < arguments.length; _i++) {
                            args[_i] = arguments[_i];
                        }
                        try {
                            if ((!body_1 || body_1 === '') && args[0] && ((typeof args[0] === 'string') || (args[0] instanceof Buffer))) {
                                event_1.request.body = decodeJson(body_1, args[0]);
                            }
                        }
                        catch (err) {
                            debugLog('Could not parse request body in end wrapper');
                        }
                        return wrappedEndFunc.apply(this, args);
                    };
                };
                try {
                    shimmer_1.wrap(clientRequest, 'write', WriteWrapper);
                    shimmer_1.wrap(clientRequest, 'end', endWrapper);
                }
                catch (err) {
                    // In some libs it might not be possible to hook on write
                }
                var isTimeout_1 = false;
                clientRequest.on('timeout', function () {
                    isTimeout_1 = true;
                });
                clientRequest.once('error', function (error) {
                    var patchedError = new Error();
                    patchedError.message = error.message;
                    patchedError.stack = error.stack;
                    patchedError.name = error.name;
                    if (isTimeout_1) {
                        patchedError.message += '\nTimeout exceeded';
                    }
                    if (clientRequest.aborted) {
                        patchedError.message += '\nRequest aborted';
                    }
                    event_1.end = Date.now();
                    event_1.status = 'ERROR';
                    event_1.error = serializeError$1(patchedError);
                    if (clientRequest.listenerCount('error') === 0) {
                        throw error;
                    }
                });
                clientRequest.on('response', function (res) {
                    if ((!options || (options && !options.recapDevSkipResponseData))
                        && !config.disablePayloadCapture) {
                        res.on('data', function (chunk) { return addChunk(chunk, chunks); });
                    }
                    res.on('end', function () {
                        var responsePayload = decodeJson(Buffer.concat(chunks), res.headers['content-encoding']);
                        event_1.status = 'OK';
                        event_1.end = Date.now();
                        event_1.response.body = responsePayload;
                    });
                });
            }
            catch (error) {
                debugLog(error);
            }
            if (!clientRequest) {
                clientRequest = wrappedFunction.apply(this, [a, b, c]);
            }
            return clientRequest;
        };
    }
    function httpGetWrapper(module) {
        return function internalHttpGetWrapper(url$$1, options, callback) {
            var req = module.request(url$$1, options, callback);
            req.end();
            return req;
        };
    }
    function fetchH2Wrapper(wrappedFunc) {
        return function internalFetchH2Wrapper(options) {
            return wrappedFunc.apply(this, [__assign(__assign({}, options), { recapDevSkipResponseData: true })]);
        };
    }
    var trackHttp = function () {
        // @ts-ignore
        shimmer_1.wrap(http, 'get', function () { return httpGetWrapper(http); });
        // @ts-ignore
        shimmer_1.wrap(http, 'request', httpWrapper);
        // @ts-ignore
        shimmer_1.wrap(https, 'get', function () { return httpGetWrapper(https); });
        // @ts-ignore
        shimmer_1.wrap(https, 'request', httpWrapper);
        patchModule('fetch-h2/dist/lib/context-http1', 'connect', fetchH2Wrapper, function (fetch) { return fetch.OriginPool.prototype; });
    };

    var http2 = tryRequire('http2');
    var extractHeaders = function (headers) { return Object.entries(headers)
        .filter(function (header) { return !header[0].startsWith(':'); })
        .reduce(function (obj, header) {
        var _a = __read(header, 2), key = _a[0], value = _a[1];
        obj[key] = value;
        return obj;
    }, {}); };
    function httpWrapper$1(wrappedFunction, authority) {
        return function internalHttpWrapper(headers, options) {
            var clientRequest = null;
            var event;
            try {
                var hostname = url.parse(authority).hostname;
                if (isUrlIgnored(hostname, headers[':path'])) {
                    debugLog("filtered blacklist hostname " + hostname);
                    return wrappedFunction.apply(this, [headers, options]);
                }
                var reqHeaders = extractHeaders(headers);
                // TODO: Inject headers here to allow cross-application tracing:
                // const recapDevTraceId = generateRecapDevTraceId()
                // headers['recap-dev-trace-id'] = recapDevTraceId
                //
                event = tracer.resourceAccessStart(hostname, {
                    host: hostname,
                    url: authority,
                }, {
                    request: {
                        url: authority,
                        method: headers[':method'],
                        headers: reqHeaders,
                        operation: headers[':method'],
                    },
                });
            }
            catch (error) {
                debugLog(error);
                return wrappedFunction.apply(this, [headers, options]);
            }
            try {
                clientRequest = wrappedFunction.apply(this, [headers, options]);
            }
            catch (err) {
                event.end = Date.now();
                event.status = 'ERROR';
                event.error = serializeError$1(err);
                throw err;
            }
            try {
                var chunks_1 = [];
                var responseHeaders_1;
                if (!config.disablePayloadCapture) {
                    clientRequest.on('data', function (chunk) {
                        addChunk(chunk, chunks_1);
                    });
                }
                clientRequest.once('error', function (error) {
                    event.end = Date.now();
                    event.status = 'ERROR';
                    event.error = serializeError$1(error);
                    if (clientRequest.listenerCount('error') === 0) {
                        throw error; // no error listener, we should explode
                    }
                });
                clientRequest.once('close', function () {
                    event.end = Date.now();
                    if (!config.disablePayloadCapture) {
                        event.response.body = decodeJson(Buffer.concat(chunks_1), responseHeaders_1['content-encoding']);
                    }
                });
                clientRequest.once('response', function (res) {
                    event.end = Date.now();
                    event.status = 'OK';
                    var statusCode = res[':status'];
                    if (statusCode >= 400) {
                        event.status = 'ERROR';
                        event.error = serializeError$1(new Error("Response code: " + res.statusCode));
                    }
                    if (headers && 'x-amzn-requestid' in headers) {
                        event.serviceName = 'api-gateway';
                    }
                    responseHeaders_1 = extractHeaders(res);
                    event.response.status = statusCode;
                    event.response.headers = responseHeaders_1;
                });
            }
            catch (error) {
                debugLog(error);
            }
            return clientRequest;
        };
    }
    function wrapHttp2Connect(connectFunction) {
        return function innerWrapHttp2Connect(authority, options, listener) {
            var clientSession = connectFunction.apply(this, [authority, options, listener]);
            try {
                shimmer_1.wrap(clientSession, 'request', function (wrappedFunction) { return httpWrapper$1(wrappedFunction, authority); });
            }
            catch (err) {
                debugLog("Could not instrument http2 session request " + err);
            }
            return clientSession;
        };
    }
    var trackHttp2 = function () {
        if (http2) {
            debugLog('Patching http2 module');
            shimmer_1.wrap(http2, 'connect', wrapHttp2Connect);
        }
    };

    var eventsMap = {};
    var getResponse = function (event) {
        var commandName = event.commandName, reply = event.reply;
        switch (commandName) {
            case 'find':
                if (reply.cursor && Array.isArray(reply.cursor.firstBatch)) {
                    return { itemsCount: reply.cursor.firstBatch.length, firstBatch: reply.cursor.firstBatch };
                }
                if (Array.isArray(reply)) {
                    return { reply: reply };
                }
                break;
            case 'getMore':
                if (reply.cursor && Array.isArray(reply.cursor.nextBatch)) {
                    return { itemsCount: reply.cursor.nextBatch.length, nextBatch: reply.cursor.nextBatch };
                }
                if (Array.isArray(reply)) {
                    return { reply: reply };
                }
                break;
            case 'count':
                if (reply.ok) {
                    return { itemsCount: reply.n };
                }
                if (Array.isArray(reply)) {
                    return { reply: reply };
                }
                break;
            default:
                return {};
        }
        return {};
    };
    function getConnectionDetails(connectionId) {
        if (connectionId) {
            if (typeof connectionId === 'string') {
                var parsedUrl = url.parse(connectionId);
                return { host: parsedUrl.hostname, port: parsedUrl.port };
            }
            if (connectionId.domainSocket) {
                return { host: 'localhost', port: connectionId.port };
            }
            return { host: connectionId.host, port: connectionId.port };
        }
        return { host: undefined, port: undefined };
    }
    function onStartHook(event) {
        try {
            var _a = getConnectionDetails(event === null || event === void 0 ? void 0 : event.connectionId), host = _a.host, port = _a.port;
            var collection = event.command.collection || event.command[event.commandName];
            if (typeof collection !== 'string') {
                collection = '';
            }
            var mongoDbEvent = tracer.resourceAccessStart('mongodb', {
                host: host,
                port: port,
                database: event.databaseName,
                collection: collection,
            }, {
                request: __assign(__assign({}, event.command), { operation: event.commandName }),
            });
            eventsMap[event.requestId] = mongoDbEvent;
        }
        catch (error) {
            debugLog(error);
        }
    }
    function handleResponse(event, hasError) {
        if (hasError === void 0) { hasError = false; }
        try {
            var endTime = Date.now();
            var mongoDbEvent = eventsMap[event.requestId];
            mongoDbEvent.end = endTime;
            mongoDbEvent.status = hasError ? 'ERROR' : 'OK';
            mongoDbEvent.response = getResponse(event);
            delete eventsMap[event.requestId];
        }
        catch (error) {
            debugLog(error);
        }
    }
    function onSuccessHook(event) {
        handleResponse(event);
    }
    function onFailureHook(event) {
        handleResponse(event, true);
    }
    var trackMongoDb = function () {
        var modules = getModules('mongodb');
        debugLog("recap.dev patching " + modules.length + " mongodb modules");
        modules.forEach(function (mongodb) {
            var listener = mongodb.instrument({}, function (error) {
                if (error) {
                    debugLog('recap.dev mongodb instrumentation error', error);
                }
            });
            listener.on('started', onStartHook);
            listener.on('succeeded', onSuccessHook);
            listener.on('failed', onFailureHook);
        });
    };

    var trackModules = function () {
        awsSdkTracker.init();
        trackMysql();
        trackPostgres();
        trackMongoDb();
        trackElasticsearch();
        trackHttp();
        trackHttp2();
    };

    var Trace = /** @class */ (function () {
        function Trace(id, unitName, unitType) {
            this.logs = [];
            this.appName = process.env.RECAP_DEV_APP_NAME;
            this.status = 'OK';
            this.functionCallEvents = [];
            this.resourceAccessEvents = [];
            this.extraData = {};
            this.id = id;
            this.unitName = unitName;
            this.unitType = unitType;
        }
        return Trace;
    }());

    var isPromise = function (value) { return (value
        && isFunction$1(value.then)
        && Object.prototype.toString.call(value) === '[object Promise]'); };
    var safeParse = function (parseString) {
        try {
            return JSON.parse(parseString);
        }
        catch (e) {
            return null;
        }
    };
    var appendBodyChunk = function (chunk$$1, body) {
        if (chunk$$1 && body.length < config.maxPayloadLength) {
            return body + chunk$$1;
        }
        return body;
    };

    /**
     * Captures following methods of the global console object with recap.dev tracing:
     * log, error, info, trace, warn, dir
     * This will add all messages to a current trace
     * @example
     * import { captureConsoleLogs } from '@recap.dev/client'
     * captureConsoleLogs()
     */
    var captureConsoleLogs = function () {
        var consoleLogWrapper = function (original) { return function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            tracer.addLogEntry(args.map(function (arg) {
                if (isObject(arg)) {
                    return JSON.stringify(arg);
                }
                return arg;
            }).join());
            return original.apply(void 0, __spread(args));
        }; };
        shimmer_1.massWrap([console], ['log', 'error', 'info', 'trace', 'warn', 'dir'], consoleLogWrapper);
    };

    var newLambdaTrace = function (request, context) {
        var trace = new Trace(context.awsRequestId, context.functionName, 'AWS_LAMBDA');
        trace.request = __assign({}, request);
        trace.extraData.awsRegion = process.env.AWS_REGION;
        trace.extraData.awsAccountId = context
            && context.invokedFunctionArn
            && context.invokedFunctionArn.split(':')[4];
        trace.extraData.awsLogStreamName = context && context.logStreamName;
        return trace;
    };
    /**
     * Wraps lambda handler with recap.dev tracing
     * @param {function} func - The request handler function.
     */
    var wrapLambdaHandler = function (func) {
        captureConsoleLogs();
        var wrappedLambdaHandler = function (request, context) { return __awaiter(void 0, void 0, void 0, function () {
            var trace, event, timeoutHandler, result, e_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!context) {
                            debugLog('No lambda context passed, skipping recap.dev tracing');
                            return [2 /*return*/, func(request, context)];
                        }
                        trace = tracer.startNewTrace(newLambdaTrace(request, context));
                        event = tracer.functionStart('', context.functionName);
                        if (context.getRemainingTimeInMillis) {
                            timeoutHandler = setTimeout(function () {
                                tracer.functionEnd(event);
                                tracer.sync();
                            }, context.getRemainingTimeInMillis() - config.serverlessTimeoutWindow);
                        }
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 2, , 4]);
                        result = func(request, context);
                        return [3 /*break*/, 4];
                    case 2:
                        e_1 = _a.sent();
                        tracer.functionEnd(event);
                        tracer.setTraceError(e_1.toString());
                        clearTimeout(timeoutHandler);
                        return [4 /*yield*/, tracer.sync()];
                    case 3:
                        _a.sent();
                        throw e_1;
                    case 4:
                        if (isPromise(result)) {
                            return [2 /*return*/, result
                                    .then(function (resolvedResult) {
                                    tracer.functionEnd(event);
                                    trace.response = __assign({}, resolvedResult);
                                    clearTimeout(timeoutHandler);
                                    return tracer.sync().then(function () { return resolvedResult; });
                                })
                                    .catch(function (err) {
                                    tracer.functionEnd(event);
                                    tracer.setTraceError(err);
                                    clearTimeout(timeoutHandler);
                                    return tracer.sync().then(function () {
                                        throw err;
                                    });
                                })];
                        }
                        trace.response = __assign({}, result);
                        tracer.functionEnd(event);
                        clearTimeout(timeoutHandler);
                        return [2 /*return*/, tracer.sync().then(function () { return result; })];
                }
            });
        }); };
        wrappedLambdaHandler.recapDevWrapped = true;
        return wrappedLambdaHandler;
    };

    /*! *****************************************************************************
    Copyright (C) Microsoft. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    var Reflect$1;
    (function (Reflect) {
        // Metadata Proposal
        // https://rbuckton.github.io/reflect-metadata/
        (function (factory) {
            var root = typeof commonjsGlobal === "object" ? commonjsGlobal :
                typeof self === "object" ? self :
                    typeof this === "object" ? this :
                        Function("return this;")();
            var exporter = makeExporter(Reflect);
            if (typeof root.Reflect === "undefined") {
                root.Reflect = Reflect;
            }
            else {
                exporter = makeExporter(root.Reflect, exporter);
            }
            factory(exporter);
            function makeExporter(target, previous) {
                return function (key, value) {
                    if (typeof target[key] !== "function") {
                        Object.defineProperty(target, key, { configurable: true, writable: true, value: value });
                    }
                    if (previous)
                        previous(key, value);
                };
            }
        })(function (exporter) {
            var hasOwn = Object.prototype.hasOwnProperty;
            // feature test for Symbol support
            var supportsSymbol = typeof Symbol === "function";
            var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== "undefined" ? Symbol.toPrimitive : "@@toPrimitive";
            var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== "undefined" ? Symbol.iterator : "@@iterator";
            var supportsCreate = typeof Object.create === "function"; // feature test for Object.create support
            var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support
            var downLevel = !supportsCreate && !supportsProto;
            var HashMap = {
                // create an object in dictionary mode (a.k.a. "slow" mode in v8)
                create: supportsCreate
                    ? function () { return MakeDictionary(Object.create(null)); }
                    : supportsProto
                        ? function () { return MakeDictionary({ __proto__: null }); }
                        : function () { return MakeDictionary({}); },
                has: downLevel
                    ? function (map, key) { return hasOwn.call(map, key); }
                    : function (map, key) { return key in map; },
                get: downLevel
                    ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }
                    : function (map, key) { return map[key]; },
            };
            // Load global or shim versions of Map, Set, and WeakMap
            var functionPrototype = Object.getPrototypeOf(Function);
            var usePolyfill = typeof process === "object" && process.env && process.env["REFLECT_METADATA_USE_MAP_POLYFILL"] === "true";
            var _Map = !usePolyfill && typeof Map === "function" && typeof Map.prototype.entries === "function" ? Map : CreateMapPolyfill();
            var _Set = !usePolyfill && typeof Set === "function" && typeof Set.prototype.entries === "function" ? Set : CreateSetPolyfill();
            var _WeakMap = !usePolyfill && typeof WeakMap === "function" ? WeakMap : CreateWeakMapPolyfill();
            // [[Metadata]] internal slot
            // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots
            var Metadata = new _WeakMap();
            /**
             * Applies a set of decorators to a property of a target object.
             * @param decorators An array of decorators.
             * @param target The target object.
             * @param propertyKey (Optional) The property key to decorate.
             * @param attributes (Optional) The property descriptor for the target key.
             * @remarks Decorators are applied in reverse order.
             * @example
             *
             *     class Example {
             *         // property declarations are not part of ES6, though they are valid in TypeScript:
             *         // static staticProperty;
             *         // property;
             *
             *         constructor(p) { }
             *         static staticMethod(p) { }
             *         method(p) { }
             *     }
             *
             *     // constructor
             *     Example = Reflect.decorate(decoratorsArray, Example);
             *
             *     // property (on constructor)
             *     Reflect.decorate(decoratorsArray, Example, "staticProperty");
             *
             *     // property (on prototype)
             *     Reflect.decorate(decoratorsArray, Example.prototype, "property");
             *
             *     // method (on constructor)
             *     Object.defineProperty(Example, "staticMethod",
             *         Reflect.decorate(decoratorsArray, Example, "staticMethod",
             *             Object.getOwnPropertyDescriptor(Example, "staticMethod")));
             *
             *     // method (on prototype)
             *     Object.defineProperty(Example.prototype, "method",
             *         Reflect.decorate(decoratorsArray, Example.prototype, "method",
             *             Object.getOwnPropertyDescriptor(Example.prototype, "method")));
             *
             */
            function decorate(decorators, target, propertyKey, attributes) {
                if (!IsUndefined(propertyKey)) {
                    if (!IsArray(decorators))
                        throw new TypeError();
                    if (!IsObject(target))
                        throw new TypeError();
                    if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))
                        throw new TypeError();
                    if (IsNull(attributes))
                        attributes = undefined;
                    propertyKey = ToPropertyKey(propertyKey);
                    return DecorateProperty(decorators, target, propertyKey, attributes);
                }
                else {
                    if (!IsArray(decorators))
                        throw new TypeError();
                    if (!IsConstructor(target))
                        throw new TypeError();
                    return DecorateConstructor(decorators, target);
                }
            }
            exporter("decorate", decorate);
            // 4.1.2 Reflect.metadata(metadataKey, metadataValue)
            // https://rbuckton.github.io/reflect-metadata/#reflect.metadata
            /**
             * A default metadata decorator factory that can be used on a class, class member, or parameter.
             * @param metadataKey The key for the metadata entry.
             * @param metadataValue The value for the metadata entry.
             * @returns A decorator function.
             * @remarks
             * If `metadataKey` is already defined for the target and target key, the
             * metadataValue for that key will be overwritten.
             * @example
             *
             *     // constructor
             *     @Reflect.metadata(key, value)
             *     class Example {
             *     }
             *
             *     // property (on constructor, TypeScript only)
             *     class Example {
             *         @Reflect.metadata(key, value)
             *         static staticProperty;
             *     }
             *
             *     // property (on prototype, TypeScript only)
             *     class Example {
             *         @Reflect.metadata(key, value)
             *         property;
             *     }
             *
             *     // method (on constructor)
             *     class Example {
             *         @Reflect.metadata(key, value)
             *         static staticMethod() { }
             *     }
             *
             *     // method (on prototype)
             *     class Example {
             *         @Reflect.metadata(key, value)
             *         method() { }
             *     }
             *
             */
            function metadata(metadataKey, metadataValue) {
                function decorator(target, propertyKey) {
                    if (!IsObject(target))
                        throw new TypeError();
                    if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))
                        throw new TypeError();
                    OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);
                }
                return decorator;
            }
            exporter("metadata", metadata);
            /**
             * Define a unique metadata entry on the target.
             * @param metadataKey A key used to store and retrieve metadata.
             * @param metadataValue A value that contains attached metadata.
             * @param target The target object on which to define metadata.
             * @param propertyKey (Optional) The property key for the target.
             * @example
             *
             *     class Example {
             *         // property declarations are not part of ES6, though they are valid in TypeScript:
             *         // static staticProperty;
             *         // property;
             *
             *         constructor(p) { }
             *         static staticMethod(p) { }
             *         method(p) { }
             *     }
             *
             *     // constructor
             *     Reflect.defineMetadata("custom:annotation", options, Example);
             *
             *     // property (on constructor)
             *     Reflect.defineMetadata("custom:annotation", options, Example, "staticProperty");
             *
             *     // property (on prototype)
             *     Reflect.defineMetadata("custom:annotation", options, Example.prototype, "property");
             *
             *     // method (on constructor)
             *     Reflect.defineMetadata("custom:annotation", options, Example, "staticMethod");
             *
             *     // method (on prototype)
             *     Reflect.defineMetadata("custom:annotation", options, Example.prototype, "method");
             *
             *     // decorator factory as metadata-producing annotation.
             *     function MyAnnotation(options): Decorator {
             *         return (target, key?) => Reflect.defineMetadata("custom:annotation", options, target, key);
             *     }
             *
             */
            function defineMetadata(metadataKey, metadataValue, target, propertyKey) {
                if (!IsObject(target))
                    throw new TypeError();
                if (!IsUndefined(propertyKey))
                    propertyKey = ToPropertyKey(propertyKey);
                return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);
            }
            exporter("defineMetadata", defineMetadata);
            /**
             * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.
             * @param metadataKey A key used to store and retrieve metadata.
             * @param target The target object on which the metadata is defined.
             * @param propertyKey (Optional) The property key for the target.
             * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.
             * @example
             *
             *     class Example {
             *         // property declarations are not part of ES6, though they are valid in TypeScript:
             *         // static staticProperty;
             *         // property;
             *
             *         constructor(p) { }
             *         static staticMethod(p) { }
             *         method(p) { }
             *     }
             *
             *     // constructor
             *     result = Reflect.hasMetadata("custom:annotation", Example);
             *
             *     // property (on constructor)
             *     result = Reflect.hasMetadata("custom:annotation", Example, "staticProperty");
             *
             *     // property (on prototype)
             *     result = Reflect.hasMetadata("custom:annotation", Example.prototype, "property");
             *
             *     // method (on constructor)
             *     result = Reflect.hasMetadata("custom:annotation", Example, "staticMethod");
             *
             *     // method (on prototype)
             *     result = Reflect.hasMetadata("custom:annotation", Example.prototype, "method");
             *
             */
            function hasMetadata(metadataKey, target, propertyKey) {
                if (!IsObject(target))
                    throw new TypeError();
                if (!IsUndefined(propertyKey))
                    propertyKey = ToPropertyKey(propertyKey);
                return OrdinaryHasMetadata(metadataKey, target, propertyKey);
            }
            exporter("hasMetadata", hasMetadata);
            /**
             * Gets a value indicating whether the target object has the provided metadata key defined.
             * @param metadataKey A key used to store and retrieve metadata.
             * @param target The target object on which the metadata is defined.
             * @param propertyKey (Optional) The property key for the target.
             * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.
             * @example
             *
             *     class Example {
             *         // property declarations are not part of ES6, though they are valid in TypeScript:
             *         // static staticProperty;
             *         // property;
             *
             *         constructor(p) { }
             *         static staticMethod(p) { }
             *         method(p) { }
             *     }
             *
             *     // constructor
             *     result = Reflect.hasOwnMetadata("custom:annotation", Example);
             *
             *     // property (on constructor)
             *     result = Reflect.hasOwnMetadata("custom:annotation", Example, "staticProperty");
             *
             *     // property (on prototype)
             *     result = Reflect.hasOwnMetadata("custom:annotation", Example.prototype, "property");
             *
             *     // method (on constructor)
             *     result = Reflect.hasOwnMetadata("custom:annotation", Example, "staticMethod");
             *
             *     // method (on prototype)
             *     result = Reflect.hasOwnMetadata("custom:annotation", Example.prototype, "method");
             *
             */
            function hasOwnMetadata(metadataKey, target, propertyKey) {
                if (!IsObject(target))
                    throw new TypeError();
                if (!IsUndefined(propertyKey))
                    propertyKey = ToPropertyKey(propertyKey);
                return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);
            }
            exporter("hasOwnMetadata", hasOwnMetadata);
            /**
             * Gets the metadata value for the provided metadata key on the target object or its prototype chain.
             * @param metadataKey A key used to store and retrieve metadata.
             * @param target The target object on which the metadata is defined.
             * @param propertyKey (Optional) The property key for the target.
             * @returns The metadata value for the metadata key if found; otherwise, `undefined`.
             * @example
             *
             *     class Example {
             *         // property declarations are not part of ES6, though they are valid in TypeScript:
             *         // static staticProperty;
             *         // property;
             *
             *         constructor(p) { }
             *         static staticMethod(p) { }
             *         method(p) { }
             *     }
             *
             *     // constructor
             *     result = Reflect.getMetadata("custom:annotation", Example);
             *
             *     // property (on constructor)
             *     result = Reflect.getMetadata("custom:annotation", Example, "staticProperty");
             *
             *     // property (on prototype)
             *     result = Reflect.getMetadata("custom:annotation", Example.prototype, "property");
             *
             *     // method (on constructor)
             *     result = Reflect.getMetadata("custom:annotation", Example, "staticMethod");
             *
             *     // method (on prototype)
             *     result = Reflect.getMetadata("custom:annotation", Example.prototype, "method");
             *
             */
            function getMetadata(metadataKey, target, propertyKey) {
                if (!IsObject(target))
                    throw new TypeError();
                if (!IsUndefined(propertyKey))
                    propertyKey = ToPropertyKey(propertyKey);
                return OrdinaryGetMetadata(metadataKey, target, propertyKey);
            }
            exporter("getMetadata", getMetadata);
            /**
             * Gets the metadata value for the provided metadata key on the target object.
             * @param metadataKey A key used to store and retrieve metadata.
             * @param target The target object on which the metadata is defined.
             * @param propertyKey (Optional) The property key for the target.
             * @returns The metadata value for the metadata key if found; otherwise, `undefined`.
             * @example
             *
             *     class Example {
             *         // property declarations are not part of ES6, though they are valid in TypeScript:
             *         // static staticProperty;
             *         // property;
             *
             *         constructor(p) { }
             *         static staticMethod(p) { }
             *         method(p) { }
             *     }
             *
             *     // constructor
             *     result = Reflect.getOwnMetadata("custom:annotation", Example);
             *
             *     // property (on constructor)
             *     result = Reflect.getOwnMetadata("custom:annotation", Example, "staticProperty");
             *
             *     // property (on prototype)
             *     result = Reflect.getOwnMetadata("custom:annotation", Example.prototype, "property");
             *
             *     // method (on constructor)
             *     result = Reflect.getOwnMetadata("custom:annotation", Example, "staticMethod");
             *
             *     // method (on prototype)
             *     result = Reflect.getOwnMetadata("custom:annotation", Example.prototype, "method");
             *
             */
            function getOwnMetadata(metadataKey, target, propertyKey) {
                if (!IsObject(target))
                    throw new TypeError();
                if (!IsUndefined(propertyKey))
                    propertyKey = ToPropertyKey(propertyKey);
                return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);
            }
            exporter("getOwnMetadata", getOwnMetadata);
            /**
             * Gets the metadata keys defined on the target object or its prototype chain.
             * @param target The target object on which the metadata is defined.
             * @param propertyKey (Optional) The property key for the target.
             * @returns An array of unique metadata keys.
             * @example
             *
             *     class Example {
             *         // property declarations are not part of ES6, though they are valid in TypeScript:
             *         // static staticProperty;
             *         // property;
             *
             *         constructor(p) { }
             *         static staticMethod(p) { }
             *         method(p) { }
             *     }
             *
             *     // constructor
             *     result = Reflect.getMetadataKeys(Example);
             *
             *     // property (on constructor)
             *     result = Reflect.getMetadataKeys(Example, "staticProperty");
             *
             *     // property (on prototype)
             *     result = Reflect.getMetadataKeys(Example.prototype, "property");
             *
             *     // method (on constructor)
             *     result = Reflect.getMetadataKeys(Example, "staticMethod");
             *
             *     // method (on prototype)
             *     result = Reflect.getMetadataKeys(Example.prototype, "method");
             *
             */
            function getMetadataKeys(target, propertyKey) {
                if (!IsObject(target))
                    throw new TypeError();
                if (!IsUndefined(propertyKey))
                    propertyKey = ToPropertyKey(propertyKey);
                return OrdinaryMetadataKeys(target, propertyKey);
            }
            exporter("getMetadataKeys", getMetadataKeys);
            /**
             * Gets the unique metadata keys defined on the target object.
             * @param target The target object on which the metadata is defined.
             * @param propertyKey (Optional) The property key for the target.
             * @returns An array of unique metadata keys.
             * @example
             *
             *     class Example {
             *         // property declarations are not part of ES6, though they are valid in TypeScript:
             *         // static staticProperty;
             *         // property;
             *
             *         constructor(p) { }
             *         static staticMethod(p) { }
             *         method(p) { }
             *     }
             *
             *     // constructor
             *     result = Reflect.getOwnMetadataKeys(Example);
             *
             *     // property (on constructor)
             *     result = Reflect.getOwnMetadataKeys(Example, "staticProperty");
             *
             *     // property (on prototype)
             *     result = Reflect.getOwnMetadataKeys(Example.prototype, "property");
             *
             *     // method (on constructor)
             *     result = Reflect.getOwnMetadataKeys(Example, "staticMethod");
             *
             *     // method (on prototype)
             *     result = Reflect.getOwnMetadataKeys(Example.prototype, "method");
             *
             */
            function getOwnMetadataKeys(target, propertyKey) {
                if (!IsObject(target))
                    throw new TypeError();
                if (!IsUndefined(propertyKey))
                    propertyKey = ToPropertyKey(propertyKey);
                return OrdinaryOwnMetadataKeys(target, propertyKey);
            }
            exporter("getOwnMetadataKeys", getOwnMetadataKeys);
            /**
             * Deletes the metadata entry from the target object with the provided key.
             * @param metadataKey A key used to store and retrieve metadata.
             * @param target The target object on which the metadata is defined.
             * @param propertyKey (Optional) The property key for the target.
             * @returns `true` if the metadata entry was found and deleted; otherwise, false.
             * @example
             *
             *     class Example {
             *         // property declarations are not part of ES6, though they are valid in TypeScript:
             *         // static staticProperty;
             *         // property;
             *
             *         constructor(p) { }
             *         static staticMethod(p) { }
             *         method(p) { }
             *     }
             *
             *     // constructor
             *     result = Reflect.deleteMetadata("custom:annotation", Example);
             *
             *     // property (on constructor)
             *     result = Reflect.deleteMetadata("custom:annotation", Example, "staticProperty");
             *
             *     // property (on prototype)
             *     result = Reflect.deleteMetadata("custom:annotation", Example.prototype, "property");
             *
             *     // method (on constructor)
             *     result = Reflect.deleteMetadata("custom:annotation", Example, "staticMethod");
             *
             *     // method (on prototype)
             *     result = Reflect.deleteMetadata("custom:annotation", Example.prototype, "method");
             *
             */
            function deleteMetadata(metadataKey, target, propertyKey) {
                if (!IsObject(target))
                    throw new TypeError();
                if (!IsUndefined(propertyKey))
                    propertyKey = ToPropertyKey(propertyKey);
                var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);
                if (IsUndefined(metadataMap))
                    return false;
                if (!metadataMap.delete(metadataKey))
                    return false;
                if (metadataMap.size > 0)
                    return true;
                var targetMetadata = Metadata.get(target);
                targetMetadata.delete(propertyKey);
                if (targetMetadata.size > 0)
                    return true;
                Metadata.delete(target);
                return true;
            }
            exporter("deleteMetadata", deleteMetadata);
            function DecorateConstructor(decorators, target) {
                for (var i = decorators.length - 1; i >= 0; --i) {
                    var decorator = decorators[i];
                    var decorated = decorator(target);
                    if (!IsUndefined(decorated) && !IsNull(decorated)) {
                        if (!IsConstructor(decorated))
                            throw new TypeError();
                        target = decorated;
                    }
                }
                return target;
            }
            function DecorateProperty(decorators, target, propertyKey, descriptor) {
                for (var i = decorators.length - 1; i >= 0; --i) {
                    var decorator = decorators[i];
                    var decorated = decorator(target, propertyKey, descriptor);
                    if (!IsUndefined(decorated) && !IsNull(decorated)) {
                        if (!IsObject(decorated))
                            throw new TypeError();
                        descriptor = decorated;
                    }
                }
                return descriptor;
            }
            function GetOrCreateMetadataMap(O, P, Create) {
                var targetMetadata = Metadata.get(O);
                if (IsUndefined(targetMetadata)) {
                    if (!Create)
                        return undefined;
                    targetMetadata = new _Map();
                    Metadata.set(O, targetMetadata);
                }
                var metadataMap = targetMetadata.get(P);
                if (IsUndefined(metadataMap)) {
                    if (!Create)
                        return undefined;
                    metadataMap = new _Map();
                    targetMetadata.set(P, metadataMap);
                }
                return metadataMap;
            }
            // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)
            // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata
            function OrdinaryHasMetadata(MetadataKey, O, P) {
                var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
                if (hasOwn)
                    return true;
                var parent = OrdinaryGetPrototypeOf(O);
                if (!IsNull(parent))
                    return OrdinaryHasMetadata(MetadataKey, parent, P);
                return false;
            }
            // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)
            // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata
            function OrdinaryHasOwnMetadata(MetadataKey, O, P) {
                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
                if (IsUndefined(metadataMap))
                    return false;
                return ToBoolean(metadataMap.has(MetadataKey));
            }
            // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)
            // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata
            function OrdinaryGetMetadata(MetadataKey, O, P) {
                var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
                if (hasOwn)
                    return OrdinaryGetOwnMetadata(MetadataKey, O, P);
                var parent = OrdinaryGetPrototypeOf(O);
                if (!IsNull(parent))
                    return OrdinaryGetMetadata(MetadataKey, parent, P);
                return undefined;
            }
            // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)
            // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata
            function OrdinaryGetOwnMetadata(MetadataKey, O, P) {
                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
                if (IsUndefined(metadataMap))
                    return undefined;
                return metadataMap.get(MetadataKey);
            }
            // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)
            // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata
            function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {
                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);
                metadataMap.set(MetadataKey, MetadataValue);
            }
            // 3.1.6.1 OrdinaryMetadataKeys(O, P)
            // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys
            function OrdinaryMetadataKeys(O, P) {
                var ownKeys = OrdinaryOwnMetadataKeys(O, P);
                var parent = OrdinaryGetPrototypeOf(O);
                if (parent === null)
                    return ownKeys;
                var parentKeys = OrdinaryMetadataKeys(parent, P);
                if (parentKeys.length <= 0)
                    return ownKeys;
                if (ownKeys.length <= 0)
                    return parentKeys;
                var set = new _Set();
                var keys = [];
                for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {
                    var key = ownKeys_1[_i];
                    var hasKey = set.has(key);
                    if (!hasKey) {
                        set.add(key);
                        keys.push(key);
                    }
                }
                for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {
                    var key = parentKeys_1[_a];
                    var hasKey = set.has(key);
                    if (!hasKey) {
                        set.add(key);
                        keys.push(key);
                    }
                }
                return keys;
            }
            // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)
            // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys
            function OrdinaryOwnMetadataKeys(O, P) {
                var keys = [];
                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
                if (IsUndefined(metadataMap))
                    return keys;
                var keysObj = metadataMap.keys();
                var iterator = GetIterator(keysObj);
                var k = 0;
                while (true) {
                    var next = IteratorStep(iterator);
                    if (!next) {
                        keys.length = k;
                        return keys;
                    }
                    var nextValue = IteratorValue(next);
                    try {
                        keys[k] = nextValue;
                    }
                    catch (e) {
                        try {
                            IteratorClose(iterator);
                        }
                        finally {
                            throw e;
                        }
                    }
                    k++;
                }
            }
            // 6 ECMAScript Data Typ0es and Values
            // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values
            function Type(x) {
                if (x === null)
                    return 1 /* Null */;
                switch (typeof x) {
                    case "undefined": return 0 /* Undefined */;
                    case "boolean": return 2 /* Boolean */;
                    case "string": return 3 /* String */;
                    case "symbol": return 4 /* Symbol */;
                    case "number": return 5 /* Number */;
                    case "object": return x === null ? 1 /* Null */ : 6 /* Object */;
                    default: return 6 /* Object */;
                }
            }
            // 6.1.1 The Undefined Type
            // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type
            function IsUndefined(x) {
                return x === undefined;
            }
            // 6.1.2 The Null Type
            // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type
            function IsNull(x) {
                return x === null;
            }
            // 6.1.5 The Symbol Type
            // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type
            function IsSymbol(x) {
                return typeof x === "symbol";
            }
            // 6.1.7 The Object Type
            // https://tc39.github.io/ecma262/#sec-object-type
            function IsObject(x) {
                return typeof x === "object" ? x !== null : typeof x === "function";
            }
            // 7.1 Type Conversion
            // https://tc39.github.io/ecma262/#sec-type-conversion
            // 7.1.1 ToPrimitive(input [, PreferredType])
            // https://tc39.github.io/ecma262/#sec-toprimitive
            function ToPrimitive(input, PreferredType) {
                switch (Type(input)) {
                    case 0 /* Undefined */: return input;
                    case 1 /* Null */: return input;
                    case 2 /* Boolean */: return input;
                    case 3 /* String */: return input;
                    case 4 /* Symbol */: return input;
                    case 5 /* Number */: return input;
                }
                var hint = PreferredType === 3 /* String */ ? "string" : PreferredType === 5 /* Number */ ? "number" : "default";
                var exoticToPrim = GetMethod(input, toPrimitiveSymbol);
                if (exoticToPrim !== undefined) {
                    var result = exoticToPrim.call(input, hint);
                    if (IsObject(result))
                        throw new TypeError();
                    return result;
                }
                return OrdinaryToPrimitive(input, hint === "default" ? "number" : hint);
            }
            // 7.1.1.1 OrdinaryToPrimitive(O, hint)
            // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive
            function OrdinaryToPrimitive(O, hint) {
                if (hint === "string") {
                    var toString_1 = O.toString;
                    if (IsCallable(toString_1)) {
                        var result = toString_1.call(O);
                        if (!IsObject(result))
                            return result;
                    }
                    var valueOf = O.valueOf;
                    if (IsCallable(valueOf)) {
                        var result = valueOf.call(O);
                        if (!IsObject(result))
                            return result;
                    }
                }
                else {
                    var valueOf = O.valueOf;
                    if (IsCallable(valueOf)) {
                        var result = valueOf.call(O);
                        if (!IsObject(result))
                            return result;
                    }
                    var toString_2 = O.toString;
                    if (IsCallable(toString_2)) {
                        var result = toString_2.call(O);
                        if (!IsObject(result))
                            return result;
                    }
                }
                throw new TypeError();
            }
            // 7.1.2 ToBoolean(argument)
            // https://tc39.github.io/ecma262/2016/#sec-toboolean
            function ToBoolean(argument) {
                return !!argument;
            }
            // 7.1.12 ToString(argument)
            // https://tc39.github.io/ecma262/#sec-tostring
            function ToString(argument) {
                return "" + argument;
            }
            // 7.1.14 ToPropertyKey(argument)
            // https://tc39.github.io/ecma262/#sec-topropertykey
            function ToPropertyKey(argument) {
                var key = ToPrimitive(argument, 3 /* String */);
                if (IsSymbol(key))
                    return key;
                return ToString(key);
            }
            // 7.2 Testing and Comparison Operations
            // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations
            // 7.2.2 IsArray(argument)
            // https://tc39.github.io/ecma262/#sec-isarray
            function IsArray(argument) {
                return Array.isArray
                    ? Array.isArray(argument)
                    : argument instanceof Object
                        ? argument instanceof Array
                        : Object.prototype.toString.call(argument) === "[object Array]";
            }
            // 7.2.3 IsCallable(argument)
            // https://tc39.github.io/ecma262/#sec-iscallable
            function IsCallable(argument) {
                // NOTE: This is an approximation as we cannot check for [[Call]] internal method.
                return typeof argument === "function";
            }
            // 7.2.4 IsConstructor(argument)
            // https://tc39.github.io/ecma262/#sec-isconstructor
            function IsConstructor(argument) {
                // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.
                return typeof argument === "function";
            }
            // 7.2.7 IsPropertyKey(argument)
            // https://tc39.github.io/ecma262/#sec-ispropertykey
            function IsPropertyKey(argument) {
                switch (Type(argument)) {
                    case 3 /* String */: return true;
                    case 4 /* Symbol */: return true;
                    default: return false;
                }
            }
            // 7.3 Operations on Objects
            // https://tc39.github.io/ecma262/#sec-operations-on-objects
            // 7.3.9 GetMethod(V, P)
            // https://tc39.github.io/ecma262/#sec-getmethod
            function GetMethod(V, P) {
                var func = V[P];
                if (func === undefined || func === null)
                    return undefined;
                if (!IsCallable(func))
                    throw new TypeError();
                return func;
            }
            // 7.4 Operations on Iterator Objects
            // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects
            function GetIterator(obj) {
                var method = GetMethod(obj, iteratorSymbol);
                if (!IsCallable(method))
                    throw new TypeError(); // from Call
                var iterator = method.call(obj);
                if (!IsObject(iterator))
                    throw new TypeError();
                return iterator;
            }
            // 7.4.4 IteratorValue(iterResult)
            // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue
            function IteratorValue(iterResult) {
                return iterResult.value;
            }
            // 7.4.5 IteratorStep(iterator)
            // https://tc39.github.io/ecma262/#sec-iteratorstep
            function IteratorStep(iterator) {
                var result = iterator.next();
                return result.done ? false : result;
            }
            // 7.4.6 IteratorClose(iterator, completion)
            // https://tc39.github.io/ecma262/#sec-iteratorclose
            function IteratorClose(iterator) {
                var f = iterator["return"];
                if (f)
                    f.call(iterator);
            }
            // 9.1 Ordinary Object Internal Methods and Internal Slots
            // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots
            // 9.1.1.1 OrdinaryGetPrototypeOf(O)
            // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof
            function OrdinaryGetPrototypeOf(O) {
                var proto = Object.getPrototypeOf(O);
                if (typeof O !== "function" || O === functionPrototype)
                    return proto;
                // TypeScript doesn't set __proto__ in ES5, as it's non-standard.
                // Try to determine the superclass constructor. Compatible implementations
                // must either set __proto__ on a subclass constructor to the superclass constructor,
                // or ensure each class has a valid `constructor` property on its prototype that
                // points back to the constructor.
                // If this is not the same as Function.[[Prototype]], then this is definately inherited.
                // This is the case when in ES6 or when using __proto__ in a compatible browser.
                if (proto !== functionPrototype)
                    return proto;
                // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.
                var prototype = O.prototype;
                var prototypeProto = prototype && Object.getPrototypeOf(prototype);
                if (prototypeProto == null || prototypeProto === Object.prototype)
                    return proto;
                // If the constructor was not a function, then we cannot determine the heritage.
                var constructor = prototypeProto.constructor;
                if (typeof constructor !== "function")
                    return proto;
                // If we have some kind of self-reference, then we cannot determine the heritage.
                if (constructor === O)
                    return proto;
                // we have a pretty good guess at the heritage.
                return constructor;
            }
            // naive Map shim
            function CreateMapPolyfill() {
                var cacheSentinel = {};
                var arraySentinel = [];
                var MapIterator = /** @class */ (function () {
                    function MapIterator(keys, values, selector) {
                        this._index = 0;
                        this._keys = keys;
                        this._values = values;
                        this._selector = selector;
                    }
                    MapIterator.prototype["@@iterator"] = function () { return this; };
                    MapIterator.prototype[iteratorSymbol] = function () { return this; };
                    MapIterator.prototype.next = function () {
                        var index = this._index;
                        if (index >= 0 && index < this._keys.length) {
                            var result = this._selector(this._keys[index], this._values[index]);
                            if (index + 1 >= this._keys.length) {
                                this._index = -1;
                                this._keys = arraySentinel;
                                this._values = arraySentinel;
                            }
                            else {
                                this._index++;
                            }
                            return { value: result, done: false };
                        }
                        return { value: undefined, done: true };
                    };
                    MapIterator.prototype.throw = function (error) {
                        if (this._index >= 0) {
                            this._index = -1;
                            this._keys = arraySentinel;
                            this._values = arraySentinel;
                        }
                        throw error;
                    };
                    MapIterator.prototype.return = function (value) {
                        if (this._index >= 0) {
                            this._index = -1;
                            this._keys = arraySentinel;
                            this._values = arraySentinel;
                        }
                        return { value: value, done: true };
                    };
                    return MapIterator;
                }());
                return /** @class */ (function () {
                    function Map() {
                        this._keys = [];
                        this._values = [];
                        this._cacheKey = cacheSentinel;
                        this._cacheIndex = -2;
                    }
                    Object.defineProperty(Map.prototype, "size", {
                        get: function () { return this._keys.length; },
                        enumerable: true,
                        configurable: true
                    });
                    Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };
                    Map.prototype.get = function (key) {
                        var index = this._find(key, /*insert*/ false);
                        return index >= 0 ? this._values[index] : undefined;
                    };
                    Map.prototype.set = function (key, value) {
                        var index = this._find(key, /*insert*/ true);
                        this._values[index] = value;
                        return this;
                    };
                    Map.prototype.delete = function (key) {
                        var index = this._find(key, /*insert*/ false);
                        if (index >= 0) {
                            var size = this._keys.length;
                            for (var i = index + 1; i < size; i++) {
                                this._keys[i - 1] = this._keys[i];
                                this._values[i - 1] = this._values[i];
                            }
                            this._keys.length--;
                            this._values.length--;
                            if (key === this._cacheKey) {
                                this._cacheKey = cacheSentinel;
                                this._cacheIndex = -2;
                            }
                            return true;
                        }
                        return false;
                    };
                    Map.prototype.clear = function () {
                        this._keys.length = 0;
                        this._values.length = 0;
                        this._cacheKey = cacheSentinel;
                        this._cacheIndex = -2;
                    };
                    Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };
                    Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };
                    Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };
                    Map.prototype["@@iterator"] = function () { return this.entries(); };
                    Map.prototype[iteratorSymbol] = function () { return this.entries(); };
                    Map.prototype._find = function (key, insert) {
                        if (this._cacheKey !== key) {
                            this._cacheIndex = this._keys.indexOf(this._cacheKey = key);
                        }
                        if (this._cacheIndex < 0 && insert) {
                            this._cacheIndex = this._keys.length;
                            this._keys.push(key);
                            this._values.push(undefined);
                        }
                        return this._cacheIndex;
                    };
                    return Map;
                }());
                function getKey(key, _) {
                    return key;
                }
                function getValue(_, value) {
                    return value;
                }
                function getEntry(key, value) {
                    return [key, value];
                }
            }
            // naive Set shim
            function CreateSetPolyfill() {
                return /** @class */ (function () {
                    function Set() {
                        this._map = new _Map();
                    }
                    Object.defineProperty(Set.prototype, "size", {
                        get: function () { return this._map.size; },
                        enumerable: true,
                        configurable: true
                    });
                    Set.prototype.has = function (value) { return this._map.has(value); };
                    Set.prototype.add = function (value) { return this._map.set(value, value), this; };
                    Set.prototype.delete = function (value) { return this._map.delete(value); };
                    Set.prototype.clear = function () { this._map.clear(); };
                    Set.prototype.keys = function () { return this._map.keys(); };
                    Set.prototype.values = function () { return this._map.values(); };
                    Set.prototype.entries = function () { return this._map.entries(); };
                    Set.prototype["@@iterator"] = function () { return this.keys(); };
                    Set.prototype[iteratorSymbol] = function () { return this.keys(); };
                    return Set;
                }());
            }
            // naive WeakMap shim
            function CreateWeakMapPolyfill() {
                var UUID_SIZE = 16;
                var keys = HashMap.create();
                var rootKey = CreateUniqueKey();
                return /** @class */ (function () {
                    function WeakMap() {
                        this._key = CreateUniqueKey();
                    }
                    WeakMap.prototype.has = function (target) {
                        var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                        return table !== undefined ? HashMap.has(table, this._key) : false;
                    };
                    WeakMap.prototype.get = function (target) {
                        var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                        return table !== undefined ? HashMap.get(table, this._key) : undefined;
                    };
                    WeakMap.prototype.set = function (target, value) {
                        var table = GetOrCreateWeakMapTable(target, /*create*/ true);
                        table[this._key] = value;
                        return this;
                    };
                    WeakMap.prototype.delete = function (target) {
                        var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                        return table !== undefined ? delete table[this._key] : false;
                    };
                    WeakMap.prototype.clear = function () {
                        // NOTE: not a real clear, just makes the previous data unreachable
                        this._key = CreateUniqueKey();
                    };
                    return WeakMap;
                }());
                function CreateUniqueKey() {
                    var key;
                    do
                        key = "@@WeakMap@@" + CreateUUID();
                    while (HashMap.has(keys, key));
                    keys[key] = true;
                    return key;
                }
                function GetOrCreateWeakMapTable(target, create) {
                    if (!hasOwn.call(target, rootKey)) {
                        if (!create)
                            return undefined;
                        Object.defineProperty(target, rootKey, { value: HashMap.create() });
                    }
                    return target[rootKey];
                }
                function FillRandomBytes(buffer, size) {
                    for (var i = 0; i < size; ++i)
                        buffer[i] = Math.random() * 0xff | 0;
                    return buffer;
                }
                function GenRandomBytes(size) {
                    if (typeof Uint8Array === "function") {
                        if (typeof crypto !== "undefined")
                            return crypto.getRandomValues(new Uint8Array(size));
                        if (typeof msCrypto !== "undefined")
                            return msCrypto.getRandomValues(new Uint8Array(size));
                        return FillRandomBytes(new Uint8Array(size), size);
                    }
                    return FillRandomBytes(new Array(size), size);
                }
                function CreateUUID() {
                    var data = GenRandomBytes(UUID_SIZE);
                    // mark as random - RFC 4122 § 4.4
                    data[6] = data[6] & 0x4f | 0x40;
                    data[8] = data[8] & 0xbf | 0x80;
                    var result = "";
                    for (var offset = 0; offset < UUID_SIZE; ++offset) {
                        var byte = data[offset];
                        if (offset === 4 || offset === 6 || offset === 8)
                            result += "-";
                        if (byte < 16)
                            result += "0";
                        result += byte.toString(16).toLowerCase();
                    }
                    return result;
                }
            }
            // uses a heuristic used by v8 and chakra to force an object into dictionary mode.
            function MakeDictionary(obj) {
                obj.__ = undefined;
                delete obj.__;
                return obj;
            }
        });
    })(Reflect$1 || (Reflect$1 = {}));

    /**
     * Wraps a function with recap.dev tracing.
     * This will record all the function calls and add them to a current trace.
     * @param {string} fileName - Name of the file where function is declared.
     * @param {string} functionName - Name of the function.
     * @param {function} func - The function to wrap.
     */
    function wrapFunction(fileName, functionName, func) {
        if (func.recapDevWrapped) {
            return func;
        }
        function wrappedFunction() {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var event = tracer.functionStart(fileName, functionName);
            // @ts-ignore
            var result$$1 = func.call.apply(func, __spread([this], args));
            if (isPromise(result$$1)) {
                return result$$1.then(function (resolvedResult) {
                    tracer.functionEnd(event);
                    return resolvedResult;
                });
            }
            tracer.functionEnd(event);
            return result$$1;
        }
        // @ts-ignore
        wrappedFunction.recapDevWrapped = true;
        return wrappedFunction;
    }
    /**
     * Wraps a class with recap.dev tracing.
     * This will record all the method calls and add them to a current trace.
     * @param {string} fileName - Name of the file where function is declared.
     * @param {string} className - Name of the class.
     * @param {function} cls - The class to wrap.
     * @param {boolean} moveMetadata - Defines if the metadata will be moved to the wrapped method
     */
    var wrapClass = function (fileName, className, cls, moveMetadata) {
        var e_1, _a;
        if (moveMetadata === void 0) { moveMetadata = false; }
        var _loop_1 = function (methodName) {
            var originalMethod = cls.prototype[methodName];
            if (isFunction$1(originalMethod) && methodName !== 'constructor') {
                var wrappedMethod_1 = wrapFunction(fileName, className + "." + methodName, cls.prototype[methodName]);
                if (moveMetadata) {
                    Reflect.getMetadataKeys(originalMethod).forEach(function (key) {
                        var metadata = Reflect.getMetadata(key, originalMethod);
                        Reflect.defineMetadata(key, metadata, wrappedMethod_1);
                        Reflect.deleteMetadata(key, originalMethod);
                    });
                }
                cls.prototype[methodName] = wrappedMethod_1;
            }
        };
        try {
            // TODO: figure out how to use variable name instead of a class name
            for (var _b = __values(Object.getOwnPropertyNames(cls.prototype)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var methodName = _c.value;
                _loop_1(methodName);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };

    const rnds8 = new Uint8Array(16);
    function rng() {
      return crypto$1.randomFillSync(rnds8);
    }

    var REGEX = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;

    function validate(uuid) {
      return typeof uuid === 'string' && REGEX.test(uuid);
    }

    /**
     * Convert array of 16 byte values to UUID string format of the form:
     * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
     */

    const byteToHex = [];

    for (let i = 0; i < 256; ++i) {
      byteToHex.push((i + 0x100).toString(16).substr(1));
    }

    function stringify(arr, offset = 0) {
      // Note: Be careful editing this code!  It's been tuned for performance
      // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434
      const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one
      // of the following:
      // - One or more input array values don't map to a hex octet (leading to
      // "undefined" in the uuid)
      // - Invalid input values for the RFC `version` or `variant` fields

      if (!validate(uuid)) {
        throw TypeError('Stringified UUID is invalid');
      }

      return uuid;
    }

    function v4(options, buf, offset) {
      options = options || {};
      const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`

      rnds[6] = rnds[6] & 0x0f | 0x40;
      rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided

      if (buf) {
        offset = offset || 0;

        for (let i = 0; i < 16; ++i) {
          buf[offset + i] = rnds[i];
        }

        return buf;
      }

      return stringify(rnds);
    }

    var AsyncHooksTraceStore = /** @class */ (function () {
        function AsyncHooksTraceStore() {
            var _this = this;
            this.traceMap = new Map();
            this.hook = async_hooks.createHook({
                init: function (asyncId, type, parentAsyncId) {
                    var parentTrace = _this.traceMap.get(parentAsyncId);
                    if (parentTrace) {
                        _this.traceMap.set(asyncId, parentTrace);
                    }
                },
                destroy: function (asyncId) {
                    _this.traceMap.delete(asyncId);
                },
                promiseResolve: function (asyncId) {
                    var currentTrace = _this.traceMap.get(async_hooks.executionAsyncId());
                    if (currentTrace) {
                        _this.traceMap.set(asyncId, currentTrace);
                    }
                },
            });
            this.hook.enable();
        }
        AsyncHooksTraceStore.prototype.startNewTrace = function (trace) {
            this.traceMap.set(async_hooks.executionAsyncId(), trace);
            return trace;
        };
        AsyncHooksTraceStore.prototype.getCurrentTrace = function () {
            return this.traceMap.get(async_hooks.executionAsyncId());
        };
        AsyncHooksTraceStore.prototype.associateAsyncId = function (parentAsyncId) {
            var parentTrace = this.traceMap.get(parentAsyncId);
            if (!parentTrace) {
                return;
            }
            this.traceMap.set(async_hooks.executionAsyncId(), parentTrace);
        };
        return AsyncHooksTraceStore;
    }());

    var newExpressTrace = function (req) {
        var trace = new Trace(v4(), process.env.RECAP_DEV_APP_NAME || req.hostname, 'EXPRESS_HANDLER');
        trace.request = {
            headers: req.headers,
            url: req.url,
            method: req.method,
            params: req.params,
            query: req.query,
        };
        trace.start = Date.now();
        return trace;
    };
    function nextWrapper(next) {
        var asyncId = async_hooks.executionAsyncId();
        var originalNext = next;
        return function internalNextWrapper(error) {
            var rest = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                rest[_i - 1] = arguments[_i];
            }
            if (error) {
                tracer.setTraceError(error);
            }
            tracer.associateAsyncId(asyncId);
            var result = originalNext.apply(void 0, __spread(rest));
            tracer.associateAsyncId(asyncId);
            return result;
        };
    }
    function wrapNext(args) {
        var copyArgs = __spread(args);
        var next = copyArgs[copyArgs.length - 1];
        if (next && next.name === 'next') {
            copyArgs[copyArgs.length - 1] = nextWrapper(args[args.length - 1]);
        }
        return copyArgs;
    }
    function wrapMiddleware(middleware) {
        return function internalMiddlewareWrapper() {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return middleware.apply(this, wrapNext(args));
        };
    }
    function wrapMethod(original) {
        return function internalMethodWrapper() {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return original.apply(this, args.map(function (argument) {
                if (argument && typeof argument === 'function') {
                    return wrapMiddleware(argument);
                }
                return argument;
            }));
        };
    }
    function wrapUse(original) {
        return function internalUseWrapper() {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return original.apply(this, args.map(function (argument) {
                if (argument && typeof argument === 'function') {
                    return wrapMiddleware(argument);
                }
                return argument;
            }));
        };
    }
    var recapExpressMiddleware = function (req, res, next) {
        var originalUrl = url.parse(req.originalUrl);
        var originalWrite = res.write;
        var originalEnd = res.end;
        var trace;
        var reqBody = '';
        var resBody = '';
        // Handling request body
        req.on('data', function (chunk) {
            reqBody = appendBodyChunk(chunk, reqBody);
        });
        req.on('end', function (chunk) {
            reqBody = appendBodyChunk(chunk, reqBody);
            trace.request.body = safeParse(reqBody) || reqBody;
            next();
        });
        // Handling response body
        res.write = function write() {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            resBody = appendBodyChunk(args[0], resBody);
            return originalWrite.apply(res, args);
        };
        res.end = function end() {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            resBody = appendBodyChunk(args[0], resBody);
            originalEnd.apply(res, args);
        };
        if (isUrlIgnored(originalUrl.path, originalUrl.hostname)) {
            debugLog("Ignoring request: " + req.method + " " + req.originalUrl);
            next();
            return;
        }
        try {
            trace = tracer.startNewTrace(newExpressTrace(req));
            var handlerFunctionEvent_1 = tracer.functionStart('', 'handler');
            res.once('finish', function () {
                try {
                    trace.response = {
                        headers: res.getHeaders(),
                        statusCode: res.statusCode,
                        body: safeParse(resBody) || resBody,
                    };
                    tracer.functionEnd(handlerFunctionEvent_1);
                    trace.end = Date.now();
                    if (res.statusCode >= 500) {
                        trace.status = 'ERROR';
                    }
                }
                catch (err) {
                    debugLog(err);
                    tracer.setTraceError(err);
                }
                tracer.sync().then(function () {
                    // traceContext.destroyAsync(asyncHooks.executionAsyncId(), true)
                });
            });
        }
        catch (err) {
            debugLog(err);
            next();
        }
    };
    function wrapExpress(wrappedFunction) {
        tracer.setTraceStore(new AsyncHooksTraceStore());
        return function internalExpressWrapper() {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var result = wrappedFunction.apply.apply(wrappedFunction, __spread([this], args));
            this.use(recapExpressMiddleware);
            return result;
        };
    }
    var methods = [
        'get',
        'post',
        'put',
        'head',
        'delete',
        'options',
        'trace',
        'copy',
        'lock',
        'mkcol',
        'move',
        'purge',
        'propfind',
        'proppatch',
        'unlock',
        'report',
        'mkactivity',
        'checkout',
        'merge',
        'm-search',
        'notify',
        'subscribe',
        'unsubscribe',
        'patch',
        'search',
        'connect',
    ];
    /**
     * Wraps express with recap.dev tracing.
     * @param {function} express - Express module to wrap.
     * @example
     * import express from 'express'
     * import { traceExpress } from '@recap.dev/client'
     * traceExpress(express)
     * const tracedApp = express()
     */
    var traceExpress = function (express) {
        var e_1, _a;
        shimmer_1.wrap(express.application, 'init', wrapExpress);
        shimmer_1.wrap(express.Router, 'use', wrapUse);
        try {
            for (var methods_1 = __values(methods), methods_1_1 = methods_1.next(); !methods_1_1.done; methods_1_1 = methods_1.next()) {
                var method = methods_1_1.value;
                shimmer_1.wrap(express.Route.prototype, method, wrapMethod);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (methods_1_1 && !methods_1_1.done && (_a = methods_1.return)) _a.call(methods_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };

    /**
     * Wraps a NestJS module with recap.dev tracing
     * This will record all the method calls and add them to a current trace.
     * @param {object} module - NestJS module to wrap
     * @returns {Function} NestJS module
     */
    var wrapNestJsModule = function (module) {
        Reflect.getMetadata('controllers', module).forEach(function (injectable) {
            wrapClass('', injectable.name, injectable, true);
        });
        Reflect.getMetadata('providers', module).forEach(function (injectable) { return wrapClass('', injectable.name, injectable, true); });
        return module;
    };

    const callsites = () => {
    	const _prepareStackTrace = Error.prepareStackTrace;
    	Error.prepareStackTrace = (_, stack) => stack;
    	const stack = new Error().stack.slice(1);
    	Error.prepareStackTrace = _prepareStackTrace;
    	return stack;
    };

    var callsites_1 = callsites;
    // TODO: Remove this for the next major release
    var default_1 = callsites;
    callsites_1.default = default_1;

    var newVercelTrace = function (request, unitName) {
        var trace = new Trace(v4(), unitName, 'VERCEL');
        trace.request = {
            headers: request.rawHeaders,
            url: request.url,
            method: request.method,
            params: request.params,
            query: request.query,
            body: request.body,
        };
        return trace;
    };
    var defaultUnitNameStrategy = function () { return (process.env.VERCEL_ENV + '/' + callsites_1()[1].getFileName()); };
    /**
     * Wraps a Vercel handler with recap.dev tracing
     * @param {Function} func - A handler function to wrap
     * @param {Function | string} [unitName] - Either a unitName string or a function to compute one
     * @returns {Function} Wrapped handler function
     */
    var wrapVercelHandler = function (func, unitName) {
        if (unitName === void 0) { unitName = defaultUnitNameStrategy; }
        var wrappedVercelHandler = function (request, response) {
            try {
                var name_1 = isFunction$1(unitName) ? unitName() : unitName;
                var trace_1 = tracer.startNewTrace(newVercelTrace(request, name_1));
                var handlerFunctionEvent_1 = tracer.functionStart('', 'handler');
                var originalWrite_1 = response.write;
                var originalEnd_1 = response.end;
                var resBody_1 = '';
                // Handling response body
                response.write = function write() {
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        args[_i] = arguments[_i];
                    }
                    resBody_1 = appendBodyChunk(args[0], resBody_1);
                    return originalWrite_1.apply(response, args);
                };
                response.end = function end() {
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        args[_i] = arguments[_i];
                    }
                    resBody_1 = appendBodyChunk(args[0], resBody_1);
                    try {
                        trace_1.response = {
                            headers: response.getHeaders(),
                            statusCode: response.statusCode,
                            body: safeParse(resBody_1) || resBody_1,
                        };
                        tracer.functionEnd(handlerFunctionEvent_1);
                        trace_1.end = Date.now();
                        if (response.statusCode >= 500) {
                            trace_1.status = 'ERROR';
                        }
                    }
                    catch (err) {
                        debugLog(err);
                        tracer.setTraceError(err);
                    }
                    tracer.sync().then(function () {
                        originalEnd_1.apply(response, args);
                    });
                };
            }
            catch (err) {
                debugLog(err);
            }
            func(request, response);
        };
        captureConsoleLogs();
        return wrappedVercelHandler;
    };

    trackModules();

    exports.Tracer = Tracer;
    exports.tracer = tracer;
    exports.wrapLambdaHandler = wrapLambdaHandler;
    exports.wrapFunction = wrapFunction;
    exports.wrapClass = wrapClass;
    exports.traceExpress = traceExpress;
    exports.captureConsoleLogs = captureConsoleLogs;
    exports.wrapNestJsModule = wrapNestJsModule;
    exports.wrapVercelHandler = wrapVercelHandler;
    exports.Trace = Trace;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=client.umd.js.map
